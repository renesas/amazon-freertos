   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"aws_test_tcp.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_,"ax",%progbits
  17              		.align	2
  18              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_:
  24              	.LFB94:
  25              		.file 1 "D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets/aws_test_tcp.c"
   1:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * Amazon FreeRTOS Secure Sockets AFQP V1.1.4
   3:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Standard includes. */
  26:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include <stdint.h>
  27:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include <stdio.h>
  28:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include <stdlib.h>
  29:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include <string.h>
  30:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  31:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* FreeRTOS includes. */
  32:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "FreeRTOS.h"
  33:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "task.h"
  34:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "queue.h"
  35:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "event_groups.h"
  36:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  37:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Secure Sockets includes. */
  38:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "aws_secure_sockets.h"
  39:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  40:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Test framework includes. */
  41:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "unity_fixture.h"
  42:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "aws_test_runner.h"
  43:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "aws_test_utils.h"
  44:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "aws_test_tcp.h"
  45:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  46:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Update this file with port-specific values. */
  47:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "aws_test_tcp_config.h"
  48:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  49:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Update this file with AWS Credentials. */
  50:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #include "aws_clientcredential.h"
  51:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  52:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Verbose printing. */
  53:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestPRINTF( x )
  54:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* In case of test failures, FAILUREPRINTF may provide more detailed information. */
  55:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestFAILUREPRINTF( x )    vLoggingPrintf x
  56:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Fail the test on tcptestASSERT. */
  57:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestASSERT( x )           configASSERT( x )
  58:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Take measurements of the FreeRTOS heap before and after every test. */
  59:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestMEMORYWATCH    0
  60:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  61:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Connection type. Add additional test servers here. */
  62:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** typedef enum
  63:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
  64:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     eSecure,    /* Secure test server.  Uses tcptestECHO_SERVER_TLS. */
  65:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     eNonsecure, /* Non secure test server.  Uses tcptestECHO_SERVER. */
  66:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     eAwsBroker  /* AWS IoT Broker.  Uses clientcredential. */
  67:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** } Server_t;
  68:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  69:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* The echo tasks create a socket, send out a number of echo requests, listen
  70:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * for the echo reply, then close the socket again before starting over.  This
  71:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * delay is used between each iteration to ensure the network does not get too
  72:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * congested. */
  73:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestLOOP_DELAY_MS    ( 150 )
  74:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestLOOP_DELAY       ( ( TickType_t ) tcptestLOOP_DELAY_MS / portTICK_PERIOD_MS )
  75:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  76:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* The number of times SOCKETS_Connect_TCP opens and closes a socket. */
  77:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Need to test at least 20 times. So bugs were not discovered with only 10 loops. */
  78:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestCONNECT_AND_CLOSE_LOOP    ( 20 )
  79:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  80:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Filler values in the RX and TX buffers used to check for undesirable
  81:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * buffer modification. */
  82:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestRX_BUFFER_FILLER          0xFF
  83:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestTX_BUFFER_FILLER          0xAA
  84:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  85:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Size of pcTxBuffer and pcRxBuffer. */
  86:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestBUFFER_SIZE               ( testrunnerBUFFER_SIZE / 2 )
  87:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  88:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Global buffers are shared between tests to reduce RAM usage. */
  89:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** char * pcTxBuffer = &cBuffer[ 0 ];
  90:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** char * pcRxBuffer = &cBuffer[ tcptestBUFFER_SIZE ];
  91:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  92:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Default Rx and Tx time outs are used to ensure the sockets do not
  93:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * wait too long for missing data. */
  94:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static const TickType_t xReceiveTimeOut = pdMS_TO_TICKS( integrationtestportableRECEIVE_TIMEOUT );
  95:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static const TickType_t xSendTimeOut = pdMS_TO_TICKS( integrationtestportableSEND_TIMEOUT );
  96:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  97:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Primary socket, declared globally so that it can be closed in test tear down
  98:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * in the event that a test exits/fails before socket is closed. */
  99:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** volatile Socket_t xSocket = SOCKETS_INVALID_SOCKET;
 100:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** volatile BaseType_t xSocketOpen = pdFALSE;
 101:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 102:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*
 103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * Uses a socket to send more than MSS bytes in one go to the standard echo
 104:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * port number 7.  The echoed data is received on the same socket but in a
 105:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * different task (see prvEchoClientRxTask() below).
 106:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  */
 107:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvEchoClientTxTask( void * pvParameters );
 108:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 109:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* TCP Echo Client tasks multi-task test parameters. These can be configured in aws_test_tcp_config
 110:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #ifndef tcptestTCP_ECHO_TASKS_STACK_SIZE
 111:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #define tcptestTCP_ECHO_TASKS_STACK_SIZE    ( configMINIMAL_STACK_SIZE * 4 )
 112:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #endif
 113:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #ifndef tcptestTCP_ECHO_TASKS_PRIORITY
 114:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #define tcptestTCP_ECHO_TASKS_PRIORITY      ( tskIDLE_PRIORITY )
 115:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #endif
 116:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 117:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* The queue used by prvEchoClientTxTask() to send the next socket to use to
 118:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * prvEchoClientRxTask(). */
 119:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static volatile QueueHandle_t xSocketPassingQueue = NULL;
 120:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 121:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* The event group used by the prvEchoClientTxTask() and prvEchoClientRxTask()
 122:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * to synchronize prior to commencing a cycle using a new socket. */
 123:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static volatile EventGroupHandle_t xSyncEventGroup = NULL;
 124:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 126:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Bit definitions used with the xSyncEventGroup event group to allow the
 127:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * prvEchoClientTxTask() and prvEchoClientRxTask() tasks to synchronize before
 128:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * commencing a new cycle with a different socket. */
 129:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestTX_TASK_BIT    ( 0x01 << 1 )
 130:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestRX_TASK_BIT    ( 0x01 << 2 )
 131:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 132:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 133:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Array setup for 2 times the biggest possible frame (eth0 and WIFI). */
 134:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* WIFI is 2304 and eth0 is 1522. */
 135:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestTWICE_MAX_FRAME_SIZE    ( 2 * 2304 )
 136:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Array is defined as const so it can be located in flash. */
 137:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static const char cTransmittedString[ tcptestTWICE_MAX_FRAME_SIZE ] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 
 138:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #ifndef tcptestECHO_TEST_SYNC_TIMEOUT
 140:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #define tcptestECHO_TEST_SYNC_TIMEOUT    80000
 141:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #endif
 142:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 143:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #ifndef tcptestECHO_TEST_RXTX_TIMEOUT
 144:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #define tcptestECHO_TEST_RXTX_TIMEOUT       5000
 145:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #endif
 146:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestECHO_CLIENT_EVENT_MASK           ( ( 1 << tcptestNUM_ECHO_CLIENTS ) - 1 )
 147:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 148:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define  tcptestECHO_TEST_SYNC_TIMEOUT_TICKS    ( pdMS_TO_TICKS( tcptestECHO_TEST_SYNC_TIMEOUT ) )
 149:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static const TickType_t xEchoTestRxTxTimeOut = pdMS_TO_TICKS( tcptestECHO_TEST_RXTX_TIMEOUT );
 150:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 151:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* All the modes for the test  SOCKETS_Echo_Client_Separate_Tasks */
 152:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** typedef enum
 153:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 154:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     LARGE_BUFFER_HIGH_PRIORITY,
 155:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SMALL_BUFFER_HIGH_PRIORITY,
 156:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     LARGE_BUFFER_LOW_PRIORITY,
 157:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SMALL_BUFFER_LOW_PRIORITY,
 158:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestMAX_ECHO_TEST_MODES
 159:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** } tcptestEchoTestModes_t;
 160:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 161:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** typedef struct
 162:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 163:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     Server_t xConn;
 164:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint16_t usTaskTag;
 165:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 166:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TaskHandle_t xTaskHandle;
 167:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** } tcptestEchoClientsTaskParams_t;
 168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Number of time the test goes through all the modes. */
 170:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestMAX_LOOPS_ECHO_TEST            ( 4 * tcptestMAX_ECHO_TEST_MODES )
 171:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 172:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestECHO_TEST_LOW_PRIORITY         tskIDLE_PRIORITY
 173:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestECHO_TEST_HIGH_PRIORITY        ( configMAX_PRIORITIES - 1 )
 174:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 175:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #ifndef ipconfigTCP_MSS
 176:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #define ipconfigTCP_MSS                   ( 256 )
 177:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #endif
 178:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestNUM_ECHO_CLIENTS               ( 2 )
 179:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** #define tcptestMAX_LOOPS_ECHO_CLIENTS_LOOP    ( 10 )
 180:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 181:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvThreadSafeDifferentSocketsDifferentTasks( void * pvParameters );
 182:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /****************** Unity Test Code *********************************/
 183:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** size_t xHeapB;
 184:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** size_t xHeapA;
 185:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Group declaration required by Unity framework. */
 186:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST_GROUP( Full_TCP );
 187:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 188:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Setup required by Unity framework. */
 189:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST_SETUP( Full_TCP )
 190:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 191:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #if ( tcptestMEMORYWATCH == 1 )
 192:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Give the print buffer time to empty */
 193:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vTaskDelay( 500 );
 194:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xHeapB = xPortGetFreeHeapSize();
 195:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif
 196:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 197:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 198:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Tear down required by Unity framework.
 199:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * Closes the global socket if it was left open by the test. */
 200:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST_TEAR_DOWN( Full_TCP )
 201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lReturn;
 203:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 204:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
 205:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xSocketOpen == pdTRUE )
 207:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 208:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             lReturn = SOCKETS_Close( xSocket );
 209:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xSocketOpen = pdFALSE;
 210:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, lReturn, "SOCKETS_Close failed in 
 211:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 212:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 213:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 214:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #if ( tcptestMEMORYWATCH == 1 )
 215:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Give the print buffer time to empty */
 216:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vTaskDelay( 500 );
 217:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xHeapA = xPortGetFreeHeapSize();
 218:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 219:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configPRINTF( ( "Heap before: %d, Heap After: %d \r\n", xHeapB, xHeapA ) );
 220:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif
 221:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 222:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 223:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 224:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 225:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvCreateTxData( char * cBuffer,
 226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              size_t xMessageLength,
 227:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              uint32_t ulTxCount );
 228:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvCheckRxTxBuffers( uint8_t * pucTxBuffer,
 229:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        uint8_t * pucRxBuffer,
 230:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        size_t xMessageLength );
 231:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 232:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 233:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 234:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Creates a TCP Socket.
 235:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * Causes a test failure if socket creation fails. */
 236:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static Socket_t prvTcpSocketHelper( volatile BaseType_t * pxSocketOpen )
 237:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 238:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     Socket_t xSocket;
 239:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 240:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Make socket. */
 241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
 242:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_SOCK_STREAM,
 243:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_IPPROTO_TCP );
 244:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSocket != SOCKETS_INVALID_SOCKET )
 246:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 247:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Test variable for closing exits/fails before closing. */
 248:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         *pxSocketOpen = pdTRUE;
 249:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 250:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 251:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xSocket;
 252:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 253:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 254:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 255:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 256:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 257:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Sets secure socket options and returns the address of the secure echo server. */
 258:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvSecureConnectHelper( Socket_t xSocket,
 259:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                           SocketsSockaddr_t * pxHostAddress )
 260:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 261:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 262:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 263:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Echo requests are sent to the secure echo server and port. */
 264:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ulAddress = SOCKETS_inet_addr_quick( tcptestECHO_SERVER_TLS_ADDR0,
 265:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_TLS_ADDR1,
 266:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_TLS_ADDR2,
 267:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_TLS_ADDR3 );
 268:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->usPort = SOCKETS_htons( tcptestECHO_PORT_TLS );
 269:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 270:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 271:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 272:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set the socket to use TLS. */
 273:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
 274:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 275:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_REQUIRE_TLS,
 276:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   NULL,
 277:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( size_t ) 0 );
 278:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 279:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xResult == SOCKETS_ERROR_NONE )
 280:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 281:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Set the socket to use the secure server's root CA cert. */
 282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 283:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 284:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE,
 285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       tcptestECHO_HOST_ROOT_CA,
 286:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       sizeof( tcptestECHO_HOST_ROOT_CA ) );
 287:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 288:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xResult != SOCKETS_ERROR_NONE )
 289:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "%s: Failed to setSockOpt SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE
 291:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 292:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 293:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else
 294:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 295:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "%: Failed to setSockOpt SOCKETS_SO_REQUIRE_TLS \r\n", __FUNCTION__
 296:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 297:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 298:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 299:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 300:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 301:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 302:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 303:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvNonSecureConnectHelper( Socket_t xSocket,
 304:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                              SocketsSockaddr_t * pxHostAddress )
 305:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 306:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Echo requests are sent to the echo server.  The echo server is
 307:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     * listening to tcptestECHO_PORT on this computer's IP address. */
 308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ulAddress = SOCKETS_inet_addr_quick( tcptestECHO_SERVER_ADDR0,
 309:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_ADDR1,
 310:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_ADDR2,
 311:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_ADDR3 );
 312:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->usPort = SOCKETS_htons( tcptestECHO_PORT );
 313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 315:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 316:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return SOCKETS_ERROR_NONE;
 317:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 318:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 319:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 320:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 321:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvAwsIotBrokerConnectHelper( Socket_t xSocket,
 322:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                 SocketsSockaddr_t * pxHostAddress )
 323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 324:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = SOCKETS_SOCKET_ERROR;
 325:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 326:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Resolve the broker endpoint to an IP address. */
 327:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ulAddress = SOCKETS_GetHostByName( clientcredentialMQTT_BROKER_ENDPOINT );
 328:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 329:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( pxHostAddress->ulAddress != 0 )
 330:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 331:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pxHostAddress->usPort = SOCKETS_htons( clientcredentialMQTT_BROKER_PORT );
 332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 333:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 334:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 335:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Set the socket to use TLS. */
 336:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 337:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 338:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_REQUIRE_TLS,
 339:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       NULL,
 340:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       ( size_t ) 0 );
 341:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xResult != SOCKETS_ERROR_NONE )
 343:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 344:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "%s: Failed to setSockOpt SOCKETS_SO_REQUIRE_TLS \r\n", __FUNCT
 345:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 346:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 348:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 349:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 350:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 351:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 352:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvConnectHelper( Socket_t xSocket,
 353:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                     Server_t xConn )
 354:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 355:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 356:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xEchoServerAddress;
 357:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 358:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xConn == eSecure )
 359:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 360:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSecureConnectHelper( xSocket, &xEchoServerAddress );
 361:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 362:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else if( xConn == eNonsecure )
 363:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 364:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvNonSecureConnectHelper( xSocket, &xEchoServerAddress );
 365:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 366:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else if( xConn == eAwsBroker )
 367:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 368:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvAwsIotBrokerConnectHelper( xSocket, &xEchoServerAddress );
 369:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 370:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else
 371:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 372:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* If a delay server is introduced, it will be added here. */
 373:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "%s: Failed to setSockOpt SOCKETS_SO_REQUIRE_TLS \r\n", __FUNCTION_
 374:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 375:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xResult == SOCKETS_ERROR_NONE )
 377:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 378:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         uint32_t ulInitialRetryPeriodMs = tcptestLOOP_DELAY_MS;
 379:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         BaseType_t xMaxRetries = tcptestRETRY_CONNECTION_TIMES;
 380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RETRY_EXPONENTIAL( xResult = SOCKETS_Connect( xSocket,
 381:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                       &xEchoServerAddress,
 382:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                       sizeof( xEchoServerAddress ) ),
 383:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                            SOCKETS_ERROR_NONE,
 384:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                            ulInitialRetryPeriodMs,
 385:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                            xMaxRetries );
 386:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 387:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 388:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 389:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 390:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 391:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 392:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 393:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvSetSockOptHelper( Socket_t xSocket,
 394:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        TickType_t xRxTimeOut,
 395:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        TickType_t xTxTimeOut )
 396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 397:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 398:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 399:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set a time out so a missing reply does not cause the task to block
 400:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * indefinitely. */
 401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
 402:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 403:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_RCVTIMEO,
 404:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   &xRxTimeOut,
 405:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   sizeof( xRxTimeOut ) );
 406:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 407:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xResult == SOCKETS_ERROR_NONE )
 408:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 409:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 410:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 411:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_SNDTIMEO,
 412:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       &xTxTimeOut,
 413:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       sizeof( xTxTimeOut ) );
 414:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 415:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xResult != SOCKETS_ERROR_NONE )
 416:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 417:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "%s: Socket set sock opt send timeout failed \r\n", __FUNCTION_
 418:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 419:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 420:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else
 421:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "%s: Socket set sock opt receive timeout failed \r\n", __FUNCTION__
 423:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 424:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 425:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 426:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 427:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 428:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 429:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 430:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvConnectHelperWithRetry( volatile Socket_t * pxSocket,
 431:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                              Server_t xConn,
 432:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                              TickType_t xRxTimeOut,
 433:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                              TickType_t xTxTimeOut,
 434:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                              volatile BaseType_t * pxSocketIsAllocated )
 435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 436:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xIsConnected = pdFALSE;
 437:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = SOCKETS_ERROR_NONE;
 438:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xRetry = 0;
 439:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xEchoServerAddress;
 440:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xRetryTimeoutTicks = tcptestLOOP_DELAY;
 441:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 442:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     do
 443:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 444:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create the socket. */
 445:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         *pxSocket = prvTcpSocketHelper( pxSocketIsAllocated );
 446:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 447:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( SOCKETS_INVALID_SOCKET == *pxSocket )
 448:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 449:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = SOCKETS_SOCKET_ERROR;
 450:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 451:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 452:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Set the appropriate socket options for the destination. */
 453:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( SOCKETS_ERROR_NONE == xResult )
 454:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 455:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xConn == eSecure )
 456:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 457:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = prvSecureConnectHelper( *pxSocket, &xEchoServerAddress );
 458:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 459:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else if( xConn == eNonsecure )
 460:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 461:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = prvNonSecureConnectHelper( *pxSocket, &xEchoServerAddress );
 462:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 463:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else if( xConn == eAwsBroker )
 464:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 465:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = prvAwsIotBrokerConnectHelper( *pxSocket, &xEchoServerAddress );
 466:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 467:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else
 468:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 469:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 /* If a delay server is introduced, it will be added here. */
 470:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 tcptestFAILUREPRINTF( ( "%s: Failed to setSockOpt SOCKETS_SO_REQUIRE_TLS \r\n", __F
 471:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 472:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 473:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 474:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Set socket timeout options. */
 475:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( SOCKETS_ERROR_NONE == xResult )
 476:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 477:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvSetSockOptHelper( *pxSocket, xRxTimeOut, xTxTimeOut );
 478:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 479:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 480:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Attempt, with possible retries, to connect to the destination. */
 481:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( SOCKETS_ERROR_NONE == xResult )
 482:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 483:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = SOCKETS_Connect( *pxSocket,
 484:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        &xEchoServerAddress,
 485:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        sizeof( xEchoServerAddress ) );
 486:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 487:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( SOCKETS_ERROR_NONE == xResult )
 488:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 489:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xIsConnected = pdTRUE;
 490:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 491:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else
 492:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 if( xRetry < tcptestRETRY_CONNECTION_TIMES )
 494:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 495:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     SOCKETS_Close( *pxSocket );
 496:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     *pxSocket = SOCKETS_INVALID_SOCKET;
 497:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xResult = SOCKETS_ERROR_NONE;
 498:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xRetry++;
 499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     vTaskDelay( xRetryTimeoutTicks );
 500:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     /* Exponetially backoff the retry times */
 501:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xRetryTimeoutTicks *= 2; /*Arbitrarily chose 2*/
 502:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
 503:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 else
 504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 505:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     /* Too many failures. Give up. */
 506:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     break;
 507:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
 508:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 509:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 510:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 511:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     while( pdFALSE == xIsConnected );
 512:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 513:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 514:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 515:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 516:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 517:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 518:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvSendHelper( Socket_t xSocket,
 519:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  uint8_t * pucTxBuffer,
 520:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  size_t xLength )
 521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 522:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytesSentTotal;
 523:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytes;
 524:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 525:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 526:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
 527:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xNumBytesSentTotal = 0;
 528:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 529:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     while( ( size_t ) xNumBytesSentTotal < xLength )
 530:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 531:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xNumBytes = SOCKETS_Send( xSocket,                            /* The socket being sent to. 
 532:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   &pucTxBuffer[ xNumBytesSentTotal ], /* The data being sent. */
 533:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   xLength - xNumBytesSentTotal,       /* The length of the data bei
 534:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0 );                                /* No flags. */
 535:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 536:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xNumBytes <= 0 )
 537:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 538:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = pdFAIL;
 539:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Error in SOCKETS_Send.  Return value: %d \r\n", xNumBytes ) );
 540:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             break;
 541:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 542:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 543:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xNumBytesSentTotal += xNumBytes;
 544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 546:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( ( size_t ) xNumBytesSentTotal != xLength )
 547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 548:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = pdFAIL;
 549:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 550:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 551:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 552:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 553:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 554:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 555:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 556:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvRecvHelper( Socket_t xSocket,
 557:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  uint8_t * pucRxBuffer,
 558:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  size_t xLength )
 559:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 560:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytesRecvTotal;
 561:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytes;
 562:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 563:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 564:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
 565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xNumBytesRecvTotal = 0;
 566:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 567:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     while( ( size_t ) xNumBytesRecvTotal < xLength )
 568:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 569:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xNumBytes = SOCKETS_Recv( xSocket,
 570:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   &pucRxBuffer[ xNumBytesRecvTotal ],
 571:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   xLength - xNumBytesRecvTotal,
 572:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0 );
 573:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 574:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xNumBytes == 0 )
 575:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 576:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Timed out receiving from echo server \r\n" ) );
 577:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = pdFAIL;
 578:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             break;
 579:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         else if( xNumBytes < 0 )
 581:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 582:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Error %d while receiving from echo server\r\n", xNumBytes ) );
 583:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = pdFAIL;
 584:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             break;
 585:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 586:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 587:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xNumBytesRecvTotal += xNumBytes;
 588:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 589:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 590:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( ( size_t ) xNumBytesRecvTotal != xLength )
 591:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 592:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = pdFAIL;
 593:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 594:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 595:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 596:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 597:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 598:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 599:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 600:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvShutdownHelper( Socket_t xSocket )
 601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 602:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 603:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 604:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* The caller is done with the connected socket; initiate a graceful close:
 605:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * send a FIN packet and wait for the server to stop sending. */
 606:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( xSocket, SOCKETS_SHUT_RDWR );
 607:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 608:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( 0 == xResult )
 609:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 610:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Keep calling receive until an error code is returned. */
 611:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         do
 612:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 613:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = SOCKETS_Recv( xSocket,            /* The socket being received from. */
 614:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                     pcRxBuffer,         /* The buffer into which the received data 
 615:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                     tcptestBUFFER_SIZE, /* The size of the buffer provided to recei
 616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                     0 );
 617:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 618:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         while( xResult >= 0 );
 619:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 620:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = 0;
 621:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 622:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 623:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 624:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 625:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 626:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 627:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 628:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvCloseHelper( Socket_t xSocket,
 629:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   volatile BaseType_t * pxSocketOpen )
 630:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 632:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Close( xSocket );
 634:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     *pxSocketOpen = pdFALSE;
 636:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 637:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 638:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 639:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 640:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 641:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 642:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvCreateTxData( char * cBuffer,
 643:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              size_t xMessageLength,
 644:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              uint32_t ulTxCount )
 645:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 646:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xCharacter;
 647:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     char cChar = '0';
 648:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 649:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set the Tx buffer to a known filler value. */
 650:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     memset( cBuffer, tcptestTX_BUFFER_FILLER, tcptestBUFFER_SIZE );
 651:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 652:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Fill the end of the buffer with ascending characters. */
 653:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xMessageLength > 25 )
 654:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 655:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( xCharacter = 0; xCharacter < xMessageLength; xCharacter++ )
 656:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 657:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             cBuffer[ xCharacter ] = cChar;
 658:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             cChar++;
 659:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 660:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( cChar > '~' )
 661:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 662:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 cChar = '0';
 663:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 664:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 665:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 666:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 667:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Write as much of the identifying string as possible to the buffer. */
 668:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     snprintf( cBuffer, xMessageLength, "%u TxRx with of length %u", ( unsigned ) ulTxCount, ( unsig
 669:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 670:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 671:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 672:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 673:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvCheckRxTxBuffers( uint8_t * pucTxBuffer,
 674:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        uint8_t * pucRxBuffer,
 675:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        size_t xMessageLength )
 676:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 677:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReturn;
 678:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xIndex;
 679:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 680:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xReturn = pdPASS;
 681:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 682:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Check that the message received is correct. */
 683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( xIndex = 0; xIndex < xMessageLength; xIndex++ )
 684:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 685:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( pucTxBuffer[ xIndex ] != pucRxBuffer[ xIndex ] )
 686:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 687:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xReturn = pdFAIL;
 688:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Message bytes received different than those sent. Message Leng
 689:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestASSERT( xReturn == pdPASS );
 690:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 691:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 692:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 693:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Check that neither the Rx nor Tx buffers were modified/overflowed. */
 694:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( xIndex = xMessageLength; xIndex < tcptestBUFFER_SIZE; xIndex++ )
 695:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 696:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( pucRxBuffer[ xIndex ] != tcptestRX_BUFFER_FILLER )
 697:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 698:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xReturn = pdFAIL;
 699:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Rx buffer padding modified byte. Message Length %d, Byte Index
 700:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 701:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 702:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( pucTxBuffer[ xIndex ] != tcptestTX_BUFFER_FILLER )
 703:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 704:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xReturn = pdFAIL;
 705:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Tx buffer padding modified. Message Length %d, Byte Index %d \
 706:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 707:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 708:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 709:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestASSERT( xReturn == pdPASS );
 710:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 711:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xReturn;
 712:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 713:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 714:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 715:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 716:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvCheckBufferUnmodified( uint8_t * pucBuffer,
 717:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                             uint8_t ucFiller,
 718:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                             size_t xLength )
 719:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 720:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 721:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xIndex;
 722:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 723:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
 724:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 725:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( xIndex = 0; xIndex < xLength; xIndex++ )
 726:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 727:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( pucBuffer[ xIndex ] != ucFiller )
 728:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = pdFAIL;
 730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Buffer modified at byte %d \r\n", xIndex ) );
 731:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 732:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 733:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 734:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 735:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 736:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 737:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 738:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 739:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static BaseType_t prvCheckTimeout( TickType_t xStartTime,
 740:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    TickType_t xEndTime,
 741:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    TickType_t xTimeout )
 742:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 743:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdPASS;
 744:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 745:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Did the function run at least as long as the timeout?
 746:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * An "under tolerance" may be needed when the application timer
 747:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * and the network timer are sourced from separate clocks. */
 748:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( ( int32_t ) ( xEndTime - xStartTime ) < ( int32_t ) ( xTimeout - integrationtestportableTIM
 749:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 750:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = pdFAIL;
 751:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "Start Time: %d, End Time: %d, Timeout: %d \n", xStartTime, xEndTim
 752:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 753:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 754:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Did the function exit after a reasonable amount of time?
 755:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * An "over tolerance" is used to allow for overhead surrounding the timeout. */
 756:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( ( xEndTime - xStartTime ) > ( xTimeout + integrationtestportableTIMEOUT_OVER_TOLERANCE ) )
 757:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 758:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = pdFAIL;
 759:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "Start Time: %d, End Time: %d, Timeout: %d \n", xStartTime, xEndTim
 760:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 761:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 762:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     return xResult;
 763:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 764:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 765:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 766:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 767:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST_GROUP_RUNNER( Full_TCP )
 768:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 769:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_CloseInvalidParams );
 770:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_CloseWithoutReceiving );
 771:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_ShutdownInvalidParams );
 772:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_ShutdownWithoutReceiving );
 773:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Recv_On_Unconnected_Socket );
 774:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks );
 775:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Connect_InvalidParams );
 776:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Connect_InvalidAddressLength );
 777:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks );
 778:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Socket_TCP );
 779:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_SetSockOpt_RCVTIMEO );
 780:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_NonBlocking_Test );
 781:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_SetSockOpt_InvalidParams );
 782:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Shutdown );
 783:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Close );
 784:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Recv_ByteByByte );
 785:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_SendRecv_VaryLength );
 786:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Socket_InvalidTooManySockets );
 787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Socket_InvalidInputParams );
 788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Send_Invalid );
 789:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Recv_Invalid );
 790:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_htons_HappyCase );
 791:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_inet_addr_quick_HappyCase );
 792:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 793:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #if ( tcptestSECURE_SERVER == 1 )
 794:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_CloseInvalidParams );
 795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_CloseWithoutReceiving );
 796:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_ShutdownInvalidParams );
 797:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving );
 798:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket );
 799:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks );
 800:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE );
 801:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION );
 802:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidParams );
 803:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength );
 804:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks );
 805:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* SECURE_SOCKETS_Socket_TCP DNE. */
 806:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO );
 807:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_NonBlocking_Test );
 808:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams );
 809:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Shutdown );
 810:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Close );
 811:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Recv_ByteByByte );
 812:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SendRecv_VaryLength );
 813:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* SECURE_SOCKETS_Socket_InvalidTooManySockets has not been implemented. */
 814:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /*SECURE_SOCKETS_Socket_InvalidInputParams DNE.*/
 815:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Send_Invalid );
 816:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Recv_Invalid );
 817:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SockEventHandler );
 818:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_NonBlockingConnect );
 819:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_TwoSecureConnections );
 820:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect );
 821:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif /* if ( tcptestSECURE_SERVER == 1 ) */
 822:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 823:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 824:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-------------------------------------------------------------------*/
 825:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------Begin Tests---------------------------------*/
 826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-------------------------------------------------------------------*/
 827:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 828:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_CloseInvalidParams( Server_t xConn )
 829:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 830:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 831:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 832:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Try to close with an invalid socket. */
 833:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Close( SOCKETS_INVALID_SOCKET );
 834:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_EINVAL, xResult, "Socket failed to close" );
 835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 836:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 837:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_CloseInvalidParams )
 838:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 839:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 840:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 841:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_CloseInvalidParams( eNonsecure );
 842:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 843:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 844:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_CloseInvalidParams )
 845:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 846:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 847:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 848:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_CloseInvalidParams( eSecure );
 849:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 850:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 851:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 852:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 853:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_CloseWithoutReceiving( Server_t xConn )
 854:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 855:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 856:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 857:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
 858:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
 859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 860:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 861:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Send a lot of data to the echo server but never use the recv. */
 862:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Send( xSocket, &cTransmittedString, tcptestTWICE_MAX_FRAME_SIZE, 0 );
 863:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xResult, "Socket was not able to send" );
 864:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 865:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Try to close. */
 866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
 867:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 868:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 869:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 870:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 871:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_CloseWithoutReceiving )
 872:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 873:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 874:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 875:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_CloseWithoutReceiving( eNonsecure );
 876:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 877:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 878:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_CloseWithoutReceiving )
 879:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 880:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 881:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 882:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_CloseWithoutReceiving( eSecure );
 883:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 884:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 885:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 886:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_ShutdownInvalidParams( Server_t xConn )
 888:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 889:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 890:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 891:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
 892:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 893:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 894:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
 895:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 896:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 897:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( xSocket, ~0 );
 898:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket could shutdown with an inva
 899:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
 901:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 902:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 903:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
 904:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 905:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 906:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Call shutdown with invalid parameters. */
 907:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( SOCKETS_INVALID_SOCKET, SOCKETS_SHUT_RDWR );
 908:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_MESSAGE( SOCKETS_EINVAL, xResult, "Socket could shutdown with an invalid para
 909:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 910:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 911:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_ShutdownInvalidParams )
 912:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 913:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 914:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 915:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_ShutdownInvalidParams( eNonsecure );
 916:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 917:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_ShutdownInvalidParams )
 919:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 920:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 921:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 922:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_ShutdownInvalidParams( eSecure );
 923:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 924:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 925:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 926:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_ShutdownWithoutReceiving( Server_t xConn )
 927:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 928:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 929:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 930:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
 931:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
 932:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 933:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 934:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Send a lot of data to the echo server but never use the recv. */
 935:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Send( xSocket, &cTransmittedString, tcptestTWICE_MAX_FRAME_SIZE, 0 );
 936:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xResult, "Socket was not able to send" );
 937:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 938:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( xSocket, SOCKETS_SHUT_RDWR );
 939:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 940:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 941:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
 942:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 943:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 944:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 945:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 946:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_ShutdownWithoutReceiving )
 947:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 948:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 949:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 950:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_ShutdownWithoutReceiving( eNonsecure );
 951:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 952:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 953:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving )
 954:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 955:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 956:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 957:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_ShutdownWithoutReceiving( eSecure );
 958:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 959:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 960:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 961:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 962:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Recv_On_Unconnected_Socket( Server_t xConn )
 963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 964:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 965:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuf;
 966:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xConnectedSocketOpen = pdFALSE;
 967:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile Socket_t xConnectedSocket;
 968:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 969:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
 970:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 971:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = prvTcpSocketHelper( &xSocketOpen );
 972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 973:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 974:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
 975:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SetSockOpt Failed" );
 976:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 977:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 978:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* We connect another socket. The rational for this is a bug that was experienced in the pa
 979:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * where the data would be received  by from another socket. */
 980:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Attempt to establish the requested connection. */
 981:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xConnectedSocket, xConn, xReceiveTimeOut, xSendTimeOu
 982:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 983:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 984:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Send data from the connected socket. */
 985:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( xConnectedSocket, &ucBuf, 1, 0 );
 986:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xResult, "Socket was not able to send" );
 987:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 988:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to receive on unconnected socket. */
 989:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
 990:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 0, xResult, "Socket was able to receive from unconnected soc
 991:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 992:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 993:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 994:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 995:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Close the other socket. */
 996:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xConnectedSocket );
 997:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" )
 998:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 999:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xConnectedSocket, &xConnectedSocketOpen );
1000:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1001:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xConnectedSocketOpen = pdFALSE;
1002:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1003:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1004:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xConnectedSocketOpen == pdTRUE )
1005:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1006:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         ( void ) prvShutdownHelper( xConnectedSocket );
1007:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1008:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xConnectedSocket, &xConnectedSocketOpen );
1009:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close." );
1010:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1011:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1012:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1013:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Recv_On_Unconnected_Socket )
1014:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1015:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1016:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1017:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Recv_On_Unconnected_Socket( eNonsecure );
1018:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1019:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1020:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket )
1021:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1022:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1023:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1024:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Recv_On_Unconnected_Socket( eSecure );
1025:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1026:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1027:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1028:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1029:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1030:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Socket_TCP( Server_t xConn )
1031:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1032:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1033:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1034:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Make TCP socket. */
1035:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
1036:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_SOCK_STREAM,
1037:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_IPPROTO_TCP );
1038:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1039:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL( xSocket, SOCKETS_INVALID_SOCKET );
1040:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1041:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1042:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1043:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1044:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1045:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Socket_TCP )
1046:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1047:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1048:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1049:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Socket_TCP( eNonsecure );
1050:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1051:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1052:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* Since no connection is made, a secure version of this test is not needed. */
1053:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1054:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1055:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1056:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_SetSockOpt_RCVTIMEO( Server_t xConn )
1057:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1058:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1059:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     UBaseType_t uxOldPriority;
1060:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xStartTime;
1061:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xEndTime;
1062:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xTimeout;
1063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xTimeouts[] = { 30, 100, 10000 }; /* TODO: Add 0, nonblocking tests */
1064:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuffer;
1065:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xIndex;
1066:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1067:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1068:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
1069:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s \r\n", __FUNCTION__ ) );
1070:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "This tests timeouts, so it takes a while! \r\n" ) );
1071:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1072:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
1073:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1074:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1075:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1076:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Record the priority of this task. */
1077:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uxOldPriority = uxTaskPriorityGet( NULL );
1078:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1079:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /*
1080:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * Set this task to be the highest possible priority.
1081:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * Since we are testing timeouts, we don't want other tasks
1082:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * running in the middle of it.
1083:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      */
1084:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     vTaskPrioritySet( NULL, configMAX_PRIORITIES - 1 );
1085:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1086:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /*
1087:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * Set the receive timeout, check the tick count,
1088:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * call receive (with no data sent), check the tick
1089:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * count again, make sure time elapsed is within
1090:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * time expected.
1091:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      */
1092:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( xIndex = 0; xIndex < sizeof( xTimeouts ) / sizeof( TickType_t ); xIndex++ )
1093:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1094:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xTimeout = pdMS_TO_TICKS( xTimeouts[ xIndex ] );
1095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket, 0, SOCKETS_SO_RCVTIMEO, &xTimeout, sizeof( TickType_
1096:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to set receive timeou
1097:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1098:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xStartTime = xTaskGetTickCount();
1099:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &ucBuffer, 1, 0 );
1100:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
1101:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 1, xResult, "Receive call failed in receive timeout test" );
1102:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCheckTimeout( xStartTime, xEndTime, xTimeout );
1103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Receive timeout was outside of acceptabl
1104:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1105:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1106:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Restore the old priority of this task. */
1107:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     vTaskPrioritySet( NULL, uxOldPriority );
1108:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvShutdownHelper( xSocket );
1109:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
1110:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1111:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1112:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1113:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1114:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
1115:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1116:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1117:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1118:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_SetSockOpt_RCVTIMEO )
1119:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1120:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1121:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1122:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_SetSockOpt_RCVTIMEO( eNonsecure );
1123:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1124:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO )
1126:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1127:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1128:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1129:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_SetSockOpt_RCVTIMEO( eSecure );
1130:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1131:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1132:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1133:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_NonBlocking_Test( Server_t xConn )
1134:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1135:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1136:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lNumBytes;
1137:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xStartTime;
1138:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xEndTime;
1139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xTimeout = 0;
1140:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xWaitTime = 1000;
1141:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucTxBuffer = ( uint8_t * ) pcTxBuffer;
1142:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
1143:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLength = 1200;
1144:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xNumBytesReceived = 0;
1145:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1146:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1147:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
1148:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s \r\n", __FUNCTION__ ) );
1149:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "This tests timeouts, so it takes a while! \r\n" ) );
1150:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1151:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1152:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1153:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Attempt to establish the requested connection. */
1154:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSock
1155:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1156:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1157:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /*
1158:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * Set the receive timeout, check the tick count,
1159:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * call receive (with no data sent), check the tick
1160:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * count again, make sure time elapsed is within
1161:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * time expected.
1162:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          */
1163:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket, 0, SOCKETS_SO_NONBLOCK, &xTimeout, sizeof( TickType_
1164:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to set receive timeou
1165:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1166:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xStartTime = xTaskGetTickCount();
1167:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &pucRxBuffer, 1, 0 );
1168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
1169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 1, xResult, "Receive call failed in receive timeout test" );
1170:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1171:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCheckTimeout( xStartTime, xEndTime, xTimeout );
1172:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Receive timeout was outside of acceptabl
1173:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1174:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /*
1175:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * Send data and receive data in nonblocking mode
1176:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          */
1177:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         memset( pucTxBuffer, tcptestTX_BUFFER_FILLER, tcptestBUFFER_SIZE );
1178:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         prvCreateTxData( ( char * ) pucTxBuffer, xMessageLength, 0 );
1179:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1180:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocket, pucTxBuffer, xMessageLength );
1181:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Data failed to send\r\n" );
1182:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1183:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         memset( pucRxBuffer, tcptestRX_BUFFER_FILLER, tcptestBUFFER_SIZE );
1184:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xStartTime = xTaskGetTickCount();
1185:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
1186:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1187:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         do
1188:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1189:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             lNumBytes = SOCKETS_Recv( xSocket, &pucRxBuffer[ xNumBytesReceived ], xMessageLength - 
1190:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1191:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( lNumBytes > 0 )
1192:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
1193:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 /*
1194:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                  * If xResult is negative, it's an error code. Because xNumBytesReceived is an
1195:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                  * unsigned int, it will become a large postive number, so the while loop
1196:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                  * would end prematurely. This if statement prevents that.
1197:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                  */
1198:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xNumBytesReceived += lNumBytes;
1199:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
1200:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xEndTime = xTaskGetTickCount();
1202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         } while( ( ( xEndTime - xStartTime ) < xWaitTime ) && ( xMessageLength > xNumBytesReceived 
1203:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1204:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( xMessageLength, xNumBytesReceived, "Data was not received 
1205:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCheckRxTxBuffers( pucTxBuffer, pucRxBuffer, xMessageLength );
1207:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1208:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocket );
1209:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" )
1210:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1211:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1212:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1213:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1214:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1215:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
1216:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1217:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1218:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1219:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_NonBlocking_Test )
1220:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1221:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1222:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1223:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_NonBlocking_Test( eNonsecure );
1224:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1225:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_NonBlocking_Test )
1227:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1228:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1229:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1230:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_NonBlocking_Test( eSecure );
1231:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1232:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1233:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1234:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSetSockOpt_InvalidParams( Server_t xConn )
1235:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1236:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1237:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1238:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1239:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1240:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Attempt to establish the requested connection. */
1241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSock
1242:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1243:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1244:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to set the invalid option. */
1245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
1246:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,    /* lLevel - Not used. */
1247:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       -1,   /* Invalid option name. */
1248:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       NULL, /* pvOptionValue - This is insignificant as the option 
1249:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0     /* xOptionLength - zero for NULL value. */
1250:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       );
1251:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1252:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Since the option name supplied in the previous
1253:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * call was invalid, we expect the call to the API
1254:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * SOCKETS_SetSockOpt to fail. */
1255:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "SOCKETS_SetSockOpt with invalid option su
1256:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1257:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to set a valid option on an invalid socket. */
1258:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( SOCKETS_INVALID_SOCKET, /* Invalid socket. */
1259:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,                      /* lLevel - Not used. */
1260:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_RCVTIMEO,    /* Receive timeout. */
1261:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       &( xReceiveTimeOut ),
1262:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       sizeof( TickType_t ) );
1263:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1264:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Since the socket passed in the previous call was
1265:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * invalid, we expect the call to the API
1266:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * SOCKETS_SetSockOpt to fail. */
1267:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "SOCKETS_SetSockOpt with invalid socket su
1268:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1269:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1270:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* If the code reaches here, it means that the socket
1271:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * was created successfully. Make sure to free it even
1272:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * if any of the above assertion fails. This is needed
1273:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * to avoid leaks. */
1274:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &( xSocketOpen ) );
1275:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1276:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* If this fails there is nothing much we can do
1277:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * to avoid leaking. */
1278:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SOCKETS_Close failed. \r\n" );
1279:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1280:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1281:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_SetSockOpt_InvalidParams )
1282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1283:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1284:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSetSockOpt_InvalidParams( eNonsecure );
1286:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1287:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s complete.\r\n", __FUNCTION__ ) );
1288:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1289:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams )
1291:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1292:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1293:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1294:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSetSockOpt_InvalidParams( eSecure );
1295:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1296:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s complete.\r\n", __FUNCTION__ ) );
1297:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1298:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1299:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1300:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_SetSockOpt_SNDTIMEO( Server_t xConn )
1301:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1302:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* TODO: This is a stub function. */
1303:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_FAIL_MESSAGE( "This test is not implemented." );
1304:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1305:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1306:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_SetSockOpt_SNDTIMEO )
1307:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1309:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1310:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_SetSockOpt_SNDTIMEO( eNonsecure );
1311:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1312:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO )
1314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1315:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1316:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1317:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_SetSockOpt_SNDTIMEO( eSecure );
1318:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1319:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1320:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1321:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1322:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Shutdown( Server_t xConn )
1323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1324:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1325:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuf;
1326:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1327:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
1328:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1329:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Shutdown: Read. */
1330:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1331:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
1332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1333:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1334:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1335:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( xSocket, SOCKETS_SHUT_RD );
1336:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32( SOCKETS_ERROR_NONE, xResult );
1337:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1338:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     do
1339:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1340:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
1341:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     while( xResult >= 0 );
1343:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1344:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1345:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1346:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1348:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1349:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Shutdown: Write. */
1350:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1351:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
1352:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1353:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1354:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1355:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* AN: Should this test also make a send before closing the socket,
1356:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * and make sure that the data is received "gracefully"? */
1357:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1358:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( xSocket, SOCKETS_SHUT_WR );
1359:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32( SOCKETS_ERROR_NONE, xResult );
1360:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1361:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Expected behavior of send after Shutdown/WRITE is ambiguous.
1362:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * do
1363:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * {
1364:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      *  xResult = SOCKETS_Send( xSocket, &ucBuf, 1, 0 );
1365:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * }
1366:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * while( xResult >= 0 );
1367:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1368:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      */
1369:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1370:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1371:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1372:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1373:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Shutdown: Read/Write. */
1374:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1375:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
1376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1377:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1378:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1379:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Shutdown( xSocket, SOCKETS_SHUT_RDWR );
1380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32( SOCKETS_ERROR_NONE, xResult );
1381:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1382:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     do
1383:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1384:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
1385:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1386:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     while( xResult >= 0 );
1387:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1388:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1389:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1390:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1391:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1392:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1393:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1394:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Shutdown )
1395:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1397:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1398:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Shutdown( eNonsecure );
1399:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1400:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Shutdown )
1402:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1403:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1404:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1405:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Shutdown( eSecure );
1406:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1407:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1408:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1409:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1410:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvTestSOCKETS_Close( Server_t xConn )
1411:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1412:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1413:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuf;
1414:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1415:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
1416:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1417:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Close an unconnected socket */
1418:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
1419:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
1420:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1421:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1423:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1424:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* The secure sockets API abstraction requires that Socket_t be treated as
1425:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * opaque. It could be a pointer, a handle, an index, or whatever. In addition,
1426:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * SOCKETS_Close treats the socket only as input. Therefore, it is not a valid
1427:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * test to pass a socket that has been freed, via explicit close, to other
1428:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * downstream socket APIs. */
1429:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = SOCKETS_INVALID_SOCKET;
1430:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1431:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Closed socket should not connect, send or receive */
1432:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Send( xSocket, &ucBuf, 1, 0 );
1433:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1434:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
1435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1436:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1437:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Close a connected socket */
1438:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1439:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1440:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1441:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1442:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1443:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1444:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* See comment above. */
1445:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = SOCKETS_INVALID_SOCKET;
1446:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1447:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Closed socket should not connect, send or receive */
1448:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Send( xSocket, &ucBuf, 1, 0 );
1449:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1450:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
1451:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1452:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1453:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Close a shutdown socket */
1454:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1455:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1456:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1457:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvShutdownHelper( xSocket );
1458:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
1459:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1460:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1461:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1462:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1463:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* See comment above. */
1464:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = SOCKETS_INVALID_SOCKET;
1465:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1466:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Closed socket should not connect, send or receive */
1467:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Send( xSocket, &ucBuf, 1, 0 );
1468:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1469:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
1470:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
1471:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1472:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
1473:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1474:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1475:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Close )
1476:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1477:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1478:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1479:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTestSOCKETS_Close( eNonsecure );
1480:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1481:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1482:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Close )
1483:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1484:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1485:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1486:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTestSOCKETS_Close( eSecure );
1487:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1488:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1489:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1490:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1491:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1492:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvTestSOCKETS_Recv_ByteByByte( Server_t xConn )
1493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1494:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
1495:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulTxCount;
1496:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xBytesReceived;
1497:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucTxBuffer = ( uint8_t * ) pcTxBuffer;
1498:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
1499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLengths[] = { 2, 7, 8, 9, 20 };
1500:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1501:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1502:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1503:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
1504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
1505:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1506:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1507:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( ulTxCount = 0; ulTxCount < sizeof( xMessageLengths ) / sizeof( xMessageLengths[ 0 ] ); ulT
1508:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1509:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xBytesReceived = 0;
1510:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1511:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         prvCreateTxData( ( char * ) pucTxBuffer, xMessageLengths[ ulTxCount ], ulTxCount );
1512:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocket, pucTxBuffer, xMessageLengths[ ulTxCount ] );
1513:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1514:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         while( ( xResult == pdPASS ) && ( xBytesReceived < xMessageLengths[ ulTxCount ] ) )
1515:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1516:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             memset( pucRxBuffer, tcptestRX_BUFFER_FILLER, tcptestBUFFER_SIZE );
1517:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvRecvHelper( xSocket, pucRxBuffer, 1 );
1518:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1519:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xResult == pdPASS )
1520:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
1521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 if( pucRxBuffer[ 0 ] == pucTxBuffer[ xBytesReceived ] )
1522:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
1523:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     /* Check that all but the first byte of the RxBuffer is unmodified. */
1524:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xResult = prvCheckBufferUnmodified( pucRxBuffer + 1,
1525:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestRX_BUFFER_FILLER,
1526:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestBUFFER_SIZE - 1 );
1527:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
1528:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 else
1529:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
1530:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xResult = pdFAIL;
1531:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     tcptestPRINTF( ( "Byte %d was incorrectly received\r\n", ( xBytesReceived + 1 )
1532:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
1533:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
1534:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1535:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xBytesReceived++;
1536:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1537:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1538:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1539:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Close this socket before looping back to create another. */
1540:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Failed received\r\n" );
1541:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvShutdownHelper( xSocket );
1542:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
1543:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1546:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1548:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Recv_ByteByByte )
1549:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1550:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1551:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1552:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTestSOCKETS_Recv_ByteByByte( eNonsecure );
1553:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1554:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1555:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Recv_ByteByByte )
1556:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1557:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1558:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1559:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTestSOCKETS_Recv_ByteByByte( eSecure );
1560:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1561:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1562:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1563:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1564:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_SendRecv_VaryLength( Server_t xConn )
1565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1566:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1567:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulIndex;
1568:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulTxCount;
1569:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     const uint32_t ulMaxLoopCount = 10;
1570:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulI;
1571:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucTxBuffer = ( uint8_t * ) pcTxBuffer;
1572:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
1573:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLengths[] = { 1, 2, 7, 8, 9, 1199, 1200, 1201 }; /* TODO: Add 0, send sizes larg
1574:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1575:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1576:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1577:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = pdPASS;
1578:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     ulTxCount = 0;
1579:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( ulIndex = 0; ulIndex < sizeof( xMessageLengths ) / sizeof( size_t ); ulIndex++ )
1581:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1582:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Attempt to establish the requested connection. */
1583:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSock
1584:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1585:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1586:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Send each message length ulMaxLoopCount times. */
1587:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( ulI = 0; ulI < ulMaxLoopCount; ulI++ )
1588:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1589:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             memset( pucTxBuffer, tcptestTX_BUFFER_FILLER, tcptestBUFFER_SIZE );
1590:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1591:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             prvCreateTxData( ( char * ) pucTxBuffer,
1592:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              xMessageLengths[ ulIndex ],
1593:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              ulTxCount );
1594:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             ulTxCount++;
1595:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1596:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvSendHelper( xSocket,
1597:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                      pucTxBuffer,
1598:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                      xMessageLengths[ ulIndex ] );
1599:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1600:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Data failed to send\r\n" );
1601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             memset( pucRxBuffer, tcptestRX_BUFFER_FILLER, tcptestBUFFER_SIZE );
1602:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvRecvHelper( xSocket,
1603:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                      pucRxBuffer,
1604:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                      xMessageLengths[ ulIndex ] );
1605:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1606:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Data was not received \r\n" );
1607:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvCheckRxTxBuffers( pucTxBuffer,
1608:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                            pucRxBuffer,
1609:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                            xMessageLengths[ ulIndex ] );
1610:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1611:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1612:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocket );
1613:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" )
1614:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1615:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
1616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1617:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1618:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Print feedback since this test takes a while! */
1619:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestPRINTF( ( " Sending messages with length %d complete\r\n", xMessageLengths[ ulIndex 
1620:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1621:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Pause for a short while to ensure the network is not too
1622:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * congested. */
1623:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vTaskDelay( tcptestLOOP_DELAY );
1624:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1625:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1626:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Report Test Results. */
1627:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
1628:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1629:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1630:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_SendRecv_VaryLength )
1631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1632:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1634:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_SendRecv_VaryLength( eNonsecure );
1635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1636:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1637:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SendRecv_VaryLength )
1638:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1639:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1640:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1641:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_SendRecv_VaryLength( eSecure );
1642:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1643:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1644:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*/ *-----------------------------------------------------------* / */
1645:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1646:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Socket_InvalidInputParams( Server_t xConn )
1647:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1648:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1649:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1650:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1651:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1652:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Providing invalid domain. */
1653:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1654:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1655:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = SOCKETS_Socket( ( SOCKETS_AF_INET + 1 ),
1656:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
1657:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_IPPROTO_TCP );
1658:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1659:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* If the test code reaches here, it failed. */
1660:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Invalid socket domain accepted" );
1661:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
1662:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1663:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1664:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1665:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Providing invalid type. */
1666:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1667:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1668:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
1669:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( SOCKETS_SOCK_STREAM | SOCKETS_SOCK_DGRAM ),
1670:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_IPPROTO_TCP );
1671:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1672:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Invalid socket type accepted" );
1673:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
1674:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1675:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1676:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1677:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Providing invalid protocol. */
1678:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1679:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1680:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
1681:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
1682:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( SOCKETS_IPPROTO_TCP | SOCKETS_IPPROTO_UDP ) );
1683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1684:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Invalid socket protocol accepted" );
1685:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
1686:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1687:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1688:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1689:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Creating a UPD socket. UDP is unsupported. */
1690:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1691:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1692:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Mixing DGRAM type with TCP protocol (instead of UDP). */
1693:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
1694:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_DGRAM,
1695:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_IPPROTO_UDP );
1696:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1697:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Invalid socket created - UDP is not supported. " );
1698:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         prvCloseHelper( xSocket, &xSocketOpen );
1699:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1700:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1701:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1702:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1703:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Mixing DGRAM type with TCP protocol (instead of UDP). */
1704:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
1705:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_DGRAM,
1706:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_IPPROTO_TCP );
1707:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1708:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Invalid socket created - mixed TCP with DGRAM " );
1709:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
1710:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1711:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1712:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1713:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Mixing STREAM type with UDP protocol (instead of TCP). */
1714:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1715:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1716:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = SOCKETS_Socket( SOCKETS_AF_INET,
1717:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
1718:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_IPPROTO_UDP );
1719:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1720:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Invalid socket created - mixed UDP with STREAM" );
1721:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
1722:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1723:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1724:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1725:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Report Test Results. */
1726:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
1727:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1728:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Socket_InvalidInputParams )
1730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1731:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1732:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1733:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Socket_InvalidInputParams( eNonsecure );
1734:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1735:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1736:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* No secure stub needed here since there are no secure input params. */
1737:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1738:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1739:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1740:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Socket_InvalidTooManySockets( Server_t xConn )
1741:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1742:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #if !defined( WIN32 ) && !defined( PIC32MZ ) && !defined( ESP32 ) && !defined( ZYNQ7000 ) && !d
1743:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         BaseType_t xResult;
1744:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         Socket_t xCreatedSockets[ integrationtestportableMAX_NUM_UNSECURE_SOCKETS ];
1745:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         BaseType_t xSocketsCreated;
1746:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         Socket_t xSocket;
1747:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1748:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1749:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1750:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = pdPASS;
1751:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1752:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( xSocketsCreated = 0; xSocketsCreated < integrationtestportableMAX_NUM_UNSECURE_SOCKETS
1753:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1754:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xSocket = SOCKETS_Socket( SOCKETS_AF_INET, SOCKETS_SOCK_STREAM, SOCKETS_IPPROTO_TCP );
1755:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1756:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xSocket == SOCKETS_INVALID_SOCKET )
1757:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
1758:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = pdFAIL;
1759:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 tcptestPRINTF( ( "%s failed creating a socket number %d \r\n", __FUNCTION__, xSocke
1760:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
1761:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
1762:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else
1763:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
1764:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xCreatedSockets[ xSocketsCreated ] = xSocket;
1765:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
1766:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1767:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1768:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xResult == pdPASS )
1769:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1770:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xSocket = SOCKETS_Socket( SOCKETS_AF_INET, SOCKETS_SOCK_STREAM, SOCKETS_IPPROTO_TCP );
1771:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1772:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xSocket != SOCKETS_INVALID_SOCKET )
1773:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
1774:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = pdFAIL;
1775:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 SOCKETS_Close( xSocket );
1776:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
1777:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1778:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1779:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Cleanup. */
1780:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         while( xSocketsCreated > 0 )
1781:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1782:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             --xSocketsCreated;
1783:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             SOCKETS_Close( xCreatedSockets[ xSocketsCreated ] );
1784:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1785:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1786:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Max num sockets test failed" );
1787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Report Test Results. */
1789:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
1790:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif /*ifndef WIN32 */
1791:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1792:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1793:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Socket_InvalidTooManySockets )
1794:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1796:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1797:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Socket_InvalidTooManySockets( eNonsecure );
1798:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1799:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1800:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets )
1801:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
  26              		.loc 1 1801 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 1EFF2FE1 		bx	lr
  32              		.cfi_endproc
  33              	.LFE94:
  35              		.section	.text.TEST_Full_TCP_TEAR_DOWN,"ax",%progbits
  36              		.align	2
  37              		.global	TEST_Full_TCP_TEAR_DOWN
  38              		.syntax unified
  39              		.arm
  40              		.fpu neon
  42              	TEST_Full_TCP_TEAR_DOWN:
  43              	.LFB2:
 201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lReturn;
  44              		.loc 1 201 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
 201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lReturn;
  48              		.loc 1 201 0
  49 0000 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
  50              		.cfi_def_cfa_offset 24
  51              		.cfi_offset 4, -12
  52              		.cfi_offset 5, -8
  53              		.cfi_offset 14, -4
 204:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
  54              		.loc 1 204 0
  55 0004 4C009FE5 		ldr	r0, .L6
  56 0008 FEFFFFEB 		bl	setjmp
  57              	.LVL0:
  58 000c 004050E2 		subs	r4, r0, #0
  59 0010 0E00001A 		bne	.L2
 206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
  60              		.loc 1 206 0
  61 0014 40509FE5 		ldr	r5, .L6+4
  62 0018 003095E5 		ldr	r3, [r5]
  63 001c 010053E3 		cmp	r3, #1
  64 0020 0A00001A 		bne	.L2
 208:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xSocketOpen = pdFALSE;
  65              		.loc 1 208 0
  66 0024 34309FE5 		ldr	r3, .L6+8
  67 0028 000093E5 		ldr	r0, [r3]
  68 002c FEFFFFEB 		bl	SOCKETS_Close
  69              	.LVL1:
 210:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
  70              		.loc 1 210 0
  71 0030 1430A0E3 		mov	r3, #20
  72 0034 0010A0E1 		mov	r1, r0
  73 0038 00308DE5 		str	r3, [sp]
  74 003c 0400A0E1 		mov	r0, r4
  75              	.LVL2:
  76 0040 D230A0E3 		mov	r3, #210
  77 0044 18209FE5 		ldr	r2, .L6+12
 209:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, lReturn, "SOCKETS_Close failed in 
  78              		.loc 1 209 0
  79 0048 004085E5 		str	r4, [r5]
 210:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
  80              		.loc 1 210 0
  81 004c FEFFFFEB 		bl	UnityAssertEqualNumber
  82              	.LVL3:
  83              	.L2:
 221:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
  84              		.loc 1 221 0
  85 0050 0CD08DE2 		add	sp, sp, #12
  86              		.cfi_def_cfa_offset 12
  87              		@ sp needed
  88 0054 3080BDE8 		pop	{r4, r5, pc}
  89              	.L7:
  90              		.align	2
  91              	.L6:
  92 0058 28000000 		.word	Unity+40
  93 005c 00000000 		.word	.LANCHOR0
  94 0060 00000000 		.word	.LANCHOR1
  95 0064 00000000 		.word	.LC3
  96              		.cfi_endproc
  97              	.LFE2:
  99              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_,"ax",%progbits
 100              		.align	2
 101              		.global	TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_
 102              		.syntax unified
 103              		.arm
 104              		.fpu neon
 106              	TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_:
 107              	.LFB143:
1802:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1803:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* TODO: Modify so that the number of secure sockets can be counted. */
1804:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /*prvSOCKETS_Socket_InvalidTooManySockets( secure ); */
1805:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1806:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1807:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1808:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1809:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1810:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1811:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Connect_InvalidParams( Server_t xConn )
1812:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1813:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1814:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xEchoServerAddress;
1815:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1816:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulEchoServerIP;
1817:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1818:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     ulEchoServerIP = SOCKETS_inet_addr_quick( tcptestECHO_SERVER_ADDR0,
1819:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                               tcptestECHO_SERVER_ADDR1,
1820:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                               tcptestECHO_SERVER_ADDR2,
1821:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                               tcptestECHO_SERVER_ADDR3 );
1822:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1823:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1824:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1825:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
1827:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
1828:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1829:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Echo requests are sent to the echo server.  The echo server is
1830:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     * listening to tcptestECHO_PORT on this computer's IP address. */
1831:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.usPort = SOCKETS_htons( tcptestECHO_PORT );
1832:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.ulAddress = ulEchoServerIP;
1833:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1834:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Invalid socket. */
1835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( SOCKETS_INVALID_SOCKET,
1836:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
1837:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                sizeof( xEchoServerAddress ) );
1838:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1839:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect on an invalid socket failed" );
1840:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1841:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Invalid IP address (0.0.0.0).  TODO: Investigate reserved IP addresses */
1842:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.ulAddress = SOCKETS_inet_addr_quick( 0, 0, 0, 0 );
1843:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket,
1844:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
1845:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                sizeof( xEchoServerAddress ) );
1846:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1847:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect to IP Address 0.0.0.0 worked" );
1848:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1849:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Invalid port (0). */
1850:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.usPort = SOCKETS_htons( 0 );
1851:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.ulAddress = ulEchoServerIP;
1852:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket,
1853:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
1854:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                sizeof( xEchoServerAddress ) );
1855:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1856:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect to Port 0 worked" );
1857:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1858:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* NULL Address. */
1859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket, NULL, 0 );
1860:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1861:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Ensure that the attempt to connect to NULL address fails. */
1862:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect to NULL Address worked." );
1863:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1864:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* TODO: Does port 0 mean connect to any available port? */
1865:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
1866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
1867:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1868:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1869:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Connect_InvalidParams )
1870:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1871:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1872:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1873:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Connect_InvalidParams( eNonsecure );
1874:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1875:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1876:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidParams )
1877:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1878:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1879:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1880:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Connect_InvalidParams( eSecure );
1881:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1882:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1883:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1884:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1885:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvConnect_InvalidAddressLength( Server_t xConn,
1886:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                              uint32_t ulAddressLength )
1887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1888:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1889:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xEchoServerAddress;
1890:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1891:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1892:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1893:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xConn == eNonsecure )
1894:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1895:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Populate the non-secure echo server address. */
1896:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xEchoServerAddress.ulAddress = SOCKETS_inet_addr_quick( tcptestECHO_SERVER_ADDR0,
1897:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_ADDR1,
1898:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_ADDR2,
1899:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_ADDR3 );
1900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xEchoServerAddress.usPort = SOCKETS_htons( tcptestECHO_PORT );
1901:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1902:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         else if( xConn == eSecure )
1903:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1904:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Populate the secure echo server address. */
1905:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xEchoServerAddress.ulAddress = SOCKETS_inet_addr_quick( tcptestECHO_SERVER_TLS_ADDR0,
1906:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_TLS_ADDR1,
1907:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_TLS_ADDR2,
1908:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_TLS_ADDR3 );
1909:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xEchoServerAddress.usPort = SOCKETS_htons( tcptestECHO_PORT_TLS );
1910:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1911:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         else
1912:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
1913:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* This test is not designed for AWS IoT Broker. */
1914:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ABORT();
1915:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
1916:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1917:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create a socket. */
1918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = prvTcpSocketHelper( &( xSocketOpen ) );
1919:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1920:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Ensure that the socket was created successfully. */
1921:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed." )
1922:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_MESSAGE( pdTRUE, xSocketOpen, "Socket creation failed." );
1923:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1924:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Connect to the echo server but instead of calculating
1925:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * the length of xEchoServerAddress, specify the length
1926:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * supplied as parameter to this function for the xAddressLength
1927:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * field. Since xAddressLength field of SOCKETS_Connect is
1928:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * currently ignored, we expect the connect to succeed.
1929:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          */
1930:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Connect( xSocket, &( xEchoServerAddress ), ulAddressLength );
1931:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket connect failed." );
1932:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1933:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1934:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* If a socket was created, make sure to free it even
1935:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * if any of the above assertion fails. This is needed
1936:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * to avoid leaks. */
1937:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSocketOpen == pdTRUE )
1938:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1939:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &( xSocketOpen ) );
1940:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1941:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* If this fails there is nothing much we can do
1942:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * to avoid leaking. */
1943:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SOCKETS_Close failed. \r\n" 
1944:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1945:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1946:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1947:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1948:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Connect_InvalidAddressLength )
1949:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1950:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1951:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1952:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* AddressLength 0. */
1953:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvConnect_InvalidAddressLength( eNonsecure, 0 );
1954:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1955:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* AddressLength 1000. */
1956:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvConnect_InvalidAddressLength( eNonsecure, 1000 );
1957:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1958:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s complete.\r\n", __FUNCTION__ ) );
1959:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1960:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1961:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1962:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength )
1963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1964:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1965:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1966:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* AddressLength 0. */
1967:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvConnect_InvalidAddressLength( eSecure, 0 );
1968:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1969:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* AddressLength 1000. */
1970:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvConnect_InvalidAddressLength( eSecure, 1000 );
1971:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s complete.\r\n", __FUNCTION__ ) );
1973:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
1974:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
1975:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1976:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSend_Invalid( Server_t xConn )
1977:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
1978:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
1979:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucTxBuffer = ( uint8_t * ) pcTxBuffer;
1980:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1981:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
1982:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1983:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Unconnected socket. */
1984:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
1985:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
1986:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Attempt to establish the requested connection. */
1987:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSock
1988:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
1989:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1990:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Invalid socket. */
1991:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( SOCKETS_INVALID_SOCKET, pucTxBuffer, 300, 0 );
1992:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket send fails with invalid socket" );
1993:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1994:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* NULL Tx Buffer. */
1995:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
1996:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( xSocket, NULL, 300, 0 );
1997:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket send should return error for NULL 
1998:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
1999:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else
2000:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2001:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Sending on an TCP socket with NULL buffer triggered an assert " );
2002:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2003:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2004:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Cleanup. */
2005:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2006:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2007:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2008:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Unconnected socket. */
2009:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
2010:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2011:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocket = prvTcpSocketHelper( &xSocketOpen );
2012:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
2013:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2014:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
2015:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt failed" );
2016:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( xSocket, pucTxBuffer, 300, 0 );
2017:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket send worked with an unconnected so
2018:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2019:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
2020:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket close failed" );
2021:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2022:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else
2023:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2024:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_FAIL_MESSAGE( "Sending on an unconnected TCP socket triggered an assert " );
2025:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2026:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2027:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Report Test Results. */
2028:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s passed\r\n", __FUNCTION__ ) );
2029:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2030:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2031:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Send_Invalid )
2032:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2033:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2034:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2035:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSend_Invalid( eNonsecure );
2036:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2037:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2038:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Send_Invalid )
2039:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2040:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2041:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2042:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSend_Invalid( eSecure );
2043:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2044:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2045:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-------------------------------------------------------------------*/
2046:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2047:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvRecv_Invalid( Server_t xConn )
2048:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2049:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
2050:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2051:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2052:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2053:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
2054:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, xConn, xReceiveTimeOut, xSendTimeOut, &xSocketOp
2055:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
2056:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2057:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Receive with NULL buffer should fail. */
2058:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, NULL, 100, 0 );
2059:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket receive with NULL receive buffer shoul
2060:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2061:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Receive on invalid socket should fail. */
2062:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( SOCKETS_INVALID_SOCKET, pcRxBuffer, tcptestBUFFER_SIZE, 0 );
2063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket receive with invalid socket should hav
2064:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2065:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Cleanup. */
2066:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2067:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2068:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2069:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2070:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Recv_Invalid )
2071:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2072:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2073:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2074:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvRecv_Invalid( eNonsecure );
2075:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2076:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2077:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Recv_Invalid )
2078:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2079:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2080:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2081:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvRecv_Invalid( eSecure );
2082:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2083:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2084:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-------------------------------------------------------------------*/
2085:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2086:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvServerDomainName( void )
2087:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2088:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
2089:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xAwsBrokerAddress;
2090:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2091:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* TODO: Generically change this. */
2092:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     char cRealAddress[ sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) ];
2093:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     char cFakeAddress[ sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) ];
2094:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     memcpy( cRealAddress, clientcredentialMQTT_BROKER_ENDPOINT, sizeof( clientcredentialMQTT_BROKER
2096:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     memcpy( cFakeAddress, cRealAddress, sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) );
2097:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* .com -> .cpm */
2098:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     cFakeAddress[ sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) - 3 ]++;
2099:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2100:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2101:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2102:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
2104:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
2105:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2106:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
2107:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
2108:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2109:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Give the client a valid subject name to check against. */
2110:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
2111:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
2112:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_SERVER_NAME_INDICATION,
2113:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   cRealAddress,
2114:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   sizeof( cRealAddress ) );
2115:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelper( xSocket, eAwsBroker );
2116:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
2117:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2118:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2119:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2120:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2121:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
2122:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
2123:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2124:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
2125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
2126:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2127:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Give the client an INVALID subject name to check against. */
2128:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
2129:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
2130:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_SERVER_NAME_INDICATION,
2131:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   cFakeAddress,
2132:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   sizeof( cFakeAddress ) );
2133:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2134:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Get the address struct for AWS Broker and SetSockOpt REQUIRE_TLS. */
2135:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvAwsIotBrokerConnectHelper( xSocket, &xAwsBrokerAddress );
2136:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed setup AWS Broker address 
2137:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2138:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket, &xAwsBrokerAddress, sizeof( SocketsSockaddr_t ) );
2139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect worked when subject name check should
2140:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2141:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Server unverified indicates a connection
2142:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      *  was established without verifying the server. */
2143:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xResult != SOCKETS_TLS_HANDSHAKE_ERROR )
2144:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2145:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( xSocket, pcTxBuffer, 100, 0 );
2146:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Send allowed after subject name connectio
2147:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2148:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2149:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2150:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2151:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2152:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2153:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION )
2154:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2155:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2156:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2157:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvServerDomainName();
2158:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2159:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2160:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-------------------------------------------------------------------*/
2161:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2162:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvTrustedServerCertificate( void )
2163:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2164:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
2165:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xSecureEchoServerAddress;
2166:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2167:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Attempt to establish the requested connection. */
2168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvConnectHelperWithRetry( &xSocket, eSecure, xReceiveTimeOut, xSendTimeOut, &xSocket
2169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
2170:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2171:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2172:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2173:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2174:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Repeat the steps above, but without using SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE.
2175:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * Make sure that an error is returned. */
2176:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
2177:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
2178:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2179:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
2180:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
2181:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2182:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set the socket to use TLS. */
2183:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
2184:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
2185:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_REQUIRE_TLS,
2186:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   NULL,
2187:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( size_t ) 0 );
2188:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SetSockOpt to require TLS failed
2189:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2190:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Echo requests are sent to the secure echo server and port. */
2191:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSecureEchoServerAddress.ulAddress = SOCKETS_inet_addr_quick( tcptestECHO_SERVER_TLS_ADDR0,
2192:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                   tcptestECHO_SERVER_TLS_ADDR1,
2193:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                   tcptestECHO_SERVER_TLS_ADDR2,
2194:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                   tcptestECHO_SERVER_TLS_ADDR3 );
2195:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2196:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSecureEchoServerAddress.usPort = SOCKETS_htons( tcptestECHO_PORT_TLS );
2197:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2198:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket, &xSecureEchoServerAddress, sizeof( xSecureEchoServerAddress
2199:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
2200:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2203:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2204:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2205:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE )
2206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2207:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2208:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2209:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTrustedServerCertificate();
2210:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2211:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2212:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2213:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /* This test is different than the previous test because it causes the
2214:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * SL_SSL_NOTIFICATION_WRONG_ROOT_CA asynchronous event to be hit.
2215:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  */
2216:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvTriggerWrongRootCA( void )
2217:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2218:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
2219:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xAwsIotBrokerAddress;
2220:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2221:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Repeat the steps above, but without using SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE.
2222:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * Make sure that an error is returned. */
2223:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
2224:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
2225:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
2226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
2227:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2228:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set the socket to use TLS. */
2229:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
2230:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
2231:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_REQUIRE_TLS,
2232:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   NULL,
2233:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( size_t ) 0 );
2234:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2235:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set the socket to use the secure server's root CA cert. */
2236:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
2237:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
2238:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE,
2239:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   tcptestECHO_HOST_ROOT_CA,
2240:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   sizeof( tcptestECHO_HOST_ROOT_CA ) );
2241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2242:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SetSockOpt to require TLS failed
2243:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2244:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Echo requests are sent to the secure echo server and port. */
2245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xAwsIotBrokerAddress.ulAddress = SOCKETS_GetHostByName( clientcredentialMQTT_BROKER_ENDPOINT );
2246:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( 0, xAwsIotBrokerAddress.ulAddress, "DNS look up failed." );
2247:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xAwsIotBrokerAddress.usPort = SOCKETS_htons( clientcredentialMQTT_BROKER_PORT );
2248:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2249:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket, &xAwsIotBrokerAddress, sizeof( xAwsIotBrokerAddress ) );
2250:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
2251:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2252:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
2253:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
2254:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2255:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2256:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SockEventHandler )
2257:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2258:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2259:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2260:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTriggerWrongRootCA();
2261:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2262:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2263:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2264:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2265:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /** @brief This test will create a task the will send data to an echo server.
2266:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * The data coming back will be received in that task.
2267:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * The size of receiving buffer, the priority, the size of data send,
2268:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * will keep changing to cover a maximum cases.
2269:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  */
2270:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvSOCKETS_Threadsafe_SameSocketDifferentTasks( Server_t xConn )
2271:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2272:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xTotalReceived, xReturned = 0;
2273:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xRecvLoop, xRecvLen;
2274:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestEchoTestModes_t xMode;
2275:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
2276:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile char * pcReceivedString;
2277:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xReceivedStringAllocated = pdFALSE;
2278:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSocketPassingQueueAllocated = pdFALSE;
2279:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSyncEventGroupAllocated = pdFALSE;
2280:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile TaskHandle_t xCreatedTask;
2281:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
2283:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2284:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pcReceivedString = pvPortMalloc( ipconfigTCP_MSS * sizeof( char ) );
2285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( pcReceivedString != NULL );
2286:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xReceivedStringAllocated = pdTRUE;
2287:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2288:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create the queue used to pass the socket to use from the Tx task to the
2289:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * Rx task. */
2290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocketPassingQueue = xQueueCreate( 1, sizeof( Socket_t ) );
2291:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSocketPassingQueue );
2292:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocketPassingQueueAllocated = pdTRUE;
2293:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2294:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create the event group used by the Tx and Rx tasks to synchronize prior
2295:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * to commencing a cycle using a new socket. */
2296:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroup = xEventGroupCreate();
2297:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSyncEventGroup );
2298:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroupAllocated = pdTRUE;
2299:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2300:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create the task that sends to an echo server, but lets a different task
2301:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * receive the reply on the same socket. */
2302:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = xTaskCreate( prvEchoClientTxTask,              /* The function that implements th
2303:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                "EchoMultiTx",                    /* Just a text name for the task t
2304:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                tcptestTCP_ECHO_TASKS_STACK_SIZE, /* The stack size is defined in aw
2305:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                NULL,                             /* The task parameter, not used in
2306:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                tcptestTCP_ECHO_TASKS_PRIORITY,   /* The priority assigned to the ta
2307:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                ( TaskHandle_t * ) &xCreatedTask );
2308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_MESSAGE( pdPASS, xResult, "Task creation failed" );
2309:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2310:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( xRecvLoop = 0; xRecvLoop < tcptestMAX_LOOPS_ECHO_TEST; xRecvLoop++ )
2311:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2312:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Attempt to establish the requested connection. */
2313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvConnectHelperWithRetry( &xSocket, xConn, xEchoTestRxTxTimeOut, xEchoTestRx
2314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
2315:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2316:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Wait to receive the socket that will be used from the Tx task. */
2317:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xEventGroupSync( xSyncEventGroup,                             /* The event group us
2318:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  tcptestRX_TASK_BIT,                          /* The bit representi
2319:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  ( tcptestTX_TASK_BIT | tcptestRX_TASK_BIT ), /* Also wait for the 
2320:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  tcptestECHO_TEST_SYNC_TIMEOUT_TICKS ) != ( tcptestTX_TASK_BIT | tc
2321:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2322:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_FAIL();
2323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2324:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2325:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Nothing received yet. */
2326:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTotalReceived = 0;
2327:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2328:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xMode = ( tcptestEchoTestModes_t ) ( xRecvLoop % tcptestMAX_ECHO_TEST_MODES ); /* % sho
2329:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                                            /* Using
2330:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2331:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xRecvLen = ipconfigTCP_MSS;
2332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             vTaskPrioritySet( NULL, tcptestECHO_TEST_HIGH_PRIORITY );
2333:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2334:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Set low priority if requested . */
2335:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( ( xMode == LARGE_BUFFER_LOW_PRIORITY ) || ( xMode == SMALL_BUFFER_LOW_PRIORITY ) )
2336:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2337:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 vTaskPrioritySet( NULL, tcptestECHO_TEST_LOW_PRIORITY );
2338:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2339:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2340:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( ( xMode == SMALL_BUFFER_HIGH_PRIORITY ) || ( xMode == SMALL_BUFFER_LOW_PRIORITY ) )
2341:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xRecvLen = 1;
2343:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2344:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2345:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             while( xTotalReceived < tcptestTWICE_MAX_FRAME_SIZE )
2346:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xReturned = SOCKETS_Recv( ( Socket_t ) xSocket, ( char * ) pcReceivedString, xRecvL
2348:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2349:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_ASSERT_NOT_EQUAL_MESSAGE( 0, xReturned, "Timeout occurred" );
2350:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xReturned, "Error occured receiving large mess
2351:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2352:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 /* Data was received. */
2353:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_ASSERT_EQUAL_MEMORY( &cTransmittedString[ xTotalReceived ], pcReceivedString, 
2354:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2355:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xTotalReceived += xReturned;
2356:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2357:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2358:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Rendez-vous with the Tx task ready to start a new cycle with a
2359:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****              * different socket. */
2360:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xEventGroupSync( xSyncEventGroup,                             /* The event group us
2361:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  tcptestRX_TASK_BIT,                          /* The bit representi
2362:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  ( tcptestTX_TASK_BIT | tcptestRX_TASK_BIT ), /* Also wait for the 
2363:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  tcptestECHO_TEST_SYNC_TIMEOUT_TICKS ) != ( tcptestTX_TASK_BIT | tc
2364:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2365:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_FAIL();
2366:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2367:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2368:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvShutdownHelper( xSocket );
2369:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdow
2370:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2371:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvCloseHelper( xSocket, &xSocketOpen );
2372:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" 
2373:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2374:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2375:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Free all dynamic memory. */
2377:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xReceivedStringAllocated == pdTRUE )
2378:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2379:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vPortFree( ( char * ) pcReceivedString );
2380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2381:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2382:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSocketPassingQueueAllocated == pdTRUE )
2383:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2384:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vQueueDelete( xSocketPassingQueue );
2385:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2386:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2387:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSyncEventGroupAllocated == pdTRUE )
2388:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2389:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vEventGroupDelete( xSyncEventGroup );
2390:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2391:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2392:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     vTaskDelete( xCreatedTask );
2393:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2394:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Set priority back. */
2395:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     vTaskPrioritySet( NULL, tskIDLE_PRIORITY );
2396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2397:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2398:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks )
2399:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2400:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2402:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Threadsafe_SameSocketDifferentTasks( eNonsecure );
2403:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2404:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2405:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks )
2406:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2407:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2408:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2409:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvSOCKETS_Threadsafe_SameSocketDifferentTasks( eSecure );
2410:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2411:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2412:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2413:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2414:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvEchoClientTxTask( void * pvParameters )
2415:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2416:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReturned = 0;
2417:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xTransmitted;
2418:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xStatus;
2419:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xLenToSend, xSendLoop;
2420:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMaxBufferSize;
2421:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestEchoTestModes_t xMode;
2422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2423:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2424:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Avoid warning about unused parameter. */
2425:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     ( void ) pvParameters;
2426:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2427:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Offset by one so of sending and receiving task are not always the same. Sometimes both low/h
2428:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2429:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /*  Recv task                   Sending task
2430:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      *  LARGE_BUFFER_HIGH_PRIORITY  SMALL_BUFFER_HIGH_PRIORITY
2431:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      *  SMALL_BUFFER_HIGH_PRIORITY  LARGE_BUFFER_LOW_PRIORITY
2432:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      *  LARGE_BUFFER_LOW_PRIORITY   SMALL_BUFFER_LOW_PRIORITY
2433:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      *  SMALL_BUFFER_LOW_PRIORITY   LARGE_BUFFER_HIGH_PRIORITY
2434:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      */
2435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     for( xSendLoop = 1; xSendLoop < tcptestMAX_LOOPS_ECHO_TEST + 1; xSendLoop++ )
2436:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2437:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xMode = ( tcptestEchoTestModes_t ) ( xSendLoop % tcptestMAX_ECHO_TEST_MODES ); /* % should 
2438:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                                        /* Using % t
2439:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2440:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vTaskPrioritySet( NULL, tcptestECHO_TEST_HIGH_PRIORITY );
2441:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xMaxBufferSize = tcptestTWICE_MAX_FRAME_SIZE;
2442:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2443:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Set low priority if requested . */
2444:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( ( xMode == LARGE_BUFFER_LOW_PRIORITY ) || ( xMode == SMALL_BUFFER_LOW_PRIORITY ) )
2445:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2446:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             vTaskPrioritySet( NULL, tcptestECHO_TEST_LOW_PRIORITY );
2447:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2448:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2449:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Set buffer size to 1 if requested. */
2450:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( ( xMode == SMALL_BUFFER_HIGH_PRIORITY ) || ( xMode == SMALL_BUFFER_LOW_PRIORITY ) )
2451:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2452:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xMaxBufferSize = 1;
2453:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2454:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2455:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Wait for the Rx task to create and connect the socket. */
2456:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xEventGroupSync( xSyncEventGroup,                             /* The event group used f
2457:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
2458:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              ( tcptestTX_TASK_BIT | tcptestRX_TASK_BIT ), /* Also wait for the Rx t
2459:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestECHO_TEST_SYNC_TIMEOUT_TICKS ) != ( tcptestTX_TASK_BIT | tcptes
2460:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2461:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             break;
2462:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2463:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2464:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xTransmitted = 0;
2465:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xStatus = pdTRUE;
2466:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2467:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Keep sending until the entire buffer has been sent. */
2468:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         while( xTransmitted < tcptestTWICE_MAX_FRAME_SIZE )
2469:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2470:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* How many bytes are left to send?  Attempt to send them
2471:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****              * all at once (so the length is potentially greater than the
2472:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****              * MSS). */
2473:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xLenToSend = tcptestTWICE_MAX_FRAME_SIZE - xTransmitted;
2474:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2475:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Every loop switch the size of the packet from maximum to smallest. */
2476:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xLenToSend > xMaxBufferSize )
2477:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2478:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xLenToSend = xMaxBufferSize;
2479:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2480:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2481:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xReturned = SOCKETS_Send( xSocket,                                            /* The so
2482:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       ( void * ) &( cTransmittedString[ xTransmitted ] ), /* The da
2483:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       xLenToSend,                                         /* The le
2484:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0 );                                                /* ulFlag
2485:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2486:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xReturned >= 0 )
2487:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2488:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 /* Data was sent successfully. */
2489:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xTransmitted += xReturned;
2490:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2491:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else
2492:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xStatus = pdFAIL;
2494:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
2495:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2496:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2497:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2498:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Wait for the Rx task to recognize the socket is closing and stop
2499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * using it. */
2500:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2501:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xEventGroupSync( xSyncEventGroup,                             /* The event group used f
2502:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
2503:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              ( tcptestTX_TASK_BIT | tcptestRX_TASK_BIT ), /* Also wait for the Rx t
2504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestECHO_TEST_SYNC_TIMEOUT_TICKS ) != ( tcptestTX_TASK_BIT | tcptes
2505:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2506:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xStatus = pdFAIL;
2507:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2508:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2509:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( xStatus == pdFAIL )
2510:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2511:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             break;
2512:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2513:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2514:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2515:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     vTaskSuspend( NULL ); /* Delete this task. */
2516:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2517:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2518:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2519:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2520:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /** @brief This test will create x tasks that will send and receive to an
2522:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  * echo server on different socket at the same time.
2523:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****  */
2524:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** void prvStartTCPEchoClientTasks_DifferentSockets( Server_t xConn )
2525:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2526:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint16_t usIndex;
2527:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestEchoClientsTaskParams_t xTcptestEchoClientsTaskParams[ tcptestNUM_ECHO_CLIENTS ];
2528:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulEventMask;
2529:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSyncEventGroupAllocated = pdFALSE;
2530:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
2531:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2532:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
2533:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2534:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create the event group used by the Tx and Rx tasks to synchronize prior
2535:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * to commencing a cycle using a new socket. */
2536:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroup = xEventGroupCreate();
2537:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSyncEventGroup );
2538:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroupAllocated = pdTRUE;
2539:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2540:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create the echo client tasks. */
2541:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( usIndex = 0; usIndex < tcptestNUM_ECHO_CLIENTS; usIndex++ )
2542:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2543:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].usTaskTag = usIndex;
2544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xConn = xConn;
2545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xResult = SOCKETS_SOCKET_ERROR;
2546:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = xTaskCreate( prvThreadSafeDifferentSocketsDifferentTasks,                 /* 
2548:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
2549:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    tcptestTCP_ECHO_TASKS_STACK_SIZE,                            /* 
2550:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    &( xTcptestEchoClientsTaskParams[ usIndex ] ),               /* 
2551:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    tcptestTCP_ECHO_TASKS_PRIORITY,                              /* 
2552:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    &( xTcptestEchoClientsTaskParams[ usIndex ].xTaskHandle ) ); /* 
2553:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_MESSAGE( pdPASS, xResult, "Task creation failed" );
2554:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2555:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2556:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         ulEventMask = xEventGroupSync( xSyncEventGroup, /* The event group used for the rendezvous.
2557:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        0,
2558:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        tcptestECHO_CLIENT_EVENT_MASK,
2559:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        tcptestECHO_TEST_SYNC_TIMEOUT_TICKS );
2560:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2561:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* For each task not completed, delete the task.  */
2562:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( usIndex = 0; usIndex < tcptestNUM_ECHO_CLIENTS; usIndex++ )
2563:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2564:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( ( ulEventMask & ( 1 << usIndex ) ) == 0 )
2565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2566:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 vTaskDelete( xTcptestEchoClientsTaskParams[ usIndex ].xTaskHandle );
2567:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2568:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2569:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2570:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( usIndex = 0; usIndex < tcptestNUM_ECHO_CLIENTS; usIndex++ )
2571:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2572:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_MESSAGE( SOCKETS_ERROR_NONE,
2573:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        xTcptestEchoClientsTaskParams[ usIndex ].xResult,
2574:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        "Check aws_secure_sockets.h for error code" );
2575:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2576:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2577:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2578:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSyncEventGroupAllocated == pdTRUE )
2579:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vEventGroupDelete( xSyncEventGroup );
2581:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2582:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2583:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2584:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2585:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks )
2586:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2587:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2588:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2589:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvStartTCPEchoClientTasks_DifferentSockets( eNonsecure );
2590:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2591:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2592:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks )
2593:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2594:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2595:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2596:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvStartTCPEchoClientTasks_DifferentSockets( eSecure );
2597:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2598:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2599:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2600:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvThreadSafeDifferentSocketsDifferentTasks( void * pvParameters )
2601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2602:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     Socket_t xTaskSocket = SOCKETS_INVALID_SOCKET;
2603:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lLoopCount = 0UL;
2604:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReceivedBytes, xReturned;
2605:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xTransmitted;
2606:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     char * pcReceivedString;
2607:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = SOCKETS_SOCKET_ERROR;
2608:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReceivedStringAllocated = pdFALSE;
2609:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xSocketOpen = pdFALSE;
2610:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestEchoClientsTaskParams_t * pxTcptestEchoClientsTaskParams;
2611:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2612:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxTcptestEchoClientsTaskParams = ( ( tcptestEchoClientsTaskParams_t * ) pvParameters );
2613:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2614:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pcReceivedString = pvPortMalloc( ipconfigTCP_MSS * sizeof( char ) );
2615:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( pcReceivedString != NULL )
2617:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2618:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xReceivedStringAllocated = pdTRUE;
2619:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2620:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     else
2621:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2622:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SOCKET_ERROR;
2623:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "%s: Task %d failed to alloc memory \r\n",
2624:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                 __FUNCTION__,
2625:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                 ( int ) pxTcptestEchoClientsTaskParams->usTaskTag ) );
2626:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2627:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2628:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( pcReceivedString != NULL )
2629:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2630:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Send a number of echo requests. */
2631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( lLoopCount = 0; lLoopCount < tcptestMAX_LOOPS_ECHO_CLIENTS_LOOP; lLoopCount++ )
2632:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Attempt to establish the requested connection. */
2634:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvConnectHelperWithRetry( &xTaskSocket,
2635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                  pxTcptestEchoClientsTaskParams->xConn,
2636:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                  xEchoTestRxTxTimeOut,
2637:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                  xEchoTestRxTxTimeOut,
2638:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                  &xSocketOpen );
2639:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2640:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xResult != SOCKETS_ERROR_NONE )
2641:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2642:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 tcptestFAILUREPRINTF( ( "%s: Task %d failed to connect with error code %d on loop %
2643:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         __FUNCTION__,
2644:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         xResult,
2645:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         lLoopCount,
2646:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         ( int ) pxTcptestEchoClientsTaskParams->usTaskTag ) );
2647:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
2648:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2649:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2650:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Send the string to the socket. */
2651:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTransmitted = SOCKETS_Send( xTaskSocket,                   /* The socket being sent to
2652:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                          ( void * ) cTransmittedString, /* The data being sent. */
2653:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                          ipconfigTCP_MSS,               /* The length of the data b
2654:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                          0 );                           /* No flags. */
2655:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2656:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xTransmitted < ipconfigTCP_MSS )
2657:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2658:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 tcptestFAILUREPRINTF( ( "%s: Task %d error  %ld while transmitting data\r\n",
2659:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         __FUNCTION__,
2660:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         ( int ) pxTcptestEchoClientsTaskParams->usTaskTag,
2661:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         xTransmitted ) );
2662:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = SOCKETS_SOCKET_ERROR;
2663:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
2664:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2665:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2666:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Clear the buffer into which the echoed string will be
2667:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****              * placed. */
2668:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xReceivedBytes = 0;
2669:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2670:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Receive data echoed back to the socket. */
2671:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             while( xReceivedBytes < xTransmitted )
2672:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2673:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xReturned = SOCKETS_Recv( xTaskSocket,                             /* The socket be
2674:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                           &( pcReceivedString[ xReceivedBytes ] ), /* The buffer in
2675:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                           ipconfigTCP_MSS - xReceivedBytes,        /* The size of t
2676:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                           0 );                                     /* No flags. */
2677:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2678:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 if( xReturned <= 0 )
2679:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
2680:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     break;
2681:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
2682:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xReceivedBytes += xReturned;
2684:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2685:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2686:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* If an error occurred it will be latched in xReceivedBytes,
2687:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****              * otherwise xReceived bytes will be just that - the number of
2688:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****              * bytes received from the echo server. */
2689:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( xReceivedBytes == ipconfigTCP_MSS )
2690:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2691:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 /* Compare the transmitted string to the received string. */
2692:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 if( strncmp( pcReceivedString, cTransmittedString, xTransmitted ) != 0 )
2693:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
2694:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     tcptestFAILUREPRINTF( ( "%s: Task %d error while receiving data \r\n",
2695:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                             __FUNCTION__,
2696:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                             ( int ) pxTcptestEchoClientsTaskParams->usTaskTag ) );
2697:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xResult = SOCKETS_SOCKET_ERROR;
2698:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     break;
2699:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
2700:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2701:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             else
2702:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2703:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 tcptestFAILUREPRINTF( ( "%s: Task %d error not enough bytes received \r\n",
2704:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         __FUNCTION__,
2705:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         ( int ) pxTcptestEchoClientsTaskParams->usTaskTag ) );
2706:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = SOCKETS_SOCKET_ERROR;
2707:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
2708:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2709:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2710:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             /* Close this socket before looping back to create another. */
2711:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             ( void ) prvShutdownHelper( xTaskSocket );
2712:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             ( void ) prvCloseHelper( xTaskSocket, &xSocketOpen );
2713:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2714:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2715:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2716:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Free all dynamic memory. */
2717:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xReceivedStringAllocated == pdTRUE )
2718:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2719:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         vPortFree( pcReceivedString );
2720:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2721:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2722:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSocketOpen == pdTRUE )
2723:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2724:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         ( void ) prvCloseHelper( xTaskSocket, &xSocketOpen );
2725:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2726:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2727:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxTcptestEchoClientsTaskParams->xResult = xResult;
2728:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Don't wait, just flag it reached that point. */
2730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEventGroupSync( xSyncEventGroup, /* The event group used for the rendezvous. */
2731:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                      ( 1 << pxTcptestEchoClientsTaskParams->usTaskTag ),
2732:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                      tcptestECHO_CLIENT_EVENT_MASK,
2733:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                      tcptestECHO_TEST_SYNC_TIMEOUT_TICKS );
2734:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2735:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2736:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     vTaskDelete( NULL ); /* Delete this task. */
2737:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2738:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2739:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2740:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2741:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvNonBlockingConnect( void )
2742:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2743:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
2744:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulDummy = 1;
2745:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2746:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xSocket = prvTcpSocketHelper( &xSocketOpen );
2747:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
2748:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2749:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_SetSockOpt( xSocket,
2750:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
2751:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SO_NONBLOCK,
2752:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   &ulDummy,
2753:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   sizeof( uint32_t ) );
2754:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2755:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Nonblocking connect is not supported, setting the option before connecting should return an 
2756:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Port does not support nonblocking 
2757:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2758:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Test teardown will close the socket. */
2759:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2760:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2761:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_NonBlockingConnect )
2762:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2763:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2764:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2765:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvNonBlockingConnect();
2766:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2767:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2768:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2769:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2770:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** static void prvTwoSecureConnections( void )
2771:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2772:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
2773:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
2774:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulIndex;
2775:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile Socket_t xSocketAWS;
2776:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSocketOpenAWS = pdFALSE;
2777:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile Socket_t xSocketSecServer;
2778:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSocketOpenSecServer = pdFALSE;
2779:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2780:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     static const char cMessageAWS[] = "Message to AWS!  This message should not be sent to the secu
2781:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     static const char cMessageSecServer[] = "Message to Secure Server!  This message should not be 
2782:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2783:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
2784:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2785:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Create 2 sockets- one which will connect to AWS Broker, one which will connect to secure
2786:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocketAWS, eAwsBroker, xReceiveTimeOut, xSendTimeOut
2788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect to AWS Bro
2789:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2790:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocketSecServer, eSecure, xReceiveTimeOut, xSendTime
2791:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect to secure 
2792:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2793:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Send message 1x to AWS Broker, 2x to Secure Echo Server, alternating. */
2794:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketSecServer, ( uint8_t * ) cMessageSecServer, sizeof( cMessag
2795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to secure server failed." );
2796:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketAWS, ( uint8_t * ) cMessageAWS, sizeof( cMessageAWS ) );
2797:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to AWS failed." );
2798:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketSecServer, ( uint8_t * ) cMessageSecServer, sizeof( cMessag
2799:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to secure server failed." );
2800:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2801:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Receive from secure echo server 1x. */
2802:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvRecvHelper( xSocketSecServer, pucRxBuffer, sizeof( cMessageSecServer ) );
2803:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Received incorrect number of bytes from
2804:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2805:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Verify the response is correct. */
2806:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( ulIndex = 0; ulIndex < sizeof( cMessageSecServer ); ulIndex++ )
2807:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2808:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( pucRxBuffer[ ulIndex ] != cMessageSecServer[ ulIndex ] )
2809:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2810:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = pdFAIL;
2811:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2812:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2813:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2814:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_MESSAGE( pdPASS, xResult, "Received incorrect message from secure server.
2815:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2816:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* There is no echo from the AWS broker, but let's make sure we don't see anything unexpect
2817:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocketAWS, pucRxBuffer, sizeof( cMessageAWS ), 0 /* flags. */ );
2818:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2819:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( ( xResult != 0 ) && ( xResult != SOCKETS_EWOULDBLOCK ) ) /* TS-2390 */
2820:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2821:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_FAIL_MESSAGE( "Received bytes when there should be none to receive." );
2822:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2823:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2824:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Receive the second message from the secure echo server. */
2825:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvRecvHelper( xSocketSecServer, pucRxBuffer, sizeof( cMessageSecServer ) );
2826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Received incorrect number of bytes from
2827:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2828:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         for( ulIndex = 0; ulIndex < sizeof( cMessageSecServer ); ulIndex++ )
2829:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2830:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             if( pucRxBuffer[ ulIndex ] != cMessageSecServer[ ulIndex ] )
2831:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
2832:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 xResult = pdFAIL;
2833:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
2834:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2836:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_MESSAGE( pdPASS, xResult, "Received incorrect message from secure server.
2837:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2838:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Shutdown both sockets. */
2839:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocketAWS );
2840:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to shutdown socket."
2841:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocketSecServer );
2842:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to shutdown socket."
2843:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2844:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2845:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Close both sockets. */
2846:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSocketOpenAWS == pdTRUE )
2847:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2848:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( TEST_PROTECT() )
2849:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2850:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvCloseHelper( xSocketAWS, &xSocketOpenAWS );
2851:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" 
2852:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2853:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2854:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2855:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( xSocketOpenSecServer == pdTRUE )
2856:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2857:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         if( TEST_PROTECT() )
2858:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
2859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvCloseHelper( xSocketSecServer, &xSocketOpenSecServer );
2860:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" 
2861:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
2862:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2863:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2864:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2865:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_TwoSecureConnections )
2866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
2867:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2868:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2869:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     prvTwoSecureConnections();
2870:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
2871:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2872:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2873:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_htons_HappyCase )
2874:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 108              		.loc 1 2874 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              	.LVL4:
 113 0000 07402DE9 		push	{r0, r1, r2, lr}
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 14, -4
2875:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint16_t usNetworkOrderValue;
2876:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2877:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2878:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2879:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* Convert the host order value to network order
2880:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****      * value. */
2881:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     usNetworkOrderValue = SOCKETS_htons( 0x1234 );
2882:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2883:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #if defined( socketsconfigBYTE_ORDER ) && ( socketsconfigBYTE_ORDER == pdLITTLE_ENDIAN )
2884:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2885:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* If the platform we are running on, is little
2886:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * endian, bytes must have been swapped. */
2887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT16_MESSAGE( 0x3412, usNetworkOrderValue, "SOCKETS_htons returned incor
 116              		.loc 1 2887 0
 117 0004 1230A0E3 		mov	r3, #18
 118 0008 121403E3 		movw	r1, #13330
 119 000c 00308DE5 		str	r3, [sp]
 120 0010 0100A0E1 		mov	r0, r1
 121 0014 473B00E3 		movw	r3, #2887
 122 0018 08209FE5 		ldr	r2, .L10
 123 001c FEFFFFEB 		bl	UnityAssertEqualNumber
 124              	.LVL5:
2888:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #else
2889:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2890:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* If the platform we are running on, is big
2891:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * endian, the output value must be same as
2892:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * the input value. */
2893:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT16_MESSAGE( 0x1234, usNetworkOrderValue, "SOCKETS_htons returned incor
2894:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif
2895:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2896:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s complete.\r\n", __FUNCTION__ ) );
2897:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 125              		.loc 1 2897 0
 126 0020 0CD08DE2 		add	sp, sp, #12
 127              		.cfi_def_cfa_offset 4
 128              		@ sp needed
 129 0024 04F09DE4 		ldr	pc, [sp], #4
 130              	.L11:
 131              		.align	2
 132              	.L10:
 133 0028 00000000 		.word	.LC4
 134              		.cfi_endproc
 135              	.LFE143:
 137              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_,"ax",%progbits
 138              		.align	2
 139              		.global	TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_
 140              		.syntax unified
 141              		.arm
 142              		.fpu neon
 144              	TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_:
 145              	.LFB145:
2898:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2899:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SOCKETS_inet_addr_quick_HappyCase )
2901:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 146              		.loc 1 2901 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL6:
 151 0000 07402DE9 		push	{r0, r1, r2, lr}
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 14, -4
2902:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulPackedIpAddress;
2903:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2904:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2905:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2906:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     ulPackedIpAddress = SOCKETS_inet_addr_quick( 192, 168, 2, 6 );
2907:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2908:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #if defined( socketsconfigBYTE_ORDER ) && ( socketsconfigBYTE_ORDER == pdLITTLE_ENDIAN )
2909:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2910:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* The expected return value of SOCKETS_inet_addr_quick
2911:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * on a little endian platform must be same as the correct
2912:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * hand calculated value. */
2913:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( 0x0602A8C0, ulPackedIpAddress, "SOCKETS_inet_addr_quick re
 154              		.loc 1 2913 0
 155 0004 1430A0E3 		mov	r3, #20
 156 0008 18109FE5 		ldr	r1, .L14
 157 000c 00308DE5 		str	r3, [sp]
 158 0010 613B00E3 		movw	r3, #2913
 159 0014 10209FE5 		ldr	r2, .L14+4
 160 0018 0100A0E1 		mov	r0, r1
 161 001c FEFFFFEB 		bl	UnityAssertEqualNumber
 162              	.LVL7:
2914:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #else
2915:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2916:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* The expected return value of SOCKETS_inet_addr_quick
2917:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * on a big endian platform must be same as the correct
2918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****          * hand calculated value. */
2919:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( 0xC0A80206, ulPackedIpAddress, "SOCKETS_inet_addr_quick re
2920:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif
2921:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2922:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "%s complete.\r\n", __FUNCTION__ ) );
2923:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 163              		.loc 1 2923 0
 164 0020 0CD08DE2 		add	sp, sp, #12
 165              		.cfi_def_cfa_offset 4
 166              		@ sp needed
 167 0024 04F09DE4 		ldr	pc, [sp], #4
 168              	.L15:
 169              		.align	2
 170              	.L14:
 171 0028 C0A80206 		.word	100837568
 172 002c 00000000 		.word	.LC5
 173              		.cfi_endproc
 174              	.LFE145:
 176              		.section	.text.prvCheckTimeout,"ax",%progbits
 177              		.align	2
 178              		.syntax unified
 179              		.arm
 180              		.fpu neon
 182              	prvCheckTimeout:
 183              	.LFB17:
 742:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdPASS;
 184              		.loc 1 742 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL8:
 189 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 190              		.cfi_def_cfa_offset 24
 191              		.cfi_offset 4, -24
 192              		.cfi_offset 5, -20
 193              		.cfi_offset 6, -16
 194              		.cfi_offset 7, -12
 195              		.cfi_offset 8, -8
 196              		.cfi_offset 14, -4
 748:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 197              		.loc 1 748 0
 198 0004 007041E0 		sub	r7, r1, r0
 199 0008 020057E1 		cmp	r7, r2
 742:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdPASS;
 200              		.loc 1 742 0
 201 000c 0050A0E1 		mov	r5, r0
 202 0010 0160A0E1 		mov	r6, r1
 203 0014 0240A0E1 		mov	r4, r2
 743:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 204              		.loc 1 743 0
 205 0018 0100A0A3 		movge	r0, #1
 206              	.LVL9:
 748:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 207              		.loc 1 748 0
 208 001c 050000AA 		bge	.L17
 209              	.LVL10:
 751:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 210              		.loc 1 751 0
 211 0020 0230A0E1 		mov	r3, r2
 212 0024 34009FE5 		ldr	r0, .L21
 213 0028 0120A0E1 		mov	r2, r1
 214              	.LVL11:
 215 002c 0510A0E1 		mov	r1, r5
 216              	.LVL12:
 217 0030 FEFFFFEB 		bl	vLoggingPrintf
 218              	.LVL13:
 750:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "Start Time: %d, End Time: %d, Timeout: %d \n", xStartTime, xEndTim
 219              		.loc 1 750 0
 220 0034 0000A0E3 		mov	r0, #0
 221              	.LVL14:
 222              	.L17:
 756:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 223              		.loc 1 756 0
 224 0038 143084E2 		add	r3, r4, #20
 225 003c 030057E1 		cmp	r7, r3
 226 0040 F081BD98 		popls	{r4, r5, r6, r7, r8, pc}
 227              	.LVL15:
 759:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 228              		.loc 1 759 0
 229 0044 0430A0E1 		mov	r3, r4
 230 0048 0620A0E1 		mov	r2, r6
 231 004c 0510A0E1 		mov	r1, r5
 232 0050 08009FE5 		ldr	r0, .L21
 233 0054 FEFFFFEB 		bl	vLoggingPrintf
 234              	.LVL16:
 758:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         tcptestFAILUREPRINTF( ( "Start Time: %d, End Time: %d, Timeout: %d \n", xStartTime, xEndTim
 235              		.loc 1 758 0
 236 0058 0000A0E3 		mov	r0, #0
 763:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 237              		.loc 1 763 0
 238 005c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 239              	.L22:
 240              		.align	2
 241              	.L21:
 242 0060 00000000 		.word	.LC6
 243              		.cfi_endproc
 244              	.LFE17:
 246              		.section	.text.prvSendHelper,"ax",%progbits
 247              		.align	2
 248              		.syntax unified
 249              		.arm
 250              		.fpu neon
 252              	prvSendHelper:
 253              	.LFB10:
 521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytesSentTotal;
 254              		.loc 1 521 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              	.LVL17:
 259 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 260              		.cfi_def_cfa_offset 24
 261              		.cfi_offset 4, -24
 262              		.cfi_offset 5, -20
 263              		.cfi_offset 6, -16
 264              		.cfi_offset 7, -12
 265              		.cfi_offset 8, -8
 266              		.cfi_offset 14, -4
 521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytesSentTotal;
 267              		.loc 1 521 0
 268 0004 0060A0E1 		mov	r6, r0
 269 0008 0170A0E1 		mov	r7, r1
 270 000c 0250A0E1 		mov	r5, r2
 527:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 271              		.loc 1 527 0
 272 0010 0040A0E3 		mov	r4, #0
 273              	.LVL18:
 274              	.L24:
 529:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 275              		.loc 1 529 0
 276 0014 050054E1 		cmp	r4, r5
 277 0018 0200003A 		bcc	.L27
 546:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 278              		.loc 1 546 0
 279 001c 0100A003 		moveq	r0, #1
 280 0020 0000A013 		movne	r0, #0
 281              	.LVL19:
 552:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 282              		.loc 1 552 0
 283 0024 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 284              	.LVL20:
 285              	.L27:
 531:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   &pucTxBuffer[ xNumBytesSentTotal ], /* The data being sent. */
 286              		.loc 1 531 0
 287 0028 041087E0 		add	r1, r7, r4
 288 002c 0030A0E3 		mov	r3, #0
 289 0030 042045E0 		sub	r2, r5, r4
 290 0034 0600A0E1 		mov	r0, r6
 291 0038 FEFFFFEB 		bl	SOCKETS_Send
 292              	.LVL21:
 536:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 293              		.loc 1 536 0
 294 003c 001050E2 		subs	r1, r0, #0
 295 0040 030000CA 		bgt	.L25
 296              	.LVL22:
 539:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             break;
 297              		.loc 1 539 0
 298 0044 10009FE5 		ldr	r0, .L29
 299              	.LVL23:
 300 0048 FEFFFFEB 		bl	vLoggingPrintf
 301              	.LVL24:
 548:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 302              		.loc 1 548 0
 303 004c 0000A0E3 		mov	r0, #0
 304 0050 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 305              	.LVL25:
 306              	.L25:
 543:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 307              		.loc 1 543 0
 308 0054 014084E0 		add	r4, r4, r1
 309              	.LVL26:
 310 0058 EDFFFFEA 		b	.L24
 311              	.L30:
 312              		.align	2
 313              	.L29:
 314 005c 00000000 		.word	.LC7
 315              		.cfi_endproc
 316              	.LFE10:
 318              		.section	.text.prvTcpSocketHelper,"ax",%progbits
 319              		.align	2
 320              		.syntax unified
 321              		.arm
 322              		.fpu neon
 324              	prvTcpSocketHelper:
 325              	.LFB3:
 237:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     Socket_t xSocket;
 326              		.loc 1 237 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              	.LVL27:
 331 0000 10402DE9 		push	{r4, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 4, -8
 334              		.cfi_offset 14, -4
 241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_SOCK_STREAM,
 335              		.loc 1 241 0
 336 0004 0620A0E3 		mov	r2, #6
 237:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     Socket_t xSocket;
 337              		.loc 1 237 0
 338 0008 0040A0E1 		mov	r4, r0
 241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_SOCK_STREAM,
 339              		.loc 1 241 0
 340 000c 0110A0E3 		mov	r1, #1
 341 0010 0200A0E3 		mov	r0, #2
 342              	.LVL28:
 343 0014 FEFFFFEB 		bl	SOCKETS_Socket
 344              	.LVL29:
 245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 345              		.loc 1 245 0
 346 0018 010070E3 		cmn	r0, #1
 248:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 347              		.loc 1 248 0
 348 001c 0130A013 		movne	r3, #1
 349 0020 00308415 		strne	r3, [r4]
 252:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 350              		.loc 1 252 0
 351 0024 1080BDE8 		pop	{r4, pc}
 352              		.cfi_endproc
 353              	.LFE3:
 355              		.section	.text.prvSetSockOptHelper,"ax",%progbits
 356              		.align	2
 357              		.syntax unified
 358              		.arm
 359              		.fpu neon
 361              	prvSetSockOptHelper:
 362              	.LFB8:
 396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 363              		.loc 1 396 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 8
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              	.LVL30:
 368 0000 7F402DE9 		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 369              		.cfi_def_cfa_offset 32
 370              		.cfi_offset 4, -16
 371              		.cfi_offset 5, -12
 372              		.cfi_offset 6, -8
 373              		.cfi_offset 14, -4
 401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 374              		.loc 1 401 0
 375 0004 0450A0E3 		mov	r5, #4
 396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 376              		.loc 1 396 0
 377 0008 08208DE5 		str	r2, [sp, #8]
 401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 378              		.loc 1 401 0
 379 000c 0020A0E3 		mov	r2, #0
 380              	.LVL31:
 381 0010 0C308DE2 		add	r3, sp, #12
 396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 382              		.loc 1 396 0
 383 0014 0060A0E1 		mov	r6, r0
 384 0018 0C108DE5 		str	r1, [sp, #12]
 401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 385              		.loc 1 401 0
 386 001c 0210A0E1 		mov	r1, r2
 387              	.LVL32:
 388 0020 00508DE5 		str	r5, [sp]
 389 0024 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 390              	.LVL33:
 407:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 391              		.loc 1 407 0
 392 0028 004050E2 		subs	r4, r0, #0
 393 002c 0D00001A 		bne	.L38
 409:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 394              		.loc 1 409 0
 395 0030 0410A0E1 		mov	r1, r4
 396 0034 00508DE5 		str	r5, [sp]
 397 0038 08308DE2 		add	r3, sp, #8
 398 003c 0120A0E3 		mov	r2, #1
 399 0040 0600A0E1 		mov	r0, r6
 400              	.LVL34:
 401 0044 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 402              	.LVL35:
 415:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 403              		.loc 1 415 0
 404 0048 004050E2 		subs	r4, r0, #0
 405 004c 0200000A 		beq	.L37
 417:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 406              		.loc 1 417 0
 407 0050 1C109FE5 		ldr	r1, .L45
 408 0054 1C009FE5 		ldr	r0, .L45+4
 409              	.LVL36:
 410              	.L44:
 422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 411              		.loc 1 422 0
 412 0058 FEFFFFEB 		bl	vLoggingPrintf
 413              	.LVL37:
 414              	.L37:
 426:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 415              		.loc 1 426 0
 416 005c 0400A0E1 		mov	r0, r4
 417 0060 10D08DE2 		add	sp, sp, #16
 418              		.cfi_remember_state
 419              		.cfi_def_cfa_offset 16
 420              		@ sp needed
 421 0064 7080BDE8 		pop	{r4, r5, r6, pc}
 422              	.LVL38:
 423              	.L38:
 424              		.cfi_restore_state
 422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 425              		.loc 1 422 0
 426 0068 04109FE5 		ldr	r1, .L45
 427 006c 08009FE5 		ldr	r0, .L45+8
 428              	.LVL39:
 429 0070 F8FFFFEA 		b	.L44
 430              	.L46:
 431              		.align	2
 432              	.L45:
 433 0074 00000000 		.word	.LANCHOR2
 434 0078 00000000 		.word	.LC8
 435 007c 2F000000 		.word	.LC9
 436              		.cfi_endproc
 437              	.LFE8:
 439              		.section	.text.prvAwsIotBrokerConnectHelper,"ax",%progbits
 440              		.align	2
 441              		.syntax unified
 442              		.arm
 443              		.fpu neon
 445              	prvAwsIotBrokerConnectHelper:
 446              	.LFB6:
 323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = SOCKETS_SOCKET_ERROR;
 447              		.loc 1 323 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              	.LVL40:
 452 0000 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
 453              		.cfi_def_cfa_offset 24
 454              		.cfi_offset 4, -12
 455              		.cfi_offset 5, -8
 456              		.cfi_offset 14, -4
 323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = SOCKETS_SOCKET_ERROR;
 457              		.loc 1 323 0
 458 0004 0050A0E1 		mov	r5, r0
 327:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 459              		.loc 1 327 0
 460 0008 60009FE5 		ldr	r0, .L54
 461              	.LVL41:
 323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = SOCKETS_SOCKET_ERROR;
 462              		.loc 1 323 0
 463 000c 0140A0E1 		mov	r4, r1
 327:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 464              		.loc 1 327 0
 465 0010 FEFFFFEB 		bl	SOCKETS_GetHostByName
 466              	.LVL42:
 329:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 467              		.loc 1 329 0
 468 0014 000050E3 		cmp	r0, #0
 327:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 469              		.loc 1 327 0
 470 0018 040084E5 		str	r0, [r4, #4]
 324:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 471              		.loc 1 324 0
 472 001c 0040E003 		mvneq	r4, #0
 473              	.LVL43:
 329:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 474              		.loc 1 329 0
 475 0020 0F00000A 		beq	.L47
 331:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 476              		.loc 1 331 0
 477 0024 48309FE5 		ldr	r3, .L54+4
 332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 478              		.loc 1 332 0
 479 0028 0820A0E3 		mov	r2, #8
 480 002c 0020C4E5 		strb	r2, [r4]
 336:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 481              		.loc 1 336 0
 482 0030 0500A0E1 		mov	r0, r5
 331:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 483              		.loc 1 331 0
 484 0034 B230C4E1 		strh	r3, [r4, #2]	@ movhi
 333:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 485              		.loc 1 333 0
 486 0038 0230A0E3 		mov	r3, #2
 487 003c 0130C4E5 		strb	r3, [r4, #1]
 336:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 488              		.loc 1 336 0
 489 0040 0030A0E3 		mov	r3, #0
 490 0044 00308DE5 		str	r3, [sp]
 491 0048 0310A0E1 		mov	r1, r3
 492 004c FEFFFFEB 		bl	SOCKETS_SetSockOpt
 493              	.LVL44:
 342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 494              		.loc 1 342 0
 495 0050 004050E2 		subs	r4, r0, #0
 496 0054 0200000A 		beq	.L47
 344:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 497              		.loc 1 344 0
 498 0058 18109FE5 		ldr	r1, .L54+8
 499 005c 18009FE5 		ldr	r0, .L54+12
 500              	.LVL45:
 501 0060 FEFFFFEB 		bl	vLoggingPrintf
 502              	.LVL46:
 503              	.L47:
 349:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 504              		.loc 1 349 0
 505 0064 0400A0E1 		mov	r0, r4
 506 0068 0CD08DE2 		add	sp, sp, #12
 507              		.cfi_def_cfa_offset 12
 508              		@ sp needed
 509 006c 3080BDE8 		pop	{r4, r5, pc}
 510              	.LVL47:
 511              	.L55:
 512              		.align	2
 513              	.L54:
 514 0070 00000000 		.word	.LANCHOR3
 515 0074 22B3FFFF 		.word	-19678
 516 0078 00000000 		.word	.LANCHOR4
 517 007c 00000000 		.word	.LC10
 518              		.cfi_endproc
 519              	.LFE6:
 521              		.section	.text.prvRecvHelper,"ax",%progbits
 522              		.align	2
 523              		.syntax unified
 524              		.arm
 525              		.fpu neon
 527              	prvRecvHelper:
 528              	.LFB11:
 559:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytesRecvTotal;
 529              		.loc 1 559 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              	.LVL48:
 534 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 535              		.cfi_def_cfa_offset 24
 536              		.cfi_offset 4, -24
 537              		.cfi_offset 5, -20
 538              		.cfi_offset 6, -16
 539              		.cfi_offset 7, -12
 540              		.cfi_offset 8, -8
 541              		.cfi_offset 14, -4
 559:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xNumBytesRecvTotal;
 542              		.loc 1 559 0
 543 0004 0060A0E1 		mov	r6, r0
 544 0008 0170A0E1 		mov	r7, r1
 545 000c 0250A0E1 		mov	r5, r2
 565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 546              		.loc 1 565 0
 547 0010 0040A0E3 		mov	r4, #0
 548              	.LVL49:
 549              	.L57:
 567:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 550              		.loc 1 567 0
 551 0014 050054E1 		cmp	r4, r5
 552 0018 0200003A 		bcc	.L61
 590:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 553              		.loc 1 590 0
 554 001c 0100A003 		moveq	r0, #1
 555 0020 0000A013 		movne	r0, #0
 556              	.LVL50:
 595:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 557              		.loc 1 595 0
 558 0024 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 559              	.LVL51:
 560              	.L61:
 569:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   &pucRxBuffer[ xNumBytesRecvTotal ],
 561              		.loc 1 569 0
 562 0028 041087E0 		add	r1, r7, r4
 563 002c 0030A0E3 		mov	r3, #0
 564 0030 042045E0 		sub	r2, r5, r4
 565 0034 0600A0E1 		mov	r0, r6
 566 0038 FEFFFFEB 		bl	SOCKETS_Recv
 567              	.LVL52:
 574:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 568              		.loc 1 574 0
 569 003c 001050E2 		subs	r1, r0, #0
 570 0040 0300001A 		bne	.L58
 576:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = pdFAIL;
 571              		.loc 1 576 0
 572 0044 20009FE5 		ldr	r0, .L64
 573              	.LVL53:
 574 0048 FEFFFFEB 		bl	vLoggingPrintf
 575              	.LVL54:
 576              	.L59:
 592:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 577              		.loc 1 592 0
 578 004c 0000A0E3 		mov	r0, #0
 596:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 579              		.loc 1 596 0
 580 0050 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 581              	.LVL55:
 582              	.L58:
 580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 583              		.loc 1 580 0
 584 0054 020000AA 		bge	.L60
 582:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = pdFAIL;
 585              		.loc 1 582 0
 586 0058 10009FE5 		ldr	r0, .L64+4
 587              	.LVL56:
 588 005c FEFFFFEB 		bl	vLoggingPrintf
 589              	.LVL57:
 584:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 590              		.loc 1 584 0
 591 0060 F9FFFFEA 		b	.L59
 592              	.LVL58:
 593              	.L60:
 587:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 594              		.loc 1 587 0
 595 0064 014084E0 		add	r4, r4, r1
 596              	.LVL59:
 597 0068 E9FFFFEA 		b	.L57
 598              	.L65:
 599              		.align	2
 600              	.L64:
 601 006c 00000000 		.word	.LC11
 602 0070 28000000 		.word	.LC12
 603              		.cfi_endproc
 604              	.LFE11:
 606              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_,"ax",%progbits
 607              		.align	2
 608              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_
 609              		.syntax unified
 610              		.arm
 611              		.fpu neon
 613              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_:
 614              	.LFB123:
2257:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 615              		.loc 1 2257 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 8
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL60:
 620 0000 7F402DE9 		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 621              		.cfi_def_cfa_offset 32
 622              		.cfi_offset 4, -16
 623              		.cfi_offset 5, -12
 624              		.cfi_offset 6, -8
 625              		.cfi_offset 14, -4
 626              	.LBB108:
 627              	.LBB109:
2223:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 628              		.loc 1 2223 0
 629 0004 24419FE5 		ldr	r4, .L70
 630 0008 24019FE5 		ldr	r0, .L70+4
 631 000c FEFFFFEB 		bl	prvTcpSocketHelper
 632              	.LVL61:
 633 0010 000084E5 		str	r0, [r4]
2224:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvSetSockOptHelper( xSocket, xReceiveTimeOut, xSendTimeOut );
 634              		.loc 1 2224 0
 635 0014 003094E5 		ldr	r3, [r4]
 636 0018 010073E3 		cmn	r3, #1
 637 001c 0200001A 		bne	.L67
 638 0020 8B1EA0E3 		mov	r1, #2224
 639 0024 0C019FE5 		ldr	r0, .L70+8
 640 0028 FEFFFFEB 		bl	UnityFail
 641              	.LVL62:
 642              	.L67:
2225:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 643              		.loc 1 2225 0
 644 002c 202E04E3 		movw	r2, #20000
2226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 645              		.loc 1 2226 0
 646 0030 1460A0E3 		mov	r6, #20
2225:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 647              		.loc 1 2225 0
 648 0034 0210A0E1 		mov	r1, r2
 649 0038 000094E5 		ldr	r0, [r4]
 650 003c FEFFFFEB 		bl	prvSetSockOptHelper
 651              	.LVL63:
2229:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 652              		.loc 1 2229 0
 653 0040 0050A0E3 		mov	r5, #0
2226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 654              		.loc 1 2226 0
 655 0044 0010A0E1 		mov	r1, r0
 656 0048 B23800E3 		movw	r3, #2226
 657 004c E8209FE5 		ldr	r2, .L70+12
 658 0050 0000A0E3 		mov	r0, #0
 659              	.LVL64:
 660 0054 00608DE5 		str	r6, [sp]
 661 0058 FEFFFFEB 		bl	UnityAssertEqualNumber
 662              	.LVL65:
2229:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 663              		.loc 1 2229 0
 664 005c 0530A0E1 		mov	r3, r5
 665 0060 0820A0E3 		mov	r2, #8
 666 0064 0510A0E1 		mov	r1, r5
 667 0068 000094E5 		ldr	r0, [r4]
 668 006c 00508DE5 		str	r5, [sp]
 669 0070 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 670              	.LVL66:
2236:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 671              		.loc 1 2236 0
 672 0074 1C30A0E3 		mov	r3, #28
 673 0078 0720A0E3 		mov	r2, #7
 674 007c 00308DE5 		str	r3, [sp]
 675 0080 0510A0E1 		mov	r1, r5
 676 0084 B4309FE5 		ldr	r3, .L70+16
 677 0088 000094E5 		ldr	r0, [r4]
 678 008c FEFFFFEB 		bl	SOCKETS_SetSockOpt
 679              	.LVL67:
2242:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 680              		.loc 1 2242 0
 681 0090 C23800E3 		movw	r3, #2242
 682 0094 0010A0E1 		mov	r1, r0
 683 0098 A4209FE5 		ldr	r2, .L70+20
 684 009c 0500A0E1 		mov	r0, r5
 685              	.LVL68:
 686 00a0 00608DE5 		str	r6, [sp]
 687 00a4 FEFFFFEB 		bl	UnityAssertEqualNumber
 688              	.LVL69:
2245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( 0, xAwsIotBrokerAddress.ulAddress, "DNS look up failed." );
 689              		.loc 1 2245 0
 690 00a8 98009FE5 		ldr	r0, .L70+24
 691 00ac FEFFFFEB 		bl	SOCKETS_GetHostByName
 692              	.LVL70:
2246:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xAwsIotBrokerAddress.usPort = SOCKETS_htons( clientcredentialMQTT_BROKER_PORT );
 693              		.loc 1 2246 0
 694 00b0 050050E1 		cmp	r0, r5
2245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( 0, xAwsIotBrokerAddress.ulAddress, "DNS look up failed." );
 695              		.loc 1 2245 0
 696 00b4 0C008DE5 		str	r0, [sp, #12]
2246:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xAwsIotBrokerAddress.usPort = SOCKETS_htons( clientcredentialMQTT_BROKER_PORT );
 697              		.loc 1 2246 0
 698 00b8 0200001A 		bne	.L68
 699 00bc C61800E3 		movw	r1, #2246
 700 00c0 84009FE5 		ldr	r0, .L70+28
 701 00c4 FEFFFFEB 		bl	UnityFail
 702              	.LVL71:
 703              	.L68:
2247:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 704              		.loc 1 2247 0
 705 00c8 80309FE5 		ldr	r3, .L70+32
2249:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
 706              		.loc 1 2249 0
 707 00cc 0820A0E3 		mov	r2, #8
 708 00d0 02108DE0 		add	r1, sp, r2
2250:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 709              		.loc 1 2250 0
 710 00d4 1450A0E3 		mov	r5, #20
2249:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
 711              		.loc 1 2249 0
 712 00d8 000094E5 		ldr	r0, [r4]
2247:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 713              		.loc 1 2247 0
 714 00dc BA30CDE1 		strh	r3, [sp, #10]	@ movhi
2249:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
 715              		.loc 1 2249 0
 716 00e0 FEFFFFEB 		bl	SOCKETS_Connect
 717              	.LVL72:
2250:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 718              		.loc 1 2250 0
 719 00e4 CA3800E3 		movw	r3, #2250
 720 00e8 0010A0E1 		mov	r1, r0
 721 00ec 60209FE5 		ldr	r2, .L70+36
 722 00f0 0000A0E3 		mov	r0, #0
 723              	.LVL73:
 724 00f4 00508DE5 		str	r5, [sp]
 725 00f8 FEFFFFEB 		bl	UnityAssertSmallerNumber
 726              	.LVL74:
2252:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 727              		.loc 1 2252 0
 728 00fc 000094E5 		ldr	r0, [r4]
 729              	.LVL75:
 730              	.LBB110:
 731              	.LBB111:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 732              		.loc 1 633 0
 733 0100 FEFFFFEB 		bl	SOCKETS_Close
 734              	.LVL76:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 735              		.loc 1 635 0
 736 0104 28309FE5 		ldr	r3, .L70+4
 737 0108 00C0A0E3 		mov	ip, #0
 738              	.LBE111:
 739              	.LBE110:
2253:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 740              		.loc 1 2253 0
 741 010c 0010A0E1 		mov	r1, r0
 742 0110 40209FE5 		ldr	r2, .L70+40
 743 0114 0C00A0E1 		mov	r0, ip
 744              	.LVL77:
 745              	.LBB113:
 746              	.LBB112:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 747              		.loc 1 635 0
 748 0118 00C083E5 		str	ip, [r3]
 749              	.LVL78:
 750              	.LBE112:
 751              	.LBE113:
2253:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 752              		.loc 1 2253 0
 753 011c CD3800E3 		movw	r3, #2253
 754 0120 00508DE5 		str	r5, [sp]
 755 0124 FEFFFFEB 		bl	UnityAssertEqualNumber
 756              	.LVL79:
 757              	.LBE109:
 758              	.LBE108:
2261:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 759              		.loc 1 2261 0
 760 0128 10D08DE2 		add	sp, sp, #16
 761              		.cfi_def_cfa_offset 16
 762              		@ sp needed
 763 012c 7080BDE8 		pop	{r4, r5, r6, pc}
 764              	.L71:
 765              		.align	2
 766              	.L70:
 767 0130 00000000 		.word	.LANCHOR1
 768 0134 00000000 		.word	.LANCHOR0
 769 0138 00000000 		.word	.LC13
 770 013c 17000000 		.word	.LC14
 771 0140 00000000 		.word	.LANCHOR5
 772 0144 2A000000 		.word	.LC15
 773 0148 00000000 		.word	.LANCHOR3
 774 014c 4B000000 		.word	.LC16
 775 0150 22B3FFFF 		.word	-19678
 776 0154 5F000000 		.word	.LC17
 777 0158 92000000 		.word	.LC18
 778              		.cfi_endproc
 779              	.LFE123:
 781              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_,"ax",%progbits
 782              		.align	2
 783              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_
 784              		.syntax unified
 785              		.arm
 786              		.fpu neon
 788              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_:
 789              	.LFB138:
2762:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 790              		.loc 1 2762 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL80:
 795 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 796              		.cfi_def_cfa_offset 24
 797              		.cfi_offset 4, -8
 798              		.cfi_offset 14, -4
 799              	.LBB116:
 800              	.LBB117:
2744:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 801              		.loc 1 2744 0
 802 0004 0130A0E3 		mov	r3, #1
2746:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 803              		.loc 1 2746 0
 804 0008 68009FE5 		ldr	r0, .L75
2744:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 805              		.loc 1 2744 0
 806 000c 0C308DE5 		str	r3, [sp, #12]
2746:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 807              		.loc 1 2746 0
 808 0010 FEFFFFEB 		bl	prvTcpSocketHelper
 809              	.LVL81:
 810 0014 60309FE5 		ldr	r3, .L75+4
 811 0018 000083E5 		str	r0, [r3]
 812 001c 0340A0E1 		mov	r4, r3
2747:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 813              		.loc 1 2747 0
 814 0020 002093E5 		ldr	r2, [r3]
 815 0024 010072E3 		cmn	r2, #1
 816 0028 0200001A 		bne	.L73
 817 002c BB1A00E3 		movw	r1, #2747
 818 0030 48009FE5 		ldr	r0, .L75+8
 819 0034 FEFFFFEB 		bl	UnityFail
 820              	.LVL82:
 821              	.L73:
2749:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 822              		.loc 1 2749 0
 823 0038 0430A0E3 		mov	r3, #4
 824 003c 000094E5 		ldr	r0, [r4]
 825 0040 0920A0E3 		mov	r2, #9
 826 0044 00308DE5 		str	r3, [sp]
 827 0048 0010A0E3 		mov	r1, #0
 828 004c 0C308DE2 		add	r3, sp, #12
 829 0050 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 830              	.LVL83:
2756:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 831              		.loc 1 2756 0
 832 0054 1430A0E3 		mov	r3, #20
 833 0058 0010A0E1 		mov	r1, r0
 834 005c 00308DE5 		str	r3, [sp]
 835 0060 0000A0E3 		mov	r0, #0
 836              	.LVL84:
 837 0064 C43A00E3 		movw	r3, #2756
 838 0068 14209FE5 		ldr	r2, .L75+12
 839 006c FEFFFFEB 		bl	UnityAssertSmallerNumber
 840              	.LVL85:
 841              	.LBE117:
 842              	.LBE116:
2766:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 843              		.loc 1 2766 0
 844 0070 10D08DE2 		add	sp, sp, #16
 845              		.cfi_def_cfa_offset 8
 846              		@ sp needed
 847 0074 1080BDE8 		pop	{r4, pc}
 848              	.L76:
 849              		.align	2
 850              	.L75:
 851 0078 00000000 		.word	.LANCHOR0
 852 007c 00000000 		.word	.LANCHOR1
 853 0080 00000000 		.word	.LC13
 854 0084 00000000 		.word	.LC19
 855              		.cfi_endproc
 856              	.LFE138:
 858              		.section	.text.prvCreateTxData,"ax",%progbits
 859              		.align	2
 860              		.syntax unified
 861              		.arm
 862              		.fpu neon
 864              	prvCreateTxData:
 865              	.LFB14:
 645:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xCharacter;
 866              		.loc 1 645 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870              	.LVL86:
 871 0000 73402DE9 		push	{r0, r1, r4, r5, r6, lr}
 872              		.cfi_def_cfa_offset 24
 873              		.cfi_offset 4, -16
 874              		.cfi_offset 5, -12
 875              		.cfi_offset 6, -8
 876              		.cfi_offset 14, -4
 645:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xCharacter;
 877              		.loc 1 645 0
 878 0004 0140A0E1 		mov	r4, r1
 879 0008 0260A0E1 		mov	r6, r2
 650:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 880              		.loc 1 650 0
 881 000c AA10A0E3 		mov	r1, #170
 882              	.LVL87:
 883 0010 7D2EA0E3 		mov	r2, #2000
 884              	.LVL88:
 645:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xCharacter;
 885              		.loc 1 645 0
 886 0014 0050A0E1 		mov	r5, r0
 650:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 887              		.loc 1 650 0
 888 0018 FEFFFFEB 		bl	memset
 889              	.LVL89:
 653:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 890              		.loc 1 653 0
 891 001c 190054E3 		cmp	r4, #25
 892 0020 0510A081 		movhi	r1, r5
 893 0024 04308580 		addhi	r3, r5, r4
 894 0028 3020A083 		movhi	r2, #48
 895 002c 0700008A 		bhi	.L80
 896              	.LVL90:
 897              	.L81:
 668:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 898              		.loc 1 668 0
 899 0030 00408DE5 		str	r4, [sp]
 900 0034 0630A0E1 		mov	r3, r6
 901 0038 30209FE5 		ldr	r2, .L85
 902 003c 0410A0E1 		mov	r1, r4
 903 0040 0500A0E1 		mov	r0, r5
 904 0044 FEFFFFEB 		bl	snprintf
 905              	.LVL91:
 669:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 906              		.loc 1 669 0
 907 0048 08D08DE2 		add	sp, sp, #8
 908              		.cfi_remember_state
 909              		.cfi_def_cfa_offset 16
 910              		@ sp needed
 911 004c 7080BDE8 		pop	{r4, r5, r6, pc}
 912              	.LVL92:
 913              	.L80:
 914              		.cfi_restore_state
 657:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             cChar++;
 915              		.loc 1 657 0
 916 0050 0120C1E4 		strb	r2, [r1], #1
 658:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 917              		.loc 1 658 0
 918 0054 012082E2 		add	r2, r2, #1
 919              	.LVL93:
 920 0058 7220EFE6 		uxtb	r2, r2
 921              	.LVL94:
 662:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 922              		.loc 1 662 0
 923 005c 7F0052E3 		cmp	r2, #127
 924 0060 3020A023 		movcs	r2, #48
 925              	.LVL95:
 655:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 926              		.loc 1 655 0
 927 0064 010053E1 		cmp	r3, r1
 928 0068 F8FFFF1A 		bne	.L80
 929 006c EFFFFFEA 		b	.L81
 930              	.L86:
 931              		.align	2
 932              	.L85:
 933 0070 00000000 		.word	.LC20
 934              		.cfi_endproc
 935              	.LFE14:
 937              		.section	.text.prvCheckRxTxBuffers,"ax",%progbits
 938              		.align	2
 939              		.syntax unified
 940              		.arm
 941              		.fpu neon
 943              	prvCheckRxTxBuffers:
 944              	.LFB15:
 676:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReturn;
 945              		.loc 1 676 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              	.LVL96:
 950 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 951              		.cfi_def_cfa_offset 32
 952              		.cfi_offset 4, -32
 953              		.cfi_offset 5, -28
 954              		.cfi_offset 6, -24
 955              		.cfi_offset 7, -20
 956              		.cfi_offset 8, -16
 957              		.cfi_offset 9, -12
 958              		.cfi_offset 10, -8
 959              		.cfi_offset 14, -4
 676:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReturn;
 960              		.loc 1 676 0
 961 0004 0170A0E1 		mov	r7, r1
 962 0008 0060A0E1 		mov	r6, r0
 963 000c 0210A0E1 		mov	r1, r2
 964              	.LVL97:
 683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 965              		.loc 1 683 0
 966 0010 0040A0E3 		mov	r4, #0
 967              	.LVL98:
 968              	.L88:
 683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 969              		.loc 1 683 0 is_stmt 0 discriminator 1
 970 0014 010054E1 		cmp	r4, r1
 971 0018 0800001A 		bne	.L90
 699:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 972              		.loc 1 699 0 is_stmt 1 discriminator 1
 973 001c 94809FE5 		ldr	r8, .L104
 974 0020 0450A0E1 		mov	r5, r4
 705:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 975              		.loc 1 705 0 discriminator 1
 976 0024 90909FE5 		ldr	r9, .L104+4
 977 0028 0100A0E3 		mov	r0, #1
 978              	.LVL99:
 979              	.L91:
 694:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 980              		.loc 1 694 0 discriminator 1
 981 002c 7D0E55E3 		cmp	r5, #2000
 982 0030 0E00003A 		bcc	.L94
 709:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 983              		.loc 1 709 0
 984 0034 010050E3 		cmp	r0, #1
 985 0038 F087BD08 		popeq	{r4, r5, r6, r7, r8, r9, r10, pc}
 986 003c 060000EA 		b	.L103
 987              	.LVL100:
 988              	.L90:
 685:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 989              		.loc 1 685 0
 990 0040 0420D6E7 		ldrb	r2, [r6, r4]	@ zero_extendqisi2
 991 0044 0430D7E7 		ldrb	r3, [r7, r4]	@ zero_extendqisi2
 992 0048 030052E1 		cmp	r2, r3
 993 004c 0500000A 		beq	.L89
 994              	.LVL101:
 688:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestASSERT( xReturn == pdPASS );
 995              		.loc 1 688 0
 996 0050 0420A0E1 		mov	r2, r4
 997 0054 64009FE5 		ldr	r0, .L104+8
 998              	.LVL102:
 999 0058 FEFFFFEB 		bl	vLoggingPrintf
 1000              	.LVL103:
 1001              	.L103:
 709:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1002              		.loc 1 709 0 discriminator 1
 1003 005c 0110A0E3 		mov	r1, #1
 1004 0060 5C009FE5 		ldr	r0, .L104+12
 1005 0064 FEFFFFEB 		bl	longjmp
 1006              	.LVL104:
 1007              	.L89:
 683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1008              		.loc 1 683 0 discriminator 2
 1009 0068 014084E2 		add	r4, r4, #1
 1010              	.LVL105:
 1011 006c E8FFFFEA 		b	.L88
 1012              	.LVL106:
 1013              	.L94:
 696:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1014              		.loc 1 696 0
 1015 0070 0530D7E7 		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1016 0074 FF0053E3 		cmp	r3, #255
 1017 0078 0400000A 		beq	.L92
 1018              	.LVL107:
 699:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1019              		.loc 1 699 0
 1020 007c 0800A0E1 		mov	r0, r8
 1021 0080 0520A0E1 		mov	r2, r5
 1022 0084 0410A0E1 		mov	r1, r4
 1023 0088 FEFFFFEB 		bl	vLoggingPrintf
 1024              	.LVL108:
 698:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Rx buffer padding modified byte. Message Length %d, Byte Index
 1025              		.loc 1 698 0
 1026 008c 0000A0E3 		mov	r0, #0
 1027              	.LVL109:
 1028              	.L92:
 702:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1029              		.loc 1 702 0
 1030 0090 0530D6E7 		ldrb	r3, [r6, r5]	@ zero_extendqisi2
 1031 0094 AA0053E3 		cmp	r3, #170
 1032 0098 0400000A 		beq	.L93
 1033              	.LVL110:
 705:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1034              		.loc 1 705 0
 1035 009c 0900A0E1 		mov	r0, r9
 1036 00a0 0520A0E1 		mov	r2, r5
 1037 00a4 0410A0E1 		mov	r1, r4
 1038 00a8 FEFFFFEB 		bl	vLoggingPrintf
 1039              	.LVL111:
 704:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Tx buffer padding modified. Message Length %d, Byte Index %d \
 1040              		.loc 1 704 0
 1041 00ac 0000A0E3 		mov	r0, #0
 1042              	.LVL112:
 1043              	.L93:
 694:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1044              		.loc 1 694 0 discriminator 2
 1045 00b0 015085E2 		add	r5, r5, #1
 1046              	.LVL113:
 1047 00b4 DCFFFFEA 		b	.L91
 1048              	.L105:
 1049              		.align	2
 1050              	.L104:
 1051 00b8 56000000 		.word	.LC22
 1052 00bc 9B000000 		.word	.LC23
 1053 00c0 00000000 		.word	.LC21
 1054 00c4 28000000 		.word	Unity+40
 1055              		.cfi_endproc
 1056              	.LFE15:
 1058              		.section	.text.prvConnect_InvalidAddressLength,"ax",%progbits
 1059              		.align	2
 1060              		.syntax unified
 1061              		.arm
 1062              		.fpu neon
 1064              	prvConnect_InvalidAddressLength:
 1065              	.LFB100:
1887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 1066              		.loc 1 1887 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 16
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              	.LVL114:
 1071 0000 10402DE9 		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075 0004 18D04DE2 		sub	sp, sp, #24
 1076              		.cfi_def_cfa_offset 32
1887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 1077              		.loc 1 1887 0
 1078 0008 08008DE5 		str	r0, [sp, #8]
1891:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1079              		.loc 1 1891 0
 1080 000c 10019FE5 		ldr	r0, .L119
 1081              	.LVL115:
1887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 1082              		.loc 1 1887 0
 1083 0010 0C108DE5 		str	r1, [sp, #12]
1891:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1084              		.loc 1 1891 0
 1085 0014 FEFFFFEB 		bl	setjmp
 1086              	.LVL116:
 1087 0018 000050E3 		cmp	r0, #0
 1088 001c 1100000A 		beq	.L107
 1089              	.L116:
1937:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1090              		.loc 1 1937 0
 1091 0020 00419FE5 		ldr	r4, .L119+4
 1092 0024 003094E5 		ldr	r3, [r4]
 1093 0028 010053E3 		cmp	r3, #1
 1094 002c 0B00001A 		bne	.L106
1939:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1095              		.loc 1 1939 0
 1096 0030 F4309FE5 		ldr	r3, .L119+8
 1097 0034 000093E5 		ldr	r0, [r3]
 1098              	.LVL117:
 1099              	.LBB118:
 1100              	.LBB119:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1101              		.loc 1 633 0
 1102 0038 FEFFFFEB 		bl	SOCKETS_Close
 1103              	.LVL118:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1104              		.loc 1 635 0
 1105 003c 00C0A0E3 		mov	ip, #0
 1106              	.LBE119:
 1107              	.LBE118:
1943:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 1108              		.loc 1 1943 0
 1109 0040 1430A0E3 		mov	r3, #20
 1110              	.LBB121:
 1111              	.LBB120:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1112              		.loc 1 635 0
 1113 0044 00C084E5 		str	ip, [r4]
 1114              	.LVL119:
 1115              	.LBE120:
 1116              	.LBE121:
1943:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 1117              		.loc 1 1943 0
 1118 0048 0010A0E1 		mov	r1, r0
 1119 004c 00308DE5 		str	r3, [sp]
 1120 0050 0C00A0E1 		mov	r0, ip
 1121              	.LVL120:
 1122 0054 973700E3 		movw	r3, #1943
 1123 0058 D0209FE5 		ldr	r2, .L119+12
 1124 005c FEFFFFEB 		bl	UnityAssertEqualNumber
 1125              	.LVL121:
 1126              	.L106:
1945:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 1127              		.loc 1 1945 0
 1128 0060 18D08DE2 		add	sp, sp, #24
 1129              		.cfi_remember_state
 1130              		.cfi_def_cfa_offset 8
 1131              		@ sp needed
 1132 0064 1080BDE8 		pop	{r4, pc}
 1133              	.L107:
 1134              		.cfi_restore_state
1893:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1135              		.loc 1 1893 0
 1136 0068 08309DE5 		ldr	r3, [sp, #8]
 1137 006c 010053E3 		cmp	r3, #1
 1138 0070 1E00001A 		bne	.L110
1896:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_ADDR1,
 1139              		.loc 1 1896 0
 1140 0074 B8309FE5 		ldr	r3, .L119+16
 1141 0078 14308DE5 		str	r3, [sp, #20]
1900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1142              		.loc 1 1900 0
 1143 007c B4309FE5 		ldr	r3, .L119+20
 1144              	.L118:
1918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1145              		.loc 1 1918 0
 1146 0080 A0009FE5 		ldr	r0, .L119+4
1909:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1147              		.loc 1 1909 0
 1148 0084 B231CDE1 		strh	r3, [sp, #18]	@ movhi
1918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1149              		.loc 1 1918 0
 1150 0088 FEFFFFEB 		bl	prvTcpSocketHelper
 1151              	.LVL122:
 1152 008c 98309FE5 		ldr	r3, .L119+8
 1153 0090 000083E5 		str	r0, [r3]
1921:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_MESSAGE( pdTRUE, xSocketOpen, "Socket creation failed." );
 1154              		.loc 1 1921 0
 1155 0094 003093E5 		ldr	r3, [r3]
 1156 0098 010073E3 		cmn	r3, #1
 1157 009c 1C00000A 		beq	.L113
 1158              	.L115:
1922:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1159              		.loc 1 1922 0
 1160 00a0 80309FE5 		ldr	r3, .L119+4
 1161 00a4 1440A0E3 		mov	r4, #20
 1162 00a8 8C209FE5 		ldr	r2, .L119+24
 1163 00ac 0100A0E3 		mov	r0, #1
 1164 00b0 001093E5 		ldr	r1, [r3]
 1165 00b4 823700E3 		movw	r3, #1922
 1166 00b8 00408DE5 		str	r4, [sp]
 1167 00bc FEFFFFEB 		bl	UnityAssertEqualNumber
 1168              	.LVL123:
1930:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket connect failed." );
 1169              		.loc 1 1930 0
 1170 00c0 64309FE5 		ldr	r3, .L119+8
 1171 00c4 10108DE2 		add	r1, sp, #16
 1172 00c8 0C209DE5 		ldr	r2, [sp, #12]
 1173 00cc 000093E5 		ldr	r0, [r3]
 1174 00d0 FEFFFFEB 		bl	SOCKETS_Connect
 1175              	.LVL124:
1931:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 1176              		.loc 1 1931 0
 1177 00d4 00408DE5 		str	r4, [sp]
 1178 00d8 0010A0E1 		mov	r1, r0
 1179 00dc 8B3700E3 		movw	r3, #1931
 1180 00e0 58209FE5 		ldr	r2, .L119+28
 1181 00e4 0000A0E3 		mov	r0, #0
 1182              	.LVL125:
 1183 00e8 FEFFFFEB 		bl	UnityAssertEqualNumber
 1184              	.LVL126:
 1185 00ec CBFFFFEA 		b	.L116
 1186              	.L110:
1902:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1187              		.loc 1 1902 0
 1188 00f0 08309DE5 		ldr	r3, [sp, #8]
 1189 00f4 000053E3 		cmp	r3, #0
1905:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                     tcptestECHO_SERVER_TLS_ADDR1,
 1190              		.loc 1 1905 0
 1191 00f8 34309F05 		ldreq	r3, .L119+16
 1192 00fc 14308D05 		streq	r3, [sp, #20]
1909:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1193              		.loc 1 1909 0
 1194 0100 3C309F05 		ldreq	r3, .L119+32
 1195 0104 DDFFFF0A 		beq	.L118
 1196              	.L112:
1914:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1197              		.loc 1 1914 0
 1198 0108 0110A0E3 		mov	r1, #1
 1199 010c 10009FE5 		ldr	r0, .L119
 1200 0110 FEFFFFEB 		bl	longjmp
 1201              	.LVL127:
 1202              	.L113:
1921:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_MESSAGE( pdTRUE, xSocketOpen, "Socket creation failed." );
 1203              		.loc 1 1921 0 discriminator 1
 1204 0114 811700E3 		movw	r1, #1921
 1205 0118 1C009FE5 		ldr	r0, .L119+24
 1206 011c FEFFFFEB 		bl	UnityFail
 1207              	.LVL128:
 1208 0120 DEFFFFEA 		b	.L115
 1209              	.L120:
 1210              		.align	2
 1211              	.L119:
 1212 0124 28000000 		.word	Unity+40
 1213 0128 00000000 		.word	.LANCHOR0
 1214 012c 00000000 		.word	.LANCHOR1
 1215 0130 2F000000 		.word	.LC26
 1216 0134 22DA19C5 		.word	-988161502
 1217 0138 22B3FFFF 		.word	-19678
 1218 013c 00000000 		.word	.LC24
 1219 0140 18000000 		.word	.LC25
 1220 0144 01BBFFFF 		.word	-17663
 1221              		.cfi_endproc
 1222              	.LFE100:
 1224              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_,"ax",%progbits
 1225              		.align	2
 1226              		.global	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_
 1227              		.syntax unified
 1228              		.arm
 1229              		.fpu neon
 1231              	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_:
 1232              	.LFB102:
1949:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 1233              		.loc 1 1949 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 1237 0000 10402DE9 		push	{r4, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 4, -8
 1240              		.cfi_offset 14, -4
1953:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1241              		.loc 1 1953 0
 1242 0004 0010A0E3 		mov	r1, #0
 1243 0008 0100A0E3 		mov	r0, #1
 1244 000c FEFFFFEB 		bl	prvConnect_InvalidAddressLength
 1245              	.LVL129:
1956:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1246              		.loc 1 1956 0
 1247 0010 FA1FA0E3 		mov	r1, #1000
 1248 0014 0100A0E3 		mov	r0, #1
1959:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 1249              		.loc 1 1959 0
 1250 0018 1040BDE8 		pop	{r4, lr}
 1251              		.cfi_restore 14
 1252              		.cfi_restore 4
 1253              		.cfi_def_cfa_offset 0
1956:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1254              		.loc 1 1956 0
 1255 001c FEFFFFEA 		b	prvConnect_InvalidAddressLength
 1256              	.LVL130:
 1257              		.cfi_endproc
 1258              	.LFE102:
 1260              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_,"ax",%progbits
 1261              		.align	2
 1262              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_
 1263              		.syntax unified
 1264              		.arm
 1265              		.fpu neon
 1267              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_:
 1268              	.LFB104:
1963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 1269              		.loc 1 1963 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
1967:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1273              		.loc 1 1967 0
 1274 0000 0010A0E3 		mov	r1, #0
1963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 1275              		.loc 1 1963 0
 1276 0004 10402DE9 		push	{r4, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 4, -8
 1279              		.cfi_offset 14, -4
1967:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1280              		.loc 1 1967 0
 1281 0008 0100A0E1 		mov	r0, r1
 1282 000c FEFFFFEB 		bl	prvConnect_InvalidAddressLength
 1283              	.LVL131:
1970:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1284              		.loc 1 1970 0
 1285 0010 FA1FA0E3 		mov	r1, #1000
 1286 0014 0000A0E3 		mov	r0, #0
1973:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
 1287              		.loc 1 1973 0
 1288 0018 1040BDE8 		pop	{r4, lr}
 1289              		.cfi_restore 14
 1290              		.cfi_restore 4
 1291              		.cfi_def_cfa_offset 0
1970:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1292              		.loc 1 1970 0
 1293 001c FEFFFFEA 		b	prvConnect_InvalidAddressLength
 1294              	.LVL132:
 1295              		.cfi_endproc
 1296              	.LFE104:
 1298              		.section	.text.prvEchoClientTxTask,"ax",%progbits
 1299              		.align	2
 1300              		.syntax unified
 1301              		.arm
 1302              		.fpu neon
 1304              	prvEchoClientTxTask:
 1305              	.LFB129:
2415:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xReturned = 0;
 1306              		.loc 1 2415 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310              	.LVL133:
 1311 0000 F84F2DE9 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1312              		.cfi_def_cfa_offset 40
 1313              		.cfi_offset 3, -40
 1314              		.cfi_offset 4, -36
 1315              		.cfi_offset 5, -32
 1316              		.cfi_offset 6, -28
 1317              		.cfi_offset 7, -24
 1318              		.cfi_offset 8, -20
 1319              		.cfi_offset 9, -16
 1320              		.cfi_offset 10, -12
 1321              		.cfi_offset 11, -8
 1322              		.cfi_offset 14, -4
2435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1323              		.loc 1 2435 0
 1324 0004 0150A0E3 		mov	r5, #1
2456:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
 1325              		.loc 1 2456 0
 1326 0008 E0609FE5 		ldr	r6, .L138
 1327 000c E0709FE5 		ldr	r7, .L138+4
 1328 0010 0680A0E1 		mov	r8, r6
 1329              	.LVL134:
 1330              	.L132:
2437:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                                        /* Using % t
 1331              		.loc 1 2437 0
 1332 0014 034005E2 		and	r4, r5, #3
 1333              	.LVL135:
2440:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xMaxBufferSize = tcptestTWICE_MAX_FRAME_SIZE;
 1334              		.loc 1 2440 0
 1335 0018 1310A0E3 		mov	r1, #19
 1336 001c 0000A0E3 		mov	r0, #0
 1337 0020 FEFFFFEB 		bl	vTaskPrioritySet
 1338              	.LVL136:
2444:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1339              		.loc 1 2444 0
 1340 0024 023044E2 		sub	r3, r4, #2
 1341 0028 010053E3 		cmp	r3, #1
 1342 002c 0200008A 		bhi	.L126
2446:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1343              		.loc 1 2446 0
 1344 0030 0010A0E3 		mov	r1, #0
 1345 0034 0100A0E1 		mov	r0, r1
 1346 0038 FEFFFFEB 		bl	vTaskPrioritySet
 1347              	.LVL137:
 1348              	.L126:
2452:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1349              		.loc 1 2452 0
 1350 003c 010014E3 		tst	r4, #1
2456:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
 1351              		.loc 1 2456 0
 1352 0040 000096E5 		ldr	r0, [r6]
 1353 0044 0730A0E1 		mov	r3, r7
 1354 0048 0620A0E3 		mov	r2, #6
 1355 004c 0210A0E3 		mov	r1, #2
2452:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1356              		.loc 1 2452 0
 1357 0050 129CA003 		moveq	r9, #4608
 1358 0054 0190A013 		movne	r9, #1
 1359              	.LVL138:
2456:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
 1360              		.loc 1 2456 0
 1361 0058 FEFFFFEB 		bl	xEventGroupSync
 1362              	.LVL139:
 1363 005c 060050E3 		cmp	r0, #6
 1364 0060 0200000A 		beq	.L128
 1365              	.LVL140:
 1366              	.L131:
2515:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1367              		.loc 1 2515 0
 1368 0064 0000A0E3 		mov	r0, #0
2516:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1369              		.loc 1 2516 0
 1370 0068 F84FBDE8 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1371              		.cfi_remember_state
 1372              		.cfi_restore 14
 1373              		.cfi_restore 11
 1374              		.cfi_restore 10
 1375              		.cfi_restore 9
 1376              		.cfi_restore 8
 1377              		.cfi_restore 7
 1378              		.cfi_restore 6
 1379              		.cfi_restore 5
 1380              		.cfi_restore 4
 1381              		.cfi_restore 3
 1382              		.cfi_def_cfa_offset 0
 1383              	.LVL141:
2515:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1384              		.loc 1 2515 0
 1385 006c FEFFFFEA 		b	vTaskSuspend
 1386              	.LVL142:
 1387              	.L128:
 1388              		.cfi_restore_state
2481:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       ( void * ) &( cTransmittedString[ xTransmitted ] ), /* The da
 1389              		.loc 1 2481 0
 1390 0070 80A09FE5 		ldr	r10, .L138+8
 1391 0074 0040A0E3 		mov	r4, #0
 1392              	.LVL143:
2482:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       xLenToSend,                                         /* The le
 1393              		.loc 1 2482 0
 1394 0078 7CB09FE5 		ldr	fp, .L138+12
 1395              	.L130:
 1396              	.LVL144:
2473:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1397              		.loc 1 2473 0
 1398 007c 122C64E2 		rsb	r2, r4, #4608
2481:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       ( void * ) &( cTransmittedString[ xTransmitted ] ), /* The da
 1399              		.loc 1 2481 0
 1400 0080 00009AE5 		ldr	r0, [r10]
 1401 0084 020059E1 		cmp	r9, r2
 1402 0088 0030A0E3 		mov	r3, #0
 1403 008c 0920A031 		movcc	r2, r9
 1404 0090 04108BE0 		add	r1, fp, r4
 1405 0094 FEFFFFEB 		bl	SOCKETS_Send
 1406              	.LVL145:
2486:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 1407              		.loc 1 2486 0
 1408 0098 000050E3 		cmp	r0, #0
 1409 009c 110000BA 		blt	.L134
2489:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 1410              		.loc 1 2489 0
 1411 00a0 004084E0 		add	r4, r4, r0
 1412              	.LVL146:
2468:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1413              		.loc 1 2468 0
 1414 00a4 120C54E3 		cmp	r4, #4608
 1415 00a8 F3FFFFBA 		blt	.L130
2465:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1416              		.loc 1 2465 0
 1417 00ac 0140A0E3 		mov	r4, #1
 1418              	.LVL147:
 1419              	.L129:
2501:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
 1420              		.loc 1 2501 0
 1421 00b0 000098E5 		ldr	r0, [r8]
 1422              	.LVL148:
 1423 00b4 0730A0E1 		mov	r3, r7
 1424 00b8 0620A0E3 		mov	r2, #6
 1425 00bc 0210A0E3 		mov	r1, #2
2509:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1426              		.loc 1 2509 0
 1427 00c0 014024E2 		eor	r4, r4, #1
2501:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              tcptestTX_TASK_BIT,                          /* The bit representing t
 1428              		.loc 1 2501 0
 1429 00c4 FEFFFFEB 		bl	xEventGroupSync
 1430              	.LVL149:
2509:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1431              		.loc 1 2509 0
 1432 00c8 060050E3 		cmp	r0, #6
 1433 00cc 01408413 		orrne	r4, r4, #1
 1434 00d0 000054E3 		cmp	r4, #0
 1435 00d4 E2FFFF1A 		bne	.L131
2435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1436              		.loc 1 2435 0 discriminator 2
 1437 00d8 015085E2 		add	r5, r5, #1
 1438              	.LVL150:
 1439 00dc 110055E3 		cmp	r5, #17
 1440 00e0 CBFFFF1A 		bne	.L132
 1441 00e4 DEFFFFEA 		b	.L131
 1442              	.LVL151:
 1443              	.L134:
2493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
 1444              		.loc 1 2493 0
 1445 00e8 0040A0E3 		mov	r4, #0
 1446              	.LVL152:
 1447 00ec EFFFFFEA 		b	.L129
 1448              	.L139:
 1449              		.align	2
 1450              	.L138:
 1451 00f0 00000000 		.word	.LANCHOR6
 1452 00f4 80380100 		.word	80000
 1453 00f8 00000000 		.word	.LANCHOR1
 1454 00fc 00000000 		.word	.LANCHOR7
 1455              		.cfi_endproc
 1456              	.LFE129:
 1458              		.section	.text.prvSOCKETS_CloseInvalidParams.isra.2,"ax",%progbits
 1459              		.align	2
 1460              		.syntax unified
 1461              		.arm
 1462              		.fpu neon
 1464              	prvSOCKETS_CloseInvalidParams.isra.2:
 1465              	.LFB150:
 828:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 1466              		.loc 1 828 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              	.LVL153:
 1471 0000 07402DE9 		push	{r0, r1, r2, lr}
 1472              		.cfi_def_cfa_offset 16
 1473              		.cfi_offset 14, -4
 833:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_EINVAL, xResult, "Socket failed to close" );
 1474              		.loc 1 833 0
 1475 0004 0000E0E3 		mvn	r0, #0
 1476 0008 FEFFFFEB 		bl	SOCKETS_Close
 1477              	.LVL154:
 834:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1478              		.loc 1 834 0
 1479 000c 1430A0E3 		mov	r3, #20
 1480 0010 0010A0E1 		mov	r1, r0
 1481 0014 00308DE5 		str	r3, [sp]
 1482 0018 1500E0E3 		mvn	r0, #21
 1483              	.LVL155:
 1484 001c 423300E3 		movw	r3, #834
 1485 0020 08209FE5 		ldr	r2, .L142
 1486 0024 FEFFFFEB 		bl	UnityAssertEqualNumber
 1487              	.LVL156:
 835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1488              		.loc 1 835 0
 1489 0028 0CD08DE2 		add	sp, sp, #12
 1490              		.cfi_def_cfa_offset 4
 1491              		@ sp needed
 1492 002c 04F09DE4 		ldr	pc, [sp], #4
 1493              	.L143:
 1494              		.align	2
 1495              	.L142:
 1496 0030 92000000 		.word	.LC18
 1497              		.cfi_endproc
 1498              	.LFE150:
 1500              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_,"ax",%progbits
 1501              		.align	2
 1502              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_
 1503              		.syntax unified
 1504              		.arm
 1505              		.fpu neon
 1507              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_:
 1508              	.LFB23:
 845:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 1509              		.loc 1 845 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 0
 1512              		@ frame_needed = 0, uses_anonymous_args = 0
 1513              		@ link register save eliminated.
 848:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1514              		.loc 1 848 0
 1515 0000 FEFFFFEA 		b	prvSOCKETS_CloseInvalidParams.isra.2
 1516              	.LVL157:
 1517              		.cfi_endproc
 1518              	.LFE23:
 1520              		.section	.text.prvConnectHelperWithRetry,"ax",%progbits
 1521              		.align	2
 1522              		.syntax unified
 1523              		.arm
 1524              		.fpu neon
 1526              	prvConnectHelperWithRetry:
 1527              	.LFB9:
 435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xIsConnected = pdFALSE;
 1528              		.loc 1 435 0
 1529              		.cfi_startproc
 1530              		@ args = 4, pretend = 0, frame = 16
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532              	.LVL158:
 1533 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1534              		.cfi_def_cfa_offset 36
 1535              		.cfi_offset 4, -36
 1536              		.cfi_offset 5, -32
 1537              		.cfi_offset 6, -28
 1538              		.cfi_offset 7, -24
 1539              		.cfi_offset 8, -20
 1540              		.cfi_offset 9, -16
 1541              		.cfi_offset 10, -12
 1542              		.cfi_offset 11, -8
 1543              		.cfi_offset 14, -4
 438:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     SocketsSockaddr_t xEchoServerAddress;
 1544              		.loc 1 438 0
 1545 0004 0070A0E3 		mov	r7, #0
 1546              	.LBB128:
 1547              	.LBB129:
 308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_ADDR1,
 1548              		.loc 1 308 0
 1549 0008 80919FE5 		ldr	r9, .L165
 1550              	.LBE129:
 1551              	.LBE128:
 435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xIsConnected = pdFALSE;
 1552              		.loc 1 435 0
 1553 000c 0040A0E1 		mov	r4, r0
 1554 0010 0160A0E1 		mov	r6, r1
 1555 0014 03B0A0E1 		mov	fp, r3
 440:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1556              		.loc 1 440 0
 1557 0018 9680A0E3 		mov	r8, #150
 437:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xRetry = 0;
 1558              		.loc 1 437 0
 1559 001c 0750A0E1 		mov	r5, r7
 435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xIsConnected = pdFALSE;
 1560              		.loc 1 435 0
 1561 0020 1CD04DE2 		sub	sp, sp, #28
 1562              		.cfi_def_cfa_offset 64
 435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xIsConnected = pdFALSE;
 1563              		.loc 1 435 0
 1564 0024 0C208DE5 		str	r2, [sp, #12]
 1565              	.LVL159:
 1566              	.L146:
 445:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1567              		.loc 1 445 0
 1568 0028 40009DE5 		ldr	r0, [sp, #64]
 1569 002c FEFFFFEB 		bl	prvTcpSocketHelper
 1570              	.LVL160:
 1571 0030 000084E5 		str	r0, [r4]
 447:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1572              		.loc 1 447 0
 1573 0034 003094E5 		ldr	r3, [r4]
 1574 0038 010073E3 		cmn	r3, #1
 1575 003c 1F00000A 		beq	.L156
 453:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1576              		.loc 1 453 0
 1577 0040 000055E3 		cmp	r5, #0
 1578 0044 F7FFFF1A 		bne	.L146
 1579              	.LVL161:
 455:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 1580              		.loc 1 455 0
 1581 0048 000056E3 		cmp	r6, #0
 1582 004c 2000001A 		bne	.L148
 1583              	.LBB131:
 1584              	.LBB132:
 268:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 1585              		.loc 1 268 0
 1586 0050 3C319FE5 		ldr	r3, .L165+4
 269:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 1587              		.loc 1 269 0
 1588 0054 0820A0E3 		mov	r2, #8
 1589              	.LBE132:
 1590              	.LBE131:
 457:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 1591              		.loc 1 457 0
 1592 0058 00A094E5 		ldr	r10, [r4]
 1593              	.LVL162:
 1594              	.LBB137:
 1595              	.LBB135:
 273:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 1596              		.loc 1 273 0
 1597 005c 0610A0E1 		mov	r1, r6
 1598 0060 00608DE5 		str	r6, [sp]
 268:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 1599              		.loc 1 268 0
 1600 0064 B231CDE1 		strh	r3, [sp, #18]	@ movhi
 270:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1601              		.loc 1 270 0
 1602 0068 0230A0E3 		mov	r3, #2
 1603 006c 1130CDE5 		strb	r3, [sp, #17]
 273:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 1604              		.loc 1 273 0
 1605 0070 0A00A0E1 		mov	r0, r10
 1606 0074 0630A0E1 		mov	r3, r6
 264:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_TLS_ADDR1,
 1607              		.loc 1 264 0
 1608 0078 14908DE5 		str	r9, [sp, #20]
 269:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 1609              		.loc 1 269 0
 1610 007c 1020CDE5 		strb	r2, [sp, #16]
 273:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 1611              		.loc 1 273 0
 1612 0080 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 1613              	.LVL163:
 279:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 1614              		.loc 1 279 0
 1615 0084 005050E2 		subs	r5, r0, #0
 1616 0088 0E00001A 		bne	.L149
 1617              	.LVL164:
 1618              	.LBB133:
 1619              	.LBB134:
 282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
 1620              		.loc 1 282 0
 1621 008c 1C30A0E3 		mov	r3, #28
 1622 0090 0510A0E1 		mov	r1, r5
 1623 0094 00308DE5 		str	r3, [sp]
 1624 0098 0720A0E3 		mov	r2, #7
 1625 009c F4309FE5 		ldr	r3, .L165+8
 1626 00a0 0A00A0E1 		mov	r0, r10
 1627              	.LVL165:
 1628 00a4 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 1629              	.LVL166:
 288:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1630              		.loc 1 288 0
 1631 00a8 005050E2 		subs	r5, r0, #0
 1632              	.LVL167:
 1633 00ac 1200000A 		beq	.L151
 290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1634              		.loc 1 290 0
 1635 00b0 E4109FE5 		ldr	r1, .L165+12
 1636 00b4 E4009FE5 		ldr	r0, .L165+16
 1637              	.LVL168:
 1638              	.L164:
 1639              	.LBE134:
 1640              	.LBE133:
 295:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 1641              		.loc 1 295 0
 1642 00b8 FEFFFFEB 		bl	vLoggingPrintf
 1643              	.LVL169:
 1644 00bc D9FFFFEA 		b	.L146
 1645              	.LVL170:
 1646              	.L156:
 1647              	.LBE135:
 1648              	.LBE137:
 449:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1649              		.loc 1 449 0
 1650 00c0 0350A0E1 		mov	r5, r3
 1651              	.LVL171:
 1652 00c4 D7FFFFEA 		b	.L146
 1653              	.LVL172:
 1654              	.L149:
 1655              	.LBB138:
 1656              	.LBB136:
 295:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 1657              		.loc 1 295 0
 1658 00c8 CC109FE5 		ldr	r1, .L165+12
 1659 00cc D0009FE5 		ldr	r0, .L165+20
 1660              	.LVL173:
 1661 00d0 F8FFFFEA 		b	.L164
 1662              	.LVL174:
 1663              	.L148:
 1664              	.LBE136:
 1665              	.LBE138:
 459:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 1666              		.loc 1 459 0
 1667 00d4 010056E3 		cmp	r6, #1
 1668 00d8 1E00001A 		bne	.L152
 461:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 1669              		.loc 1 461 0
 1670 00dc 003094E5 		ldr	r3, [r4]
 1671              	.LVL175:
 1672              	.LBB139:
 1673              	.LBB130:
 312:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 1674              		.loc 1 312 0
 1675 00e0 C0309FE5 		ldr	r3, .L165+24
 308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                         tcptestECHO_SERVER_ADDR1,
 1676              		.loc 1 308 0
 1677 00e4 14908DE5 		str	r9, [sp, #20]
 312:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucLength = sizeof( SocketsSockaddr_t );
 1678              		.loc 1 312 0
 1679 00e8 B231CDE1 		strh	r3, [sp, #18]	@ movhi
 313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     pxHostAddress->ucSocketDomain = SOCKETS_AF_INET;
 1680              		.loc 1 313 0
 1681 00ec 0830A0E3 		mov	r3, #8
 1682 00f0 1030CDE5 		strb	r3, [sp, #16]
 314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1683              		.loc 1 314 0
 1684 00f4 0230A0E3 		mov	r3, #2
 1685 00f8 1130CDE5 		strb	r3, [sp, #17]
 1686              	.LVL176:
 1687              	.L151:
 1688              	.LBE130:
 1689              	.LBE139:
 477:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 1690              		.loc 1 477 0
 1691 00fc 000094E5 		ldr	r0, [r4]
 1692 0100 0B20A0E1 		mov	r2, fp
 1693 0104 0C109DE5 		ldr	r1, [sp, #12]
 1694 0108 FEFFFFEB 		bl	prvSetSockOptHelper
 1695              	.LVL177:
 481:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1696              		.loc 1 481 0
 1697 010c 005050E2 		subs	r5, r0, #0
 1698 0110 C4FFFF1A 		bne	.L146
 483:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        &xEchoServerAddress,
 1699              		.loc 1 483 0
 1700 0114 000094E5 		ldr	r0, [r4]
 1701              	.LVL178:
 1702 0118 0820A0E3 		mov	r2, #8
 1703 011c 10108DE2 		add	r1, sp, #16
 1704 0120 FEFFFFEB 		bl	SOCKETS_Connect
 1705              	.LVL179:
 487:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 1706              		.loc 1 487 0
 1707 0124 000050E3 		cmp	r0, #0
 1708 0128 1600000A 		beq	.L145
 493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 1709              		.loc 1 493 0
 1710 012c 050057E3 		cmp	r7, #5
 1711 0130 140000CA 		bgt	.L145
 495:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     *pxSocket = SOCKETS_INVALID_SOCKET;
 1712              		.loc 1 495 0
 1713 0134 000094E5 		ldr	r0, [r4]
 1714              	.LVL180:
 498:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     vTaskDelay( xRetryTimeoutTicks );
 1715              		.loc 1 498 0
 1716 0138 017087E2 		add	r7, r7, #1
 1717              	.LVL181:
 495:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     *pxSocket = SOCKETS_INVALID_SOCKET;
 1718              		.loc 1 495 0
 1719 013c FEFFFFEB 		bl	SOCKETS_Close
 1720              	.LVL182:
 496:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xResult = SOCKETS_ERROR_NONE;
 1721              		.loc 1 496 0
 1722 0140 0030E0E3 		mvn	r3, #0
 499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     /* Exponetially backoff the retry times */
 1723              		.loc 1 499 0
 1724 0144 0800A0E1 		mov	r0, r8
 496:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     xResult = SOCKETS_ERROR_NONE;
 1725              		.loc 1 496 0
 1726 0148 003084E5 		str	r3, [r4]
 1727              	.LVL183:
 501:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 }
 1728              		.loc 1 501 0
 1729 014c 8880A0E1 		lsl	r8, r8, #1
 1730              	.LVL184:
 499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     /* Exponetially backoff the retry times */
 1731              		.loc 1 499 0
 1732 0150 FEFFFFEB 		bl	vTaskDelay
 1733              	.LVL185:
 1734 0154 B3FFFFEA 		b	.L146
 1735              	.L152:
 463:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 1736              		.loc 1 463 0
 1737 0158 020056E3 		cmp	r6, #2
 1738 015c 0500001A 		bne	.L153
 465:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 1739              		.loc 1 465 0
 1740 0160 000094E5 		ldr	r0, [r4]
 1741 0164 10108DE2 		add	r1, sp, #16
 1742 0168 FEFFFFEB 		bl	prvAwsIotBrokerConnectHelper
 1743              	.LVL186:
 475:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 1744              		.loc 1 475 0
 1745 016c 005050E2 		subs	r5, r0, #0
 1746 0170 ACFFFF1A 		bne	.L146
 1747 0174 E0FFFFEA 		b	.L151
 1748              	.LVL187:
 1749              	.L153:
 470:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 1750              		.loc 1 470 0
 1751 0178 2C109FE5 		ldr	r1, .L165+28
 1752 017c 2C009FE5 		ldr	r0, .L165+32
 1753 0180 FEFFFFEB 		bl	vLoggingPrintf
 1754              	.LVL188:
 1755 0184 DCFFFFEA 		b	.L151
 1756              	.LVL189:
 1757              	.L145:
 514:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1758              		.loc 1 514 0
 1759 0188 1CD08DE2 		add	sp, sp, #28
 1760              		.cfi_def_cfa_offset 36
 1761              		@ sp needed
 1762 018c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1763              	.LVL190:
 1764              	.L166:
 1765              		.align	2
 1766              	.L165:
 1767 0190 22DA19C5 		.word	-988161502
 1768 0194 01BBFFFF 		.word	-17663
 1769 0198 00000000 		.word	.LANCHOR5
 1770 019c 00000000 		.word	.LANCHOR8
 1771 01a0 00000000 		.word	.LC27
 1772 01a4 42000000 		.word	.LC28
 1773 01a8 22B3FFFF 		.word	-19678
 1774 01ac 00000000 		.word	.LANCHOR9
 1775 01b0 00000000 		.word	.LC10
 1776              		.cfi_endproc
 1777              	.LFE9:
 1779              		.section	.text.prvSOCKETS_CloseWithoutReceiving,"ax",%progbits
 1780              		.align	2
 1781              		.syntax unified
 1782              		.arm
 1783              		.fpu neon
 1785              	prvSOCKETS_CloseWithoutReceiving:
 1786              	.LFB24:
 854:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 1787              		.loc 1 854 0
 1788              		.cfi_startproc
 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 0, uses_anonymous_args = 0
 1791              	.LVL191:
 1792 0000 73402DE9 		push	{r0, r1, r4, r5, r6, lr}
 1793              		.cfi_def_cfa_offset 24
 1794              		.cfi_offset 4, -16
 1795              		.cfi_offset 5, -12
 1796              		.cfi_offset 6, -8
 1797              		.cfi_offset 14, -4
 858:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 1798              		.loc 1 858 0
 1799 0004 203E04E3 		movw	r3, #20000
 1800 0008 8C509FE5 		ldr	r5, .L169
 859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1801              		.loc 1 859 0
 1802 000c 1440A0E3 		mov	r4, #20
 858:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 1803              		.loc 1 858 0
 1804 0010 0320A0E1 		mov	r2, r3
 1805 0014 0010A0E1 		mov	r1, r0
 1806 0018 80609FE5 		ldr	r6, .L169+4
 1807 001c 0500A0E1 		mov	r0, r5
 1808              	.LVL192:
 1809 0020 00608DE5 		str	r6, [sp]
 1810 0024 FEFFFFEB 		bl	prvConnectHelperWithRetry
 1811              	.LVL193:
 859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1812              		.loc 1 859 0
 1813 0028 00408DE5 		str	r4, [sp]
 1814 002c 0010A0E1 		mov	r1, r0
 1815 0030 5B3300E3 		movw	r3, #859
 1816 0034 68209FE5 		ldr	r2, .L169+8
 1817 0038 0000A0E3 		mov	r0, #0
 1818              	.LVL194:
 1819 003c FEFFFFEB 		bl	UnityAssertEqualNumber
 1820              	.LVL195:
 862:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xResult, "Socket was not able to send" );
 1821              		.loc 1 862 0
 1822 0040 000095E5 		ldr	r0, [r5]
 1823 0044 0030A0E3 		mov	r3, #0
 1824 0048 122CA0E3 		mov	r2, #4608
 1825 004c 54109FE5 		ldr	r1, .L169+12
 1826 0050 FEFFFFEB 		bl	SOCKETS_Send
 1827              	.LVL196:
 863:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1828              		.loc 1 863 0
 1829 0054 5F3300E3 		movw	r3, #863
 1830 0058 0010A0E1 		mov	r1, r0
 1831 005c 48209FE5 		ldr	r2, .L169+16
 1832 0060 0000A0E3 		mov	r0, #0
 1833              	.LVL197:
 1834 0064 00408DE5 		str	r4, [sp]
 1835 0068 FEFFFFEB 		bl	UnityAssertGreaterNumber
 1836              	.LVL198:
 866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 1837              		.loc 1 866 0
 1838 006c 000095E5 		ldr	r0, [r5]
 1839              	.LVL199:
 1840              	.LBB140:
 1841              	.LBB141:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1842              		.loc 1 633 0
 1843 0070 FEFFFFEB 		bl	SOCKETS_Close
 1844              	.LVL200:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1845              		.loc 1 635 0
 1846 0074 00C0A0E3 		mov	ip, #0
 1847              	.LBE141:
 1848              	.LBE140:
 867:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1849              		.loc 1 867 0
 1850 0078 0010A0E1 		mov	r1, r0
 1851 007c 00408DE5 		str	r4, [sp]
 1852 0080 633300E3 		movw	r3, #867
 1853 0084 24209FE5 		ldr	r2, .L169+20
 1854 0088 0C00A0E1 		mov	r0, ip
 1855              	.LVL201:
 1856              	.LBB143:
 1857              	.LBB142:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1858              		.loc 1 635 0
 1859 008c 00C086E5 		str	ip, [r6]
 1860              	.LVL202:
 1861              	.LBE142:
 1862              	.LBE143:
 867:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1863              		.loc 1 867 0
 1864 0090 FEFFFFEB 		bl	UnityAssertEqualNumber
 1865              	.LVL203:
 868:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1866              		.loc 1 868 0
 1867 0094 08D08DE2 		add	sp, sp, #8
 1868              		.cfi_def_cfa_offset 16
 1869              		@ sp needed
 1870 0098 7080BDE8 		pop	{r4, r5, r6, pc}
 1871              	.L170:
 1872              		.align	2
 1873              	.L169:
 1874 009c 00000000 		.word	.LANCHOR1
 1875 00a0 00000000 		.word	.LANCHOR0
 1876 00a4 00000000 		.word	.LC29
 1877 00a8 00000000 		.word	.LANCHOR7
 1878 00ac 12000000 		.word	.LC30
 1879 00b0 92000000 		.word	.LC18
 1880              		.cfi_endproc
 1881              	.LFE24:
 1883              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_,"ax",%progbits
 1884              		.align	2
 1885              		.global	TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_
 1886              		.syntax unified
 1887              		.arm
 1888              		.fpu neon
 1890              	TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_:
 1891              	.LFB26:
 872:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 1892              		.loc 1 872 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 0, uses_anonymous_args = 0
 1896              		@ link register save eliminated.
 875:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1897              		.loc 1 875 0
 1898 0000 0100A0E3 		mov	r0, #1
 1899 0004 FEFFFFEA 		b	prvSOCKETS_CloseWithoutReceiving
 1900              	.LVL204:
 1901              		.cfi_endproc
 1902              	.LFE26:
 1904              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_,"ax",%progbits
 1905              		.align	2
 1906              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_
 1907              		.syntax unified
 1908              		.arm
 1909              		.fpu neon
 1911              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_:
 1912              	.LFB28:
 879:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 1913              		.loc 1 879 0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 1917              		@ link register save eliminated.
 882:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 1918              		.loc 1 882 0
 1919 0000 0000A0E3 		mov	r0, #0
 1920 0004 FEFFFFEA 		b	prvSOCKETS_CloseWithoutReceiving
 1921              	.LVL205:
 1922              		.cfi_endproc
 1923              	.LFE28:
 1925              		.section	.text.prvSOCKETS_ShutdownWithoutReceiving,"ax",%progbits
 1926              		.align	2
 1927              		.syntax unified
 1928              		.arm
 1929              		.fpu neon
 1931              	prvSOCKETS_ShutdownWithoutReceiving:
 1932              	.LFB34:
 927:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 1933              		.loc 1 927 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 0
 1936              		@ frame_needed = 0, uses_anonymous_args = 0
 1937              	.LVL206:
 1938 0000 73402DE9 		push	{r0, r1, r4, r5, r6, lr}
 1939              		.cfi_def_cfa_offset 24
 1940              		.cfi_offset 4, -16
 1941              		.cfi_offset 5, -12
 1942              		.cfi_offset 6, -8
 1943              		.cfi_offset 14, -4
 931:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 1944              		.loc 1 931 0
 1945 0004 203E04E3 		movw	r3, #20000
 1946 0008 B0509FE5 		ldr	r5, .L175
 932:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1947              		.loc 1 932 0
 1948 000c 1440A0E3 		mov	r4, #20
 931:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 1949              		.loc 1 931 0
 1950 0010 0320A0E1 		mov	r2, r3
 1951 0014 0010A0E1 		mov	r1, r0
 1952 0018 A4609FE5 		ldr	r6, .L175+4
 1953 001c 0500A0E1 		mov	r0, r5
 1954              	.LVL207:
 1955 0020 00608DE5 		str	r6, [sp]
 1956 0024 FEFFFFEB 		bl	prvConnectHelperWithRetry
 1957              	.LVL208:
 932:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1958              		.loc 1 932 0
 1959 0028 00408DE5 		str	r4, [sp]
 1960 002c 0010A0E1 		mov	r1, r0
 1961 0030 E93FA0E3 		mov	r3, #932
 1962 0034 8C209FE5 		ldr	r2, .L175+8
 1963 0038 0000A0E3 		mov	r0, #0
 1964              	.LVL209:
 1965 003c FEFFFFEB 		bl	UnityAssertEqualNumber
 1966              	.LVL210:
 935:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xResult, "Socket was not able to send" );
 1967              		.loc 1 935 0
 1968 0040 000095E5 		ldr	r0, [r5]
 1969 0044 0030A0E3 		mov	r3, #0
 1970 0048 122CA0E3 		mov	r2, #4608
 1971 004c 78109FE5 		ldr	r1, .L175+12
 1972 0050 FEFFFFEB 		bl	SOCKETS_Send
 1973              	.LVL211:
 936:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1974              		.loc 1 936 0
 1975 0054 EA3FA0E3 		mov	r3, #936
 1976 0058 70209FE5 		ldr	r2, .L175+16
 1977 005c 0010A0E1 		mov	r1, r0
 1978 0060 00408DE5 		str	r4, [sp]
 1979 0064 0000A0E3 		mov	r0, #0
 1980              	.LVL212:
 1981 0068 FEFFFFEB 		bl	UnityAssertGreaterNumber
 1982              	.LVL213:
 938:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 1983              		.loc 1 938 0
 1984 006c 000095E5 		ldr	r0, [r5]
 1985 0070 0210A0E3 		mov	r1, #2
 1986 0074 FEFFFFEB 		bl	SOCKETS_Shutdown
 1987              	.LVL214:
 939:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 1988              		.loc 1 939 0
 1989 0078 AB3300E3 		movw	r3, #939
 1990 007c 0010A0E1 		mov	r1, r0
 1991 0080 4C209FE5 		ldr	r2, .L175+20
 1992 0084 0000A0E3 		mov	r0, #0
 1993              	.LVL215:
 1994 0088 00408DE5 		str	r4, [sp]
 1995 008c FEFFFFEB 		bl	UnityAssertEqualNumber
 1996              	.LVL216:
 941:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 1997              		.loc 1 941 0
 1998 0090 000095E5 		ldr	r0, [r5]
 1999              	.LVL217:
 2000              	.LBB144:
 2001              	.LBB145:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2002              		.loc 1 633 0
 2003 0094 FEFFFFEB 		bl	SOCKETS_Close
 2004              	.LVL218:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2005              		.loc 1 635 0
 2006 0098 00C0A0E3 		mov	ip, #0
 2007              	.LBE145:
 2008              	.LBE144:
 942:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2009              		.loc 1 942 0
 2010 009c 0010A0E1 		mov	r1, r0
 2011 00a0 00408DE5 		str	r4, [sp]
 2012 00a4 AE3300E3 		movw	r3, #942
 2013 00a8 28209FE5 		ldr	r2, .L175+24
 2014 00ac 0C00A0E1 		mov	r0, ip
 2015              	.LVL219:
 2016              	.LBB147:
 2017              	.LBB146:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2018              		.loc 1 635 0
 2019 00b0 00C086E5 		str	ip, [r6]
 2020              	.LVL220:
 2021              	.LBE146:
 2022              	.LBE147:
 942:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2023              		.loc 1 942 0
 2024 00b4 FEFFFFEB 		bl	UnityAssertEqualNumber
 2025              	.LVL221:
 943:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2026              		.loc 1 943 0
 2027 00b8 08D08DE2 		add	sp, sp, #8
 2028              		.cfi_def_cfa_offset 16
 2029              		@ sp needed
 2030 00bc 7080BDE8 		pop	{r4, r5, r6, pc}
 2031              	.L176:
 2032              		.align	2
 2033              	.L175:
 2034 00c0 00000000 		.word	.LANCHOR1
 2035 00c4 00000000 		.word	.LANCHOR0
 2036 00c8 00000000 		.word	.LC29
 2037 00cc 00000000 		.word	.LANCHOR7
 2038 00d0 12000000 		.word	.LC30
 2039 00d4 00000000 		.word	.LC31
 2040 00d8 92000000 		.word	.LC18
 2041              		.cfi_endproc
 2042              	.LFE34:
 2044              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_,"ax",%progbits
 2045              		.align	2
 2046              		.global	TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_
 2047              		.syntax unified
 2048              		.arm
 2049              		.fpu neon
 2051              	TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_:
 2052              	.LFB36:
 947:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2053              		.loc 1 947 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 0
 2056              		@ frame_needed = 0, uses_anonymous_args = 0
 2057              		@ link register save eliminated.
 950:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2058              		.loc 1 950 0
 2059 0000 0100A0E3 		mov	r0, #1
 2060 0004 FEFFFFEA 		b	prvSOCKETS_ShutdownWithoutReceiving
 2061              	.LVL222:
 2062              		.cfi_endproc
 2063              	.LFE36:
 2065              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_,"ax",%progbits
 2066              		.align	2
 2067              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_
 2068              		.syntax unified
 2069              		.arm
 2070              		.fpu neon
 2072              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_:
 2073              	.LFB38:
 954:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2074              		.loc 1 954 0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 0
 2077              		@ frame_needed = 0, uses_anonymous_args = 0
 2078              		@ link register save eliminated.
 957:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2079              		.loc 1 957 0
 2080 0000 0000A0E3 		mov	r0, #0
 2081 0004 FEFFFFEA 		b	prvSOCKETS_ShutdownWithoutReceiving
 2082              	.LVL223:
 2083              		.cfi_endproc
 2084              	.LFE38:
 2086              		.section	.text.prvSetSockOpt_InvalidParams,"ax",%progbits
 2087              		.align	2
 2088              		.syntax unified
 2089              		.arm
 2090              		.fpu neon
 2092              	prvSetSockOpt_InvalidParams:
 2093              	.LFB57:
1235:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2094              		.loc 1 1235 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 8
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              	.LVL224:
 2099 0000 7F402DE9 		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 2100              		.cfi_def_cfa_offset 32
 2101              		.cfi_offset 4, -16
 2102              		.cfi_offset 5, -12
 2103              		.cfi_offset 6, -8
 2104              		.cfi_offset 14, -4
1235:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2105              		.loc 1 1235 0
 2106 0004 0C008DE5 		str	r0, [sp, #12]
1238:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 2107              		.loc 1 1238 0
 2108 0008 E0009FE5 		ldr	r0, .L185
 2109              	.LVL225:
 2110 000c FEFFFFEB 		bl	setjmp
 2111              	.LVL226:
 2112 0010 004050E2 		subs	r4, r0, #0
 2113 0014 2700001A 		bne	.L182
1241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2114              		.loc 1 1241 0
 2115 0018 D4309FE5 		ldr	r3, .L185+4
1242:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2116              		.loc 1 1242 0
 2117 001c 1450A0E3 		mov	r5, #20
1241:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2118              		.loc 1 1241 0
 2119 0020 D0609FE5 		ldr	r6, .L185+8
 2120 0024 0C109DE5 		ldr	r1, [sp, #12]
 2121 0028 00308DE5 		str	r3, [sp]
 2122 002c 203E04E3 		movw	r3, #20000
 2123 0030 0320A0E1 		mov	r2, r3
 2124 0034 0600A0E1 		mov	r0, r6
 2125 0038 FEFFFFEB 		bl	prvConnectHelperWithRetry
 2126              	.LVL227:
1242:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2127              		.loc 1 1242 0
 2128 003c DA3400E3 		movw	r3, #1242
 2129 0040 0010A0E1 		mov	r1, r0
 2130 0044 B0209FE5 		ldr	r2, .L185+12
 2131 0048 0400A0E1 		mov	r0, r4
 2132              	.LVL228:
 2133 004c 00508DE5 		str	r5, [sp]
 2134 0050 FEFFFFEB 		bl	UnityAssertEqualNumber
 2135              	.LVL229:
1245:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,    /* lLevel - Not used. */
 2136              		.loc 1 1245 0
 2137 0054 0430A0E1 		mov	r3, r4
 2138 0058 0020E0E3 		mvn	r2, #0
 2139 005c 0410A0E1 		mov	r1, r4
 2140 0060 000096E5 		ldr	r0, [r6]
 2141 0064 00408DE5 		str	r4, [sp]
 2142 0068 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 2143              	.LVL230:
1255:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2144              		.loc 1 1255 0
 2145 006c E73400E3 		movw	r3, #1255
 2146 0070 0010A0E1 		mov	r1, r0
 2147 0074 84209FE5 		ldr	r2, .L185+16
 2148 0078 0400A0E1 		mov	r0, r4
 2149              	.LVL231:
 2150 007c 00508DE5 		str	r5, [sp]
 2151 0080 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2152              	.LVL232:
1258:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,                      /* lLevel - Not used. */
 2153              		.loc 1 1258 0
 2154 0084 0430A0E3 		mov	r3, #4
 2155 0088 0420A0E1 		mov	r2, r4
 2156 008c 00308DE5 		str	r3, [sp]
 2157 0090 0410A0E1 		mov	r1, r4
 2158 0094 68309FE5 		ldr	r3, .L185+20
 2159 0098 0000E0E3 		mvn	r0, #0
 2160 009c FEFFFFEB 		bl	SOCKETS_SetSockOpt
 2161              	.LVL233:
1267:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2162              		.loc 1 1267 0
 2163 00a0 00508DE5 		str	r5, [sp]
 2164 00a4 0010A0E1 		mov	r1, r0
 2165 00a8 F33400E3 		movw	r3, #1267
 2166 00ac 54209FE5 		ldr	r2, .L185+24
 2167 00b0 0400A0E1 		mov	r0, r4
 2168              	.LVL234:
 2169 00b4 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2170              	.LVL235:
 2171              	.L182:
1274:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2172              		.loc 1 1274 0
 2173 00b8 38309FE5 		ldr	r3, .L185+8
 2174 00bc 000093E5 		ldr	r0, [r3]
 2175              	.LVL236:
 2176              	.LBB148:
 2177              	.LBB149:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2178              		.loc 1 633 0
 2179 00c0 FEFFFFEB 		bl	SOCKETS_Close
 2180              	.LVL237:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2181              		.loc 1 635 0
 2182 00c4 28309FE5 		ldr	r3, .L185+4
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2183              		.loc 1 633 0
 2184 00c8 0010A0E1 		mov	r1, r0
 2185              	.LVL238:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2186              		.loc 1 635 0
 2187 00cc 0000A0E3 		mov	r0, #0
 2188              	.LVL239:
 2189              	.LBE149:
 2190              	.LBE148:
1278:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2191              		.loc 1 1278 0
 2192 00d0 34209FE5 		ldr	r2, .L185+28
 2193              	.LBB151:
 2194              	.LBB150:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2195              		.loc 1 635 0
 2196 00d4 000083E5 		str	r0, [r3]
 2197              	.LVL240:
 2198              	.LBE150:
 2199              	.LBE151:
1278:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2200              		.loc 1 1278 0
 2201 00d8 1430A0E3 		mov	r3, #20
 2202 00dc 00308DE5 		str	r3, [sp]
 2203 00e0 FE3400E3 		movw	r3, #1278
 2204 00e4 FEFFFFEB 		bl	UnityAssertEqualNumber
 2205              	.LVL241:
1279:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2206              		.loc 1 1279 0
 2207 00e8 10D08DE2 		add	sp, sp, #16
 2208              		.cfi_def_cfa_offset 16
 2209              		@ sp needed
 2210 00ec 7080BDE8 		pop	{r4, r5, r6, pc}
 2211              	.L186:
 2212              		.align	2
 2213              	.L185:
 2214 00f0 28000000 		.word	Unity+40
 2215 00f4 00000000 		.word	.LANCHOR0
 2216 00f8 00000000 		.word	.LANCHOR1
 2217 00fc 00000000 		.word	.LC29
 2218 0100 00000000 		.word	.LC32
 2219 0104 00000000 		.word	.LANCHOR10
 2220 0108 32000000 		.word	.LC33
 2221 010c 2F000000 		.word	.LC26
 2222              		.cfi_endproc
 2223              	.LFE57:
 2225              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_,"ax",%progbits
 2226              		.align	2
 2227              		.global	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_
 2228              		.syntax unified
 2229              		.arm
 2230              		.fpu neon
 2232              	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_:
 2233              	.LFB59:
1282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2234              		.loc 1 1282 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 0
 2237              		@ frame_needed = 0, uses_anonymous_args = 0
 2238              		@ link register save eliminated.
1285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2239              		.loc 1 1285 0
 2240 0000 0100A0E3 		mov	r0, #1
 2241 0004 FEFFFFEA 		b	prvSetSockOpt_InvalidParams
 2242              	.LVL242:
 2243              		.cfi_endproc
 2244              	.LFE59:
 2246              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_,"ax",%progbits
 2247              		.align	2
 2248              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_
 2249              		.syntax unified
 2250              		.arm
 2251              		.fpu neon
 2253              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_:
 2254              	.LFB61:
1291:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2255              		.loc 1 1291 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
1294:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2260              		.loc 1 1294 0
 2261 0000 0000A0E3 		mov	r0, #0
 2262 0004 FEFFFFEA 		b	prvSetSockOpt_InvalidParams
 2263              	.LVL243:
 2264              		.cfi_endproc
 2265              	.LFE61:
 2267              		.section	.text.prvSOCKETS_Shutdown,"ax",%progbits
 2268              		.align	2
 2269              		.syntax unified
 2270              		.arm
 2271              		.fpu neon
 2273              	prvSOCKETS_Shutdown:
 2274              	.LFB67:
1323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2275              		.loc 1 1323 0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 8
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
 2279              	.LVL244:
 2280 0000 FF412DE9 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 2281              		.cfi_def_cfa_offset 40
 2282              		.cfi_offset 4, -24
 2283              		.cfi_offset 5, -20
 2284              		.cfi_offset 6, -16
 2285              		.cfi_offset 7, -12
 2286              		.cfi_offset 8, -8
 2287              		.cfi_offset 14, -4
1332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2288              		.loc 1 1332 0
 2289 0004 203E04E3 		movw	r3, #20000
 2290 0008 EC419FE5 		ldr	r4, .L195
 2291 000c 0320A0E1 		mov	r2, r3
 2292 0010 0010A0E1 		mov	r1, r0
1333:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2293              		.loc 1 1333 0
 2294 0014 1450A0E3 		mov	r5, #20
1332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2295              		.loc 1 1332 0
 2296 0018 E0819FE5 		ldr	r8, .L195+4
1323:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2297              		.loc 1 1323 0
 2298 001c 0070A0E1 		mov	r7, r0
1332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2299              		.loc 1 1332 0
 2300 0020 0400A0E1 		mov	r0, r4
 2301              	.LVL245:
 2302 0024 00808DE5 		str	r8, [sp]
 2303 0028 FEFFFFEB 		bl	prvConnectHelperWithRetry
 2304              	.LVL246:
1333:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2305              		.loc 1 1333 0
 2306 002c 353500E3 		movw	r3, #1333
 2307 0030 CC219FE5 		ldr	r2, .L195+8
 2308 0034 0010A0E1 		mov	r1, r0
 2309 0038 00508DE5 		str	r5, [sp]
 2310 003c 0000A0E3 		mov	r0, #0
 2311              	.LVL247:
 2312 0040 FEFFFFEB 		bl	UnityAssertEqualNumber
 2313              	.LVL248:
1335:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32( SOCKETS_ERROR_NONE, xResult );
 2314              		.loc 1 1335 0
 2315 0044 0010A0E3 		mov	r1, #0
 2316 0048 000094E5 		ldr	r0, [r4]
 2317 004c FEFFFFEB 		bl	SOCKETS_Shutdown
 2318              	.LVL249:
1336:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2319              		.loc 1 1336 0
 2320 0050 0020A0E3 		mov	r2, #0
 2321 0054 0010A0E1 		mov	r1, r0
 2322 0058 00508DE5 		str	r5, [sp]
 2323 005c 383500E3 		movw	r3, #1336
 2324 0060 0200A0E1 		mov	r0, r2
 2325              	.LVL250:
 2326 0064 FEFFFFEB 		bl	UnityAssertEqualNumber
 2327              	.LVL251:
 2328              	.L190:
1340:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2329              		.loc 1 1340 0 discriminator 1
 2330 0068 0F108DE2 		add	r1, sp, #15
 2331 006c 000094E5 		ldr	r0, [r4]
 2332 0070 0030A0E3 		mov	r3, #0
 2333 0074 0120A0E3 		mov	r2, #1
 2334 0078 FEFFFFEB 		bl	SOCKETS_Recv
 2335              	.LVL252:
1342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2336              		.loc 1 1342 0 discriminator 1
 2337 007c 001050E2 		subs	r1, r0, #0
 2338 0080 F8FFFFAA 		bge	.L190
1344:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2339              		.loc 1 1344 0
 2340 0084 0020A0E3 		mov	r2, #0
 2341 0088 2430A0E3 		mov	r3, #36
 2342 008c 0200A0E1 		mov	r0, r2
 2343              	.LVL253:
 2344 0090 00308DE5 		str	r3, [sp]
 2345 0094 153DA0E3 		mov	r3, #1344
 2346              	.LBB152:
 2347              	.LBB153:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2348              		.loc 1 635 0
 2349 0098 0050A0E3 		mov	r5, #0
 2350              	.LBE153:
 2351              	.LBE152:
1347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2352              		.loc 1 1347 0
 2353 009c 1460A0E3 		mov	r6, #20
1344:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2354              		.loc 1 1344 0
 2355 00a0 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2356              	.LVL254:
1346:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 2357              		.loc 1 1346 0
 2358 00a4 000094E5 		ldr	r0, [r4]
 2359              	.LVL255:
 2360              	.LBB156:
 2361              	.LBB154:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2362              		.loc 1 633 0
 2363 00a8 FEFFFFEB 		bl	SOCKETS_Close
 2364              	.LVL256:
 2365              	.LBE154:
 2366              	.LBE156:
1347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2367              		.loc 1 1347 0
 2368 00ac 433500E3 		movw	r3, #1347
 2369 00b0 0010A0E1 		mov	r1, r0
 2370 00b4 4C219FE5 		ldr	r2, .L195+12
 2371 00b8 0500A0E1 		mov	r0, r5
 2372              	.LVL257:
 2373 00bc 00608DE5 		str	r6, [sp]
 2374              	.LBB157:
 2375              	.LBB155:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2376              		.loc 1 635 0
 2377 00c0 005088E5 		str	r5, [r8]
 2378              	.LVL258:
 2379              	.LBE155:
 2380              	.LBE157:
1347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2381              		.loc 1 1347 0
 2382 00c4 FEFFFFEB 		bl	UnityAssertEqualNumber
 2383              	.LVL259:
1352:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2384              		.loc 1 1352 0
 2385 00c8 203E04E3 		movw	r3, #20000
 2386 00cc 0710A0E1 		mov	r1, r7
 2387 00d0 0320A0E1 		mov	r2, r3
 2388 00d4 00808DE5 		str	r8, [sp]
 2389 00d8 1C019FE5 		ldr	r0, .L195
 2390 00dc FEFFFFEB 		bl	prvConnectHelperWithRetry
 2391              	.LVL260:
1353:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2392              		.loc 1 1353 0
 2393 00e0 493500E3 		movw	r3, #1353
 2394 00e4 18219FE5 		ldr	r2, .L195+8
 2395 00e8 0010A0E1 		mov	r1, r0
 2396 00ec 00608DE5 		str	r6, [sp]
 2397 00f0 0500A0E1 		mov	r0, r5
 2398              	.LVL261:
 2399 00f4 FEFFFFEB 		bl	UnityAssertEqualNumber
 2400              	.LVL262:
1358:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32( SOCKETS_ERROR_NONE, xResult );
 2401              		.loc 1 1358 0
 2402 00f8 0110A0E3 		mov	r1, #1
 2403 00fc 000094E5 		ldr	r0, [r4]
 2404 0100 FEFFFFEB 		bl	SOCKETS_Shutdown
 2405              	.LVL263:
1359:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2406              		.loc 1 1359 0
 2407 0104 4F3500E3 		movw	r3, #1359
 2408 0108 0010A0E1 		mov	r1, r0
 2409 010c 0520A0E1 		mov	r2, r5
 2410 0110 0500A0E1 		mov	r0, r5
 2411              	.LVL264:
 2412 0114 00608DE5 		str	r6, [sp]
 2413 0118 FEFFFFEB 		bl	UnityAssertEqualNumber
 2414              	.LVL265:
1370:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 2415              		.loc 1 1370 0
 2416 011c 000094E5 		ldr	r0, [r4]
 2417              	.LVL266:
 2418              	.LBB158:
 2419              	.LBB159:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2420              		.loc 1 633 0
 2421 0120 FEFFFFEB 		bl	SOCKETS_Close
 2422              	.LVL267:
 2423              	.LBE159:
 2424              	.LBE158:
1371:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2425              		.loc 1 1371 0
 2426 0124 5B3500E3 		movw	r3, #1371
 2427 0128 0010A0E1 		mov	r1, r0
 2428 012c D4209FE5 		ldr	r2, .L195+12
 2429 0130 0500A0E1 		mov	r0, r5
 2430              	.LVL268:
 2431 0134 00608DE5 		str	r6, [sp]
 2432              	.LBB161:
 2433              	.LBB160:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2434              		.loc 1 635 0
 2435 0138 005088E5 		str	r5, [r8]
 2436              	.LVL269:
 2437              	.LBE160:
 2438              	.LBE161:
1371:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2439              		.loc 1 1371 0
 2440 013c FEFFFFEB 		bl	UnityAssertEqualNumber
 2441              	.LVL270:
1376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2442              		.loc 1 1376 0
 2443 0140 203E04E3 		movw	r3, #20000
 2444 0144 0710A0E1 		mov	r1, r7
 2445 0148 0320A0E1 		mov	r2, r3
 2446 014c 00808DE5 		str	r8, [sp]
 2447 0150 A4009FE5 		ldr	r0, .L195
 2448 0154 FEFFFFEB 		bl	prvConnectHelperWithRetry
 2449              	.LVL271:
1377:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2450              		.loc 1 1377 0
 2451 0158 613500E3 		movw	r3, #1377
 2452 015c A0209FE5 		ldr	r2, .L195+8
 2453 0160 0010A0E1 		mov	r1, r0
 2454 0164 00608DE5 		str	r6, [sp]
 2455 0168 0500A0E1 		mov	r0, r5
 2456              	.LVL272:
 2457 016c FEFFFFEB 		bl	UnityAssertEqualNumber
 2458              	.LVL273:
1379:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32( SOCKETS_ERROR_NONE, xResult );
 2459              		.loc 1 1379 0
 2460 0170 0210A0E3 		mov	r1, #2
 2461 0174 000094E5 		ldr	r0, [r4]
 2462 0178 FEFFFFEB 		bl	SOCKETS_Shutdown
 2463              	.LVL274:
1380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2464              		.loc 1 1380 0
 2465 017c 00608DE5 		str	r6, [sp]
 2466 0180 0010A0E1 		mov	r1, r0
 2467 0184 643500E3 		movw	r3, #1380
 2468 0188 0520A0E1 		mov	r2, r5
 2469 018c 0500A0E1 		mov	r0, r5
 2470              	.LVL275:
 2471 0190 FEFFFFEB 		bl	UnityAssertEqualNumber
 2472              	.LVL276:
 2473              	.L191:
1384:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2474              		.loc 1 1384 0 discriminator 1
 2475 0194 0F108DE2 		add	r1, sp, #15
 2476 0198 000094E5 		ldr	r0, [r4]
 2477 019c 0030A0E3 		mov	r3, #0
 2478 01a0 0120A0E3 		mov	r2, #1
 2479 01a4 FEFFFFEB 		bl	SOCKETS_Recv
 2480              	.LVL277:
1386:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2481              		.loc 1 1386 0 discriminator 1
 2482 01a8 001050E2 		subs	r1, r0, #0
 2483 01ac F8FFFFAA 		bge	.L191
1388:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2484              		.loc 1 1388 0
 2485 01b0 0020A0E3 		mov	r2, #0
 2486 01b4 2430A0E3 		mov	r3, #36
 2487 01b8 0200A0E1 		mov	r0, r2
 2488              	.LVL278:
 2489 01bc 00308DE5 		str	r3, [sp]
 2490 01c0 6C3500E3 		movw	r3, #1388
 2491 01c4 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2492              	.LVL279:
1390:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 2493              		.loc 1 1390 0
 2494 01c8 000094E5 		ldr	r0, [r4]
 2495              	.LVL280:
 2496              	.LBB162:
 2497              	.LBB163:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2498              		.loc 1 633 0
 2499 01cc FEFFFFEB 		bl	SOCKETS_Close
 2500              	.LVL281:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2501              		.loc 1 635 0
 2502 01d0 00C0A0E3 		mov	ip, #0
 2503              	.LBE163:
 2504              	.LBE162:
1391:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2505              		.loc 1 1391 0
 2506 01d4 1430A0E3 		mov	r3, #20
 2507 01d8 00308DE5 		str	r3, [sp]
 2508 01dc 0010A0E1 		mov	r1, r0
 2509 01e0 6F3500E3 		movw	r3, #1391
 2510 01e4 1C209FE5 		ldr	r2, .L195+12
 2511 01e8 0C00A0E1 		mov	r0, ip
 2512              	.LVL282:
 2513              	.LBB165:
 2514              	.LBB164:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2515              		.loc 1 635 0
 2516 01ec 00C088E5 		str	ip, [r8]
 2517              	.LVL283:
 2518              	.LBE164:
 2519              	.LBE165:
1391:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2520              		.loc 1 1391 0
 2521 01f0 FEFFFFEB 		bl	UnityAssertEqualNumber
 2522              	.LVL284:
1392:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2523              		.loc 1 1392 0
 2524 01f4 10D08DE2 		add	sp, sp, #16
 2525              		.cfi_def_cfa_offset 24
 2526              		@ sp needed
 2527 01f8 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 2528              	.L196:
 2529              		.align	2
 2530              	.L195:
 2531 01fc 00000000 		.word	.LANCHOR1
 2532 0200 00000000 		.word	.LANCHOR0
 2533 0204 00000000 		.word	.LC29
 2534 0208 92000000 		.word	.LC18
 2535              		.cfi_endproc
 2536              	.LFE67:
 2538              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_,"ax",%progbits
 2539              		.align	2
 2540              		.global	TEST_Full_TCP_AFQP_SOCKETS_Shutdown_
 2541              		.syntax unified
 2542              		.arm
 2543              		.fpu neon
 2545              	TEST_Full_TCP_AFQP_SOCKETS_Shutdown_:
 2546              	.LFB69:
1395:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2547              		.loc 1 1395 0
 2548              		.cfi_startproc
 2549              		@ args = 0, pretend = 0, frame = 0
 2550              		@ frame_needed = 0, uses_anonymous_args = 0
 2551              		@ link register save eliminated.
1398:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2552              		.loc 1 1398 0
 2553 0000 0100A0E3 		mov	r0, #1
 2554 0004 FEFFFFEA 		b	prvSOCKETS_Shutdown
 2555              	.LVL285:
 2556              		.cfi_endproc
 2557              	.LFE69:
 2559              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_,"ax",%progbits
 2560              		.align	2
 2561              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_
 2562              		.syntax unified
 2563              		.arm
 2564              		.fpu neon
 2566              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_:
 2567              	.LFB71:
1402:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2568              		.loc 1 1402 0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
1405:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2573              		.loc 1 1405 0
 2574 0000 0000A0E3 		mov	r0, #0
 2575 0004 FEFFFFEA 		b	prvSOCKETS_Shutdown
 2576              	.LVL286:
 2577              		.cfi_endproc
 2578              	.LFE71:
 2580              		.section	.text.prvSend_Invalid,"ax",%progbits
 2581              		.align	2
 2582              		.syntax unified
 2583              		.arm
 2584              		.fpu neon
 2586              	prvSend_Invalid:
 2587              	.LFB105:
1977:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2588              		.loc 1 1977 0
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 8
 2591              		@ frame_needed = 0, uses_anonymous_args = 0
 2592              	.LVL287:
 2593 0000 7F402DE9 		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 2594              		.cfi_def_cfa_offset 32
 2595              		.cfi_offset 4, -16
 2596              		.cfi_offset 5, -12
 2597              		.cfi_offset 6, -8
 2598              		.cfi_offset 14, -4
1979:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2599              		.loc 1 1979 0
 2600 0004 CC319FE5 		ldr	r3, .L212
1977:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2601              		.loc 1 1977 0
 2602 0008 0C008DE5 		str	r0, [sp, #12]
1979:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2603              		.loc 1 1979 0
 2604 000c 003093E5 		ldr	r3, [r3]
1984:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 2605              		.loc 1 1984 0
 2606 0010 C4019FE5 		ldr	r0, .L212+4
 2607              	.LVL288:
1979:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2608              		.loc 1 1979 0
 2609 0014 08308DE5 		str	r3, [sp, #8]
 2610              	.LVL289:
1984:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 2611              		.loc 1 1984 0
 2612 0018 FEFFFFEB 		bl	setjmp
 2613              	.LVL290:
 2614 001c 004050E2 		subs	r4, r0, #0
 2615 0020 6000001A 		bne	.L209
1987:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2616              		.loc 1 1987 0
 2617 0024 B4319FE5 		ldr	r3, .L212+8
1988:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2618              		.loc 1 1988 0
 2619 0028 1450A0E3 		mov	r5, #20
1987:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2620              		.loc 1 1987 0
 2621 002c B0619FE5 		ldr	r6, .L212+12
 2622 0030 0C109DE5 		ldr	r1, [sp, #12]
 2623 0034 00308DE5 		str	r3, [sp]
 2624 0038 203E04E3 		movw	r3, #20000
 2625 003c 0320A0E1 		mov	r2, r3
 2626 0040 0600A0E1 		mov	r0, r6
 2627 0044 FEFFFFEB 		bl	prvConnectHelperWithRetry
 2628              	.LVL291:
1988:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2629              		.loc 1 1988 0
 2630 0048 C43700E3 		movw	r3, #1988
 2631 004c 0010A0E1 		mov	r1, r0
 2632 0050 90219FE5 		ldr	r2, .L212+16
 2633 0054 0400A0E1 		mov	r0, r4
 2634              	.LVL292:
 2635 0058 00508DE5 		str	r5, [sp]
 2636 005c FEFFFFEB 		bl	UnityAssertEqualNumber
 2637              	.LVL293:
1991:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket send fails with invalid socket" );
 2638              		.loc 1 1991 0
 2639 0060 0430A0E1 		mov	r3, r4
 2640 0064 4B2FA0E3 		mov	r2, #300
 2641 0068 08109DE5 		ldr	r1, [sp, #8]
 2642 006c 0000E0E3 		mvn	r0, #0
 2643 0070 FEFFFFEB 		bl	SOCKETS_Send
 2644              	.LVL294:
1992:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2645              		.loc 1 1992 0
 2646 0074 C83700E3 		movw	r3, #1992
 2647 0078 0010A0E1 		mov	r1, r0
 2648 007c 68219FE5 		ldr	r2, .L212+20
 2649 0080 0400A0E1 		mov	r0, r4
 2650              	.LVL295:
 2651 0084 00508DE5 		str	r5, [sp]
 2652 0088 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2653              	.LVL296:
1996:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket send should return error for NULL 
 2654              		.loc 1 1996 0
 2655 008c 0430A0E1 		mov	r3, r4
 2656 0090 4B2FA0E3 		mov	r2, #300
 2657 0094 0410A0E1 		mov	r1, r4
 2658 0098 000096E5 		ldr	r0, [r6]
 2659 009c FEFFFFEB 		bl	SOCKETS_Send
 2660              	.LVL297:
1997:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2661              		.loc 1 1997 0
 2662 00a0 00508DE5 		str	r5, [sp]
 2663 00a4 0010A0E1 		mov	r1, r0
 2664 00a8 CD3700E3 		movw	r3, #1997
 2665 00ac 3C219FE5 		ldr	r2, .L212+24
 2666 00b0 0400A0E1 		mov	r0, r4
 2667              	.LVL298:
 2668 00b4 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2669              	.LVL299:
 2670              	.L203:
2005:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 2671              		.loc 1 2005 0
 2672 00b8 24319FE5 		ldr	r3, .L212+12
 2673 00bc 000093E5 		ldr	r0, [r3]
 2674              	.LVL300:
 2675              	.LBB166:
 2676              	.LBB167:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2677              		.loc 1 633 0
 2678 00c0 FEFFFFEB 		bl	SOCKETS_Close
 2679              	.LVL301:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2680              		.loc 1 635 0
 2681 00c4 14319FE5 		ldr	r3, .L212+8
 2682 00c8 00C0A0E3 		mov	ip, #0
 2683              	.LBE167:
 2684              	.LBE166:
2006:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2685              		.loc 1 2006 0
 2686 00cc 0010A0E1 		mov	r1, r0
 2687 00d0 1C219FE5 		ldr	r2, .L212+28
 2688 00d4 0C00A0E1 		mov	r0, ip
 2689              	.LVL302:
 2690              	.LBB169:
 2691              	.LBB168:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2692              		.loc 1 635 0
 2693 00d8 00C083E5 		str	ip, [r3]
 2694              	.LVL303:
 2695              	.LBE168:
 2696              	.LBE169:
2006:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2697              		.loc 1 2006 0
 2698 00dc 1430A0E3 		mov	r3, #20
 2699 00e0 00308DE5 		str	r3, [sp]
 2700 00e4 D63700E3 		movw	r3, #2006
 2701 00e8 FEFFFFEB 		bl	UnityAssertEqualNumber
 2702              	.LVL304:
2009:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 2703              		.loc 1 2009 0
 2704 00ec E8009FE5 		ldr	r0, .L212+4
 2705 00f0 FEFFFFEB 		bl	setjmp
 2706              	.LVL305:
 2707 00f4 000050E3 		cmp	r0, #0
 2708 00f8 3200001A 		bne	.L204
2011:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 2709              		.loc 1 2011 0
 2710 00fc DC009FE5 		ldr	r0, .L212+8
 2711 0100 FEFFFFEB 		bl	prvTcpSocketHelper
 2712              	.LVL306:
 2713 0104 D8309FE5 		ldr	r3, .L212+12
 2714 0108 000083E5 		str	r0, [r3]
2012:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2715              		.loc 1 2012 0
 2716 010c 003093E5 		ldr	r3, [r3]
 2717 0110 010073E3 		cmn	r3, #1
 2718 0114 2700000A 		beq	.L205
 2719              	.L207:
2014:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt failed" );
 2720              		.loc 1 2014 0
 2721 0118 C4509FE5 		ldr	r5, .L212+12
 2722 011c 202E04E3 		movw	r2, #20000
 2723 0120 0210A0E1 		mov	r1, r2
2015:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( xSocket, pucTxBuffer, 300, 0 );
 2724              		.loc 1 2015 0
 2725 0124 1440A0E3 		mov	r4, #20
2014:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt failed" );
 2726              		.loc 1 2014 0
 2727 0128 000095E5 		ldr	r0, [r5]
 2728 012c FEFFFFEB 		bl	prvSetSockOptHelper
 2729              	.LVL307:
2015:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Send( xSocket, pucTxBuffer, 300, 0 );
 2730              		.loc 1 2015 0
 2731 0130 DF3700E3 		movw	r3, #2015
 2732 0134 0010A0E1 		mov	r1, r0
 2733 0138 B8209FE5 		ldr	r2, .L212+32
 2734 013c 0000A0E3 		mov	r0, #0
 2735              	.LVL308:
 2736 0140 00408DE5 		str	r4, [sp]
 2737 0144 FEFFFFEB 		bl	UnityAssertEqualNumber
 2738              	.LVL309:
2016:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket send worked with an unconnected so
 2739              		.loc 1 2016 0
 2740 0148 0030A0E3 		mov	r3, #0
 2741 014c 4B2FA0E3 		mov	r2, #300
 2742 0150 08109DE5 		ldr	r1, [sp, #8]
 2743 0154 000095E5 		ldr	r0, [r5]
 2744 0158 FEFFFFEB 		bl	SOCKETS_Send
 2745              	.LVL310:
2017:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2746              		.loc 1 2017 0
 2747 015c E13700E3 		movw	r3, #2017
 2748 0160 0010A0E1 		mov	r1, r0
 2749 0164 90209FE5 		ldr	r2, .L212+36
 2750 0168 0000A0E3 		mov	r0, #0
 2751              	.LVL311:
 2752 016c 00408DE5 		str	r4, [sp]
 2753 0170 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2754              	.LVL312:
2019:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket close failed" );
 2755              		.loc 1 2019 0
 2756 0174 000095E5 		ldr	r0, [r5]
 2757              	.LVL313:
 2758              	.LBB170:
 2759              	.LBB171:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2760              		.loc 1 633 0
 2761 0178 FEFFFFEB 		bl	SOCKETS_Close
 2762              	.LVL314:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2763              		.loc 1 635 0
 2764 017c 5C309FE5 		ldr	r3, .L212+8
 2765 0180 00C0A0E3 		mov	ip, #0
 2766              	.LBE171:
 2767              	.LBE170:
2020:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2768              		.loc 1 2020 0
 2769 0184 0010A0E1 		mov	r1, r0
 2770 0188 70209FE5 		ldr	r2, .L212+40
 2771 018c 0C00A0E1 		mov	r0, ip
 2772              	.LVL315:
 2773              	.LBB173:
 2774              	.LBB172:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2775              		.loc 1 635 0
 2776 0190 00C083E5 		str	ip, [r3]
 2777              	.LVL316:
 2778              	.LBE172:
 2779              	.LBE173:
2020:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2780              		.loc 1 2020 0
 2781 0194 E43700E3 		movw	r3, #2020
 2782 0198 00408DE5 		str	r4, [sp]
 2783 019c FEFFFFEB 		bl	UnityAssertEqualNumber
 2784              	.LVL317:
 2785              	.L199:
2029:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2786              		.loc 1 2029 0
 2787 01a0 10D08DE2 		add	sp, sp, #16
 2788              		.cfi_remember_state
 2789              		.cfi_def_cfa_offset 16
 2790              		@ sp needed
 2791 01a4 7080BDE8 		pop	{r4, r5, r6, pc}
 2792              	.L209:
 2793              		.cfi_restore_state
2001:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2794              		.loc 1 2001 0
 2795 01a8 D11700E3 		movw	r1, #2001
 2796 01ac 50009FE5 		ldr	r0, .L212+44
 2797 01b0 FEFFFFEB 		bl	UnityFail
 2798              	.LVL318:
 2799 01b4 BFFFFFEA 		b	.L203
 2800              	.L205:
2012:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2801              		.loc 1 2012 0 discriminator 1
 2802 01b8 DC1700E3 		movw	r1, #2012
 2803 01bc 44009FE5 		ldr	r0, .L212+48
 2804 01c0 FEFFFFEB 		bl	UnityFail
 2805              	.LVL319:
 2806 01c4 D3FFFFEA 		b	.L207
 2807              	.L204:
2024:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 2808              		.loc 1 2024 0
 2809 01c8 E81700E3 		movw	r1, #2024
 2810 01cc 38009FE5 		ldr	r0, .L212+52
 2811 01d0 FEFFFFEB 		bl	UnityFail
 2812              	.LVL320:
 2813 01d4 F1FFFFEA 		b	.L199
 2814              	.L213:
 2815              		.align	2
 2816              	.L212:
 2817 01d8 00000000 		.word	.LANCHOR11
 2818 01dc 28000000 		.word	Unity+40
 2819 01e0 00000000 		.word	.LANCHOR0
 2820 01e4 00000000 		.word	.LANCHOR1
 2821 01e8 00000000 		.word	.LC29
 2822 01ec 00000000 		.word	.LC34
 2823 01f0 26000000 		.word	.LC35
 2824 01f4 92000000 		.word	.LC18
 2825 01f8 9B000000 		.word	.LC37
 2826 01fc AE000000 		.word	.LC38
 2827 0200 DC000000 		.word	.LC39
 2828 0204 5C000000 		.word	.LC36
 2829 0208 00000000 		.word	.LC13
 2830 020c F0000000 		.word	.LC40
 2831              		.cfi_endproc
 2832              	.LFE105:
 2834              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_,"ax",%progbits
 2835              		.align	2
 2836              		.global	TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_
 2837              		.syntax unified
 2838              		.arm
 2839              		.fpu neon
 2841              	TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_:
 2842              	.LFB107:
2032:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2843              		.loc 1 2032 0
 2844              		.cfi_startproc
 2845              		@ args = 0, pretend = 0, frame = 0
 2846              		@ frame_needed = 0, uses_anonymous_args = 0
 2847              		@ link register save eliminated.
2035:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2848              		.loc 1 2035 0
 2849 0000 0100A0E3 		mov	r0, #1
 2850 0004 FEFFFFEA 		b	prvSend_Invalid
 2851              	.LVL321:
 2852              		.cfi_endproc
 2853              	.LFE107:
 2855              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_,"ax",%progbits
 2856              		.align	2
 2857              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_
 2858              		.syntax unified
 2859              		.arm
 2860              		.fpu neon
 2862              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_:
 2863              	.LFB109:
2039:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 2864              		.loc 1 2039 0
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 0
 2867              		@ frame_needed = 0, uses_anonymous_args = 0
 2868              		@ link register save eliminated.
2042:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2869              		.loc 1 2042 0
 2870 0000 0000A0E3 		mov	r0, #0
 2871 0004 FEFFFFEA 		b	prvSend_Invalid
 2872              	.LVL322:
 2873              		.cfi_endproc
 2874              	.LFE109:
 2876              		.section	.text.prvRecv_Invalid,"ax",%progbits
 2877              		.align	2
 2878              		.syntax unified
 2879              		.arm
 2880              		.fpu neon
 2882              	prvRecv_Invalid:
 2883              	.LFB110:
2048:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 2884              		.loc 1 2048 0
 2885              		.cfi_startproc
 2886              		@ args = 0, pretend = 0, frame = 0
 2887              		@ frame_needed = 0, uses_anonymous_args = 0
 2888              	.LVL323:
 2889 0000 73402DE9 		push	{r0, r1, r4, r5, r6, lr}
 2890              		.cfi_def_cfa_offset 24
 2891              		.cfi_offset 4, -16
 2892              		.cfi_offset 5, -12
 2893              		.cfi_offset 6, -8
 2894              		.cfi_offset 14, -4
2054:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2895              		.loc 1 2054 0
 2896 0004 203E04E3 		movw	r3, #20000
 2897 0008 BC509FE5 		ldr	r5, .L218
2055:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2898              		.loc 1 2055 0
 2899 000c 1440A0E3 		mov	r4, #20
2054:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 2900              		.loc 1 2054 0
 2901 0010 0320A0E1 		mov	r2, r3
 2902 0014 0010A0E1 		mov	r1, r0
 2903 0018 B0609FE5 		ldr	r6, .L218+4
 2904 001c 0500A0E1 		mov	r0, r5
 2905              	.LVL324:
 2906 0020 00608DE5 		str	r6, [sp]
 2907 0024 FEFFFFEB 		bl	prvConnectHelperWithRetry
 2908              	.LVL325:
2055:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2909              		.loc 1 2055 0
 2910 0028 00408DE5 		str	r4, [sp]
 2911 002c 0010A0E1 		mov	r1, r0
 2912 0030 073800E3 		movw	r3, #2055
 2913 0034 98209FE5 		ldr	r2, .L218+8
 2914 0038 0000A0E3 		mov	r0, #0
 2915              	.LVL326:
 2916 003c FEFFFFEB 		bl	UnityAssertEqualNumber
 2917              	.LVL327:
2058:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket receive with NULL receive buffer shoul
 2918              		.loc 1 2058 0
 2919 0040 0030A0E3 		mov	r3, #0
 2920 0044 000095E5 		ldr	r0, [r5]
 2921 0048 0310A0E1 		mov	r1, r3
 2922 004c 6420A0E3 		mov	r2, #100
 2923 0050 FEFFFFEB 		bl	SOCKETS_Recv
 2924              	.LVL328:
2059:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2925              		.loc 1 2059 0
 2926 0054 00408DE5 		str	r4, [sp]
 2927 0058 0010A0E1 		mov	r1, r0
 2928 005c 0B3800E3 		movw	r3, #2059
 2929 0060 70209FE5 		ldr	r2, .L218+12
 2930 0064 0000A0E3 		mov	r0, #0
 2931              	.LVL329:
 2932 0068 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2933              	.LVL330:
2062:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Socket receive with invalid socket should hav
 2934              		.loc 1 2062 0
 2935 006c 68109FE5 		ldr	r1, .L218+16
 2936 0070 0030A0E3 		mov	r3, #0
 2937 0074 7D2EA0E3 		mov	r2, #2000
 2938 0078 0000E0E3 		mvn	r0, #0
 2939 007c 001091E5 		ldr	r1, [r1]
 2940 0080 FEFFFFEB 		bl	SOCKETS_Recv
 2941              	.LVL331:
2063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2942              		.loc 1 2063 0
 2943 0084 0F3800E3 		movw	r3, #2063
 2944 0088 0010A0E1 		mov	r1, r0
 2945 008c 4C209FE5 		ldr	r2, .L218+20
 2946 0090 0000A0E3 		mov	r0, #0
 2947              	.LVL332:
 2948 0094 00408DE5 		str	r4, [sp]
 2949 0098 FEFFFFEB 		bl	UnityAssertSmallerNumber
 2950              	.LVL333:
2066:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 2951              		.loc 1 2066 0
 2952 009c 000095E5 		ldr	r0, [r5]
 2953              	.LVL334:
 2954              	.LBB174:
 2955              	.LBB175:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2956              		.loc 1 633 0
 2957 00a0 FEFFFFEB 		bl	SOCKETS_Close
 2958              	.LVL335:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2959              		.loc 1 635 0
 2960 00a4 00C0A0E3 		mov	ip, #0
 2961              	.LBE175:
 2962              	.LBE174:
2067:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2963              		.loc 1 2067 0
 2964 00a8 0010A0E1 		mov	r1, r0
 2965 00ac 00408DE5 		str	r4, [sp]
 2966 00b0 133800E3 		movw	r3, #2067
 2967 00b4 28209FE5 		ldr	r2, .L218+24
 2968 00b8 0C00A0E1 		mov	r0, ip
 2969              	.LVL336:
 2970              	.LBB177:
 2971              	.LBB176:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2972              		.loc 1 635 0
 2973 00bc 00C086E5 		str	ip, [r6]
 2974              	.LVL337:
 2975              	.LBE176:
 2976              	.LBE177:
2067:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 2977              		.loc 1 2067 0
 2978 00c0 FEFFFFEB 		bl	UnityAssertEqualNumber
 2979              	.LVL338:
2068:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 2980              		.loc 1 2068 0
 2981 00c4 08D08DE2 		add	sp, sp, #8
 2982              		.cfi_def_cfa_offset 16
 2983              		@ sp needed
 2984 00c8 7080BDE8 		pop	{r4, r5, r6, pc}
 2985              	.L219:
 2986              		.align	2
 2987              	.L218:
 2988 00cc 00000000 		.word	.LANCHOR1
 2989 00d0 00000000 		.word	.LANCHOR0
 2990 00d4 00000000 		.word	.LC29
 2991 00d8 00000000 		.word	.LC41
 2992 00dc 00000000 		.word	.LANCHOR12
 2993 00e0 44000000 		.word	.LC42
 2994 00e4 92000000 		.word	.LC18
 2995              		.cfi_endproc
 2996              	.LFE110:
 2998              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_,"ax",%progbits
 2999              		.align	2
 3000              		.global	TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_
 3001              		.syntax unified
 3002              		.arm
 3003              		.fpu neon
 3005              	TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_:
 3006              	.LFB112:
2071:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3007              		.loc 1 2071 0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 0
 3010              		@ frame_needed = 0, uses_anonymous_args = 0
 3011              		@ link register save eliminated.
2074:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3012              		.loc 1 2074 0
 3013 0000 0100A0E3 		mov	r0, #1
 3014 0004 FEFFFFEA 		b	prvRecv_Invalid
 3015              	.LVL339:
 3016              		.cfi_endproc
 3017              	.LFE112:
 3019              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_,"ax",%progbits
 3020              		.align	2
 3021              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_
 3022              		.syntax unified
 3023              		.arm
 3024              		.fpu neon
 3026              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_:
 3027              	.LFB114:
2078:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3028              		.loc 1 2078 0
 3029              		.cfi_startproc
 3030              		@ args = 0, pretend = 0, frame = 0
 3031              		@ frame_needed = 0, uses_anonymous_args = 0
 3032              		@ link register save eliminated.
2081:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3033              		.loc 1 2081 0
 3034 0000 0000A0E3 		mov	r0, #0
 3035 0004 FEFFFFEA 		b	prvRecv_Invalid
 3036              	.LVL340:
 3037              		.cfi_endproc
 3038              	.LFE114:
 3040              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_,"ax",%prog
 3041              		.align	2
 3042              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_
 3043              		.syntax unified
 3044              		.arm
 3045              		.fpu neon
 3047              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_:
 3048              	.LFB120:
2206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3049              		.loc 1 2206 0
 3050              		.cfi_startproc
 3051              		@ args = 0, pretend = 0, frame = 8
 3052              		@ frame_needed = 0, uses_anonymous_args = 0
 3053              	.LVL341:
 3054 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 3055              		.cfi_def_cfa_offset 20
 3056              		.cfi_offset 4, -20
 3057              		.cfi_offset 5, -16
 3058              		.cfi_offset 6, -12
 3059              		.cfi_offset 7, -8
 3060              		.cfi_offset 14, -4
 3061              	.LBB184:
 3062              	.LBB185:
2168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 3063              		.loc 1 2168 0
 3064 0004 203E04E3 		movw	r3, #20000
 3065 0008 48419FE5 		ldr	r4, .L225
 3066              	.LBE185:
 3067              	.LBE184:
2206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3068              		.loc 1 2206 0
 3069 000c 14D04DE2 		sub	sp, sp, #20
 3070              		.cfi_def_cfa_offset 40
 3071              	.LBB195:
 3072              	.LBB194:
2168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 3073              		.loc 1 2168 0
 3074 0010 0320A0E1 		mov	r2, r3
2169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3075              		.loc 1 2169 0
 3076 0014 1450A0E3 		mov	r5, #20
2168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 3077              		.loc 1 2168 0
 3078 0018 3C719FE5 		ldr	r7, .L225+4
 3079 001c 0010A0E3 		mov	r1, #0
 3080 0020 0400A0E1 		mov	r0, r4
 3081 0024 00708DE5 		str	r7, [sp]
 3082 0028 FEFFFFEB 		bl	prvConnectHelperWithRetry
 3083              	.LVL342:
2169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3084              		.loc 1 2169 0
 3085 002c 793800E3 		movw	r3, #2169
 3086 0030 0010A0E1 		mov	r1, r0
 3087 0034 24219FE5 		ldr	r2, .L225+8
 3088 0038 0000A0E3 		mov	r0, #0
 3089              	.LVL343:
 3090 003c 00508DE5 		str	r5, [sp]
 3091 0040 FEFFFFEB 		bl	UnityAssertEqualNumber
 3092              	.LVL344:
2171:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 3093              		.loc 1 2171 0
 3094 0044 000094E5 		ldr	r0, [r4]
 3095              	.LVL345:
 3096              	.LBB186:
 3097              	.LBB187:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3098              		.loc 1 633 0
 3099 0048 FEFFFFEB 		bl	SOCKETS_Close
 3100              	.LVL346:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3101              		.loc 1 635 0
 3102 004c 00C0A0E3 		mov	ip, #0
 3103              	.LBE187:
 3104              	.LBE186:
2172:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3105              		.loc 1 2172 0
 3106 0050 7C3800E3 		movw	r3, #2172
 3107 0054 0010A0E1 		mov	r1, r0
 3108 0058 00508DE5 		str	r5, [sp]
 3109 005c 0C00A0E1 		mov	r0, ip
 3110              	.LVL347:
 3111 0060 FC209FE5 		ldr	r2, .L225+12
 3112              	.LBB189:
 3113              	.LBB188:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3114              		.loc 1 635 0
 3115 0064 00C087E5 		str	ip, [r7]
 3116              	.LVL348:
 3117 0068 0450A0E1 		mov	r5, r4
 3118              	.LBE188:
 3119              	.LBE189:
2172:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3120              		.loc 1 2172 0
 3121 006c FEFFFFEB 		bl	UnityAssertEqualNumber
 3122              	.LVL349:
2176:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 3123              		.loc 1 2176 0
 3124 0070 0700A0E1 		mov	r0, r7
 3125 0074 FEFFFFEB 		bl	prvTcpSocketHelper
 3126              	.LVL350:
 3127 0078 000084E5 		str	r0, [r4]
2177:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3128              		.loc 1 2177 0
 3129 007c 003094E5 		ldr	r3, [r4]
 3130 0080 010073E3 		cmn	r3, #1
 3131 0084 0200001A 		bne	.L223
 3132 0088 811800E3 		movw	r1, #2177
 3133 008c D4009FE5 		ldr	r0, .L225+16
 3134 0090 FEFFFFEB 		bl	UnityFail
 3135              	.LVL351:
 3136              	.L223:
2179:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 3137              		.loc 1 2179 0
 3138 0094 202E04E3 		movw	r2, #20000
2180:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3139              		.loc 1 2180 0
 3140 0098 1460A0E3 		mov	r6, #20
2179:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 3141              		.loc 1 2179 0
 3142 009c 0210A0E1 		mov	r1, r2
 3143 00a0 000095E5 		ldr	r0, [r5]
2183:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 3144              		.loc 1 2183 0
 3145 00a4 0040A0E3 		mov	r4, #0
2179:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 3146              		.loc 1 2179 0
 3147 00a8 FEFFFFEB 		bl	prvSetSockOptHelper
 3148              	.LVL352:
2180:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3149              		.loc 1 2180 0
 3150 00ac 00608DE5 		str	r6, [sp]
 3151 00b0 0010A0E1 		mov	r1, r0
 3152 00b4 843800E3 		movw	r3, #2180
 3153 00b8 AC209FE5 		ldr	r2, .L225+20
 3154 00bc 0000A0E3 		mov	r0, #0
 3155              	.LVL353:
 3156 00c0 FEFFFFEB 		bl	UnityAssertEqualNumber
 3157              	.LVL354:
2183:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 3158              		.loc 1 2183 0
 3159 00c4 000095E5 		ldr	r0, [r5]
 3160 00c8 0430A0E1 		mov	r3, r4
 3161 00cc 0410A0E1 		mov	r1, r4
 3162 00d0 00408DE5 		str	r4, [sp]
 3163 00d4 0820A0E3 		mov	r2, #8
 3164 00d8 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 3165              	.LVL355:
2188:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3166              		.loc 1 2188 0
 3167 00dc 00608DE5 		str	r6, [sp]
 3168 00e0 0010A0E1 		mov	r1, r0
 3169 00e4 8C3800E3 		movw	r3, #2188
 3170 00e8 0400A0E1 		mov	r0, r4
 3171              	.LVL356:
 3172 00ec 7C209FE5 		ldr	r2, .L225+24
 3173 00f0 FEFFFFEB 		bl	UnityAssertEqualNumber
 3174              	.LVL357:
2191:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                   tcptestECHO_SERVER_TLS_ADDR1,
 3175              		.loc 1 2191 0
 3176 00f4 78309FE5 		ldr	r3, .L225+28
2198:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
 3177              		.loc 1 2198 0
 3178 00f8 0820A0E3 		mov	r2, #8
 3179 00fc 02108DE0 		add	r1, sp, r2
 3180 0100 000095E5 		ldr	r0, [r5]
2191:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                   tcptestECHO_SERVER_TLS_ADDR1,
 3181              		.loc 1 2191 0
 3182 0104 0C308DE5 		str	r3, [sp, #12]
2196:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3183              		.loc 1 2196 0
 3184 0108 68309FE5 		ldr	r3, .L225+32
 3185 010c BA30CDE1 		strh	r3, [sp, #10]	@ movhi
2198:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connection permitted with untrusted server CA
 3186              		.loc 1 2198 0
 3187 0110 FEFFFFEB 		bl	SOCKETS_Connect
 3188              	.LVL358:
2199:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3189              		.loc 1 2199 0
 3190 0114 973800E3 		movw	r3, #2199
 3191 0118 0010A0E1 		mov	r1, r0
 3192 011c 58209FE5 		ldr	r2, .L225+36
 3193 0120 0400A0E1 		mov	r0, r4
 3194              	.LVL359:
 3195 0124 00608DE5 		str	r6, [sp]
 3196 0128 FEFFFFEB 		bl	UnityAssertSmallerNumber
 3197              	.LVL360:
2201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 3198              		.loc 1 2201 0
 3199 012c 000095E5 		ldr	r0, [r5]
 3200              	.LVL361:
 3201              	.LBB190:
 3202              	.LBB191:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3203              		.loc 1 633 0
 3204 0130 FEFFFFEB 		bl	SOCKETS_Close
 3205              	.LVL362:
 3206              	.LBE191:
 3207              	.LBE190:
2202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3208              		.loc 1 2202 0
 3209 0134 00608DE5 		str	r6, [sp]
 3210 0138 0010A0E1 		mov	r1, r0
 3211 013c 9A3800E3 		movw	r3, #2202
 3212 0140 1C209FE5 		ldr	r2, .L225+12
 3213 0144 0400A0E1 		mov	r0, r4
 3214              	.LVL363:
 3215              	.LBB193:
 3216              	.LBB192:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3217              		.loc 1 635 0
 3218 0148 004087E5 		str	r4, [r7]
 3219              	.LVL364:
 3220              	.LBE192:
 3221              	.LBE193:
2202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3222              		.loc 1 2202 0
 3223 014c FEFFFFEB 		bl	UnityAssertEqualNumber
 3224              	.LVL365:
 3225              	.LBE194:
 3226              	.LBE195:
2210:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3227              		.loc 1 2210 0
 3228 0150 14D08DE2 		add	sp, sp, #20
 3229              		.cfi_def_cfa_offset 20
 3230              		@ sp needed
 3231 0154 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 3232              	.L226:
 3233              		.align	2
 3234              	.L225:
 3235 0158 00000000 		.word	.LANCHOR1
 3236 015c 00000000 		.word	.LANCHOR0
 3237 0160 00000000 		.word	.LC29
 3238 0164 92000000 		.word	.LC18
 3239 0168 00000000 		.word	.LC13
 3240 016c 17000000 		.word	.LC14
 3241 0170 2A000000 		.word	.LC15
 3242 0174 22DA19C5 		.word	-988161502
 3243 0178 01BBFFFF 		.word	-17663
 3244 017c 5F000000 		.word	.LC17
 3245              		.cfi_endproc
 3246              	.LFE120:
 3248              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_,"ax",%progbits
 3249              		.align	2
 3250              		.global	TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_
 3251              		.syntax unified
 3252              		.arm
 3253              		.fpu neon
 3255              	TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_:
 3256              	.LFB46:
1046:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3257              		.loc 1 1046 0
 3258              		.cfi_startproc
 3259              		@ args = 0, pretend = 0, frame = 0
 3260              		@ frame_needed = 0, uses_anonymous_args = 0
 3261              	.LVL366:
 3262 0000 13402DE9 		push	{r0, r1, r4, lr}
 3263              		.cfi_def_cfa_offset 16
 3264              		.cfi_offset 4, -8
 3265              		.cfi_offset 14, -4
 3266              	.LBB200:
 3267              	.LBB201:
1035:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                               SOCKETS_SOCK_STREAM,
 3268              		.loc 1 1035 0
 3269 0004 0620A0E3 		mov	r2, #6
 3270 0008 0110A0E3 		mov	r1, #1
 3271 000c 0200A0E3 		mov	r0, #2
 3272 0010 FEFFFFEB 		bl	SOCKETS_Socket
 3273              	.LVL367:
 3274 0014 54309FE5 		ldr	r3, .L230
 3275 0018 000083E5 		str	r0, [r3]
 3276 001c 0340A0E1 		mov	r4, r3
1039:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3277              		.loc 1 1039 0
 3278 0020 002093E5 		ldr	r2, [r3]
 3279 0024 010072E3 		cmn	r2, #1
 3280 0028 0200001A 		bne	.L228
 3281 002c 0F1400E3 		movw	r1, #1039
 3282 0030 3C009FE5 		ldr	r0, .L230+4
 3283 0034 FEFFFFEB 		bl	UnityFail
 3284              	.LVL368:
 3285              	.L228:
1041:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 3286              		.loc 1 1041 0
 3287 0038 000094E5 		ldr	r0, [r4]
 3288              	.LVL369:
 3289              	.LBB202:
 3290              	.LBB203:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3291              		.loc 1 633 0
 3292 003c FEFFFFEB 		bl	SOCKETS_Close
 3293              	.LVL370:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3294              		.loc 1 635 0
 3295 0040 30309FE5 		ldr	r3, .L230+8
 3296 0044 00C0A0E3 		mov	ip, #0
 3297              	.LBE203:
 3298              	.LBE202:
1042:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3299              		.loc 1 1042 0
 3300 0048 0010A0E1 		mov	r1, r0
 3301 004c 28209FE5 		ldr	r2, .L230+12
 3302 0050 0C00A0E1 		mov	r0, ip
 3303              	.LVL371:
 3304              	.LBB205:
 3305              	.LBB204:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3306              		.loc 1 635 0
 3307 0054 00C083E5 		str	ip, [r3]
 3308              	.LVL372:
 3309              	.LBE204:
 3310              	.LBE205:
1042:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3311              		.loc 1 1042 0
 3312 0058 1430A0E3 		mov	r3, #20
 3313 005c 00308DE5 		str	r3, [sp]
 3314 0060 123400E3 		movw	r3, #1042
 3315 0064 FEFFFFEB 		bl	UnityAssertEqualNumber
 3316              	.LVL373:
 3317              	.LBE201:
 3318              	.LBE200:
1050:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3319              		.loc 1 1050 0
 3320 0068 08D08DE2 		add	sp, sp, #8
 3321              		.cfi_def_cfa_offset 8
 3322              		@ sp needed
 3323 006c 1080BDE8 		pop	{r4, pc}
 3324              	.L231:
 3325              		.align	2
 3326              	.L230:
 3327 0070 00000000 		.word	.LANCHOR1
 3328 0074 00000000 		.word	.LC43
 3329 0078 00000000 		.word	.LANCHOR0
 3330 007c 92000000 		.word	.LC18
 3331              		.cfi_endproc
 3332              	.LFE46:
 3334              		.section	.text.prvSOCKETS_ShutdownInvalidParams.isra.7,"ax",%progbits
 3335              		.align	2
 3336              		.syntax unified
 3337              		.arm
 3338              		.fpu neon
 3340              	prvSOCKETS_ShutdownInvalidParams.isra.7:
 3341              	.LFB155:
 887:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 3342              		.loc 1 887 0
 3343              		.cfi_startproc
 3344              		@ args = 0, pretend = 0, frame = 0
 3345              		@ frame_needed = 0, uses_anonymous_args = 0
 3346              	.LVL374:
 3347 0000 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
 3348              		.cfi_def_cfa_offset 24
 3349              		.cfi_offset 4, -12
 3350              		.cfi_offset 5, -8
 3351              		.cfi_offset 14, -4
 891:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 3352              		.loc 1 891 0
 3353 0004 F0409FE5 		ldr	r4, .L237
 3354 0008 F0009FE5 		ldr	r0, .L237+4
 3355 000c FEFFFFEB 		bl	prvTcpSocketHelper
 3356              	.LVL375:
 3357 0010 000084E5 		str	r0, [r4]
 892:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3358              		.loc 1 892 0
 3359 0014 003094E5 		ldr	r3, [r4]
 3360 0018 010073E3 		cmn	r3, #1
 3361 001c 0200001A 		bne	.L233
 3362 0020 DF1FA0E3 		mov	r1, #892
 3363 0024 D8009FE5 		ldr	r0, .L237+8
 3364 0028 FEFFFFEB 		bl	UnityFail
 3365              	.LVL376:
 3366              	.L233:
 894:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 3367              		.loc 1 894 0
 3368 002c 202E04E3 		movw	r2, #20000
 3369 0030 000094E5 		ldr	r0, [r4]
 3370 0034 0210A0E1 		mov	r1, r2
 3371 0038 FEFFFFEB 		bl	prvSetSockOptHelper
 3372              	.LVL377:
 895:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3373              		.loc 1 895 0
 3374 003c 1430A0E3 		mov	r3, #20
 3375 0040 0010A0E1 		mov	r1, r0
 3376 0044 00308DE5 		str	r3, [sp]
 3377 0048 0000A0E3 		mov	r0, #0
 3378              	.LVL378:
 3379 004c 7F3300E3 		movw	r3, #895
 3380 0050 B0209FE5 		ldr	r2, .L237+12
 3381 0054 FEFFFFEB 		bl	UnityAssertEqualNumber
 3382              	.LVL379:
 897:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket could shutdown with an inva
 3383              		.loc 1 897 0
 3384 0058 000094E5 		ldr	r0, [r4]
 3385 005c 0010E0E3 		mvn	r1, #0
 3386 0060 FEFFFFEB 		bl	SOCKETS_Shutdown
 3387              	.LVL380:
 898:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3388              		.loc 1 898 0
 3389 0064 000050E3 		cmp	r0, #0
 3390 0068 0200001A 		bne	.L234
 3391 006c 821300E3 		movw	r1, #898
 3392 0070 94009FE5 		ldr	r0, .L237+16
 3393              	.LVL381:
 3394 0074 FEFFFFEB 		bl	UnityFail
 3395              	.LVL382:
 3396              	.L234:
 3397              	.LBB206:
 3398              	.LBB207:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3399              		.loc 1 635 0
 3400 0078 80509FE5 		ldr	r5, .L237+4
 3401              	.LBE207:
 3402              	.LBE206:
 900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 3403              		.loc 1 900 0
 3404 007c 000094E5 		ldr	r0, [r4]
 3405              	.LVL383:
 3406              	.LBB210:
 3407              	.LBB208:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3408              		.loc 1 633 0
 3409 0080 FEFFFFEB 		bl	SOCKETS_Close
 3410              	.LVL384:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3411              		.loc 1 635 0
 3412 0084 00C0A0E3 		mov	ip, #0
 3413              	.LBE208:
 3414              	.LBE210:
 901:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3415              		.loc 1 901 0
 3416 0088 1430A0E3 		mov	r3, #20
 3417 008c 0010A0E1 		mov	r1, r0
 3418 0090 00308DE5 		str	r3, [sp]
 3419 0094 0C00A0E1 		mov	r0, ip
 3420              	.LVL385:
 3421 0098 853300E3 		movw	r3, #901
 3422 009c 6C209FE5 		ldr	r2, .L237+20
 3423              	.LBB211:
 3424              	.LBB209:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3425              		.loc 1 635 0
 3426 00a0 00C085E5 		str	ip, [r5]
 3427              	.LVL386:
 3428              	.LBE209:
 3429              	.LBE211:
 901:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3430              		.loc 1 901 0
 3431 00a4 FEFFFFEB 		bl	UnityAssertEqualNumber
 3432              	.LVL387:
 903:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 3433              		.loc 1 903 0
 3434 00a8 0500A0E1 		mov	r0, r5
 3435 00ac FEFFFFEB 		bl	prvTcpSocketHelper
 3436              	.LVL388:
 3437 00b0 000084E5 		str	r0, [r4]
 904:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3438              		.loc 1 904 0
 3439 00b4 003094E5 		ldr	r3, [r4]
 3440 00b8 010073E3 		cmn	r3, #1
 3441 00bc 0200001A 		bne	.L235
 3442 00c0 E21FA0E3 		mov	r1, #904
 3443 00c4 38009FE5 		ldr	r0, .L237+8
 3444 00c8 FEFFFFEB 		bl	UnityFail
 3445              	.LVL389:
 3446              	.L235:
 907:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_MESSAGE( SOCKETS_EINVAL, xResult, "Socket could shutdown with an invalid para
 3447              		.loc 1 907 0
 3448 00cc 0210A0E3 		mov	r1, #2
 3449 00d0 0000E0E3 		mvn	r0, #0
 3450 00d4 FEFFFFEB 		bl	SOCKETS_Shutdown
 3451              	.LVL390:
 908:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3452              		.loc 1 908 0
 3453 00d8 1430A0E3 		mov	r3, #20
 3454 00dc 0010A0E1 		mov	r1, r0
 3455 00e0 00308DE5 		str	r3, [sp]
 3456 00e4 1500E0E3 		mvn	r0, #21
 3457              	.LVL391:
 3458 00e8 E33FA0E3 		mov	r3, #908
 3459 00ec 18209FE5 		ldr	r2, .L237+16
 3460 00f0 FEFFFFEB 		bl	UnityAssertEqualNumber
 3461              	.LVL392:
 909:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3462              		.loc 1 909 0
 3463 00f4 0CD08DE2 		add	sp, sp, #12
 3464              		.cfi_def_cfa_offset 12
 3465              		@ sp needed
 3466 00f8 3080BDE8 		pop	{r4, r5, pc}
 3467              	.L238:
 3468              		.align	2
 3469              	.L237:
 3470 00fc 00000000 		.word	.LANCHOR1
 3471 0100 00000000 		.word	.LANCHOR0
 3472 0104 00000000 		.word	.LC13
 3473 0108 17000000 		.word	.LC14
 3474 010c 00000000 		.word	.LC44
 3475 0110 92000000 		.word	.LC18
 3476              		.cfi_endproc
 3477              	.LFE155:
 3479              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_,"ax",%progbits
 3480              		.align	2
 3481              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_
 3482              		.syntax unified
 3483              		.arm
 3484              		.fpu neon
 3486              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_:
 3487              	.LFB33:
 919:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3488              		.loc 1 919 0
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 0
 3491              		@ frame_needed = 0, uses_anonymous_args = 0
 3492              		@ link register save eliminated.
 922:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3493              		.loc 1 922 0
 3494 0000 FEFFFFEA 		b	prvSOCKETS_ShutdownInvalidParams.isra.7
 3495              	.LVL393:
 3496              		.cfi_endproc
 3497              	.LFE33:
 3499              		.section	.text.prvShutdownHelper,"ax",%progbits
 3500              		.align	2
 3501              		.syntax unified
 3502              		.arm
 3503              		.fpu neon
 3505              	prvShutdownHelper:
 3506              	.LFB12:
 601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 3507              		.loc 1 601 0
 3508              		.cfi_startproc
 3509              		@ args = 0, pretend = 0, frame = 0
 3510              		@ frame_needed = 0, uses_anonymous_args = 0
 3511              	.LVL394:
 3512 0000 70402DE9 		push	{r4, r5, r6, lr}
 3513              		.cfi_def_cfa_offset 16
 3514              		.cfi_offset 4, -16
 3515              		.cfi_offset 5, -12
 3516              		.cfi_offset 6, -8
 3517              		.cfi_offset 14, -4
 606:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3518              		.loc 1 606 0
 3519 0004 0210A0E3 		mov	r1, #2
 601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 3520              		.loc 1 601 0
 3521 0008 0050A0E1 		mov	r5, r0
 606:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3522              		.loc 1 606 0
 3523 000c FEFFFFEB 		bl	SOCKETS_Shutdown
 3524              	.LVL395:
 608:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 3525              		.loc 1 608 0
 3526 0010 004050E2 		subs	r4, r0, #0
 3527 0014 0700001A 		bne	.L240
 3528              	.LBB214:
 3529              	.LBB215:
 613:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                     pcRxBuffer,         /* The buffer into which the received data 
 3530              		.loc 1 613 0
 3531 0018 20609FE5 		ldr	r6, .L245
 3532              	.LVL396:
 3533              	.L242:
 3534 001c 0030A0E3 		mov	r3, #0
 3535 0020 7D2EA0E3 		mov	r2, #2000
 3536 0024 001096E5 		ldr	r1, [r6]
 3537 0028 0500A0E1 		mov	r0, r5
 3538 002c FEFFFFEB 		bl	SOCKETS_Recv
 3539              	.LVL397:
 618:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3540              		.loc 1 618 0
 3541 0030 000050E3 		cmp	r0, #0
 3542 0034 F8FFFFAA 		bge	.L242
 3543              	.LVL398:
 3544              	.L240:
 3545              	.LBE215:
 3546              	.LBE214:
 624:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3547              		.loc 1 624 0
 3548 0038 0400A0E1 		mov	r0, r4
 3549 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 3550              	.L246:
 3551              		.align	2
 3552              	.L245:
 3553 0040 00000000 		.word	.LANCHOR12
 3554              		.cfi_endproc
 3555              	.LFE12:
 3557              		.section	.text.prvTwoSecureConnections,"ax",%progbits
 3558              		.align	2
 3559              		.syntax unified
 3560              		.arm
 3561              		.fpu neon
 3563              	prvTwoSecureConnections:
 3564              	.LFB139:
2771:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 3565              		.loc 1 2771 0
 3566              		.cfi_startproc
 3567              		@ args = 0, pretend = 0, frame = 24
 3568              		@ frame_needed = 0, uses_anonymous_args = 0
 3569              	.LVL399:
2773:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulIndex;
 3570              		.loc 1 2773 0
 3571 0000 04339FE5 		ldr	r3, .L264
2771:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 3572              		.loc 1 2771 0
 3573 0004 F0402DE9 		push	{r4, r5, r6, r7, lr}
 3574              		.cfi_def_cfa_offset 20
 3575              		.cfi_offset 4, -20
 3576              		.cfi_offset 5, -16
 3577              		.cfi_offset 6, -12
 3578              		.cfi_offset 7, -8
 3579              		.cfi_offset 14, -4
 3580 0008 24D04DE2 		sub	sp, sp, #36
 3581              		.cfi_def_cfa_offset 56
2783:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 3582              		.loc 1 2783 0
 3583 000c FC029FE5 		ldr	r0, .L264+4
2773:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint32_t ulIndex;
 3584              		.loc 1 2773 0
 3585 0010 003093E5 		ldr	r3, [r3]
 3586 0014 0C308DE5 		str	r3, [sp, #12]
 3587              	.LVL400:
2776:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile Socket_t xSocketSecServer;
 3588              		.loc 1 2776 0
 3589 0018 0030A0E3 		mov	r3, #0
 3590              	.LVL401:
 3591 001c 14308DE5 		str	r3, [sp, #20]
2778:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3592              		.loc 1 2778 0
 3593 0020 1C308DE5 		str	r3, [sp, #28]
2783:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 3594              		.loc 1 2783 0
 3595 0024 FEFFFFEB 		bl	setjmp
 3596              	.LVL402:
 3597 0028 004050E2 		subs	r4, r0, #0
 3598 002c 2300000A 		beq	.L248
 3599              	.LVL403:
 3600              	.L258:
2846:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 3601              		.loc 1 2846 0
 3602 0030 14309DE5 		ldr	r3, [sp, #20]
 3603 0034 010053E3 		cmp	r3, #1
 3604 0038 0D00001A 		bne	.L250
2848:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3605              		.loc 1 2848 0
 3606 003c CC029FE5 		ldr	r0, .L264+4
 3607 0040 FEFFFFEB 		bl	setjmp
 3608              	.LVL404:
 3609 0044 004050E2 		subs	r4, r0, #0
 3610 0048 0900001A 		bne	.L250
2850:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" 
 3611              		.loc 1 2850 0
 3612 004c 10009DE5 		ldr	r0, [sp, #16]
 3613              	.LVL405:
 3614              	.LBB216:
 3615              	.LBB217:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3616              		.loc 1 633 0
 3617 0050 FEFFFFEB 		bl	SOCKETS_Close
 3618              	.LVL406:
 3619              	.LBE217:
 3620              	.LBE216:
2851:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 3621              		.loc 1 2851 0
 3622 0054 1430A0E3 		mov	r3, #20
 3623 0058 0010A0E1 		mov	r1, r0
 3624 005c 00308DE5 		str	r3, [sp]
 3625 0060 0400A0E1 		mov	r0, r4
 3626              	.LVL407:
 3627 0064 233B00E3 		movw	r3, #2851
 3628 0068 A4229FE5 		ldr	r2, .L264+8
 3629              	.LBB219:
 3630              	.LBB218:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3631              		.loc 1 635 0
 3632 006c 14408DE5 		str	r4, [sp, #20]
 3633              	.LVL408:
 3634              	.LBE218:
 3635              	.LBE219:
2851:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 3636              		.loc 1 2851 0
 3637 0070 FEFFFFEB 		bl	UnityAssertEqualNumber
 3638              	.LVL409:
 3639              	.L250:
2855:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 3640              		.loc 1 2855 0
 3641 0074 1C309DE5 		ldr	r3, [sp, #28]
 3642 0078 010053E3 		cmp	r3, #1
 3643 007c 0D00001A 		bne	.L247
2857:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3644              		.loc 1 2857 0
 3645 0080 88029FE5 		ldr	r0, .L264+4
 3646 0084 FEFFFFEB 		bl	setjmp
 3647              	.LVL410:
 3648 0088 004050E2 		subs	r4, r0, #0
 3649 008c 0900001A 		bne	.L247
2859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" 
 3650              		.loc 1 2859 0
 3651 0090 18009DE5 		ldr	r0, [sp, #24]
 3652              	.LVL411:
 3653              	.LBB220:
 3654              	.LBB221:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3655              		.loc 1 633 0
 3656 0094 FEFFFFEB 		bl	SOCKETS_Close
 3657              	.LVL412:
 3658              	.LBE221:
 3659              	.LBE220:
2860:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 3660              		.loc 1 2860 0
 3661 0098 1430A0E3 		mov	r3, #20
 3662 009c 0010A0E1 		mov	r1, r0
 3663 00a0 00308DE5 		str	r3, [sp]
 3664 00a4 0400A0E1 		mov	r0, r4
 3665              	.LVL413:
 3666 00a8 2C3B00E3 		movw	r3, #2860
 3667 00ac 60229FE5 		ldr	r2, .L264+8
 3668              	.LBB223:
 3669              	.LBB222:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3670              		.loc 1 635 0
 3671 00b0 1C408DE5 		str	r4, [sp, #28]
 3672              	.LVL414:
 3673              	.LBE222:
 3674              	.LBE223:
2860:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 3675              		.loc 1 2860 0
 3676 00b4 FEFFFFEB 		bl	UnityAssertEqualNumber
 3677              	.LVL415:
 3678              	.L247:
2863:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3679              		.loc 1 2863 0
 3680 00b8 24D08DE2 		add	sp, sp, #36
 3681              		.cfi_remember_state
 3682              		.cfi_def_cfa_offset 20
 3683              		@ sp needed
 3684 00bc F080BDE8 		pop	{r4, r5, r6, r7, pc}
 3685              	.LVL416:
 3686              	.L248:
 3687              		.cfi_restore_state
2787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect to AWS Bro
 3688              		.loc 1 2787 0
 3689 00c0 14308DE2 		add	r3, sp, #20
2788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3690              		.loc 1 2788 0
 3691 00c4 1450A0E3 		mov	r5, #20
2787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect to AWS Bro
 3692              		.loc 1 2787 0
 3693 00c8 00308DE5 		str	r3, [sp]
 3694 00cc 203E04E3 		movw	r3, #20000
 3695 00d0 0320A0E1 		mov	r2, r3
 3696 00d4 0210A0E3 		mov	r1, #2
 3697 00d8 10008DE2 		add	r0, sp, #16
2795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketAWS, ( uint8_t * ) cMessageAWS, sizeof( cMessageAWS ) );
 3698              		.loc 1 2795 0
 3699 00dc 34629FE5 		ldr	r6, .L264+12
2787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect to AWS Bro
 3700              		.loc 1 2787 0
 3701 00e0 FEFFFFEB 		bl	prvConnectHelperWithRetry
 3702              	.LVL417:
2788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3703              		.loc 1 2788 0
 3704 00e4 00508DE5 		str	r5, [sp]
 3705 00e8 0010A0E1 		mov	r1, r0
 3706 00ec E43A00E3 		movw	r3, #2788
 3707 00f0 24229FE5 		ldr	r2, .L264+16
 3708 00f4 0400A0E1 		mov	r0, r4
 3709              	.LVL418:
2795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketAWS, ( uint8_t * ) cMessageAWS, sizeof( cMessageAWS ) );
 3710              		.loc 1 2795 0
 3711 00f8 2470A0E3 		mov	r7, #36
2788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3712              		.loc 1 2788 0
 3713 00fc FEFFFFEB 		bl	UnityAssertEqualNumber
 3714              	.LVL419:
2790:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect to secure 
 3715              		.loc 1 2790 0
 3716 0100 1C308DE2 		add	r3, sp, #28
 3717 0104 0410A0E1 		mov	r1, r4
 3718 0108 00308DE5 		str	r3, [sp]
 3719 010c 203E04E3 		movw	r3, #20000
 3720 0110 0320A0E1 		mov	r2, r3
 3721 0114 18008DE2 		add	r0, sp, #24
 3722 0118 FEFFFFEB 		bl	prvConnectHelperWithRetry
 3723              	.LVL420:
2791:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3724              		.loc 1 2791 0
 3725 011c 00508DE5 		str	r5, [sp]
 3726 0120 E73A00E3 		movw	r3, #2791
2794:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to secure server failed." );
 3727              		.loc 1 2794 0
 3728 0124 F4519FE5 		ldr	r5, .L264+20
2791:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3729              		.loc 1 2791 0
 3730 0128 0010A0E1 		mov	r1, r0
 3731 012c F0219FE5 		ldr	r2, .L264+24
 3732 0130 0400A0E1 		mov	r0, r4
 3733              	.LVL421:
 3734 0134 FEFFFFEB 		bl	UnityAssertEqualNumber
 3735              	.LVL422:
2794:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to secure server failed." );
 3736              		.loc 1 2794 0
 3737 0138 4320A0E3 		mov	r2, #67
 3738 013c 0510A0E1 		mov	r1, r5
 3739 0140 18009DE5 		ldr	r0, [sp, #24]
 3740 0144 FEFFFFEB 		bl	prvSendHelper
 3741              	.LVL423:
2795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketAWS, ( uint8_t * ) cMessageAWS, sizeof( cMessageAWS ) );
 3742              		.loc 1 2795 0
 3743 0148 EB3A00E3 		movw	r3, #2795
 3744 014c 0620A0E1 		mov	r2, r6
 3745 0150 0010A0E1 		mov	r1, r0
 3746 0154 00708DE5 		str	r7, [sp]
 3747 0158 0100A0E3 		mov	r0, #1
 3748              	.LVL424:
 3749 015c FEFFFFEB 		bl	UnityAssertEqualNumber
 3750              	.LVL425:
2796:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to AWS failed." );
 3751              		.loc 1 2796 0
 3752 0160 4720A0E3 		mov	r2, #71
 3753 0164 BC119FE5 		ldr	r1, .L264+28
 3754 0168 10009DE5 		ldr	r0, [sp, #16]
 3755 016c FEFFFFEB 		bl	prvSendHelper
 3756              	.LVL426:
2797:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocketSecServer, ( uint8_t * ) cMessageSecServer, sizeof( cMessag
 3757              		.loc 1 2797 0
 3758 0170 ED3A00E3 		movw	r3, #2797
 3759 0174 0010A0E1 		mov	r1, r0
 3760 0178 AC219FE5 		ldr	r2, .L264+32
 3761 017c 0100A0E3 		mov	r0, #1
 3762              	.LVL427:
 3763 0180 00708DE5 		str	r7, [sp]
 3764 0184 FEFFFFEB 		bl	UnityAssertEqualNumber
 3765              	.LVL428:
2798:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Send to secure server failed." );
 3766              		.loc 1 2798 0
 3767 0188 4320A0E3 		mov	r2, #67
 3768 018c 0510A0E1 		mov	r1, r5
 3769 0190 18009DE5 		ldr	r0, [sp, #24]
 3770 0194 FEFFFFEB 		bl	prvSendHelper
 3771              	.LVL429:
2799:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3772              		.loc 1 2799 0
 3773 0198 EF3A00E3 		movw	r3, #2799
 3774 019c 0620A0E1 		mov	r2, r6
 3775 01a0 0010A0E1 		mov	r1, r0
 3776 01a4 00708DE5 		str	r7, [sp]
 3777 01a8 0100A0E3 		mov	r0, #1
 3778              	.LVL430:
 3779 01ac FEFFFFEB 		bl	UnityAssertEqualNumber
 3780              	.LVL431:
2802:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Received incorrect number of bytes from
 3781              		.loc 1 2802 0
 3782 01b0 4320A0E3 		mov	r2, #67
 3783 01b4 0C109DE5 		ldr	r1, [sp, #12]
 3784 01b8 18009DE5 		ldr	r0, [sp, #24]
 3785 01bc FEFFFFEB 		bl	prvRecvHelper
 3786              	.LVL432:
2803:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3787              		.loc 1 2803 0
 3788 01c0 00708DE5 		str	r7, [sp]
 3789 01c4 0010A0E1 		mov	r1, r0
2802:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Received incorrect number of bytes from
 3790              		.loc 1 2802 0
 3791 01c8 0060A0E1 		mov	r6, r0
 3792              	.LVL433:
2803:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3793              		.loc 1 2803 0
 3794 01cc F33A00E3 		movw	r3, #2803
 3795 01d0 0100A0E3 		mov	r0, #1
 3796              	.LVL434:
 3797 01d4 54219FE5 		ldr	r2, .L264+36
 3798 01d8 FEFFFFEB 		bl	UnityAssertEqualNumber
 3799              	.LVL435:
 3800 01dc 0400A0E1 		mov	r0, r4
 3801              	.L252:
 3802              	.LVL436:
2808:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 3803              		.loc 1 2808 0
 3804 01e0 0C309DE5 		ldr	r3, [sp, #12]
 3805 01e4 0020D3E7 		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 3806 01e8 0530D0E7 		ldrb	r3, [r0, r5]	@ zero_extendqisi2
2806:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3807              		.loc 1 2806 0
 3808 01ec 010080E2 		add	r0, r0, #1
 3809              	.LVL437:
2810:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 3810              		.loc 1 2810 0
 3811 01f0 030052E1 		cmp	r2, r3
 3812 01f4 0060A013 		movne	r6, #0
 3813              	.LVL438:
2806:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3814              		.loc 1 2806 0
 3815 01f8 430050E3 		cmp	r0, #67
 3816 01fc F7FFFF1A 		bne	.L252
2814:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3817              		.loc 1 2814 0
 3818 0200 1430A0E3 		mov	r3, #20
 3819 0204 28219FE5 		ldr	r2, .L264+40
 3820 0208 00308DE5 		str	r3, [sp]
 3821 020c 0610A0E1 		mov	r1, r6
 3822 0210 FE3A00E3 		movw	r3, #2814
 3823 0214 0100A0E3 		mov	r0, #1
 3824              	.LVL439:
 3825 0218 FEFFFFEB 		bl	UnityAssertEqualNumber
 3826              	.LVL440:
2817:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3827              		.loc 1 2817 0
 3828 021c 10009DE5 		ldr	r0, [sp, #16]
 3829 0220 0030A0E3 		mov	r3, #0
 3830 0224 4720A0E3 		mov	r2, #71
 3831 0228 0C109DE5 		ldr	r1, [sp, #12]
 3832 022c FEFFFFEB 		bl	SOCKETS_Recv
 3833              	.LVL441:
2819:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3834              		.loc 1 2819 0
 3835 0230 000050E3 		cmp	r0, #0
 3836 0234 0B007013 		cmnne	r0, #11
 3837 0238 2F00001A 		bne	.L253
 3838              	.LVL442:
 3839              	.L255:
2825:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Received incorrect number of bytes from
 3840              		.loc 1 2825 0
 3841 023c 4320A0E3 		mov	r2, #67
 3842 0240 0C109DE5 		ldr	r1, [sp, #12]
 3843 0244 18009DE5 		ldr	r0, [sp, #24]
 3844 0248 FEFFFFEB 		bl	prvRecvHelper
 3845              	.LVL443:
2826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3846              		.loc 1 2826 0
 3847 024c 2430A0E3 		mov	r3, #36
 3848 0250 0010A0E1 		mov	r1, r0
 3849 0254 00308DE5 		str	r3, [sp]
2825:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( pdPASS, xResult, "Received incorrect number of bytes from
 3850              		.loc 1 2825 0
 3851 0258 0040A0E1 		mov	r4, r0
 3852              	.LVL444:
2826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3853              		.loc 1 2826 0
 3854 025c 0A3B00E3 		movw	r3, #2826
 3855 0260 0100A0E3 		mov	r0, #1
 3856              	.LVL445:
 3857 0264 C4209FE5 		ldr	r2, .L264+36
 3858 0268 FEFFFFEB 		bl	UnityAssertEqualNumber
 3859              	.LVL446:
2830:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 3860              		.loc 1 2830 0
 3861 026c AC009FE5 		ldr	r0, .L264+20
2826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3862              		.loc 1 2826 0
 3863 0270 0030A0E3 		mov	r3, #0
 3864              	.L257:
 3865              	.LVL447:
2830:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 3866              		.loc 1 2830 0
 3867 0274 0C209DE5 		ldr	r2, [sp, #12]
 3868 0278 0310D2E7 		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 3869 027c 0020D3E7 		ldrb	r2, [r3, r0]	@ zero_extendqisi2
2828:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3870              		.loc 1 2828 0
 3871 0280 013083E2 		add	r3, r3, #1
 3872              	.LVL448:
2832:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 3873              		.loc 1 2832 0
 3874 0284 020051E1 		cmp	r1, r2
 3875 0288 0040A013 		movne	r4, #0
 3876              	.LVL449:
2828:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 3877              		.loc 1 2828 0
 3878 028c 430053E3 		cmp	r3, #67
 3879 0290 F7FFFF1A 		bne	.L257
2836:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3880              		.loc 1 2836 0
 3881 0294 0410A0E1 		mov	r1, r4
 3882 0298 1430A0E3 		mov	r3, #20
 3883              	.LVL450:
2840:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocketSecServer );
 3884              		.loc 1 2840 0
 3885 029c 94409FE5 		ldr	r4, .L264+44
 3886              	.LVL451:
2836:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3887              		.loc 1 2836 0
 3888 02a0 0100A0E3 		mov	r0, #1
 3889 02a4 00308DE5 		str	r3, [sp]
 3890 02a8 143B00E3 		movw	r3, #2836
 3891 02ac 80209FE5 		ldr	r2, .L264+40
2840:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocketSecServer );
 3892              		.loc 1 2840 0
 3893 02b0 2450A0E3 		mov	r5, #36
2836:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 3894              		.loc 1 2836 0
 3895 02b4 FEFFFFEB 		bl	UnityAssertEqualNumber
 3896              	.LVL452:
2839:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to shutdown socket."
 3897              		.loc 1 2839 0
 3898 02b8 10009DE5 		ldr	r0, [sp, #16]
 3899 02bc FEFFFFEB 		bl	prvShutdownHelper
 3900              	.LVL453:
2840:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvShutdownHelper( xSocketSecServer );
 3901              		.loc 1 2840 0
 3902 02c0 0420A0E1 		mov	r2, r4
 3903 02c4 0010A0E1 		mov	r1, r0
 3904 02c8 183B00E3 		movw	r3, #2840
 3905 02cc 00508DE5 		str	r5, [sp]
 3906 02d0 0000A0E3 		mov	r0, #0
 3907              	.LVL454:
 3908 02d4 FEFFFFEB 		bl	UnityAssertEqualNumber
 3909              	.LVL455:
2841:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_UINT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to shutdown socket."
 3910              		.loc 1 2841 0
 3911 02d8 18009DE5 		ldr	r0, [sp, #24]
 3912 02dc FEFFFFEB 		bl	prvShutdownHelper
 3913              	.LVL456:
2842:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 3914              		.loc 1 2842 0
 3915 02e0 00508DE5 		str	r5, [sp]
 3916 02e4 0010A0E1 		mov	r1, r0
 3917 02e8 1A3B00E3 		movw	r3, #2842
 3918 02ec 0420A0E1 		mov	r2, r4
 3919 02f0 0000A0E3 		mov	r0, #0
 3920              	.LVL457:
 3921 02f4 FEFFFFEB 		bl	UnityAssertEqualNumber
 3922              	.LVL458:
 3923 02f8 4CFFFFEA 		b	.L258
 3924              	.LVL459:
 3925              	.L253:
2821:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 3926              		.loc 1 2821 0
 3927 02fc 051B00E3 		movw	r1, #2821
 3928 0300 34009FE5 		ldr	r0, .L264+48
 3929              	.LVL460:
 3930 0304 FEFFFFEB 		bl	UnityFail
 3931              	.LVL461:
 3932 0308 CBFFFFEA 		b	.L255
 3933              	.L265:
 3934              		.align	2
 3935              	.L264:
 3936 030c 00000000 		.word	.LANCHOR12
 3937 0310 28000000 		.word	Unity+40
 3938 0314 92000000 		.word	.LC18
 3939 0318 43000000 		.word	.LC47
 3940 031c 00000000 		.word	.LC45
 3941 0320 00000000 		.word	.LANCHOR13
 3942 0324 20000000 		.word	.LC46
 3943 0328 00000000 		.word	.LANCHOR14
 3944 032c 61000000 		.word	.LC48
 3945 0330 75000000 		.word	.LC49
 3946 0334 A9000000 		.word	.LC50
 3947 0338 0E010000 		.word	.LC52
 3948 033c D9000000 		.word	.LC51
 3949              		.cfi_endproc
 3950              	.LFE139:
 3952              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_,"ax",%progbits
 3953              		.align	2
 3954              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_
 3955              		.syntax unified
 3956              		.arm
 3957              		.fpu neon
 3959              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_:
 3960              	.LFB141:
2866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 3961              		.loc 1 2866 0
 3962              		.cfi_startproc
 3963              		@ args = 0, pretend = 0, frame = 0
 3964              		@ frame_needed = 0, uses_anonymous_args = 0
 3965              		@ link register save eliminated.
2869:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 3966              		.loc 1 2869 0
 3967 0000 FEFFFFEA 		b	prvTwoSecureConnections
 3968              	.LVL462:
 3969              		.cfi_endproc
 3970              	.LFE141:
 3972              		.section	.text.prvSOCKETS_Recv_On_Unconnected_Socket,"ax",%progbits
 3973              		.align	2
 3974              		.syntax unified
 3975              		.arm
 3976              		.fpu neon
 3978              	prvSOCKETS_Recv_On_Unconnected_Socket:
 3979              	.LFB39:
 963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 3980              		.loc 1 963 0
 3981              		.cfi_startproc
 3982              		@ args = 0, pretend = 0, frame = 24
 3983              		@ frame_needed = 0, uses_anonymous_args = 0
 3984              	.LVL463:
 3985 0000 70402DE9 		push	{r4, r5, r6, lr}
 3986              		.cfi_def_cfa_offset 16
 3987              		.cfi_offset 4, -16
 3988              		.cfi_offset 5, -12
 3989              		.cfi_offset 6, -8
 3990              		.cfi_offset 14, -4
 3991 0004 20D04DE2 		sub	sp, sp, #32
 3992              		.cfi_def_cfa_offset 48
 963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 3993              		.loc 1 963 0
 3994 0008 0C008DE5 		str	r0, [sp, #12]
 966:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile Socket_t xConnectedSocket;
 3995              		.loc 1 966 0
 3996 000c 0030A0E3 		mov	r3, #0
 969:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 3997              		.loc 1 969 0
 3998 0010 B4019FE5 		ldr	r0, .L276
 3999              	.LVL464:
 966:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile Socket_t xConnectedSocket;
 4000              		.loc 1 966 0
 4001 0014 18308DE5 		str	r3, [sp, #24]
 969:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 4002              		.loc 1 969 0
 4003 0018 FEFFFFEB 		bl	setjmp
 4004              	.LVL465:
 4005 001c 000050E3 		cmp	r0, #0
 4006 0020 5300001A 		bne	.L269
 971:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 4007              		.loc 1 971 0
 4008 0024 A4019FE5 		ldr	r0, .L276+4
 4009 0028 FEFFFFEB 		bl	prvTcpSocketHelper
 4010              	.LVL466:
 4011 002c A0319FE5 		ldr	r3, .L276+8
 4012 0030 000083E5 		str	r0, [r3]
 972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4013              		.loc 1 972 0
 4014 0034 003093E5 		ldr	r3, [r3]
 4015 0038 010073E3 		cmn	r3, #1
 4016 003c 5E00000A 		beq	.L270
 4017              	.L272:
 974:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SetSockOpt Failed" );
 4018              		.loc 1 974 0
 4019 0040 8C519FE5 		ldr	r5, .L276+8
 4020 0044 202E04E3 		movw	r2, #20000
 975:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4021              		.loc 1 975 0
 4022 0048 1440A0E3 		mov	r4, #20
 974:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SetSockOpt Failed" );
 4023              		.loc 1 974 0
 4024 004c 0210A0E1 		mov	r1, r2
 993:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4025              		.loc 1 993 0
 4026 0050 80619FE5 		ldr	r6, .L276+12
 974:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SetSockOpt Failed" );
 4027              		.loc 1 974 0
 4028 0054 000095E5 		ldr	r0, [r5]
 4029 0058 FEFFFFEB 		bl	prvSetSockOptHelper
 4030              	.LVL467:
 975:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4031              		.loc 1 975 0
 4032 005c CF3300E3 		movw	r3, #975
 4033 0060 0010A0E1 		mov	r1, r0
 4034 0064 70219FE5 		ldr	r2, .L276+16
 4035 0068 0000A0E3 		mov	r0, #0
 4036              	.LVL468:
 4037 006c 00408DE5 		str	r4, [sp]
 4038 0070 FEFFFFEB 		bl	UnityAssertEqualNumber
 4039              	.LVL469:
 981:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4040              		.loc 1 981 0
 4041 0074 18308DE2 		add	r3, sp, #24
 4042 0078 0C109DE5 		ldr	r1, [sp, #12]
 4043 007c 00308DE5 		str	r3, [sp]
 4044 0080 203E04E3 		movw	r3, #20000
 4045 0084 0320A0E1 		mov	r2, r3
 4046 0088 1C008DE2 		add	r0, sp, #28
 4047 008c FEFFFFEB 		bl	prvConnectHelperWithRetry
 4048              	.LVL470:
 982:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4049              		.loc 1 982 0
 4050 0090 D63300E3 		movw	r3, #982
 4051 0094 0010A0E1 		mov	r1, r0
 4052 0098 40219FE5 		ldr	r2, .L276+20
 4053 009c 0000A0E3 		mov	r0, #0
 4054              	.LVL471:
 4055 00a0 00408DE5 		str	r4, [sp]
 4056 00a4 FEFFFFEB 		bl	UnityAssertEqualNumber
 4057              	.LVL472:
 985:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xResult, "Socket was not able to send" );
 4058              		.loc 1 985 0
 4059 00a8 0030A0E3 		mov	r3, #0
 4060 00ac 0120A0E3 		mov	r2, #1
 4061 00b0 17108DE2 		add	r1, sp, #23
 4062 00b4 1C009DE5 		ldr	r0, [sp, #28]
 4063 00b8 FEFFFFEB 		bl	SOCKETS_Send
 4064              	.LVL473:
 986:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4065              		.loc 1 986 0
 4066 00bc DA3300E3 		movw	r3, #986
 4067 00c0 0010A0E1 		mov	r1, r0
 4068 00c4 18219FE5 		ldr	r2, .L276+24
 4069 00c8 0000A0E3 		mov	r0, #0
 4070              	.LVL474:
 4071 00cc 00408DE5 		str	r4, [sp]
 4072 00d0 FEFFFFEB 		bl	UnityAssertGreaterNumber
 4073              	.LVL475:
 989:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 0, xResult, "Socket was able to receive from unconnected soc
 4074              		.loc 1 989 0
 4075 00d4 000095E5 		ldr	r0, [r5]
 4076 00d8 0030A0E3 		mov	r3, #0
 4077 00dc 0120A0E3 		mov	r2, #1
 4078 00e0 17108DE2 		add	r1, sp, #23
 4079 00e4 FEFFFFEB 		bl	SOCKETS_Recv
 4080              	.LVL476:
 990:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4081              		.loc 1 990 0
 4082 00e8 DE3300E3 		movw	r3, #990
 4083 00ec 0010A0E1 		mov	r1, r0
 4084 00f0 F0209FE5 		ldr	r2, .L276+28
 4085 00f4 0000A0E3 		mov	r0, #0
 4086              	.LVL477:
 4087 00f8 00408DE5 		str	r4, [sp]
 4088 00fc FEFFFFEB 		bl	UnityAssertSmallerNumber
 4089              	.LVL478:
 992:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 4090              		.loc 1 992 0
 4091 0100 000095E5 		ldr	r0, [r5]
 4092              	.LVL479:
 4093              	.LBB224:
 4094              	.LBB225:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4095              		.loc 1 635 0
 4096 0104 0050A0E3 		mov	r5, #0
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4097              		.loc 1 633 0
 4098 0108 FEFFFFEB 		bl	SOCKETS_Close
 4099              	.LVL480:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4100              		.loc 1 635 0
 4101 010c BC309FE5 		ldr	r3, .L276+4
 4102              	.LBE225:
 4103              	.LBE224:
 993:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4104              		.loc 1 993 0
 4105 0110 0010A0E1 		mov	r1, r0
 4106 0114 0620A0E1 		mov	r2, r6
 4107 0118 0500A0E1 		mov	r0, r5
 4108              	.LVL481:
 4109              	.LBB227:
 4110              	.LBB226:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4111              		.loc 1 635 0
 4112 011c 005083E5 		str	r5, [r3]
 4113              	.LVL482:
 4114              	.LBE226:
 4115              	.LBE227:
 993:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4116              		.loc 1 993 0
 4117 0120 E13300E3 		movw	r3, #993
 4118 0124 00408DE5 		str	r4, [sp]
 4119 0128 FEFFFFEB 		bl	UnityAssertEqualNumber
 4120              	.LVL483:
 996:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" )
 4121              		.loc 1 996 0
 4122 012c 1C009DE5 		ldr	r0, [sp, #28]
 4123 0130 FEFFFFEB 		bl	prvShutdownHelper
 4124              	.LVL484:
 997:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4125              		.loc 1 997 0
 4126 0134 E53300E3 		movw	r3, #997
 4127 0138 0010A0E1 		mov	r1, r0
 4128 013c A8209FE5 		ldr	r2, .L276+32
 4129 0140 0500A0E1 		mov	r0, r5
 4130              	.LVL485:
 4131 0144 00408DE5 		str	r4, [sp]
 4132 0148 FEFFFFEB 		bl	UnityAssertEqualNumber
 4133              	.LVL486:
 999:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 4134              		.loc 1 999 0
 4135 014c 1C009DE5 		ldr	r0, [sp, #28]
 4136              	.LVL487:
 4137              	.LBB228:
 4138              	.LBB229:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4139              		.loc 1 633 0
 4140 0150 FEFFFFEB 		bl	SOCKETS_Close
 4141              	.LVL488:
 4142              	.LBE229:
 4143              	.LBE228:
1000:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xConnectedSocketOpen = pdFALSE;
 4144              		.loc 1 1000 0
 4145 0154 00408DE5 		str	r4, [sp]
 4146 0158 0010A0E1 		mov	r1, r0
 4147 015c FA3FA0E3 		mov	r3, #1000
 4148 0160 0620A0E1 		mov	r2, r6
 4149 0164 0500A0E1 		mov	r0, r5
 4150              	.LVL489:
 4151              	.LBB231:
 4152              	.LBB230:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4153              		.loc 1 635 0
 4154 0168 18508DE5 		str	r5, [sp, #24]
 4155              	.LVL490:
 4156              	.LBE230:
 4157              	.LBE231:
1000:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xConnectedSocketOpen = pdFALSE;
 4158              		.loc 1 1000 0
 4159 016c FEFFFFEB 		bl	UnityAssertEqualNumber
 4160              	.LVL491:
1001:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 4161              		.loc 1 1001 0
 4162 0170 18508DE5 		str	r5, [sp, #24]
 4163              	.L269:
1004:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 4164              		.loc 1 1004 0
 4165 0174 18309DE5 		ldr	r3, [sp, #24]
 4166 0178 010053E3 		cmp	r3, #1
 4167 017c 0C00001A 		bne	.L267
1006:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4168              		.loc 1 1006 0
 4169 0180 1C009DE5 		ldr	r0, [sp, #28]
 4170 0184 FEFFFFEB 		bl	prvShutdownHelper
 4171              	.LVL492:
1008:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close." );
 4172              		.loc 1 1008 0
 4173 0188 1C009DE5 		ldr	r0, [sp, #28]
 4174              	.LVL493:
 4175              	.LBB232:
 4176              	.LBB233:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4177              		.loc 1 633 0
 4178 018c FEFFFFEB 		bl	SOCKETS_Close
 4179              	.LVL494:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4180              		.loc 1 635 0
 4181 0190 00C0A0E3 		mov	ip, #0
 4182              	.LBE233:
 4183              	.LBE232:
1009:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 4184              		.loc 1 1009 0
 4185 0194 1430A0E3 		mov	r3, #20
 4186 0198 00308DE5 		str	r3, [sp]
 4187 019c 0010A0E1 		mov	r1, r0
 4188 01a0 F13300E3 		movw	r3, #1009
 4189 01a4 44209FE5 		ldr	r2, .L276+36
 4190 01a8 0C00A0E1 		mov	r0, ip
 4191              	.LVL495:
 4192              	.LBB235:
 4193              	.LBB234:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4194              		.loc 1 635 0
 4195 01ac 18C08DE5 		str	ip, [sp, #24]
 4196              	.LVL496:
 4197              	.LBE234:
 4198              	.LBE235:
1009:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 4199              		.loc 1 1009 0
 4200 01b0 FEFFFFEB 		bl	UnityAssertEqualNumber
 4201              	.LVL497:
 4202              	.L267:
1011:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4203              		.loc 1 1011 0
 4204 01b4 20D08DE2 		add	sp, sp, #32
 4205              		.cfi_remember_state
 4206              		.cfi_def_cfa_offset 16
 4207              		@ sp needed
 4208 01b8 7080BDE8 		pop	{r4, r5, r6, pc}
 4209              	.L270:
 4210              		.cfi_restore_state
 972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4211              		.loc 1 972 0 discriminator 1
 4212 01bc F31FA0E3 		mov	r1, #972
 4213 01c0 2C009FE5 		ldr	r0, .L276+40
 4214 01c4 FEFFFFEB 		bl	UnityFail
 4215              	.LVL498:
 4216 01c8 9CFFFFEA 		b	.L272
 4217              	.L277:
 4218              		.align	2
 4219              	.L276:
 4220 01cc 28000000 		.word	Unity+40
 4221 01d0 00000000 		.word	.LANCHOR0
 4222 01d4 00000000 		.word	.LANCHOR1
 4223 01d8 92000000 		.word	.LC18
 4224 01dc 00000000 		.word	.LC53
 4225 01e0 00000000 		.word	.LC29
 4226 01e4 12000000 		.word	.LC30
 4227 01e8 12000000 		.word	.LC54
 4228 01ec 00000000 		.word	.LC31
 4229 01f0 45000000 		.word	.LC55
 4230 01f4 00000000 		.word	.LC13
 4231              		.cfi_endproc
 4232              	.LFE39:
 4234              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_,"ax",%progbits
 4235              		.align	2
 4236              		.global	TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_
 4237              		.syntax unified
 4238              		.arm
 4239              		.fpu neon
 4241              	TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_:
 4242              	.LFB41:
1014:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 4243              		.loc 1 1014 0
 4244              		.cfi_startproc
 4245              		@ args = 0, pretend = 0, frame = 0
 4246              		@ frame_needed = 0, uses_anonymous_args = 0
 4247              		@ link register save eliminated.
1017:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 4248              		.loc 1 1017 0
 4249 0000 0100A0E3 		mov	r0, #1
 4250 0004 FEFFFFEA 		b	prvSOCKETS_Recv_On_Unconnected_Socket
 4251              	.LVL499:
 4252              		.cfi_endproc
 4253              	.LFE41:
 4255              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_,"ax",%progbits
 4256              		.align	2
 4257              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_
 4258              		.syntax unified
 4259              		.arm
 4260              		.fpu neon
 4262              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_:
 4263              	.LFB43:
1021:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 4264              		.loc 1 1021 0
 4265              		.cfi_startproc
 4266              		@ args = 0, pretend = 0, frame = 0
 4267              		@ frame_needed = 0, uses_anonymous_args = 0
 4268              		@ link register save eliminated.
1024:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 4269              		.loc 1 1024 0
 4270 0000 0000A0E3 		mov	r0, #0
 4271 0004 FEFFFFEA 		b	prvSOCKETS_Recv_On_Unconnected_Socket
 4272              	.LVL500:
 4273              		.cfi_endproc
 4274              	.LFE43:
 4276              		.section	.text.prvTestSOCKETS_Close,"ax",%progbits
 4277              		.align	2
 4278              		.syntax unified
 4279              		.arm
 4280              		.fpu neon
 4282              	prvTestSOCKETS_Close:
 4283              	.LFB72:
1411:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 4284              		.loc 1 1411 0
 4285              		.cfi_startproc
 4286              		@ args = 0, pretend = 0, frame = 8
 4287              		@ frame_needed = 0, uses_anonymous_args = 0
 4288              	.LVL501:
 4289 0000 FF472DE9 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 4290              		.cfi_def_cfa_offset 48
 4291              		.cfi_offset 4, -32
 4292              		.cfi_offset 5, -28
 4293              		.cfi_offset 6, -24
 4294              		.cfi_offset 7, -20
 4295              		.cfi_offset 8, -16
 4296              		.cfi_offset 9, -12
 4297              		.cfi_offset 10, -8
 4298              		.cfi_offset 14, -4
1411:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 4299              		.loc 1 1411 0
 4300 0004 00A0A0E1 		mov	r10, r0
1418:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 4301              		.loc 1 1418 0
 4302 0008 3C529FE5 		ldr	r5, .L283
 4303 000c 3C029FE5 		ldr	r0, .L283+4
 4304              	.LVL502:
 4305 0010 FEFFFFEB 		bl	prvTcpSocketHelper
 4306              	.LVL503:
 4307 0014 000085E5 		str	r0, [r5]
1419:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4308              		.loc 1 1419 0
 4309 0018 003095E5 		ldr	r3, [r5]
 4310 001c 010073E3 		cmn	r3, #1
 4311 0020 0200001A 		bne	.L281
1419:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4312              		.loc 1 1419 0 is_stmt 0 discriminator 1
 4313 0024 8B1500E3 		movw	r1, #1419
 4314 0028 24029FE5 		ldr	r0, .L283+8
 4315 002c FEFFFFEB 		bl	UnityFail
 4316              	.LVL504:
 4317              	.L281:
 4318              	.LBB236:
 4319              	.LBB237:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4320              		.loc 1 635 0 is_stmt 1
 4321 0030 18729FE5 		ldr	r7, .L283+4
 4322 0034 0040A0E3 		mov	r4, #0
 4323              	.LBE237:
 4324              	.LBE236:
1422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4325              		.loc 1 1422 0
 4326 0038 1460A0E3 		mov	r6, #20
1421:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 4327              		.loc 1 1421 0
 4328 003c 000095E5 		ldr	r0, [r5]
 4329              	.LVL505:
 4330              	.LBB240:
 4331              	.LBB238:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4332              		.loc 1 633 0
 4333 0040 FEFFFFEB 		bl	SOCKETS_Close
 4334              	.LVL506:
 4335              	.LBE238:
 4336              	.LBE240:
1429:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4337              		.loc 1 1429 0
 4338 0044 0080E0E3 		mvn	r8, #0
1422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4339              		.loc 1 1422 0
 4340 0048 0010A0E1 		mov	r1, r0
 4341 004c 00608DE5 		str	r6, [sp]
 4342 0050 0400A0E1 		mov	r0, r4
 4343              	.LVL507:
 4344 0054 8E3500E3 		movw	r3, #1422
 4345 0058 F8219FE5 		ldr	r2, .L283+12
1433:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
 4346              		.loc 1 1433 0
 4347 005c 2490A0E3 		mov	r9, #36
 4348              	.LBB241:
 4349              	.LBB239:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4350              		.loc 1 635 0
 4351 0060 004087E5 		str	r4, [r7]
 4352              	.LVL508:
 4353              	.LBE239:
 4354              	.LBE241:
1422:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4355              		.loc 1 1422 0
 4356 0064 FEFFFFEB 		bl	UnityAssertEqualNumber
 4357              	.LVL509:
1429:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4358              		.loc 1 1429 0
 4359 0068 008085E5 		str	r8, [r5]
1432:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
 4360              		.loc 1 1432 0
 4361 006c 0430A0E1 		mov	r3, r4
 4362 0070 0F108DE2 		add	r1, sp, #15
 4363 0074 000095E5 		ldr	r0, [r5]
 4364 0078 0120A0E3 		mov	r2, #1
 4365 007c FEFFFFEB 		bl	SOCKETS_Send
 4366              	.LVL510:
1433:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
 4367              		.loc 1 1433 0
 4368 0080 0420A0E1 		mov	r2, r4
 4369 0084 0010A0E1 		mov	r1, r0
 4370 0088 00908DE5 		str	r9, [sp]
 4371 008c 0400A0E1 		mov	r0, r4
 4372              	.LVL511:
 4373 0090 993500E3 		movw	r3, #1433
 4374 0094 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4375              	.LVL512:
1434:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
 4376              		.loc 1 1434 0
 4377 0098 0430A0E1 		mov	r3, r4
 4378 009c 0F108DE2 		add	r1, sp, #15
 4379 00a0 000095E5 		ldr	r0, [r5]
 4380 00a4 0120A0E3 		mov	r2, #1
 4381 00a8 FEFFFFEB 		bl	SOCKETS_Recv
 4382              	.LVL513:
1435:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4383              		.loc 1 1435 0
 4384 00ac 0420A0E1 		mov	r2, r4
 4385 00b0 0010A0E1 		mov	r1, r0
 4386 00b4 00908DE5 		str	r9, [sp]
 4387 00b8 0400A0E1 		mov	r0, r4
 4388              	.LVL514:
 4389 00bc 9B3500E3 		movw	r3, #1435
 4390 00c0 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4391              	.LVL515:
1438:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4392              		.loc 1 1438 0
 4393 00c4 203E04E3 		movw	r3, #20000
 4394 00c8 0A10A0E1 		mov	r1, r10
 4395 00cc 0320A0E1 		mov	r2, r3
 4396 00d0 00708DE5 		str	r7, [sp]
 4397 00d4 70019FE5 		ldr	r0, .L283
 4398 00d8 FEFFFFEB 		bl	prvConnectHelperWithRetry
 4399              	.LVL516:
1439:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4400              		.loc 1 1439 0
 4401 00dc 9F3500E3 		movw	r3, #1439
 4402 00e0 0010A0E1 		mov	r1, r0
 4403 00e4 70219FE5 		ldr	r2, .L283+16
 4404 00e8 0400A0E1 		mov	r0, r4
 4405              	.LVL517:
 4406 00ec 00608DE5 		str	r6, [sp]
 4407 00f0 FEFFFFEB 		bl	UnityAssertEqualNumber
 4408              	.LVL518:
1441:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 4409              		.loc 1 1441 0
 4410 00f4 000095E5 		ldr	r0, [r5]
 4411              	.LVL519:
 4412              	.LBB242:
 4413              	.LBB243:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4414              		.loc 1 633 0
 4415 00f8 FEFFFFEB 		bl	SOCKETS_Close
 4416              	.LVL520:
 4417              	.LBE243:
 4418              	.LBE242:
1442:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4419              		.loc 1 1442 0
 4420 00fc 00608DE5 		str	r6, [sp]
 4421 0100 0010A0E1 		mov	r1, r0
 4422 0104 A23500E3 		movw	r3, #1442
 4423 0108 0400A0E1 		mov	r0, r4
 4424              	.LVL521:
 4425 010c 44219FE5 		ldr	r2, .L283+12
 4426              	.LBB245:
 4427              	.LBB244:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4428              		.loc 1 635 0
 4429 0110 004087E5 		str	r4, [r7]
 4430              	.LVL522:
 4431              	.LBE244:
 4432              	.LBE245:
1442:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4433              		.loc 1 1442 0
 4434 0114 FEFFFFEB 		bl	UnityAssertEqualNumber
 4435              	.LVL523:
1445:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4436              		.loc 1 1445 0
 4437 0118 008085E5 		str	r8, [r5]
1448:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
 4438              		.loc 1 1448 0
 4439 011c 0430A0E1 		mov	r3, r4
 4440 0120 0F108DE2 		add	r1, sp, #15
 4441 0124 000095E5 		ldr	r0, [r5]
 4442 0128 0120A0E3 		mov	r2, #1
 4443 012c FEFFFFEB 		bl	SOCKETS_Send
 4444              	.LVL524:
1449:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
 4445              		.loc 1 1449 0
 4446 0130 0420A0E1 		mov	r2, r4
 4447 0134 0010A0E1 		mov	r1, r0
 4448 0138 00908DE5 		str	r9, [sp]
 4449 013c 0400A0E1 		mov	r0, r4
 4450              	.LVL525:
 4451 0140 A93500E3 		movw	r3, #1449
 4452 0144 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4453              	.LVL526:
1450:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
 4454              		.loc 1 1450 0
 4455 0148 0430A0E1 		mov	r3, r4
 4456 014c 0F108DE2 		add	r1, sp, #15
 4457 0150 000095E5 		ldr	r0, [r5]
 4458 0154 0120A0E3 		mov	r2, #1
 4459 0158 FEFFFFEB 		bl	SOCKETS_Recv
 4460              	.LVL527:
1451:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4461              		.loc 1 1451 0
 4462 015c 0420A0E1 		mov	r2, r4
 4463 0160 0010A0E1 		mov	r1, r0
 4464 0164 00908DE5 		str	r9, [sp]
 4465 0168 0400A0E1 		mov	r0, r4
 4466              	.LVL528:
 4467 016c AB3500E3 		movw	r3, #1451
 4468 0170 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4469              	.LVL529:
1454:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4470              		.loc 1 1454 0
 4471 0174 203E04E3 		movw	r3, #20000
 4472 0178 0A10A0E1 		mov	r1, r10
 4473 017c 0320A0E1 		mov	r2, r3
 4474 0180 00708DE5 		str	r7, [sp]
 4475 0184 C0009FE5 		ldr	r0, .L283
 4476 0188 FEFFFFEB 		bl	prvConnectHelperWithRetry
 4477              	.LVL530:
1455:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4478              		.loc 1 1455 0
 4479 018c AF3500E3 		movw	r3, #1455
 4480 0190 0010A0E1 		mov	r1, r0
 4481 0194 C0209FE5 		ldr	r2, .L283+16
 4482 0198 0400A0E1 		mov	r0, r4
 4483              	.LVL531:
 4484 019c 00608DE5 		str	r6, [sp]
 4485 01a0 FEFFFFEB 		bl	UnityAssertEqualNumber
 4486              	.LVL532:
1457:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 4487              		.loc 1 1457 0
 4488 01a4 000095E5 		ldr	r0, [r5]
 4489 01a8 FEFFFFEB 		bl	prvShutdownHelper
 4490              	.LVL533:
1458:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4491              		.loc 1 1458 0
 4492 01ac B23500E3 		movw	r3, #1458
 4493 01b0 0010A0E1 		mov	r1, r0
 4494 01b4 A4209FE5 		ldr	r2, .L283+20
 4495 01b8 0400A0E1 		mov	r0, r4
 4496              	.LVL534:
 4497 01bc 00608DE5 		str	r6, [sp]
 4498 01c0 FEFFFFEB 		bl	UnityAssertEqualNumber
 4499              	.LVL535:
1460:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 4500              		.loc 1 1460 0
 4501 01c4 000095E5 		ldr	r0, [r5]
 4502              	.LVL536:
 4503              	.LBB246:
 4504              	.LBB247:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4505              		.loc 1 633 0
 4506 01c8 FEFFFFEB 		bl	SOCKETS_Close
 4507              	.LVL537:
 4508              	.LBE247:
 4509              	.LBE246:
1461:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4510              		.loc 1 1461 0
 4511 01cc 00608DE5 		str	r6, [sp]
 4512 01d0 0010A0E1 		mov	r1, r0
 4513 01d4 B53500E3 		movw	r3, #1461
 4514 01d8 0400A0E1 		mov	r0, r4
 4515              	.LVL538:
 4516 01dc 74209FE5 		ldr	r2, .L283+12
 4517              	.LBB249:
 4518              	.LBB248:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4519              		.loc 1 635 0
 4520 01e0 004087E5 		str	r4, [r7]
 4521              	.LVL539:
 4522              	.LBE248:
 4523              	.LBE249:
1461:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4524              		.loc 1 1461 0
 4525 01e4 FEFFFFEB 		bl	UnityAssertEqualNumber
 4526              	.LVL540:
1464:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4527              		.loc 1 1464 0
 4528 01e8 008085E5 		str	r8, [r5]
1467:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
 4529              		.loc 1 1467 0
 4530 01ec 0430A0E1 		mov	r3, r4
 4531 01f0 0F108DE2 		add	r1, sp, #15
 4532 01f4 000095E5 		ldr	r0, [r5]
 4533 01f8 0120A0E3 		mov	r2, #1
 4534 01fc FEFFFFEB 		bl	SOCKETS_Send
 4535              	.LVL541:
1468:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Recv( xSocket, &ucBuf, 1, 0 );
 4536              		.loc 1 1468 0
 4537 0200 0420A0E1 		mov	r2, r4
 4538 0204 0010A0E1 		mov	r1, r0
 4539 0208 00908DE5 		str	r9, [sp]
 4540 020c 0400A0E1 		mov	r0, r4
 4541              	.LVL542:
 4542 0210 BC3500E3 		movw	r3, #1468
 4543 0214 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4544              	.LVL543:
1469:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_UINT32( 0, xResult );
 4545              		.loc 1 1469 0
 4546 0218 0430A0E1 		mov	r3, r4
 4547 021c 0F108DE2 		add	r1, sp, #15
 4548 0220 000095E5 		ldr	r0, [r5]
 4549 0224 0120A0E3 		mov	r2, #1
 4550 0228 FEFFFFEB 		bl	SOCKETS_Recv
 4551              	.LVL544:
1470:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4552              		.loc 1 1470 0
 4553 022c 00908DE5 		str	r9, [sp]
 4554 0230 0010A0E1 		mov	r1, r0
 4555 0234 BE3500E3 		movw	r3, #1470
 4556 0238 0420A0E1 		mov	r2, r4
 4557 023c 0400A0E1 		mov	r0, r4
 4558              	.LVL545:
 4559 0240 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4560              	.LVL546:
1473:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4561              		.loc 1 1473 0
 4562 0244 10D08DE2 		add	sp, sp, #16
 4563              		.cfi_def_cfa_offset 32
 4564              		@ sp needed
 4565 0248 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4566              	.L284:
 4567              		.align	2
 4568              	.L283:
 4569 024c 00000000 		.word	.LANCHOR1
 4570 0250 00000000 		.word	.LANCHOR0
 4571 0254 00000000 		.word	.LC13
 4572 0258 92000000 		.word	.LC18
 4573 025c 00000000 		.word	.LC29
 4574 0260 00000000 		.word	.LC31
 4575              		.cfi_endproc
 4576              	.LFE72:
 4578              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Close_,"ax",%progbits
 4579              		.align	2
 4580              		.global	TEST_Full_TCP_AFQP_SOCKETS_Close_
 4581              		.syntax unified
 4582              		.arm
 4583              		.fpu neon
 4585              	TEST_Full_TCP_AFQP_SOCKETS_Close_:
 4586              	.LFB74:
1476:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 4587              		.loc 1 1476 0
 4588              		.cfi_startproc
 4589              		@ args = 0, pretend = 0, frame = 0
 4590              		@ frame_needed = 0, uses_anonymous_args = 0
 4591              		@ link register save eliminated.
1479:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 4592              		.loc 1 1479 0
 4593 0000 0100A0E3 		mov	r0, #1
 4594 0004 FEFFFFEA 		b	prvTestSOCKETS_Close
 4595              	.LVL547:
 4596              		.cfi_endproc
 4597              	.LFE74:
 4599              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_,"ax",%progbits
 4600              		.align	2
 4601              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_
 4602              		.syntax unified
 4603              		.arm
 4604              		.fpu neon
 4606              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_:
 4607              	.LFB76:
1483:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 4608              		.loc 1 1483 0
 4609              		.cfi_startproc
 4610              		@ args = 0, pretend = 0, frame = 0
 4611              		@ frame_needed = 0, uses_anonymous_args = 0
 4612              		@ link register save eliminated.
1486:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 4613              		.loc 1 1486 0
 4614 0000 0000A0E3 		mov	r0, #0
 4615 0004 FEFFFFEA 		b	prvTestSOCKETS_Close
 4616              	.LVL548:
 4617              		.cfi_endproc
 4618              	.LFE76:
 4620              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_,"ax",%progbits
 4621              		.align	2
 4622              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_
 4623              		.syntax unified
 4624              		.arm
 4625              		.fpu neon
 4627              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_:
 4628              	.LFB147:
2924:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** /*-----------------------------------------------------------*/
2925:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2926:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** TEST( Full_TCP, AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect )
2927:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 4629              		.loc 1 2927 0
 4630              		.cfi_startproc
 4631              		@ args = 0, pretend = 0, frame = 8
 4632              		@ frame_needed = 0, uses_anonymous_args = 0
 4633              	.LVL549:
 4634 0000 7F402DE9 		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4635              		.cfi_def_cfa_offset 32
 4636              		.cfi_offset 4, -16
 4637              		.cfi_offset 5, -12
 4638              		.cfi_offset 6, -8
 4639              		.cfi_offset 14, -4
2928:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
2929:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     char * pcAlpns[] = { socketsAWS_IOT_ALPN_MQTT };
 4640              		.loc 1 2929 0
 4641 0004 74319FE5 		ldr	r3, .L293
2930:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2931:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
2932:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2933:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     if( TEST_PROTECT() )
 4642              		.loc 1 2933 0
 4643 0008 74019FE5 		ldr	r0, .L293+4
2929:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4644              		.loc 1 2929 0
 4645 000c 0C308DE5 		str	r3, [sp, #12]
 4646              		.loc 1 2933 0
 4647 0010 FEFFFFEB 		bl	setjmp
 4648              	.LVL550:
 4649 0014 004050E2 		subs	r4, r0, #0
 4650 0018 4100001A 		bne	.L290
2934:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
2935:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvConnectHelperWithRetry( &xSocket, eNonsecure, xReceiveTimeOut, xSendTimeOut, &
 4651              		.loc 1 2935 0
 4652 001c 64319FE5 		ldr	r3, .L293+8
2936:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4653              		.loc 1 2936 0
 4654 0020 1450A0E3 		mov	r5, #20
2935:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4655              		.loc 1 2935 0
 4656 0024 60619FE5 		ldr	r6, .L293+12
 4657 0028 0110A0E3 		mov	r1, #1
 4658 002c 00308DE5 		str	r3, [sp]
 4659 0030 203E04E3 		movw	r3, #20000
 4660 0034 0320A0E1 		mov	r2, r3
 4661 0038 0600A0E1 		mov	r0, r6
 4662 003c FEFFFFEB 		bl	prvConnectHelperWithRetry
 4663              	.LVL551:
 4664              		.loc 1 2936 0
 4665 0040 783B00E3 		movw	r3, #2936
 4666 0044 0010A0E1 		mov	r1, r0
 4667 0048 40219FE5 		ldr	r2, .L293+16
 4668 004c 0400A0E1 		mov	r0, r4
 4669              	.LVL552:
 4670 0050 00508DE5 		str	r5, [sp]
 4671 0054 FEFFFFEB 		bl	UnityAssertEqualNumber
 4672              	.LVL553:
2937:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2938:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to set the secure option AFTER the connect. */
2939:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 4673              		.loc 1 2939 0
 4674 0058 0430A0E1 		mov	r3, r4
 4675 005c 0820A0E3 		mov	r2, #8
 4676 0060 0410A0E1 		mov	r1, r4
 4677 0064 000096E5 		ldr	r0, [r6]
 4678 0068 00408DE5 		str	r4, [sp]
 4679 006c FEFFFFEB 		bl	SOCKETS_SetSockOpt
 4680              	.LVL554:
2940:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
2941:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_REQUIRE_TLS,
2942:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       NULL,
2943:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       ( size_t ) 0 );
2944:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( SOCKETS_ERROR_NONE, xResult, "TLS setup after connect succee
 4681              		.loc 1 2944 0
 4682 0070 2E3DA0E3 		mov	r3, #2944
 4683 0074 0010A0E1 		mov	r1, r0
 4684 0078 14219FE5 		ldr	r2, .L293+20
 4685 007c 0400A0E1 		mov	r0, r4
 4686              	.LVL555:
 4687 0080 00508DE5 		str	r5, [sp]
 4688 0084 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4689              	.LVL556:
2945:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2946:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to set ALPN option after connect. */
2947:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 4690              		.loc 1 2947 0
 4691 0088 0130A0E3 		mov	r3, #1
 4692 008c 0A20A0E3 		mov	r2, #10
 4693 0090 00308DE5 		str	r3, [sp]
 4694 0094 0410A0E1 		mov	r1, r4
 4695 0098 0C308DE2 		add	r3, sp, #12
 4696 009c 000096E5 		ldr	r0, [r6]
 4697 00a0 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 4698              	.LVL557:
2948:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0, /* Level - Unused. */
2949:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_ALPN_PROTOCOLS,
2950:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       pcAlpns,
2951:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       sizeof( pcAlpns ) / sizeof( pcAlpns[ 0 ] ) );
2952:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( SOCKETS_ERROR_NONE, xResult, "ALPN setup after connect succe
 4699              		.loc 1 2952 0
 4700 00a4 883B00E3 		movw	r3, #2952
 4701 00a8 0010A0E1 		mov	r1, r0
 4702 00ac E4209FE5 		ldr	r2, .L293+24
 4703 00b0 0400A0E1 		mov	r0, r4
 4704              	.LVL558:
 4705 00b4 00508DE5 		str	r5, [sp]
 4706 00b8 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4707              	.LVL559:
2953:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2954:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2955:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to set SNI option after connect. */
2956:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 4708              		.loc 1 2956 0
 4709 00bc 2F30A0E3 		mov	r3, #47
 4710 00c0 0620A0E3 		mov	r2, #6
 4711 00c4 00308DE5 		str	r3, [sp]
 4712 00c8 0410A0E1 		mov	r1, r4
 4713 00cc C8309FE5 		ldr	r3, .L293+28
 4714 00d0 000096E5 		ldr	r0, [r6]
 4715 00d4 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 4716              	.LVL560:
2957:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0, /* Level - Unused. */
2958:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_SERVER_NAME_INDICATION,
2959:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       clientcredentialMQTT_BROKER_ENDPOINT,
2960:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) );
2961:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( SOCKETS_ERROR_NONE, xResult, "SNI setup after connect succee
 4717              		.loc 1 2961 0
 4718 00d8 913B00E3 		movw	r3, #2961
 4719 00dc 0010A0E1 		mov	r1, r0
 4720 00e0 B8209FE5 		ldr	r2, .L293+32
 4721 00e4 0400A0E1 		mov	r0, r4
 4722              	.LVL561:
 4723 00e8 00508DE5 		str	r5, [sp]
 4724 00ec FEFFFFEB 		bl	UnityAssertSmallerNumber
 4725              	.LVL562:
2962:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2963:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* Try to set Trusted certificate option after connect. */
2964:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket,
 4726              		.loc 1 2964 0
 4727 00f0 1C30A0E3 		mov	r3, #28
 4728 00f4 0720A0E3 		mov	r2, #7
 4729 00f8 00308DE5 		str	r3, [sp]
 4730 00fc 0410A0E1 		mov	r1, r4
 4731 0100 9C309FE5 		ldr	r3, .L293+36
 4732 0104 000096E5 		ldr	r0, [r6]
 4733 0108 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 4734              	.LVL563:
2965:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       0,
2966:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE,
2967:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       tcptestECHO_HOST_ROOT_CA,
2968:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                       sizeof( tcptestECHO_HOST_ROOT_CA ) );
2969:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Trusted server certificate set
 4735              		.loc 1 2969 0
 4736 010c 00508DE5 		str	r5, [sp]
 4737 0110 0010A0E1 		mov	r1, r0
 4738 0114 993B00E3 		movw	r3, #2969
 4739 0118 88209FE5 		ldr	r2, .L293+40
 4740 011c 0400A0E1 		mov	r0, r4
 4741              	.LVL564:
 4742 0120 FEFFFFEB 		bl	UnityAssertSmallerNumber
 4743              	.LVL565:
 4744              	.L290:
2970:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
2971:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvShutdownHelper( xSocket );
 4745              		.loc 1 2972 0
 4746 0124 60509FE5 		ldr	r5, .L293+12
2973:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 4747              		.loc 1 2973 0
 4748 0128 1440A0E3 		mov	r4, #20
2972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 4749              		.loc 1 2972 0
 4750 012c 000095E5 		ldr	r0, [r5]
 4751 0130 FEFFFFEB 		bl	prvShutdownHelper
 4752              	.LVL566:
 4753              		.loc 1 2973 0
 4754 0134 9D3B00E3 		movw	r3, #2973
2972:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 4755              		.loc 1 2972 0
 4756 0138 0010A0E1 		mov	r1, r0
 4757              	.LVL567:
 4758              		.loc 1 2973 0
 4759 013c 68209FE5 		ldr	r2, .L293+44
 4760 0140 0000A0E3 		mov	r0, #0
 4761              	.LVL568:
 4762 0144 00408DE5 		str	r4, [sp]
 4763 0148 FEFFFFEB 		bl	UnityAssertEqualNumber
 4764              	.LVL569:
2974:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
2975:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvCloseHelper( xSocket, &xSocketOpen );
 4765              		.loc 1 2975 0
 4766 014c 000095E5 		ldr	r0, [r5]
 4767              	.LVL570:
 4768              	.LBB250:
 4769              	.LBB251:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4770              		.loc 1 633 0
 4771 0150 FEFFFFEB 		bl	SOCKETS_Close
 4772              	.LVL571:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4773              		.loc 1 635 0
 4774 0154 2C309FE5 		ldr	r3, .L293+8
 4775 0158 00C0A0E3 		mov	ip, #0
 4776              	.LBE251:
 4777              	.LBE250:
2976:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 4778              		.loc 1 2976 0
 4779 015c 0010A0E1 		mov	r1, r0
 4780 0160 48209FE5 		ldr	r2, .L293+48
 4781 0164 0C00A0E1 		mov	r0, ip
 4782              	.LVL572:
 4783              	.LBB253:
 4784              	.LBB252:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4785              		.loc 1 635 0
 4786 0168 00C083E5 		str	ip, [r3]
 4787              	.LVL573:
 4788              	.LBE252:
 4789              	.LBE253:
 4790              		.loc 1 2976 0
 4791 016c BA3EA0E3 		mov	r3, #2976
 4792 0170 00408DE5 		str	r4, [sp]
 4793 0174 FEFFFFEB 		bl	UnityAssertEqualNumber
 4794              	.LVL574:
2977:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 4795              		.loc 1 2977 0
 4796 0178 10D08DE2 		add	sp, sp, #16
 4797              		.cfi_def_cfa_offset 16
 4798              		@ sp needed
 4799 017c 7080BDE8 		pop	{r4, r5, r6, pc}
 4800              	.L294:
 4801              		.align	2
 4802              	.L293:
 4803 0180 00000000 		.word	.LC56
 4804 0184 28000000 		.word	Unity+40
 4805 0188 00000000 		.word	.LANCHOR0
 4806 018c 00000000 		.word	.LANCHOR1
 4807 0190 00000000 		.word	.LC29
 4808 0194 0F000000 		.word	.LC57
 4809 0198 47000000 		.word	.LC58
 4810 019c 00000000 		.word	.LANCHOR3
 4811 01a0 80000000 		.word	.LC59
 4812 01a4 00000000 		.word	.LANCHOR5
 4813 01a8 B8000000 		.word	.LC60
 4814 01ac 00000000 		.word	.LC31
 4815 01b0 92000000 		.word	.LC18
 4816              		.cfi_endproc
 4817              	.LFE147:
 4819              		.section	.text.prvSOCKETS_SetSockOpt_RCVTIMEO,"ax",%progbits
 4820              		.align	2
 4821              		.syntax unified
 4822              		.arm
 4823              		.fpu neon
 4825              	prvSOCKETS_SetSockOpt_RCVTIMEO:
 4826              	.LFB47:
1057:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 4827              		.loc 1 1057 0
 4828              		.cfi_startproc
 4829              		@ args = 0, pretend = 0, frame = 32
 4830              		@ frame_needed = 0, uses_anonymous_args = 0
 4831              	.LVL575:
1063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuffer;
 4832              		.loc 1 1063 0
 4833 0000 98319FE5 		ldr	r3, .L299
1057:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 4834              		.loc 1 1057 0
 4835 0004 00C0A0E1 		mov	ip, r0
 4836 0008 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4837              		.cfi_def_cfa_offset 36
 4838              		.cfi_offset 4, -36
 4839              		.cfi_offset 5, -32
 4840              		.cfi_offset 6, -28
 4841              		.cfi_offset 7, -24
 4842              		.cfi_offset 8, -20
 4843              		.cfi_offset 9, -16
 4844              		.cfi_offset 10, -12
 4845              		.cfi_offset 11, -8
 4846              		.cfi_offset 14, -4
 4847 000c 2CD04DE2 		sub	sp, sp, #44
 4848              		.cfi_def_cfa_offset 80
1073:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4849              		.loc 1 1073 0
 4850 0010 8C419FE5 		ldr	r4, .L299+4
1063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuffer;
 4851              		.loc 1 1063 0
 4852 0014 1C708DE2 		add	r7, sp, #28
1092:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 4853              		.loc 1 1092 0
 4854 0018 0060A0E3 		mov	r6, #0
1063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuffer;
 4855              		.loc 1 1063 0
 4856 001c 070093E8 		ldm	r3, {r0, r1, r2}
 4857              	.LVL576:
1073:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4858              		.loc 1 1073 0
 4859 0020 203E04E3 		movw	r3, #20000
1094:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket, 0, SOCKETS_SO_RCVTIMEO, &xTimeout, sizeof( TickType_
 4860              		.loc 1 1094 0
 4861 0024 7CB19FE5 		ldr	fp, .L299+8
1063:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t ucBuffer;
 4862              		.loc 1 1063 0
 4863 0028 070087E8 		stm	r7, {r0, r1, r2}
 4864              	.LVL577:
1073:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 4865              		.loc 1 1073 0
 4866 002c 0C10A0E1 		mov	r1, ip
 4867 0030 0320A0E1 		mov	r2, r3
 4868 0034 00408DE5 		str	r4, [sp]
 4869 0038 6C019FE5 		ldr	r0, .L299+12
 4870 003c FEFFFFEB 		bl	prvConnectHelperWithRetry
 4871              	.LVL578:
1074:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4872              		.loc 1 1074 0
 4873 0040 1430A0E3 		mov	r3, #20
 4874 0044 0010A0E1 		mov	r1, r0
 4875 0048 60219FE5 		ldr	r2, .L299+16
 4876 004c 0000A0E3 		mov	r0, #0
 4877              	.LVL579:
 4878 0050 00308DE5 		str	r3, [sp]
 4879 0054 323400E3 		movw	r3, #1074
 4880 0058 FEFFFFEB 		bl	UnityAssertEqualNumber
 4881              	.LVL580:
1077:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4882              		.loc 1 1077 0
 4883 005c 0000A0E3 		mov	r0, #0
 4884 0060 FEFFFFEB 		bl	uxTaskPriorityGet
 4885              	.LVL581:
1084:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4886              		.loc 1 1084 0
 4887 0064 1310A0E3 		mov	r1, #19
1077:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4888              		.loc 1 1077 0
 4889 0068 0080A0E1 		mov	r8, r0
 4890              	.LVL582:
1084:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4891              		.loc 1 1084 0
 4892 006c 0000A0E3 		mov	r0, #0
 4893              	.LVL583:
 4894 0070 FEFFFFEB 		bl	vTaskPrioritySet
 4895              	.LVL584:
 4896 0074 08408DE5 		str	r4, [sp, #8]
 4897              	.LVL585:
 4898              	.L296:
1094:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket, 0, SOCKETS_SO_RCVTIMEO, &xTimeout, sizeof( TickType_
 4899              		.loc 1 1094 0 discriminator 3
 4900 0078 063197E7 		ldr	r3, [r7, r6, lsl #2]
 4901 007c FA2FA0E3 		mov	r2, #1000
1095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to set receive timeou
 4902              		.loc 1 1095 0 discriminator 3
 4903 0080 24519FE5 		ldr	r5, .L299+12
1096:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4904              		.loc 1 1096 0 discriminator 3
 4905 0084 1440A0E3 		mov	r4, #20
1092:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 4906              		.loc 1 1092 0 discriminator 3
 4907 0088 016086E2 		add	r6, r6, #1
 4908              	.LVL586:
1094:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket, 0, SOCKETS_SO_RCVTIMEO, &xTimeout, sizeof( TickType_
 4909              		.loc 1 1094 0 discriminator 3
 4910 008c 920302E0 		mul	r2, r2, r3
1095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to set receive timeou
 4911              		.loc 1 1095 0 discriminator 3
 4912 0090 000095E5 		ldr	r0, [r5]
1094:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_SetSockOpt( xSocket, 0, SOCKETS_SO_RCVTIMEO, &xTimeout, sizeof( TickType_
 4913              		.loc 1 1094 0 discriminator 3
 4914 0094 922B83E0 		umull	r2, r3, r2, fp
 4915 0098 2323A0E1 		lsr	r2, r3, #6
 4916 009c 28308DE2 		add	r3, sp, #40
 4917 00a0 102023E5 		str	r2, [r3, #-16]!
1095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to set receive timeou
 4918              		.loc 1 1095 0 discriminator 3
 4919 00a4 0420A0E3 		mov	r2, #4
 4920 00a8 00208DE5 		str	r2, [sp]
 4921 00ac 0020A0E3 		mov	r2, #0
 4922 00b0 0210A0E1 		mov	r1, r2
 4923 00b4 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 4924              	.LVL587:
1096:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4925              		.loc 1 1096 0 discriminator 3
 4926 00b8 483400E3 		movw	r3, #1096
 4927 00bc 0010A0E1 		mov	r1, r0
 4928 00c0 EC209FE5 		ldr	r2, .L299+20
 4929 00c4 0000A0E3 		mov	r0, #0
 4930              	.LVL588:
 4931 00c8 00408DE5 		str	r4, [sp]
 4932 00cc FEFFFFEB 		bl	UnityAssertEqualNumber
 4933              	.LVL589:
1098:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &ucBuffer, 1, 0 );
 4934              		.loc 1 1098 0 discriminator 3
 4935 00d0 FEFFFFEB 		bl	xTaskGetTickCount
 4936              	.LVL590:
1099:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
 4937              		.loc 1 1099 0 discriminator 3
 4938 00d4 0030A0E3 		mov	r3, #0
 4939 00d8 0120A0E3 		mov	r2, #1
 4940 00dc 17108DE2 		add	r1, sp, #23
1098:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &ucBuffer, 1, 0 );
 4941              		.loc 1 1098 0 discriminator 3
 4942 00e0 0090A0E1 		mov	r9, r0
 4943              	.LVL591:
1099:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
 4944              		.loc 1 1099 0 discriminator 3
 4945 00e4 000095E5 		ldr	r0, [r5]
 4946              	.LVL592:
 4947 00e8 FEFFFFEB 		bl	SOCKETS_Recv
 4948              	.LVL593:
 4949 00ec 0C008DE5 		str	r0, [sp, #12]
 4950              	.LVL594:
1100:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 1, xResult, "Receive call failed in receive timeout test" );
 4951              		.loc 1 1100 0 discriminator 3
 4952 00f0 FEFFFFEB 		bl	xTaskGetTickCount
 4953              	.LVL595:
1101:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCheckTimeout( xStartTime, xEndTime, xTimeout );
 4954              		.loc 1 1101 0 discriminator 3
 4955 00f4 4D3400E3 		movw	r3, #1101
1100:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 1, xResult, "Receive call failed in receive timeout test" );
 4956              		.loc 1 1100 0 discriminator 3
 4957 00f8 00A0A0E1 		mov	r10, r0
 4958              	.LVL596:
1101:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCheckTimeout( xStartTime, xEndTime, xTimeout );
 4959              		.loc 1 1101 0 discriminator 3
 4960 00fc B4209FE5 		ldr	r2, .L299+24
 4961 0100 0100A0E3 		mov	r0, #1
 4962              	.LVL597:
 4963 0104 0C109DE5 		ldr	r1, [sp, #12]
 4964 0108 00408DE5 		str	r4, [sp]
 4965 010c FEFFFFEB 		bl	UnityAssertSmallerNumber
 4966              	.LVL598:
1102:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Receive timeout was outside of acceptabl
 4967              		.loc 1 1102 0 discriminator 3
 4968 0110 18209DE5 		ldr	r2, [sp, #24]
 4969 0114 0A10A0E1 		mov	r1, r10
 4970 0118 0900A0E1 		mov	r0, r9
 4971 011c FEFFFFEB 		bl	prvCheckTimeout
 4972              	.LVL599:
1103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 4973              		.loc 1 1103 0 discriminator 3
 4974 0120 00408DE5 		str	r4, [sp]
 4975 0124 0010A0E1 		mov	r1, r0
 4976 0128 4F3400E3 		movw	r3, #1103
 4977 012c 88209FE5 		ldr	r2, .L299+28
 4978 0130 0100A0E3 		mov	r0, #1
 4979              	.LVL600:
 4980 0134 FEFFFFEB 		bl	UnityAssertEqualNumber
 4981              	.LVL601:
1092:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 4982              		.loc 1 1092 0 discriminator 3
 4983 0138 030056E3 		cmp	r6, #3
 4984 013c CDFFFF1A 		bne	.L296
1107:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvShutdownHelper( xSocket );
 4985              		.loc 1 1107 0
 4986 0140 0810A0E1 		mov	r1, r8
 4987 0144 0000A0E3 		mov	r0, #0
 4988 0148 FEFFFFEB 		bl	vTaskPrioritySet
 4989              	.LVL602:
1108:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 4990              		.loc 1 1108 0
 4991 014c 000095E5 		ldr	r0, [r5]
 4992 0150 FEFFFFEB 		bl	prvShutdownHelper
 4993              	.LVL603:
1109:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 4994              		.loc 1 1109 0
 4995 0154 553400E3 		movw	r3, #1109
 4996 0158 0010A0E1 		mov	r1, r0
 4997 015c 5C209FE5 		ldr	r2, .L299+32
 4998 0160 0000A0E3 		mov	r0, #0
 4999              	.LVL604:
 5000 0164 00408DE5 		str	r4, [sp]
 5001 0168 FEFFFFEB 		bl	UnityAssertEqualNumber
 5002              	.LVL605:
1111:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 5003              		.loc 1 1111 0
 5004 016c 000095E5 		ldr	r0, [r5]
 5005              	.LVL606:
 5006              	.LBB254:
 5007              	.LBB255:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5008              		.loc 1 633 0
 5009 0170 FEFFFFEB 		bl	SOCKETS_Close
 5010              	.LVL607:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5011              		.loc 1 635 0
 5012 0174 08309DE5 		ldr	r3, [sp, #8]
 5013 0178 00C0A0E3 		mov	ip, #0
 5014              	.LBE255:
 5015              	.LBE254:
1112:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5016              		.loc 1 1112 0
 5017 017c 0010A0E1 		mov	r1, r0
 5018 0180 3C209FE5 		ldr	r2, .L299+36
 5019 0184 0C00A0E1 		mov	r0, ip
 5020              	.LVL608:
 5021              	.LBB257:
 5022              	.LBB256:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5023              		.loc 1 635 0
 5024 0188 00C083E5 		str	ip, [r3]
 5025              	.LVL609:
 5026              	.LBE256:
 5027              	.LBE257:
1112:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5028              		.loc 1 1112 0
 5029 018c 583400E3 		movw	r3, #1112
 5030 0190 00408DE5 		str	r4, [sp]
 5031 0194 FEFFFFEB 		bl	UnityAssertEqualNumber
 5032              	.LVL610:
1115:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5033              		.loc 1 1115 0
 5034 0198 2CD08DE2 		add	sp, sp, #44
 5035              		.cfi_def_cfa_offset 36
 5036              		@ sp needed
 5037 019c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5038              	.LVL611:
 5039              	.L300:
 5040              		.align	2
 5041              	.L299:
 5042 01a0 00000000 		.word	.LANCHOR15
 5043 01a4 00000000 		.word	.LANCHOR0
 5044 01a8 D34D6210 		.word	274877907
 5045 01ac 00000000 		.word	.LANCHOR1
 5046 01b0 00000000 		.word	.LC29
 5047 01b4 00000000 		.word	.LC61
 5048 01b8 1E000000 		.word	.LC62
 5049 01bc 4A000000 		.word	.LC63
 5050 01c0 00000000 		.word	.LC31
 5051 01c4 92000000 		.word	.LC18
 5052              		.cfi_endproc
 5053              	.LFE47:
 5055              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_,"ax",%progbits
 5056              		.align	2
 5057              		.global	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_
 5058              		.syntax unified
 5059              		.arm
 5060              		.fpu neon
 5062              	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_:
 5063              	.LFB49:
1119:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 5064              		.loc 1 1119 0
 5065              		.cfi_startproc
 5066              		@ args = 0, pretend = 0, frame = 0
 5067              		@ frame_needed = 0, uses_anonymous_args = 0
 5068              		@ link register save eliminated.
1122:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 5069              		.loc 1 1122 0
 5070 0000 0100A0E3 		mov	r0, #1
 5071 0004 FEFFFFEA 		b	prvSOCKETS_SetSockOpt_RCVTIMEO
 5072              	.LVL612:
 5073              		.cfi_endproc
 5074              	.LFE49:
 5076              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_,"ax",%progbits
 5077              		.align	2
 5078              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_
 5079              		.syntax unified
 5080              		.arm
 5081              		.fpu neon
 5083              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_:
 5084              	.LFB51:
1126:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 5085              		.loc 1 1126 0
 5086              		.cfi_startproc
 5087              		@ args = 0, pretend = 0, frame = 0
 5088              		@ frame_needed = 0, uses_anonymous_args = 0
 5089              		@ link register save eliminated.
1129:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 5090              		.loc 1 1129 0
 5091 0000 0000A0E3 		mov	r0, #0
 5092 0004 FEFFFFEA 		b	prvSOCKETS_SetSockOpt_RCVTIMEO
 5093              	.LVL613:
 5094              		.cfi_endproc
 5095              	.LFE51:
 5097              		.section	.text.prvSOCKETS_NonBlocking_Test,"ax",%progbits
 5098              		.align	2
 5099              		.syntax unified
 5100              		.arm
 5101              		.fpu neon
 5103              	prvSOCKETS_NonBlocking_Test:
 5104              	.LFB52:
1134:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 5105              		.loc 1 1134 0
 5106              		.cfi_startproc
 5107              		@ args = 0, pretend = 0, frame = 24
 5108              		@ frame_needed = 0, uses_anonymous_args = 0
 5109              	.LVL614:
1141:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 5110              		.loc 1 1141 0
 5111 0000 54229FE5 		ldr	r2, .L310
1139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xWaitTime = 1000;
 5112              		.loc 1 1139 0
 5113 0004 0030A0E3 		mov	r3, #0
1134:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 5114              		.loc 1 1134 0
 5115 0008 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 5116              		.cfi_def_cfa_offset 28
 5117              		.cfi_offset 4, -28
 5118              		.cfi_offset 5, -24
 5119              		.cfi_offset 6, -20
 5120              		.cfi_offset 7, -16
 5121              		.cfi_offset 8, -12
 5122              		.cfi_offset 9, -8
 5123              		.cfi_offset 14, -4
 5124 000c 24D04DE2 		sub	sp, sp, #36
 5125              		.cfi_def_cfa_offset 64
1134:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 5126              		.loc 1 1134 0
 5127 0010 14008DE5 		str	r0, [sp, #20]
1141:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 5128              		.loc 1 1141 0
 5129 0014 002092E5 		ldr	r2, [r2]
1151:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5130              		.loc 1 1151 0
 5131 0018 40029FE5 		ldr	r0, .L310+4
 5132              	.LVL615:
1139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TickType_t xWaitTime = 1000;
 5133              		.loc 1 1139 0
 5134 001c 18308DE5 		str	r3, [sp, #24]
 5135              	.LVL616:
1141:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 5136              		.loc 1 1141 0
 5137 0020 10208DE5 		str	r2, [sp, #16]
 5138              	.LVL617:
1142:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLength = 1200;
 5139              		.loc 1 1142 0
 5140 0024 38229FE5 		ldr	r2, .L310+8
 5141              	.LVL618:
1144:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5142              		.loc 1 1144 0
 5143 0028 0C308DE5 		str	r3, [sp, #12]
1142:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLength = 1200;
 5144              		.loc 1 1142 0
 5145 002c 002092E5 		ldr	r2, [r2]
 5146 0030 1C208DE5 		str	r2, [sp, #28]
 5147              	.LVL619:
1151:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5148              		.loc 1 1151 0
 5149 0034 FEFFFFEB 		bl	setjmp
 5150              	.LVL620:
 5151 0038 004050E2 		subs	r4, r0, #0
 5152 003c 7700001A 		bne	.L305
1154:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5153              		.loc 1 1154 0
 5154 0040 20329FE5 		ldr	r3, .L310+12
1155:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5155              		.loc 1 1155 0
 5156 0044 1460A0E3 		mov	r6, #20
1154:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5157              		.loc 1 1154 0
 5158 0048 1C529FE5 		ldr	r5, .L310+16
 5159 004c 14109DE5 		ldr	r1, [sp, #20]
 5160 0050 00308DE5 		str	r3, [sp]
 5161 0054 203E04E3 		movw	r3, #20000
 5162 0058 0320A0E1 		mov	r2, r3
 5163 005c 0500A0E1 		mov	r0, r5
 5164 0060 FEFFFFEB 		bl	prvConnectHelperWithRetry
 5165              	.LVL621:
1155:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5166              		.loc 1 1155 0
 5167 0064 833400E3 		movw	r3, #1155
 5168 0068 0010A0E1 		mov	r1, r0
 5169 006c FC219FE5 		ldr	r2, .L310+20
 5170 0070 0400A0E1 		mov	r0, r4
 5171              	.LVL622:
 5172 0074 00608DE5 		str	r6, [sp]
 5173 0078 FEFFFFEB 		bl	UnityAssertEqualNumber
 5174              	.LVL623:
1163:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to set receive timeou
 5175              		.loc 1 1163 0
 5176 007c 0430A0E3 		mov	r3, #4
 5177 0080 0920A0E3 		mov	r2, #9
 5178 0084 00308DE5 		str	r3, [sp]
 5179 0088 0410A0E1 		mov	r1, r4
 5180 008c 18308DE2 		add	r3, sp, #24
 5181 0090 000095E5 		ldr	r0, [r5]
 5182 0094 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 5183              	.LVL624:
1164:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5184              		.loc 1 1164 0
 5185 0098 8C3400E3 		movw	r3, #1164
 5186 009c 0010A0E1 		mov	r1, r0
 5187 00a0 CC219FE5 		ldr	r2, .L310+24
 5188 00a4 0400A0E1 		mov	r0, r4
 5189              	.LVL625:
 5190 00a8 00608DE5 		str	r6, [sp]
 5191 00ac FEFFFFEB 		bl	UnityAssertEqualNumber
 5192              	.LVL626:
1166:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &pucRxBuffer, 1, 0 );
 5193              		.loc 1 1166 0
 5194 00b0 FEFFFFEB 		bl	xTaskGetTickCount
 5195              	.LVL627:
1167:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
 5196              		.loc 1 1167 0
 5197 00b4 0430A0E1 		mov	r3, r4
1166:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = SOCKETS_Recv( xSocket, &pucRxBuffer, 1, 0 );
 5198              		.loc 1 1166 0
 5199 00b8 0070A0E1 		mov	r7, r0
 5200              	.LVL628:
1167:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
 5201              		.loc 1 1167 0
 5202 00bc 0120A0E3 		mov	r2, #1
 5203 00c0 1C108DE2 		add	r1, sp, #28
 5204 00c4 000095E5 		ldr	r0, [r5]
 5205              	.LVL629:
 5206 00c8 FEFFFFEB 		bl	SOCKETS_Recv
 5207              	.LVL630:
 5208 00cc 0090A0E1 		mov	r9, r0
 5209              	.LVL631:
1168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 1, xResult, "Receive call failed in receive timeout test" );
 5210              		.loc 1 1168 0
 5211 00d0 FEFFFFEB 		bl	xTaskGetTickCount
 5212              	.LVL632:
1169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5213              		.loc 1 1169 0
 5214 00d4 913400E3 		movw	r3, #1169
1168:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_MESSAGE( 1, xResult, "Receive call failed in receive timeout test" );
 5215              		.loc 1 1168 0
 5216 00d8 0080A0E1 		mov	r8, r0
 5217              	.LVL633:
1169:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5218              		.loc 1 1169 0
 5219 00dc 94219FE5 		ldr	r2, .L310+28
 5220 00e0 0910A0E1 		mov	r1, r9
 5221 00e4 0100A0E3 		mov	r0, #1
 5222              	.LVL634:
 5223 00e8 00608DE5 		str	r6, [sp]
 5224 00ec FEFFFFEB 		bl	UnityAssertSmallerNumber
 5225              	.LVL635:
1171:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Receive timeout was outside of acceptabl
 5226              		.loc 1 1171 0
 5227 00f0 0810A0E1 		mov	r1, r8
 5228 00f4 18209DE5 		ldr	r2, [sp, #24]
 5229 00f8 0700A0E1 		mov	r0, r7
1202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5230              		.loc 1 1202 0
 5231 00fc E77300E3 		movw	r7, #999
 5232              	.LVL636:
1171:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Receive timeout was outside of acceptabl
 5233              		.loc 1 1171 0
 5234 0100 FEFFFFEB 		bl	prvCheckTimeout
 5235              	.LVL637:
1172:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5236              		.loc 1 1172 0
 5237 0104 943400E3 		movw	r3, #1172
 5238 0108 0010A0E1 		mov	r1, r0
 5239 010c 68219FE5 		ldr	r2, .L310+32
 5240 0110 0100A0E3 		mov	r0, #1
 5241              	.LVL638:
 5242 0114 00608DE5 		str	r6, [sp]
 5243 0118 FEFFFFEB 		bl	UnityAssertEqualNumber
 5244              	.LVL639:
1177:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         prvCreateTxData( ( char * ) pucTxBuffer, xMessageLength, 0 );
 5245              		.loc 1 1177 0
 5246 011c 7D2EA0E3 		mov	r2, #2000
 5247 0120 AA10A0E3 		mov	r1, #170
 5248 0124 10009DE5 		ldr	r0, [sp, #16]
 5249 0128 FEFFFFEB 		bl	memset
 5250              	.LVL640:
1178:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5251              		.loc 1 1178 0
 5252 012c 0420A0E1 		mov	r2, r4
 5253 0130 4B1EA0E3 		mov	r1, #1200
 5254 0134 10009DE5 		ldr	r0, [sp, #16]
 5255 0138 FEFFFFEB 		bl	prvCreateTxData
 5256              	.LVL641:
1180:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( pdPASS, xResult, "Data failed to send\r\n" );
 5257              		.loc 1 1180 0
 5258 013c 4B2EA0E3 		mov	r2, #1200
 5259 0140 10109DE5 		ldr	r1, [sp, #16]
 5260 0144 000095E5 		ldr	r0, [r5]
 5261 0148 FEFFFFEB 		bl	prvSendHelper
 5262              	.LVL642:
1181:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5263              		.loc 1 1181 0
 5264 014c 9D3400E3 		movw	r3, #1181
 5265 0150 0010A0E1 		mov	r1, r0
 5266 0154 24219FE5 		ldr	r2, .L310+36
 5267 0158 0100A0E3 		mov	r0, #1
 5268              	.LVL643:
 5269 015c 00608DE5 		str	r6, [sp]
 5270 0160 FEFFFFEB 		bl	UnityAssertEqualNumber
 5271              	.LVL644:
1183:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xStartTime = xTaskGetTickCount();
 5272              		.loc 1 1183 0
 5273 0164 7D2EA0E3 		mov	r2, #2000
 5274 0168 FF10A0E3 		mov	r1, #255
 5275 016c 1C009DE5 		ldr	r0, [sp, #28]
 5276 0170 FEFFFFEB 		bl	memset
 5277              	.LVL645:
1184:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xEndTime = xTaskGetTickCount();
 5278              		.loc 1 1184 0
 5279 0174 FEFFFFEB 		bl	xTaskGetTickCount
 5280              	.LVL646:
 5281 0178 0080A0E1 		mov	r8, r0
 5282              	.LVL647:
1185:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5283              		.loc 1 1185 0
 5284 017c FEFFFFEB 		bl	xTaskGetTickCount
 5285              	.LVL648:
 5286              	.L307:
1189:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5287              		.loc 1 1189 0
 5288 0180 0CC09DE5 		ldr	ip, [sp, #12]
 5289 0184 0430A0E1 		mov	r3, r4
 5290 0188 0C209DE5 		ldr	r2, [sp, #12]
 5291 018c 1C109DE5 		ldr	r1, [sp, #28]
 5292 0190 000095E5 		ldr	r0, [r5]
 5293 0194 4B2E62E2 		rsb	r2, r2, #1200
 5294 0198 0C1081E0 		add	r1, r1, ip
 5295 019c FEFFFFEB 		bl	SOCKETS_Recv
 5296              	.LVL649:
1191:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 5297              		.loc 1 1191 0
 5298 01a0 000050E3 		cmp	r0, #0
 5299              	.LVL650:
1198:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 5300              		.loc 1 1198 0
 5301 01a4 0C309DC5 		ldrgt	r3, [sp, #12]
 5302 01a8 003083C0 		addgt	r3, r3, r0
 5303 01ac 0C308DC5 		strgt	r3, [sp, #12]
 5304              	.LVL651:
1201:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         } while( ( ( xEndTime - xStartTime ) < xWaitTime ) && ( xMessageLength > xNumBytesReceived 
 5305              		.loc 1 1201 0
 5306 01b0 FEFFFFEB 		bl	xTaskGetTickCount
 5307              	.LVL652:
1202:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5308              		.loc 1 1202 0
 5309 01b4 0C309DE5 		ldr	r3, [sp, #12]
 5310 01b8 080040E0 		sub	r0, r0, r8
 5311              	.LVL653:
 5312 01bc 070050E1 		cmp	r0, r7
 5313 01c0 4B0E5393 		cmpls	r3, #1200
 5314 01c4 0160A033 		movcc	r6, #1
 5315 01c8 0060A023 		movcs	r6, #0
 5316 01cc EBFFFF3A 		bcc	.L307
1204:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5317              		.loc 1 1204 0
 5318 01d0 1440A0E3 		mov	r4, #20
 5319 01d4 B43400E3 		movw	r3, #1204
 5320 01d8 A4209FE5 		ldr	r2, .L310+40
 5321 01dc 4B0EA0E3 		mov	r0, #1200
 5322 01e0 0C109DE5 		ldr	r1, [sp, #12]
 5323 01e4 00408DE5 		str	r4, [sp]
 5324 01e8 FEFFFFEB 		bl	UnityAssertEqualNumber
 5325              	.LVL654:
1206:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5326              		.loc 1 1206 0
 5327 01ec 4B2EA0E3 		mov	r2, #1200
 5328 01f0 1C109DE5 		ldr	r1, [sp, #28]
 5329 01f4 10009DE5 		ldr	r0, [sp, #16]
 5330 01f8 FEFFFFEB 		bl	prvCheckRxTxBuffers
 5331              	.LVL655:
1208:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" )
 5332              		.loc 1 1208 0
 5333 01fc 68309FE5 		ldr	r3, .L310+16
 5334 0200 000093E5 		ldr	r0, [r3]
 5335 0204 FEFFFFEB 		bl	prvShutdownHelper
 5336              	.LVL656:
1209:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 5337              		.loc 1 1209 0
 5338 0208 00408DE5 		str	r4, [sp]
 5339 020c 0010A0E1 		mov	r1, r0
 5340 0210 B93400E3 		movw	r3, #1209
 5341 0214 6C209FE5 		ldr	r2, .L310+44
 5342 0218 0600A0E1 		mov	r0, r6
 5343              	.LVL657:
 5344 021c FEFFFFEB 		bl	UnityAssertEqualNumber
 5345              	.LVL658:
 5346              	.L305:
1212:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 5347              		.loc 1 1212 0
 5348 0220 44309FE5 		ldr	r3, .L310+16
 5349 0224 000093E5 		ldr	r0, [r3]
 5350              	.LVL659:
 5351              	.LBB258:
 5352              	.LBB259:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5353              		.loc 1 633 0
 5354 0228 FEFFFFEB 		bl	SOCKETS_Close
 5355              	.LVL660:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5356              		.loc 1 635 0
 5357 022c 34309FE5 		ldr	r3, .L310+12
 5358 0230 00C0A0E3 		mov	ip, #0
 5359              	.LBE259:
 5360              	.LBE258:
1213:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5361              		.loc 1 1213 0
 5362 0234 0010A0E1 		mov	r1, r0
 5363 0238 4C209FE5 		ldr	r2, .L310+48
 5364 023c 0C00A0E1 		mov	r0, ip
 5365              	.LVL661:
 5366              	.LBB261:
 5367              	.LBB260:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5368              		.loc 1 635 0
 5369 0240 00C083E5 		str	ip, [r3]
 5370              	.LVL662:
 5371              	.LBE260:
 5372              	.LBE261:
1213:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5373              		.loc 1 1213 0
 5374 0244 1430A0E3 		mov	r3, #20
 5375 0248 00308DE5 		str	r3, [sp]
 5376 024c BD3400E3 		movw	r3, #1213
 5377 0250 FEFFFFEB 		bl	UnityAssertEqualNumber
 5378              	.LVL663:
1216:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5379              		.loc 1 1216 0
 5380 0254 24D08DE2 		add	sp, sp, #36
 5381              		.cfi_def_cfa_offset 28
 5382              		@ sp needed
 5383 0258 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5384              	.L311:
 5385              		.align	2
 5386              	.L310:
 5387 025c 00000000 		.word	.LANCHOR11
 5388 0260 28000000 		.word	Unity+40
 5389 0264 00000000 		.word	.LANCHOR12
 5390 0268 00000000 		.word	.LANCHOR0
 5391 026c 00000000 		.word	.LANCHOR1
 5392 0270 00000000 		.word	.LC29
 5393 0274 00000000 		.word	.LC61
 5394 0278 1E000000 		.word	.LC62
 5395 027c 4A000000 		.word	.LC63
 5396 0280 00000000 		.word	.LC64
 5397 0284 16000000 		.word	.LC65
 5398 0288 00000000 		.word	.LC31
 5399 028c 92000000 		.word	.LC18
 5400              		.cfi_endproc
 5401              	.LFE52:
 5403              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_,"ax",%progbits
 5404              		.align	2
 5405              		.global	TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_
 5406              		.syntax unified
 5407              		.arm
 5408              		.fpu neon
 5410              	TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_:
 5411              	.LFB54:
1220:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 5412              		.loc 1 1220 0
 5413              		.cfi_startproc
 5414              		@ args = 0, pretend = 0, frame = 0
 5415              		@ frame_needed = 0, uses_anonymous_args = 0
 5416              		@ link register save eliminated.
1223:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 5417              		.loc 1 1223 0
 5418 0000 0100A0E3 		mov	r0, #1
 5419 0004 FEFFFFEA 		b	prvSOCKETS_NonBlocking_Test
 5420              	.LVL664:
 5421              		.cfi_endproc
 5422              	.LFE54:
 5424              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_,"ax",%progbits
 5425              		.align	2
 5426              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_
 5427              		.syntax unified
 5428              		.arm
 5429              		.fpu neon
 5431              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_:
 5432              	.LFB56:
1227:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 5433              		.loc 1 1227 0
 5434              		.cfi_startproc
 5435              		@ args = 0, pretend = 0, frame = 0
 5436              		@ frame_needed = 0, uses_anonymous_args = 0
 5437              		@ link register save eliminated.
1230:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 5438              		.loc 1 1230 0
 5439 0000 0000A0E3 		mov	r0, #0
 5440 0004 FEFFFFEA 		b	prvSOCKETS_NonBlocking_Test
 5441              	.LVL665:
 5442              		.cfi_endproc
 5443              	.LFE56:
 5445              		.section	.text.prvSOCKETS_SendRecv_VaryLength,"ax",%progbits
 5446              		.align	2
 5447              		.syntax unified
 5448              		.arm
 5449              		.fpu neon
 5451              	prvSOCKETS_SendRecv_VaryLength:
 5452              	.LFB82:
1565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 5453              		.loc 1 1565 0
 5454              		.cfi_startproc
 5455              		@ args = 0, pretend = 0, frame = 48
 5456              		@ frame_needed = 0, uses_anonymous_args = 0
 5457              	.LVL666:
1571:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 5458              		.loc 1 1571 0
 5459 0000 94319FE5 		ldr	r3, .L320
1565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 5460              		.loc 1 1565 0
 5461 0004 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5462              		.cfi_def_cfa_offset 36
 5463              		.cfi_offset 4, -36
 5464              		.cfi_offset 5, -32
 5465              		.cfi_offset 6, -28
 5466              		.cfi_offset 7, -24
 5467              		.cfi_offset 8, -20
 5468              		.cfi_offset 9, -16
 5469              		.cfi_offset 10, -12
 5470              		.cfi_offset 11, -8
 5471              		.cfi_offset 14, -4
 5472 0008 3CD04DE2 		sub	sp, sp, #60
 5473              		.cfi_def_cfa_offset 96
1573:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5474              		.loc 1 1573 0
 5475 000c 8CE19FE5 		ldr	lr, .L320+4
 5476 0010 18C08DE2 		add	ip, sp, #24
1580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5477              		.loc 1 1580 0
 5478 0014 0050A0E3 		mov	r5, #0
1571:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 5479              		.loc 1 1571 0
 5480 0018 008093E5 		ldr	r8, [r3]
 5481              	.LVL667:
1572:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLengths[] = { 1, 2, 7, 8, 9, 1199, 1200, 1201 }; /* TODO: Add 0, send sizes larg
 5482              		.loc 1 1572 0
 5483 001c 80319FE5 		ldr	r3, .L320+8
1565:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 5484              		.loc 1 1565 0
 5485 0020 14008DE5 		str	r0, [sp, #20]
1583:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5486              		.loc 1 1583 0
 5487 0024 7CB19FE5 		ldr	fp, .L320+12
1572:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLengths[] = { 1, 2, 7, 8, 9, 1199, 1200, 1201 }; /* TODO: Add 0, send sizes larg
 5488              		.loc 1 1572 0
 5489 0028 00A093E5 		ldr	r10, [r3]
 5490              	.LVL668:
1573:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5491              		.loc 1 1573 0
 5492 002c 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 5493              	.LVL669:
1583:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5494              		.loc 1 1583 0
 5495 0030 74619FE5 		ldr	r6, .L320+16
1573:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5496              		.loc 1 1573 0
 5497 0034 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
 5498 0038 0F009EE8 		ldm	lr, {r0, r1, r2, r3}
 5499 003c 0F008CE8 		stm	ip, {r0, r1, r2, r3}
 5500              	.LVL670:
 5501              	.L316:
1583:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5502              		.loc 1 1583 0
 5503 0040 203E04E3 		movw	r3, #20000
 5504 0044 0A40A0E3 		mov	r4, #10
 5505 0048 0320A0E1 		mov	r2, r3
 5506 004c 940504E0 		mul	r4, r4, r5
 5507              	.LVL671:
 5508 0050 14109DE5 		ldr	r1, [sp, #20]
 5509 0054 0600A0E1 		mov	r0, r6
 5510 0058 00B08DE5 		str	fp, [sp]
 5511 005c FEFFFFEB 		bl	prvConnectHelperWithRetry
 5512              	.LVL672:
1584:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5513              		.loc 1 1584 0
 5514 0060 1430A0E3 		mov	r3, #20
 5515 0064 0010A0E1 		mov	r1, r0
 5516 0068 00308DE5 		str	r3, [sp]
 5517 006c 0000A0E3 		mov	r0, #0
 5518              	.LVL673:
 5519 0070 633EA0E3 		mov	r3, #1584
 5520 0074 34219FE5 		ldr	r2, .L320+20
 5521 0078 FEFFFFEB 		bl	UnityAssertEqualNumber
 5522              	.LVL674:
 5523 007c 013085E2 		add	r3, r5, #1
 5524 0080 0C308DE5 		str	r3, [sp, #12]
 5525 0084 0A3084E2 		add	r3, r4, #10
 5526 0088 10308DE5 		str	r3, [sp, #16]
 5527              	.LVL675:
 5528              	.L315:
1589:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5529              		.loc 1 1589 0 discriminator 3
 5530 008c 7D2EA0E3 		mov	r2, #2000
 5531 0090 AA10A0E3 		mov	r1, #170
 5532 0094 0800A0E1 		mov	r0, r8
1600:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             memset( pucRxBuffer, tcptestRX_BUFFER_FILLER, tcptestBUFFER_SIZE );
 5533              		.loc 1 1600 0 discriminator 3
 5534 0098 1470A0E3 		mov	r7, #20
1589:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5535              		.loc 1 1589 0 discriminator 3
 5536 009c FEFFFFEB 		bl	memset
 5537              	.LVL676:
1591:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              xMessageLengths[ ulIndex ],
 5538              		.loc 1 1591 0 discriminator 3
 5539 00a0 18308DE2 		add	r3, sp, #24
 5540 00a4 0420A0E1 		mov	r2, r4
 5541 00a8 059193E7 		ldr	r9, [r3, r5, lsl #2]
 5542 00ac 0800A0E1 		mov	r0, r8
1594:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5543              		.loc 1 1594 0 discriminator 3
 5544 00b0 014084E2 		add	r4, r4, #1
 5545              	.LVL677:
1591:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                              xMessageLengths[ ulIndex ],
 5546              		.loc 1 1591 0 discriminator 3
 5547 00b4 0910A0E1 		mov	r1, r9
 5548 00b8 FEFFFFEB 		bl	prvCreateTxData
 5549              	.LVL678:
1596:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                      pucTxBuffer,
 5550              		.loc 1 1596 0 discriminator 3
 5551 00bc 0920A0E1 		mov	r2, r9
 5552 00c0 0810A0E1 		mov	r1, r8
 5553 00c4 000096E5 		ldr	r0, [r6]
 5554 00c8 FEFFFFEB 		bl	prvSendHelper
 5555              	.LVL679:
1600:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             memset( pucRxBuffer, tcptestRX_BUFFER_FILLER, tcptestBUFFER_SIZE );
 5556              		.loc 1 1600 0 discriminator 3
 5557 00cc 193DA0E3 		mov	r3, #1600
 5558 00d0 0010A0E1 		mov	r1, r0
 5559 00d4 D8209FE5 		ldr	r2, .L320+24
 5560 00d8 0100A0E3 		mov	r0, #1
 5561              	.LVL680:
 5562 00dc 00708DE5 		str	r7, [sp]
 5563 00e0 FEFFFFEB 		bl	UnityAssertEqualNumber
 5564              	.LVL681:
1601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvRecvHelper( xSocket,
 5565              		.loc 1 1601 0 discriminator 3
 5566 00e4 7D2EA0E3 		mov	r2, #2000
 5567 00e8 FF10A0E3 		mov	r1, #255
 5568 00ec 0A00A0E1 		mov	r0, r10
 5569 00f0 FEFFFFEB 		bl	memset
 5570              	.LVL682:
1602:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                      pucRxBuffer,
 5571              		.loc 1 1602 0 discriminator 3
 5572 00f4 0920A0E1 		mov	r2, r9
 5573 00f8 0A10A0E1 		mov	r1, r10
 5574 00fc 000096E5 		ldr	r0, [r6]
 5575 0100 FEFFFFEB 		bl	prvRecvHelper
 5576              	.LVL683:
1606:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvCheckRxTxBuffers( pucTxBuffer,
 5577              		.loc 1 1606 0 discriminator 3
 5578 0104 463600E3 		movw	r3, #1606
 5579 0108 0010A0E1 		mov	r1, r0
 5580 010c A4209FE5 		ldr	r2, .L320+28
 5581 0110 0100A0E3 		mov	r0, #1
 5582              	.LVL684:
 5583 0114 00708DE5 		str	r7, [sp]
 5584 0118 FEFFFFEB 		bl	UnityAssertEqualNumber
 5585              	.LVL685:
1607:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                            pucRxBuffer,
 5586              		.loc 1 1607 0 discriminator 3
 5587 011c 0920A0E1 		mov	r2, r9
 5588 0120 0A10A0E1 		mov	r1, r10
 5589 0124 0800A0E1 		mov	r0, r8
 5590 0128 FEFFFFEB 		bl	prvCheckRxTxBuffers
 5591              	.LVL686:
1587:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 5592              		.loc 1 1587 0 discriminator 3
 5593 012c 10309DE5 		ldr	r3, [sp, #16]
 5594 0130 030054E1 		cmp	r4, r3
 5595 0134 D4FFFF1A 		bne	.L315
1612:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" )
 5596              		.loc 1 1612 0 discriminator 2
 5597 0138 000096E5 		ldr	r0, [r6]
 5598 013c FEFFFFEB 		bl	prvShutdownHelper
 5599              	.LVL687:
1613:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5600              		.loc 1 1613 0 discriminator 2
 5601 0140 4D3600E3 		movw	r3, #1613
 5602 0144 0010A0E1 		mov	r1, r0
 5603 0148 6C209FE5 		ldr	r2, .L320+32
 5604 014c 0000A0E3 		mov	r0, #0
 5605              	.LVL688:
 5606 0150 00708DE5 		str	r7, [sp]
 5607 0154 FEFFFFEB 		bl	UnityAssertEqualNumber
 5608              	.LVL689:
1615:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 5609              		.loc 1 1615 0 discriminator 2
 5610 0158 000096E5 		ldr	r0, [r6]
 5611              	.LVL690:
 5612              	.LBB262:
 5613              	.LBB263:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5614              		.loc 1 633 0 discriminator 2
 5615 015c FEFFFFEB 		bl	SOCKETS_Close
 5616              	.LVL691:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5617              		.loc 1 635 0 discriminator 2
 5618 0160 0030A0E3 		mov	r3, #0
 5619              	.LBE263:
 5620              	.LBE262:
1616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5621              		.loc 1 1616 0 discriminator 2
 5622 0164 0010A0E1 		mov	r1, r0
 5623              	.LBB265:
 5624              	.LBB264:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5625              		.loc 1 635 0 discriminator 2
 5626 0168 00308BE5 		str	r3, [fp]
 5627              	.LVL692:
 5628              	.LBE264:
 5629              	.LBE265:
1616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5630              		.loc 1 1616 0 discriminator 2
 5631 016c 0000A0E3 		mov	r0, #0
 5632 0170 653EA0E3 		mov	r3, #1616
 5633 0174 44209FE5 		ldr	r2, .L320+36
 5634 0178 00708DE5 		str	r7, [sp]
 5635 017c FEFFFFEB 		bl	UnityAssertEqualNumber
 5636              	.LVL693:
1623:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 5637              		.loc 1 1623 0 discriminator 2
 5638 0180 9600A0E3 		mov	r0, #150
 5639 0184 FEFFFFEB 		bl	vTaskDelay
 5640              	.LVL694:
 5641 0188 0C509DE5 		ldr	r5, [sp, #12]
1580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5642              		.loc 1 1580 0 discriminator 2
 5643 018c 080055E3 		cmp	r5, #8
 5644 0190 AAFFFF1A 		bne	.L316
1628:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5645              		.loc 1 1628 0
 5646 0194 3CD08DE2 		add	sp, sp, #60
 5647              		.cfi_def_cfa_offset 36
 5648              		@ sp needed
 5649 0198 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5650              	.LVL695:
 5651              	.L321:
 5652              		.align	2
 5653              	.L320:
 5654 019c 00000000 		.word	.LANCHOR11
 5655 01a0 0C000000 		.word	.LANCHOR15+12
 5656 01a4 00000000 		.word	.LANCHOR12
 5657 01a8 00000000 		.word	.LANCHOR0
 5658 01ac 00000000 		.word	.LANCHOR1
 5659 01b0 00000000 		.word	.LC29
 5660 01b4 00000000 		.word	.LC64
 5661 01b8 16000000 		.word	.LC65
 5662 01bc 00000000 		.word	.LC31
 5663 01c0 92000000 		.word	.LC18
 5664              		.cfi_endproc
 5665              	.LFE82:
 5667              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_,"ax",%progbits
 5668              		.align	2
 5669              		.global	TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_
 5670              		.syntax unified
 5671              		.arm
 5672              		.fpu neon
 5674              	TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_:
 5675              	.LFB84:
1631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 5676              		.loc 1 1631 0
 5677              		.cfi_startproc
 5678              		@ args = 0, pretend = 0, frame = 0
 5679              		@ frame_needed = 0, uses_anonymous_args = 0
 5680              		@ link register save eliminated.
1634:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 5681              		.loc 1 1634 0
 5682 0000 0100A0E3 		mov	r0, #1
 5683 0004 FEFFFFEA 		b	prvSOCKETS_SendRecv_VaryLength
 5684              	.LVL696:
 5685              		.cfi_endproc
 5686              	.LFE84:
 5688              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_,"ax",%progbits
 5689              		.align	2
 5690              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_
 5691              		.syntax unified
 5692              		.arm
 5693              		.fpu neon
 5695              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_:
 5696              	.LFB86:
1638:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 5697              		.loc 1 1638 0
 5698              		.cfi_startproc
 5699              		@ args = 0, pretend = 0, frame = 0
 5700              		@ frame_needed = 0, uses_anonymous_args = 0
 5701              		@ link register save eliminated.
1641:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 5702              		.loc 1 1641 0
 5703 0000 0000A0E3 		mov	r0, #0
 5704 0004 FEFFFFEA 		b	prvSOCKETS_SendRecv_VaryLength
 5705              	.LVL697:
 5706              		.cfi_endproc
 5707              	.LFE86:
 5709              		.section	.text.prvSOCKETS_Threadsafe_SameSocketDifferentTasks,"ax",%progbits
 5710              		.align	2
 5711              		.syntax unified
 5712              		.arm
 5713              		.fpu neon
 5715              	prvSOCKETS_Threadsafe_SameSocketDifferentTasks:
 5716              	.LFB124:
2271:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xTotalReceived, xReturned = 0;
 5717              		.loc 1 2271 0
 5718              		.cfi_startproc
 5719              		@ args = 0, pretend = 0, frame = 24
 5720              		@ frame_needed = 0, uses_anonymous_args = 0
 5721              	.LVL698:
 5722 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5723              		.cfi_def_cfa_offset 36
 5724              		.cfi_offset 4, -36
 5725              		.cfi_offset 5, -32
 5726              		.cfi_offset 6, -28
 5727              		.cfi_offset 7, -24
 5728              		.cfi_offset 8, -20
 5729              		.cfi_offset 9, -16
 5730              		.cfi_offset 10, -12
 5731              		.cfi_offset 11, -8
 5732              		.cfi_offset 14, -4
 5733 0004 2CD04DE2 		sub	sp, sp, #44
 5734              		.cfi_def_cfa_offset 80
2277:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSocketPassingQueueAllocated = pdFALSE;
 5735              		.loc 1 2277 0
 5736 0008 0030A0E3 		mov	r3, #0
2271:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xTotalReceived, xReturned = 0;
 5737              		.loc 1 2271 0
 5738 000c 14008DE5 		str	r0, [sp, #20]
2282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5739              		.loc 1 2282 0
 5740 0010 C4029FE5 		ldr	r0, .L358
 5741              	.LVL699:
2277:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSocketPassingQueueAllocated = pdFALSE;
 5742              		.loc 1 2277 0
 5743 0014 18308DE5 		str	r3, [sp, #24]
2278:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile BaseType_t xSyncEventGroupAllocated = pdFALSE;
 5744              		.loc 1 2278 0
 5745 0018 1C308DE5 		str	r3, [sp, #28]
2279:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     volatile TaskHandle_t xCreatedTask;
 5746              		.loc 1 2279 0
 5747 001c 20308DE5 		str	r3, [sp, #32]
2282:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5748              		.loc 1 2282 0
 5749 0020 FEFFFFEB 		bl	setjmp
 5750              	.LVL700:
 5751 0024 005050E2 		subs	r5, r0, #0
 5752 0028 8600001A 		bne	.L326
2284:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( pcReceivedString != NULL );
 5753              		.loc 1 2284 0
 5754 002c 010CA0E3 		mov	r0, #256
 5755 0030 FEFFFFEB 		bl	pvPortMalloc
 5756              	.LVL701:
2285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xReceivedStringAllocated = pdTRUE;
 5757              		.loc 1 2285 0
 5758 0034 000050E3 		cmp	r0, #0
2284:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( pcReceivedString != NULL );
 5759              		.loc 1 2284 0
 5760 0038 0070A0E1 		mov	r7, r0
 5761 003c 10008DE5 		str	r0, [sp, #16]
 5762              	.LVL702:
2285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xReceivedStringAllocated = pdTRUE;
 5763              		.loc 1 2285 0
 5764 0040 0200001A 		bne	.L327
 5765              	.LVL703:
 5766              	.L357:
2285:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xReceivedStringAllocated = pdTRUE;
 5767              		.loc 1 2285 0 is_stmt 0 discriminator 1
 5768 0044 0110A0E3 		mov	r1, #1
 5769 0048 8C029FE5 		ldr	r0, .L358
 5770 004c FEFFFFEB 		bl	longjmp
 5771              	.LVL704:
 5772              	.L327:
2286:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5773              		.loc 1 2286 0 is_stmt 1
 5774 0050 0140A0E3 		mov	r4, #1
2290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSocketPassingQueue );
 5775              		.loc 1 2290 0
 5776 0054 0520A0E1 		mov	r2, r5
 5777 0058 0410A0E3 		mov	r1, #4
 5778 005c 0400A0E1 		mov	r0, r4
 5779              	.LVL705:
2286:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5780              		.loc 1 2286 0
 5781 0060 18408DE5 		str	r4, [sp, #24]
2290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSocketPassingQueue );
 5782              		.loc 1 2290 0
 5783 0064 FEFFFFEB 		bl	xQueueGenericCreate
 5784              	.LVL706:
 5785 0068 70329FE5 		ldr	r3, .L358+4
 5786 006c 000083E5 		str	r0, [r3]
2291:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSocketPassingQueueAllocated = pdTRUE;
 5787              		.loc 1 2291 0
 5788 0070 003093E5 		ldr	r3, [r3]
 5789 0074 000053E3 		cmp	r3, #0
 5790 0078 F1FFFF0A 		beq	.L357
2292:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5791              		.loc 1 2292 0
 5792 007c 1C408DE5 		str	r4, [sp, #28]
2296:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSyncEventGroup );
 5793              		.loc 1 2296 0
 5794 0080 FEFFFFEB 		bl	xEventGroupCreate
 5795              	.LVL707:
 5796 0084 58329FE5 		ldr	r3, .L358+8
 5797 0088 000083E5 		str	r0, [r3]
2297:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroupAllocated = pdTRUE;
 5798              		.loc 1 2297 0
 5799 008c 003093E5 		ldr	r3, [r3]
 5800 0090 000053E3 		cmp	r3, #0
 5801 0094 EAFFFF0A 		beq	.L357
2302:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                "EchoMultiTx",                    /* Just a text name for the task t
 5802              		.loc 1 2302 0
 5803 0098 24308DE2 		add	r3, sp, #36
2313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5804              		.loc 1 2313 0
 5805 009c 44829FE5 		ldr	r8, .L358+12
 5806 00a0 44B29FE5 		ldr	fp, .L358+16
2302:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                "EchoMultiTx",                    /* Just a text name for the task t
 5807              		.loc 1 2302 0
 5808 00a4 022BA0E3 		mov	r2, #2048
 5809 00a8 04308DE5 		str	r3, [sp, #4]
 5810 00ac 0530A0E1 		mov	r3, r5
 5811 00b0 38129FE5 		ldr	r1, .L358+20
 5812 00b4 00508DE5 		str	r5, [sp]
 5813 00b8 34029FE5 		ldr	r0, .L358+24
2298:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5814              		.loc 1 2298 0
 5815 00bc 20408DE5 		str	r4, [sp, #32]
2302:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                "EchoMultiTx",                    /* Just a text name for the task t
 5816              		.loc 1 2302 0
 5817 00c0 FEFFFFEB 		bl	xTaskCreate
 5818              	.LVL708:
2308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5819              		.loc 1 2308 0
 5820 00c4 1430A0E3 		mov	r3, #20
 5821 00c8 0010A0E1 		mov	r1, r0
 5822 00cc 0400A0E1 		mov	r0, r4
 5823              	.LVL709:
2314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5824              		.loc 1 2314 0
 5825 00d0 0540A0E1 		mov	r4, r5
2308:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5826              		.loc 1 2308 0
 5827 00d4 00308DE5 		str	r3, [sp]
 5828 00d8 043900E3 		movw	r3, #2308
 5829 00dc 14229FE5 		ldr	r2, .L358+28
 5830 00e0 FEFFFFEB 		bl	UnityAssertEqualNumber
 5831              	.LVL710:
 5832              	.L343:
2313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 5833              		.loc 1 2313 0
 5834 00e4 883301E3 		movw	r3, #5000
 5835 00e8 14109DE5 		ldr	r1, [sp, #20]
 5836 00ec 0320A0E1 		mov	r2, r3
 5837 00f0 00B08DE5 		str	fp, [sp]
 5838 00f4 0800A0E1 		mov	r0, r8
 5839 00f8 FEFFFFEB 		bl	prvConnectHelperWithRetry
 5840              	.LVL711:
2314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5841              		.loc 1 2314 0
 5842 00fc 1430A0E3 		mov	r3, #20
 5843 0100 0010A0E1 		mov	r1, r0
 5844 0104 00308DE5 		str	r3, [sp]
 5845 0108 0400A0E1 		mov	r0, r4
 5846              	.LVL712:
 5847 010c 0A3900E3 		movw	r3, #2314
 5848 0110 E4219FE5 		ldr	r2, .L358+32
 5849 0114 FEFFFFEB 		bl	UnityAssertEqualNumber
 5850              	.LVL713:
2317:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  tcptestRX_TASK_BIT,                          /* The bit representi
 5851              		.loc 1 2317 0
 5852 0118 C4319FE5 		ldr	r3, .L358+8
 5853 011c 0620A0E3 		mov	r2, #6
 5854 0120 0410A0E3 		mov	r1, #4
 5855 0124 000093E5 		ldr	r0, [r3]
 5856 0128 D0319FE5 		ldr	r3, .L358+36
 5857 012c FEFFFFEB 		bl	xEventGroupSync
 5858              	.LVL714:
 5859 0130 060050E3 		cmp	r0, #6
 5860 0134 5900001A 		bne	.L330
 5861              	.L332:
 5862              	.LVL715:
2328:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                                                            /* Using
 5863              		.loc 1 2328 0
 5864 0138 036005E2 		and	r6, r5, #3
 5865              	.LVL716:
2332:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5866              		.loc 1 2332 0
 5867 013c 1310A0E3 		mov	r1, #19
 5868 0140 0400A0E1 		mov	r0, r4
 5869 0144 FEFFFFEB 		bl	vTaskPrioritySet
 5870              	.LVL717:
2335:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 5871              		.loc 1 2335 0
 5872 0148 023046E2 		sub	r3, r6, #2
 5873 014c 010053E3 		cmp	r3, #1
 5874 0150 0200008A 		bhi	.L335
2337:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 5875              		.loc 1 2337 0
 5876 0154 0410A0E1 		mov	r1, r4
 5877 0158 0400A0E1 		mov	r0, r4
 5878 015c FEFFFFEB 		bl	vTaskPrioritySet
 5879              	.LVL718:
 5880              	.L335:
2342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 5881              		.loc 1 2342 0
 5882 0160 016016E2 		ands	r6, r6, #1
 5883              	.LVL719:
2331:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             vTaskPrioritySet( NULL, tcptestECHO_TEST_HIGH_PRIORITY );
 5884              		.loc 1 2331 0
 5885 0164 0090A0E3 		mov	r9, #0
2342:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 5886              		.loc 1 2342 0
 5887 0168 016CA003 		moveq	r6, #256
 5888              	.LVL720:
 5889              	.L339:
2347:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5890              		.loc 1 2347 0
 5891 016c 000098E5 		ldr	r0, [r8]
 5892 0170 0430A0E1 		mov	r3, r4
 5893 0174 0620A0E1 		mov	r2, r6
 5894 0178 0710A0E1 		mov	r1, r7
 5895 017c FEFFFFEB 		bl	SOCKETS_Recv
 5896              	.LVL721:
2349:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xReturned, "Error occured receiving large mess
 5897              		.loc 1 2349 0
 5898 0180 00A050E2 		subs	r10, r0, #0
 5899 0184 4900000A 		beq	.L336
 5900              	.LVL722:
 5901              	.L338:
2350:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5902              		.loc 1 2350 0
 5903 0188 1430A0E3 		mov	r3, #20
 5904 018c 70219FE5 		ldr	r2, .L358+40
 5905 0190 00308DE5 		str	r3, [sp]
 5906 0194 0A10A0E1 		mov	r1, r10
 5907 0198 2E3900E3 		movw	r3, #2350
 5908 019c 0400A0E1 		mov	r0, r4
 5909 01a0 FEFFFFEB 		bl	UnityAssertGreaterNumber
 5910              	.LVL723:
2353:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5911              		.loc 1 2353 0
 5912 01a4 5C019FE5 		ldr	r0, .L358+44
 5913 01a8 312900E3 		movw	r2, #2353
 5914 01ac 0130A0E3 		mov	r3, #1
 5915 01b0 00408DE5 		str	r4, [sp]
 5916 01b4 0C008DE9 		stmib	sp, {r2, r3}
 5917 01b8 0710A0E1 		mov	r1, r7
 5918 01bc 090080E0 		add	r0, r0, r9
 5919 01c0 0A20A0E1 		mov	r2, r10
2355:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 5920              		.loc 1 2355 0
 5921 01c4 0A9089E0 		add	r9, r9, r10
 5922              	.LVL724:
2353:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5923              		.loc 1 2353 0
 5924 01c8 FEFFFFEB 		bl	UnityAssertEqualMemory
 5925              	.LVL725:
2345:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 5926              		.loc 1 2345 0
 5927 01cc 120C59E3 		cmp	r9, #4608
 5928 01d0 E5FFFFBA 		blt	.L339
2360:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                  tcptestRX_TASK_BIT,                          /* The bit representi
 5929              		.loc 1 2360 0
 5930 01d4 08319FE5 		ldr	r3, .L358+8
 5931 01d8 0620A0E3 		mov	r2, #6
 5932 01dc 0410A0E3 		mov	r1, #4
 5933 01e0 000093E5 		ldr	r0, [r3]
 5934 01e4 14319FE5 		ldr	r3, .L358+36
 5935 01e8 FEFFFFEB 		bl	xEventGroupSync
 5936              	.LVL726:
 5937 01ec 060050E3 		cmp	r0, #6
 5938 01f0 3200001A 		bne	.L340
 5939              	.L342:
2369:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5940              		.loc 1 2369 0
 5941 01f4 1460A0E3 		mov	r6, #20
2368:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdow
 5942              		.loc 1 2368 0
 5943 01f8 000098E5 		ldr	r0, [r8]
 5944 01fc FEFFFFEB 		bl	prvShutdownHelper
 5945              	.LVL727:
2369:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5946              		.loc 1 2369 0
 5947 0200 413900E3 		movw	r3, #2369
 5948 0204 0010A0E1 		mov	r1, r0
 5949 0208 FC209FE5 		ldr	r2, .L358+48
 5950 020c 0400A0E1 		mov	r0, r4
 5951              	.LVL728:
 5952 0210 00608DE5 		str	r6, [sp]
2310:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 5953              		.loc 1 2310 0
 5954 0214 015085E2 		add	r5, r5, #1
 5955              	.LVL729:
2369:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5956              		.loc 1 2369 0
 5957 0218 FEFFFFEB 		bl	UnityAssertEqualNumber
 5958              	.LVL730:
2371:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" 
 5959              		.loc 1 2371 0
 5960 021c 000098E5 		ldr	r0, [r8]
 5961              	.LVL731:
 5962              	.LBB266:
 5963              	.LBB267:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5964              		.loc 1 633 0
 5965 0220 FEFFFFEB 		bl	SOCKETS_Close
 5966              	.LVL732:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 5967              		.loc 1 635 0
 5968 0224 00408BE5 		str	r4, [fp]
 5969              	.LVL733:
 5970              	.LBE267:
 5971              	.LBE266:
2372:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 5972              		.loc 1 2372 0
 5973 0228 0010A0E1 		mov	r1, r0
 5974 022c 00608DE5 		str	r6, [sp]
 5975 0230 443900E3 		movw	r3, #2372
 5976 0234 D4209FE5 		ldr	r2, .L358+52
 5977 0238 0400A0E1 		mov	r0, r4
 5978              	.LVL734:
 5979 023c FEFFFFEB 		bl	UnityAssertEqualNumber
 5980              	.LVL735:
2310:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 5981              		.loc 1 2310 0
 5982 0240 100055E3 		cmp	r5, #16
 5983 0244 A6FFFF1A 		bne	.L343
 5984              	.LVL736:
 5985              	.L326:
2377:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5986              		.loc 1 2377 0
 5987 0248 18309DE5 		ldr	r3, [sp, #24]
 5988 024c 010053E3 		cmp	r3, #1
 5989 0250 1E00000A 		beq	.L344
 5990              	.L347:
2382:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 5991              		.loc 1 2382 0
 5992 0254 1C309DE5 		ldr	r3, [sp, #28]
 5993 0258 010053E3 		cmp	r3, #1
 5994 025c 0200001A 		bne	.L346
2384:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 5995              		.loc 1 2384 0
 5996 0260 78309FE5 		ldr	r3, .L358+4
 5997 0264 000093E5 		ldr	r0, [r3]
 5998 0268 FEFFFFEB 		bl	vQueueDelete
 5999              	.LVL737:
 6000              	.L346:
2387:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6001              		.loc 1 2387 0
 6002 026c 20309DE5 		ldr	r3, [sp, #32]
 6003 0270 010053E3 		cmp	r3, #1
 6004 0274 0200001A 		bne	.L349
2389:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 6005              		.loc 1 2389 0
 6006 0278 64309FE5 		ldr	r3, .L358+8
 6007 027c 000093E5 		ldr	r0, [r3]
 6008 0280 FEFFFFEB 		bl	vEventGroupDelete
 6009              	.LVL738:
 6010              	.L349:
2392:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6011              		.loc 1 2392 0
 6012 0284 24009DE5 		ldr	r0, [sp, #36]
 6013 0288 FEFFFFEB 		bl	vTaskDelete
 6014              	.LVL739:
2395:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6015              		.loc 1 2395 0
 6016 028c 0010A0E3 		mov	r1, #0
 6017 0290 0100A0E1 		mov	r0, r1
 6018 0294 FEFFFFEB 		bl	vTaskPrioritySet
 6019              	.LVL740:
2396:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6020              		.loc 1 2396 0
 6021 0298 2CD08DE2 		add	sp, sp, #44
 6022              		.cfi_remember_state
 6023              		.cfi_def_cfa_offset 36
 6024              		@ sp needed
 6025 029c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6026              	.LVL741:
 6027              	.L330:
 6028              		.cfi_restore_state
2322:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 6029              		.loc 1 2322 0
 6030 02a0 121900E3 		movw	r1, #2322
 6031 02a4 0400A0E1 		mov	r0, r4
 6032 02a8 FEFFFFEB 		bl	UnityFail
 6033              	.LVL742:
 6034 02ac A1FFFFEA 		b	.L332
 6035              	.LVL743:
 6036              	.L336:
2349:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 TEST_ASSERT_GREATER_THAN_MESSAGE( 0, xReturned, "Error occured receiving large mess
 6037              		.loc 1 2349 0 discriminator 1
 6038 02b0 2D1900E3 		movw	r1, #2349
 6039 02b4 58009FE5 		ldr	r0, .L358+56
 6040              	.LVL744:
 6041 02b8 FEFFFFEB 		bl	UnityFail
 6042              	.LVL745:
 6043 02bc B1FFFFEA 		b	.L338
 6044              	.LVL746:
 6045              	.L340:
2365:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 6046              		.loc 1 2365 0
 6047 02c0 3D1900E3 		movw	r1, #2365
 6048 02c4 0400A0E1 		mov	r0, r4
 6049 02c8 FEFFFFEB 		bl	UnityFail
 6050              	.LVL747:
 6051 02cc C8FFFFEA 		b	.L342
 6052              	.LVL748:
 6053              	.L344:
2379:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 6054              		.loc 1 2379 0
 6055 02d0 10009DE5 		ldr	r0, [sp, #16]
 6056 02d4 FEFFFFEB 		bl	vPortFree
 6057              	.LVL749:
 6058 02d8 DDFFFFEA 		b	.L347
 6059              	.L359:
 6060              		.align	2
 6061              	.L358:
 6062 02dc 28000000 		.word	Unity+40
 6063 02e0 00000000 		.word	.LANCHOR16
 6064 02e4 00000000 		.word	.LANCHOR6
 6065 02e8 00000000 		.word	.LANCHOR1
 6066 02ec 00000000 		.word	.LANCHOR0
 6067 02f0 00000000 		.word	.LC66
 6068 02f4 00000000 		.word	prvEchoClientTxTask
 6069 02f8 0C000000 		.word	.LC67
 6070 02fc 00000000 		.word	.LC29
 6071 0300 80380100 		.word	80000
 6072 0304 21000000 		.word	.LC68
 6073 0308 00000000 		.word	.LANCHOR7
 6074 030c 00000000 		.word	.LC31
 6075 0310 92000000 		.word	.LC18
 6076 0314 47000000 		.word	.LC69
 6077              		.cfi_endproc
 6078              	.LFE124:
 6080              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_,"ax",%progbits
 6081              		.align	2
 6082              		.global	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_
 6083              		.syntax unified
 6084              		.arm
 6085              		.fpu neon
 6087              	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_:
 6088              	.LFB126:
2399:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 6089              		.loc 1 2399 0
 6090              		.cfi_startproc
 6091              		@ args = 0, pretend = 0, frame = 0
 6092              		@ frame_needed = 0, uses_anonymous_args = 0
 6093              		@ link register save eliminated.
2402:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6094              		.loc 1 2402 0
 6095 0000 0100A0E3 		mov	r0, #1
 6096 0004 FEFFFFEA 		b	prvSOCKETS_Threadsafe_SameSocketDifferentTasks
 6097              	.LVL750:
 6098              		.cfi_endproc
 6099              	.LFE126:
 6101              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_,"ax",%progbi
 6102              		.align	2
 6103              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_
 6104              		.syntax unified
 6105              		.arm
 6106              		.fpu neon
 6108              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_:
 6109              	.LFB128:
2406:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 6110              		.loc 1 2406 0
 6111              		.cfi_startproc
 6112              		@ args = 0, pretend = 0, frame = 0
 6113              		@ frame_needed = 0, uses_anonymous_args = 0
 6114              		@ link register save eliminated.
2409:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6115              		.loc 1 2409 0
 6116 0000 0000A0E3 		mov	r0, #0
 6117 0004 FEFFFFEA 		b	prvSOCKETS_Threadsafe_SameSocketDifferentTasks
 6118              	.LVL751:
 6119              		.cfi_endproc
 6120              	.LFE128:
 6122              		.section	.text.prvSOCKETS_Connect_InvalidParams.isra.9,"ax",%progbits
 6123              		.align	2
 6124              		.syntax unified
 6125              		.arm
 6126              		.fpu neon
 6128              	prvSOCKETS_Connect_InvalidParams.isra.9:
 6129              	.LFB157:
1811:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 6130              		.loc 1 1811 0
 6131              		.cfi_startproc
 6132              		@ args = 0, pretend = 0, frame = 8
 6133              		@ frame_needed = 0, uses_anonymous_args = 0
 6134              	.LVL752:
 6135 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 6136              		.cfi_def_cfa_offset 20
 6137              		.cfi_offset 4, -20
 6138              		.cfi_offset 5, -16
 6139              		.cfi_offset 6, -12
 6140              		.cfi_offset 7, -8
 6141              		.cfi_offset 14, -4
 6142 0004 14D04DE2 		sub	sp, sp, #20
 6143              		.cfi_def_cfa_offset 40
1826:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 6144              		.loc 1 1826 0
 6145 0008 14519FE5 		ldr	r5, .L365
 6146 000c 14019FE5 		ldr	r0, .L365+4
 6147 0010 FEFFFFEB 		bl	prvTcpSocketHelper
 6148              	.LVL753:
 6149 0014 000085E5 		str	r0, [r5]
1827:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6150              		.loc 1 1827 0
 6151 0018 003095E5 		ldr	r3, [r5]
 6152 001c 010073E3 		cmn	r3, #1
 6153 0020 0200001A 		bne	.L363
 6154 0024 231700E3 		movw	r1, #1827
 6155 0028 FC009FE5 		ldr	r0, .L365+8
 6156 002c FEFFFFEB 		bl	UnityFail
 6157              	.LVL754:
 6158              	.L363:
1831:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.ulAddress = ulEchoServerIP;
 6159              		.loc 1 1831 0
 6160 0030 F8309FE5 		ldr	r3, .L365+12
1835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6161              		.loc 1 1835 0
 6162 0034 0820A0E3 		mov	r2, #8
1832:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6163              		.loc 1 1832 0
 6164 0038 F4709FE5 		ldr	r7, .L365+16
1839:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6165              		.loc 1 1839 0
 6166 003c 1460A0E3 		mov	r6, #20
1835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6167              		.loc 1 1835 0
 6168 0040 02108DE0 		add	r1, sp, r2
 6169 0044 0000E0E3 		mvn	r0, #0
1831:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.ulAddress = ulEchoServerIP;
 6170              		.loc 1 1831 0
 6171 0048 BA30CDE1 		strh	r3, [sp, #10]	@ movhi
1842:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket,
 6172              		.loc 1 1842 0
 6173 004c 0040A0E3 		mov	r4, #0
1832:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6174              		.loc 1 1832 0
 6175 0050 0C708DE5 		str	r7, [sp, #12]
1835:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6176              		.loc 1 1835 0
 6177 0054 FEFFFFEB 		bl	SOCKETS_Connect
 6178              	.LVL755:
1839:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6179              		.loc 1 1839 0
 6180 0058 2F3700E3 		movw	r3, #1839
 6181 005c 0010A0E1 		mov	r1, r0
 6182 0060 00608DE5 		str	r6, [sp]
 6183 0064 0000A0E3 		mov	r0, #0
 6184              	.LVL756:
 6185 0068 C8209FE5 		ldr	r2, .L365+20
 6186 006c FEFFFFEB 		bl	UnityAssertSmallerNumber
 6187              	.LVL757:
1843:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6188              		.loc 1 1843 0
 6189 0070 0820A0E3 		mov	r2, #8
 6190 0074 000095E5 		ldr	r0, [r5]
 6191 0078 02108DE0 		add	r1, sp, r2
1842:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket,
 6192              		.loc 1 1842 0
 6193 007c 0C408DE5 		str	r4, [sp, #12]
1843:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6194              		.loc 1 1843 0
 6195 0080 FEFFFFEB 		bl	SOCKETS_Connect
 6196              	.LVL758:
1847:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6197              		.loc 1 1847 0
 6198 0084 373700E3 		movw	r3, #1847
 6199 0088 0010A0E1 		mov	r1, r0
 6200 008c 00608DE5 		str	r6, [sp]
 6201 0090 0400A0E1 		mov	r0, r4
 6202              	.LVL759:
 6203 0094 A0209FE5 		ldr	r2, .L365+24
 6204 0098 FEFFFFEB 		bl	UnityAssertSmallerNumber
 6205              	.LVL760:
1852:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6206              		.loc 1 1852 0
 6207 009c 0820A0E3 		mov	r2, #8
 6208 00a0 000095E5 		ldr	r0, [r5]
 6209 00a4 02108DE0 		add	r1, sp, r2
1850:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xEchoServerAddress.ulAddress = ulEchoServerIP;
 6210              		.loc 1 1850 0
 6211 00a8 BA40CDE1 		strh	r4, [sp, #10]	@ movhi
1851:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = SOCKETS_Connect( xSocket,
 6212              		.loc 1 1851 0
 6213 00ac 0C708DE5 		str	r7, [sp, #12]
1852:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                &xEchoServerAddress,
 6214              		.loc 1 1852 0
 6215 00b0 FEFFFFEB 		bl	SOCKETS_Connect
 6216              	.LVL761:
1856:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6217              		.loc 1 1856 0
 6218 00b4 1D3DA0E3 		mov	r3, #1856
 6219 00b8 0010A0E1 		mov	r1, r0
 6220 00bc 00608DE5 		str	r6, [sp]
 6221 00c0 0400A0E1 		mov	r0, r4
 6222              	.LVL762:
 6223 00c4 74209FE5 		ldr	r2, .L365+28
 6224 00c8 FEFFFFEB 		bl	UnityAssertSmallerNumber
 6225              	.LVL763:
1859:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6226              		.loc 1 1859 0
 6227 00cc 0420A0E1 		mov	r2, r4
 6228 00d0 0410A0E1 		mov	r1, r4
 6229 00d4 000095E5 		ldr	r0, [r5]
 6230 00d8 FEFFFFEB 		bl	SOCKETS_Connect
 6231              	.LVL764:
1862:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6232              		.loc 1 1862 0
 6233 00dc 463700E3 		movw	r3, #1862
 6234 00e0 0010A0E1 		mov	r1, r0
 6235 00e4 58209FE5 		ldr	r2, .L365+32
 6236 00e8 0400A0E1 		mov	r0, r4
 6237              	.LVL765:
 6238 00ec 00608DE5 		str	r6, [sp]
 6239 00f0 FEFFFFEB 		bl	UnityAssertSmallerNumber
 6240              	.LVL766:
1865:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 6241              		.loc 1 1865 0
 6242 00f4 000095E5 		ldr	r0, [r5]
 6243              	.LVL767:
 6244              	.LBB268:
 6245              	.LBB269:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6246              		.loc 1 633 0
 6247 00f8 FEFFFFEB 		bl	SOCKETS_Close
 6248              	.LVL768:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6249              		.loc 1 635 0
 6250 00fc 24309FE5 		ldr	r3, .L365+4
 6251              	.LBE269:
 6252              	.LBE268:
1866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6253              		.loc 1 1866 0
 6254 0100 0010A0E1 		mov	r1, r0
 6255 0104 3C209FE5 		ldr	r2, .L365+36
 6256 0108 0400A0E1 		mov	r0, r4
 6257              	.LVL769:
 6258              	.LBB271:
 6259              	.LBB270:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6260              		.loc 1 635 0
 6261 010c 004083E5 		str	r4, [r3]
 6262              	.LVL770:
 6263              	.LBE270:
 6264              	.LBE271:
1866:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6265              		.loc 1 1866 0
 6266 0110 4A3700E3 		movw	r3, #1866
 6267 0114 00608DE5 		str	r6, [sp]
 6268 0118 FEFFFFEB 		bl	UnityAssertEqualNumber
 6269              	.LVL771:
1867:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6270              		.loc 1 1867 0
 6271 011c 14D08DE2 		add	sp, sp, #20
 6272              		.cfi_def_cfa_offset 20
 6273              		@ sp needed
 6274 0120 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 6275              	.L366:
 6276              		.align	2
 6277              	.L365:
 6278 0124 00000000 		.word	.LANCHOR1
 6279 0128 00000000 		.word	.LANCHOR0
 6280 012c 00000000 		.word	.LC13
 6281 0130 22B3FFFF 		.word	-19678
 6282 0134 22DA19C5 		.word	-988161502
 6283 0138 00000000 		.word	.LC70
 6284 013c 24000000 		.word	.LC71
 6285 0140 49000000 		.word	.LC72
 6286 0144 62000000 		.word	.LC73
 6287 0148 92000000 		.word	.LC18
 6288              		.cfi_endproc
 6289              	.LFE157:
 6291              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_,"ax",%progbits
 6292              		.align	2
 6293              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_
 6294              		.syntax unified
 6295              		.arm
 6296              		.fpu neon
 6298              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_:
 6299              	.LFB99:
1877:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 6300              		.loc 1 1877 0
 6301              		.cfi_startproc
 6302              		@ args = 0, pretend = 0, frame = 0
 6303              		@ frame_needed = 0, uses_anonymous_args = 0
 6304              		@ link register save eliminated.
1880:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6305              		.loc 1 1880 0
 6306 0000 FEFFFFEA 		b	prvSOCKETS_Connect_InvalidParams.isra.9
 6307              	.LVL772:
 6308              		.cfi_endproc
 6309              	.LFE99:
 6311              		.section	.text.prvTestSOCKETS_Recv_ByteByByte,"ax",%progbits
 6312              		.align	2
 6313              		.syntax unified
 6314              		.arm
 6315              		.fpu neon
 6317              	prvTestSOCKETS_Recv_ByteByByte:
 6318              	.LFB77:
1493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 6319              		.loc 1 1493 0
 6320              		.cfi_startproc
 6321              		@ args = 0, pretend = 0, frame = 40
 6322              		@ frame_needed = 0, uses_anonymous_args = 0
 6323              	.LVL773:
1497:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 6324              		.loc 1 1497 0
 6325 0000 BC319FE5 		ldr	r3, .L383
1493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 6326              		.loc 1 1493 0
 6327 0004 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6328              		.cfi_def_cfa_offset 36
 6329              		.cfi_offset 4, -36
 6330              		.cfi_offset 5, -32
 6331              		.cfi_offset 6, -28
 6332              		.cfi_offset 7, -24
 6333              		.cfi_offset 8, -20
 6334              		.cfi_offset 9, -16
 6335              		.cfi_offset 10, -12
 6336              		.cfi_offset 11, -8
 6337              		.cfi_offset 14, -4
 6338 0008 0050A0E1 		mov	r5, r0
1499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6339              		.loc 1 1499 0
 6340 000c B4E19FE5 		ldr	lr, .L383+4
1493:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult = pdFAIL;
 6341              		.loc 1 1493 0
 6342 0010 34D04DE2 		sub	sp, sp, #52
 6343              		.cfi_def_cfa_offset 88
1499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6344              		.loc 1 1499 0
 6345 0014 1CC08DE2 		add	ip, sp, #28
1497:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint8_t * pucRxBuffer = ( uint8_t * ) pcRxBuffer;
 6346              		.loc 1 1497 0
 6347 0018 007093E5 		ldr	r7, [r3]
 6348              	.LVL774:
1498:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLengths[] = { 2, 7, 8, 9, 20 };
 6349              		.loc 1 1498 0
 6350 001c A8319FE5 		ldr	r3, .L383+8
1504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 6351              		.loc 1 1504 0
 6352 0020 A8419FE5 		ldr	r4, .L383+12
1512:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6353              		.loc 1 1512 0
 6354 0024 A8B19FE5 		ldr	fp, .L383+16
1498:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     size_t xMessageLengths[] = { 2, 7, 8, 9, 20 };
 6355              		.loc 1 1498 0
 6356 0028 008093E5 		ldr	r8, [r3]
 6357              	.LVL775:
1499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6358              		.loc 1 1499 0
 6359 002c 0F00BEE8 		ldmia	lr!, {r0, r1, r2, r3}
 6360              	.LVL776:
 6361 0030 0BA0A0E1 		mov	r10, fp
 6362 0034 0F00ACE8 		stmia	ip!, {r0, r1, r2, r3}
1504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 6363              		.loc 1 1504 0
 6364 0038 0510A0E1 		mov	r1, r5
1499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6365              		.loc 1 1499 0
 6366 003c 00309EE5 		ldr	r3, [lr]
1507:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6367              		.loc 1 1507 0
 6368 0040 0050A0E3 		mov	r5, #0
1504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 6369              		.loc 1 1504 0
 6370 0044 88019FE5 		ldr	r0, .L383+16
1499:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6371              		.loc 1 1499 0
 6372 0048 00308CE5 		str	r3, [ip]
1504:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 6373              		.loc 1 1504 0
 6374 004c 203E04E3 		movw	r3, #20000
 6375 0050 0320A0E1 		mov	r2, r3
 6376 0054 00408DE5 		str	r4, [sp]
 6377 0058 FEFFFFEB 		bl	prvConnectHelperWithRetry
 6378              	.LVL777:
1505:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6379              		.loc 1 1505 0
 6380 005c 1430A0E3 		mov	r3, #20
 6381 0060 0010A0E1 		mov	r1, r0
 6382 0064 00308DE5 		str	r3, [sp]
 6383 0068 0000A0E3 		mov	r0, #0
 6384              	.LVL778:
 6385 006c E13500E3 		movw	r3, #1505
 6386 0070 60219FE5 		ldr	r2, .L383+20
 6387 0074 FEFFFFEB 		bl	UnityAssertEqualNumber
 6388              	.LVL779:
 6389 0078 0C408DE5 		str	r4, [sp, #12]
 6390              	.LVL780:
 6391              	.L375:
1511:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvSendHelper( xSocket, pucTxBuffer, xMessageLengths[ ulTxCount ] );
 6392              		.loc 1 1511 0
 6393 007c 1C308DE2 		add	r3, sp, #28
 6394 0080 0520A0E1 		mov	r2, r5
 6395 0084 056193E7 		ldr	r6, [r3, r5, lsl #2]
 6396 0088 0700A0E1 		mov	r0, r7
 6397 008c 0790A0E1 		mov	r9, r7
 6398 0090 0610A0E1 		mov	r1, r6
 6399 0094 FEFFFFEB 		bl	prvCreateTxData
 6400              	.LVL781:
1512:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6401              		.loc 1 1512 0
 6402 0098 0620A0E1 		mov	r2, r6
 6403 009c 00009BE5 		ldr	r0, [fp]
 6404 00a0 0710A0E1 		mov	r1, r7
 6405 00a4 066087E0 		add	r6, r7, r6
 6406 00a8 FEFFFFEB 		bl	prvSendHelper
 6407              	.LVL782:
 6408 00ac 0040A0E1 		mov	r4, r0
 6409              	.LVL783:
 6410              	.L369:
1514:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 6411              		.loc 1 1514 0
 6412 00b0 010054E3 		cmp	r4, #1
 6413 00b4 0100001A 		bne	.L373
1514:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 6414              		.loc 1 1514 0 is_stmt 0 discriminator 1
 6415 00b8 090056E1 		cmp	r6, r9
 6416 00bc 1E00001A 		bne	.L374
 6417              	.L373:
1507:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6418              		.loc 1 1507 0 is_stmt 1 discriminator 2
 6419 00c0 015085E2 		add	r5, r5, #1
 6420              	.LVL784:
 6421 00c4 050055E3 		cmp	r5, #5
 6422 00c8 EBFFFF1A 		bne	.L375
1540:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     xResult = prvShutdownHelper( xSocket );
 6423              		.loc 1 1540 0
 6424 00cc 1450A0E3 		mov	r5, #20
 6425              	.LVL785:
 6426 00d0 0410A0E1 		mov	r1, r4
 6427 00d4 043600E3 		movw	r3, #1540
 6428 00d8 FC209FE5 		ldr	r2, .L383+24
 6429 00dc 00508DE5 		str	r5, [sp]
 6430 00e0 0100A0E3 		mov	r0, #1
 6431 00e4 FEFFFFEB 		bl	UnityAssertEqualNumber
 6432              	.LVL786:
1541:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to shutdown" );
 6433              		.loc 1 1541 0
 6434 00e8 00009AE5 		ldr	r0, [r10]
 6435 00ec FEFFFFEB 		bl	prvShutdownHelper
 6436              	.LVL787:
1542:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6437              		.loc 1 1542 0
 6438 00f0 063600E3 		movw	r3, #1542
 6439 00f4 0010A0E1 		mov	r1, r0
 6440 00f8 E0209FE5 		ldr	r2, .L383+28
 6441 00fc 0000A0E3 		mov	r0, #0
 6442              	.LVL788:
 6443 0100 00508DE5 		str	r5, [sp]
 6444 0104 FEFFFFEB 		bl	UnityAssertEqualNumber
 6445              	.LVL789:
1544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 6446              		.loc 1 1544 0
 6447 0108 00009AE5 		ldr	r0, [r10]
 6448              	.LVL790:
 6449              	.LBB276:
 6450              	.LBB277:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6451              		.loc 1 633 0
 6452 010c FEFFFFEB 		bl	SOCKETS_Close
 6453              	.LVL791:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6454              		.loc 1 635 0
 6455 0110 0C309DE5 		ldr	r3, [sp, #12]
 6456 0114 00C0A0E3 		mov	ip, #0
 6457              	.LBE277:
 6458              	.LBE276:
1545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6459              		.loc 1 1545 0
 6460 0118 0010A0E1 		mov	r1, r0
 6461 011c C0209FE5 		ldr	r2, .L383+32
 6462 0120 0C00A0E1 		mov	r0, ip
 6463              	.LVL792:
 6464              	.LBB279:
 6465              	.LBB278:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6466              		.loc 1 635 0
 6467 0124 00C083E5 		str	ip, [r3]
 6468              	.LVL793:
 6469              	.LBE278:
 6470              	.LBE279:
1545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6471              		.loc 1 1545 0
 6472 0128 093600E3 		movw	r3, #1545
 6473 012c 00508DE5 		str	r5, [sp]
 6474 0130 FEFFFFEB 		bl	UnityAssertEqualNumber
 6475              	.LVL794:
1546:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6476              		.loc 1 1546 0
 6477 0134 34D08DE2 		add	sp, sp, #52
 6478              		.cfi_remember_state
 6479              		.cfi_def_cfa_offset 36
 6480              		@ sp needed
 6481 0138 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6482              	.LVL795:
 6483              	.L374:
 6484              		.cfi_restore_state
1516:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xResult = prvRecvHelper( xSocket, pucRxBuffer, 1 );
 6485              		.loc 1 1516 0
 6486 013c 7D2EA0E3 		mov	r2, #2000
 6487 0140 FF10A0E3 		mov	r1, #255
 6488 0144 0800A0E1 		mov	r0, r8
 6489 0148 FEFFFFEB 		bl	memset
 6490              	.LVL796:
1517:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6491              		.loc 1 1517 0
 6492 014c 0420A0E1 		mov	r2, r4
 6493 0150 00009AE5 		ldr	r0, [r10]
 6494 0154 0810A0E1 		mov	r1, r8
 6495 0158 FEFFFFEB 		bl	prvRecvHelper
 6496              	.LVL797:
1519:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 6497              		.loc 1 1519 0
 6498 015c 010050E3 		cmp	r0, #1
1517:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6499              		.loc 1 1517 0
 6500 0160 0040A0E1 		mov	r4, r0
 6501              	.LVL798:
1519:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 6502              		.loc 1 1519 0
 6503 0164 1400001A 		bne	.L370
1521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 6504              		.loc 1 1521 0
 6505 0168 0020D8E5 		ldrb	r2, [r8]	@ zero_extendqisi2
 6506 016c 0030D9E5 		ldrb	r3, [r9]	@ zero_extendqisi2
 6507 0170 030052E1 		cmp	r2, r3
1530:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                     tcptestPRINTF( ( "Byte %d was incorrectly received\r\n", ( xBytesReceived + 1 )
 6508              		.loc 1 1530 0
 6509 0174 0040A013 		movne	r4, #0
1521:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 6510              		.loc 1 1521 0
 6511 0178 0F00001A 		bne	.L370
 6512 017c 0010A0E3 		mov	r1, #0
 6513              	.LBB280:
 6514              	.LBB281:
 725:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6515              		.loc 1 725 0
 6516 0180 CF2700E3 		movw	r2, #1999
 6517              	.LVL799:
 6518              	.L372:
 6519 0184 013081E2 		add	r3, r1, #1
 727:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 6520              		.loc 1 727 0
 6521 0188 0300D8E7 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 6522 018c FF0050E3 		cmp	r0, #255
 6523 0190 0600000A 		beq	.L371
 730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 6524              		.loc 1 730 0
 6525 0194 4C009FE5 		ldr	r0, .L383+36
 729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Buffer modified at byte %d \r\n", xIndex ) );
 6526              		.loc 1 729 0
 6527 0198 0040A0E3 		mov	r4, #0
 6528 019c 14208DE5 		str	r2, [sp, #20]
 6529 01a0 10308DE5 		str	r3, [sp, #16]
 6530              	.LVL800:
 730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 6531              		.loc 1 730 0
 6532 01a4 FEFFFFEB 		bl	vLoggingPrintf
 6533              	.LVL801:
 729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             tcptestFAILUREPRINTF( ( "Buffer modified at byte %d \r\n", xIndex ) );
 6534              		.loc 1 729 0
 6535 01a8 14209DE5 		ldr	r2, [sp, #20]
 6536 01ac 10309DE5 		ldr	r3, [sp, #16]
 6537              	.LVL802:
 6538              	.L371:
 725:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6539              		.loc 1 725 0
 6540 01b0 020053E1 		cmp	r3, r2
 6541 01b4 0310A0E1 		mov	r1, r3
 6542 01b8 F1FFFF1A 		bne	.L372
 6543              	.LVL803:
 6544              	.L370:
 6545 01bc 019089E2 		add	r9, r9, #1
 6546 01c0 BAFFFFEA 		b	.L369
 6547              	.L384:
 6548              		.align	2
 6549              	.L383:
 6550 01c4 00000000 		.word	.LANCHOR11
 6551 01c8 2C000000 		.word	.LANCHOR15+44
 6552 01cc 00000000 		.word	.LANCHOR12
 6553 01d0 00000000 		.word	.LANCHOR0
 6554 01d4 00000000 		.word	.LANCHOR1
 6555 01d8 00000000 		.word	.LC29
 6556 01dc 1E000000 		.word	.LC75
 6557 01e0 00000000 		.word	.LC31
 6558 01e4 92000000 		.word	.LC18
 6559 01e8 00000000 		.word	.LC74
 6560              	.LBE281:
 6561              	.LBE280:
 6562              		.cfi_endproc
 6563              	.LFE77:
 6565              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_,"ax",%progbits
 6566              		.align	2
 6567              		.global	TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_
 6568              		.syntax unified
 6569              		.arm
 6570              		.fpu neon
 6572              	TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_:
 6573              	.LFB79:
1549:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 6574              		.loc 1 1549 0
 6575              		.cfi_startproc
 6576              		@ args = 0, pretend = 0, frame = 0
 6577              		@ frame_needed = 0, uses_anonymous_args = 0
 6578              		@ link register save eliminated.
1552:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6579              		.loc 1 1552 0
 6580 0000 0100A0E3 		mov	r0, #1
 6581 0004 FEFFFFEA 		b	prvTestSOCKETS_Recv_ByteByByte
 6582              	.LVL804:
 6583              		.cfi_endproc
 6584              	.LFE79:
 6586              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_,"ax",%progbits
 6587              		.align	2
 6588              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_
 6589              		.syntax unified
 6590              		.arm
 6591              		.fpu neon
 6593              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_:
 6594              	.LFB81:
1556:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 6595              		.loc 1 1556 0
 6596              		.cfi_startproc
 6597              		@ args = 0, pretend = 0, frame = 0
 6598              		@ frame_needed = 0, uses_anonymous_args = 0
 6599              		@ link register save eliminated.
1559:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6600              		.loc 1 1559 0
 6601 0000 0000A0E3 		mov	r0, #0
 6602 0004 FEFFFFEA 		b	prvTestSOCKETS_Recv_ByteByByte
 6603              	.LVL805:
 6604              		.cfi_endproc
 6605              	.LFE81:
 6607              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_,"ax",%progbits
 6608              		.align	2
 6609              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_
 6610              		.syntax unified
 6611              		.arm
 6612              		.fpu neon
 6614              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_:
 6615              	.LFB117:
2154:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 6616              		.loc 1 2154 0
 6617              		.cfi_startproc
 6618              		@ args = 0, pretend = 0, frame = 104
 6619              		@ frame_needed = 0, uses_anonymous_args = 0
 6620 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6621              		.cfi_def_cfa_offset 36
 6622              		.cfi_offset 4, -36
 6623              		.cfi_offset 5, -32
 6624              		.cfi_offset 6, -28
 6625              		.cfi_offset 7, -24
 6626              		.cfi_offset 8, -20
 6627              		.cfi_offset 9, -16
 6628              		.cfi_offset 10, -12
 6629              		.cfi_offset 11, -8
 6630              		.cfi_offset 14, -4
 6631 0004 74D04DE2 		sub	sp, sp, #116
 6632              		.cfi_def_cfa_offset 152
 6633              	.LBB294:
 6634              	.LBB295:
2095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     memcpy( cFakeAddress, cRealAddress, sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) );
 6635              		.loc 1 2095 0
 6636 0008 2F20A0E3 		mov	r2, #47
 6637 000c 98129FE5 		ldr	r1, .L398
 6638 0010 10008DE2 		add	r0, sp, #16
2103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 6639              		.loc 1 2103 0
 6640 0014 94429FE5 		ldr	r4, .L398+4
2095:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     memcpy( cFakeAddress, cRealAddress, sizeof( clientcredentialMQTT_BROKER_ENDPOINT ) );
 6641              		.loc 1 2095 0
 6642 0018 FEFFFFEB 		bl	memcpy
 6643              	.LVL806:
2096:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     /* .com -> .cpm */
 6644              		.loc 1 2096 0
 6645 001c 2F20A0E3 		mov	r2, #47
 6646 0020 84129FE5 		ldr	r1, .L398
 6647 0024 40008DE2 		add	r0, sp, #64
 6648 0028 FEFFFFEB 		bl	memcpy
 6649              	.LVL807:
2098:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6650              		.loc 1 2098 0
 6651 002c 7030A0E3 		mov	r3, #112
2103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 6652              		.loc 1 2103 0
 6653 0030 7C029FE5 		ldr	r0, .L398+8
2098:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6654              		.loc 1 2098 0
 6655 0034 6C30CDE5 		strb	r3, [sp, #108]
2103:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 6656              		.loc 1 2103 0
 6657 0038 FEFFFFEB 		bl	prvTcpSocketHelper
 6658              	.LVL808:
 6659 003c 000084E5 		str	r0, [r4]
2104:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6660              		.loc 1 2104 0
 6661 0040 003094E5 		ldr	r3, [r4]
 6662 0044 010073E3 		cmn	r3, #1
 6663 0048 0200001A 		bne	.L388
 6664 004c 381800E3 		movw	r1, #2104
 6665 0050 60029FE5 		ldr	r0, .L398+12
 6666 0054 FEFFFFEB 		bl	UnityFail
 6667              	.LVL809:
 6668              	.L388:
2106:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 6669              		.loc 1 2106 0
 6670 0058 202E04E3 		movw	r2, #20000
 6671 005c 000094E5 		ldr	r0, [r4]
 6672 0060 0210A0E1 		mov	r1, r2
 6673 0064 FEFFFFEB 		bl	prvSetSockOptHelper
 6674              	.LVL810:
2107:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6675              		.loc 1 2107 0
 6676 0068 1430A0E3 		mov	r3, #20
 6677 006c 0010A0E1 		mov	r1, r0
 6678 0070 00308DE5 		str	r3, [sp]
 6679 0074 0000A0E3 		mov	r0, #0
 6680              	.LVL811:
 6681 0078 3B3800E3 		movw	r3, #2107
 6682 007c 38229FE5 		ldr	r2, .L398+16
 6683 0080 FEFFFFEB 		bl	UnityAssertEqualNumber
 6684              	.LVL812:
2110:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 6685              		.loc 1 2110 0
 6686 0084 2F30A0E3 		mov	r3, #47
 6687 0088 0620A0E3 		mov	r2, #6
 6688 008c 00308DE5 		str	r3, [sp]
 6689 0090 0010A0E3 		mov	r1, #0
 6690 0094 10308DE2 		add	r3, sp, #16
 6691 0098 000094E5 		ldr	r0, [r4]
 6692 009c FEFFFFEB 		bl	SOCKETS_SetSockOpt
 6693              	.LVL813:
2115:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed to connect" );
 6694              		.loc 1 2115 0
 6695 00a0 007094E5 		ldr	r7, [r4]
 6696              	.LVL814:
 6697              	.LBB296:
 6698              	.LBB297:
 368:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 6699              		.loc 1 368 0
 6700 00a4 08108DE2 		add	r1, sp, #8
 6701 00a8 0700A0E1 		mov	r0, r7
 6702 00ac FEFFFFEB 		bl	prvAwsIotBrokerConnectHelper
 6703              	.LVL815:
 376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6704              		.loc 1 376 0
 6705 00b0 00B050E2 		subs	fp, r0, #0
 6706 00b4 1100001A 		bne	.L389
 6707              	.LBB298:
 6708              	.LBB299:
 380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                       &xEchoServerAddress,
 6709              		.loc 1 380 0
 6710 00b8 00829FE5 		ldr	r8, .L398+20
 6711              	.LBE299:
 6712              	.LBE298:
 376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6713              		.loc 1 376 0
 6714 00bc 0B50A0E1 		mov	r5, fp
 6715              	.LBB303:
 6716              	.LBB300:
 380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                       &xEchoServerAddress,
 6717              		.loc 1 380 0
 6718 00c0 FC919FE5 		ldr	r9, .L398+24
 6719              	.LBE300:
 6720              	.LBE303:
 376:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6721              		.loc 1 376 0
 6722 00c4 9660A0E3 		mov	r6, #150
 6723              	.LBB304:
 6724              	.LBB301:
 380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                       &xEchoServerAddress,
 6725              		.loc 1 380 0
 6726 00c8 F8A19FE5 		ldr	r10, .L398+28
 6727              	.LVL816:
 6728              	.L390:
 6729 00cc 0820A0E3 		mov	r2, #8
 6730 00d0 0700A0E1 		mov	r0, r7
 6731 00d4 02108DE0 		add	r1, sp, r2
 6732 00d8 FEFFFFEB 		bl	SOCKETS_Connect
 6733              	.LVL817:
 6734 00dc 00B050E2 		subs	fp, r0, #0
 6735 00e0 0600000A 		beq	.L389
 6736 00e4 0B20A0E1 		mov	r2, fp
 6737 00e8 0010A0E3 		mov	r1, #0
 6738 00ec 0800A0E1 		mov	r0, r8
 6739              	.LVL818:
 6740 00f0 015085E2 		add	r5, r5, #1
 6741 00f4 FEFFFFEB 		bl	vLoggingPrintf
 6742              	.LVL819:
 6743 00f8 070055E3 		cmp	r5, #7
 6744 00fc 5D00001A 		bne	.L391
 6745              	.LVL820:
 6746              	.L389:
 6747              	.LBE301:
 6748              	.LBE304:
 6749              	.LBE297:
 6750              	.LBE296:
2116:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6751              		.loc 1 2116 0
 6752 0100 1460A0E3 		mov	r6, #20
 6753 0104 443800E3 		movw	r3, #2116
 6754 0108 BC219FE5 		ldr	r2, .L398+32
 6755 010c 0B10A0E1 		mov	r1, fp
 6756              	.LBB307:
 6757              	.LBB308:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6758              		.loc 1 635 0
 6759 0110 9C519FE5 		ldr	r5, .L398+8
 6760              	.LBE308:
 6761              	.LBE307:
2116:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6762              		.loc 1 2116 0
 6763 0114 0000A0E3 		mov	r0, #0
 6764 0118 00608DE5 		str	r6, [sp]
 6765 011c FEFFFFEB 		bl	UnityAssertEqualNumber
 6766              	.LVL821:
2118:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 6767              		.loc 1 2118 0
 6768 0120 000094E5 		ldr	r0, [r4]
 6769              	.LVL822:
 6770              	.LBB311:
 6771              	.LBB309:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6772              		.loc 1 633 0
 6773 0124 FEFFFFEB 		bl	SOCKETS_Close
 6774              	.LVL823:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6775              		.loc 1 635 0
 6776 0128 00C0A0E3 		mov	ip, #0
 6777              	.LBE309:
 6778              	.LBE311:
2119:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6779              		.loc 1 2119 0
 6780 012c 473800E3 		movw	r3, #2119
 6781              	.LBB312:
 6782              	.LBB310:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6783              		.loc 1 635 0
 6784 0130 00C085E5 		str	ip, [r5]
 6785              	.LVL824:
 6786              	.LBE310:
 6787              	.LBE312:
2119:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6788              		.loc 1 2119 0
 6789 0134 0010A0E1 		mov	r1, r0
 6790 0138 00608DE5 		str	r6, [sp]
 6791 013c 0C00A0E1 		mov	r0, ip
 6792 0140 88219FE5 		ldr	r2, .L398+36
 6793 0144 0560A0E1 		mov	r6, r5
 6794 0148 FEFFFFEB 		bl	UnityAssertEqualNumber
 6795              	.LVL825:
2121:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_NOT_EQUAL_MESSAGE( SOCKETS_INVALID_SOCKET, xSocket, "Socket creation failed" );
 6796              		.loc 1 2121 0
 6797 014c 0500A0E1 		mov	r0, r5
 6798 0150 FEFFFFEB 		bl	prvTcpSocketHelper
 6799              	.LVL826:
 6800 0154 000084E5 		str	r0, [r4]
2122:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6801              		.loc 1 2122 0
 6802 0158 003094E5 		ldr	r3, [r4]
 6803 015c 010073E3 		cmn	r3, #1
 6804 0160 0200001A 		bne	.L392
 6805 0164 4A1800E3 		movw	r1, #2122
 6806 0168 48019FE5 		ldr	r0, .L398+12
 6807 016c FEFFFFEB 		bl	UnityFail
 6808              	.LVL827:
 6809              	.L392:
2124:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 6810              		.loc 1 2124 0
 6811 0170 202E04E3 		movw	r2, #20000
2125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6812              		.loc 1 2125 0
 6813 0174 1450A0E3 		mov	r5, #20
2124:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Set sockopt Failed" );
 6814              		.loc 1 2124 0
 6815 0178 0210A0E1 		mov	r1, r2
 6816 017c 000094E5 		ldr	r0, [r4]
 6817 0180 FEFFFFEB 		bl	prvSetSockOptHelper
 6818              	.LVL828:
2125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6819              		.loc 1 2125 0
 6820 0184 4D3800E3 		movw	r3, #2125
 6821 0188 0010A0E1 		mov	r1, r0
 6822 018c 28219FE5 		ldr	r2, .L398+16
 6823 0190 0000A0E3 		mov	r0, #0
 6824              	.LVL829:
 6825 0194 00508DE5 		str	r5, [sp]
 6826 0198 FEFFFFEB 		bl	UnityAssertEqualNumber
 6827              	.LVL830:
2128:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   0,
 6828              		.loc 1 2128 0
 6829 019c 2F30A0E3 		mov	r3, #47
 6830 01a0 0620A0E3 		mov	r2, #6
 6831 01a4 00308DE5 		str	r3, [sp]
 6832 01a8 0010A0E3 		mov	r1, #0
 6833 01ac 40308DE2 		add	r3, sp, #64
 6834 01b0 000094E5 		ldr	r0, [r4]
 6835 01b4 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 6836              	.LVL831:
2135:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Failed setup AWS Broker address 
 6837              		.loc 1 2135 0
 6838 01b8 08108DE2 		add	r1, sp, #8
 6839 01bc 000094E5 		ldr	r0, [r4]
 6840 01c0 FEFFFFEB 		bl	prvAwsIotBrokerConnectHelper
 6841              	.LVL832:
2136:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6842              		.loc 1 2136 0
 6843 01c4 583800E3 		movw	r3, #2136
 6844 01c8 0010A0E1 		mov	r1, r0
 6845 01cc 00219FE5 		ldr	r2, .L398+40
 6846 01d0 0000A0E3 		mov	r0, #0
 6847              	.LVL833:
 6848 01d4 00508DE5 		str	r5, [sp]
 6849 01d8 FEFFFFEB 		bl	UnityAssertEqualNumber
 6850              	.LVL834:
2138:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect worked when subject name check should
 6851              		.loc 1 2138 0
 6852 01dc 0820A0E3 		mov	r2, #8
 6853 01e0 000094E5 		ldr	r0, [r4]
 6854 01e4 02108DE0 		add	r1, sp, r2
 6855 01e8 FEFFFFEB 		bl	SOCKETS_Connect
 6856              	.LVL835:
2139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6857              		.loc 1 2139 0
 6858 01ec 5B3800E3 		movw	r3, #2139
2138:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Connect worked when subject name check should
 6859              		.loc 1 2138 0
 6860 01f0 0070A0E1 		mov	r7, r0
 6861              	.LVL836:
2139:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6862              		.loc 1 2139 0
 6863 01f4 0010A0E1 		mov	r1, r0
 6864 01f8 00508DE5 		str	r5, [sp]
 6865 01fc D4209FE5 		ldr	r2, .L398+44
 6866 0200 0000A0E3 		mov	r0, #0
 6867              	.LVL837:
 6868 0204 FEFFFFEB 		bl	UnityAssertSmallerNumber
 6869              	.LVL838:
2143:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 6870              		.loc 1 2143 0
 6871 0208 CC309FE5 		ldr	r3, .L398+48
 6872 020c 030057E1 		cmp	r7, r3
 6873 0210 0B00000A 		beq	.L393
2145:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_LESS_THAN_INT32_MESSAGE( 0, xResult, "Send allowed after subject name connectio
 6874              		.loc 1 2145 0
 6875 0214 C4109FE5 		ldr	r1, .L398+52
 6876 0218 0030A0E3 		mov	r3, #0
 6877 021c 6420A0E3 		mov	r2, #100
 6878 0220 000094E5 		ldr	r0, [r4]
 6879 0224 001091E5 		ldr	r1, [r1]
 6880 0228 FEFFFFEB 		bl	SOCKETS_Send
 6881              	.LVL839:
2146:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 6882              		.loc 1 2146 0
 6883 022c 00508DE5 		str	r5, [sp]
 6884 0230 0010A0E1 		mov	r1, r0
 6885 0234 623800E3 		movw	r3, #2146
 6886 0238 A4209FE5 		ldr	r2, .L398+56
 6887 023c 0000A0E3 		mov	r0, #0
 6888              	.LVL840:
 6889 0240 FEFFFFEB 		bl	UnityAssertSmallerNumber
 6890              	.LVL841:
 6891              	.L393:
2149:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 6892              		.loc 1 2149 0
 6893 0244 000094E5 		ldr	r0, [r4]
 6894              	.LVL842:
 6895              	.LBB313:
 6896              	.LBB314:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6897              		.loc 1 633 0
 6898 0248 FEFFFFEB 		bl	SOCKETS_Close
 6899              	.LVL843:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6900              		.loc 1 635 0
 6901 024c 00C0A0E3 		mov	ip, #0
 6902              	.LBE314:
 6903              	.LBE313:
2150:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6904              		.loc 1 2150 0
 6905 0250 1430A0E3 		mov	r3, #20
 6906              	.LBB316:
 6907              	.LBB315:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6908              		.loc 1 635 0
 6909 0254 00C086E5 		str	ip, [r6]
 6910              	.LVL844:
 6911              	.LBE315:
 6912              	.LBE316:
2150:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 6913              		.loc 1 2150 0
 6914 0258 0010A0E1 		mov	r1, r0
 6915 025c 00308DE5 		str	r3, [sp]
 6916 0260 0C00A0E1 		mov	r0, ip
 6917 0264 663800E3 		movw	r3, #2150
 6918 0268 60209FE5 		ldr	r2, .L398+36
 6919 026c FEFFFFEB 		bl	UnityAssertEqualNumber
 6920              	.LVL845:
 6921              	.LBE295:
 6922              	.LBE294:
2158:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 6923              		.loc 1 2158 0
 6924 0270 74D08DE2 		add	sp, sp, #116
 6925              		.cfi_remember_state
 6926              		.cfi_def_cfa_offset 36
 6927              		@ sp needed
 6928 0274 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6929              	.LVL846:
 6930              	.L391:
 6931              		.cfi_restore_state
 6932              	.LBB319:
 6933              	.LBB318:
 6934              	.LBB317:
 6935              	.LBB306:
 6936              	.LBB305:
 6937              	.LBB302:
 380:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                       &xEchoServerAddress,
 6938              		.loc 1 380 0
 6939 0278 00608DE5 		str	r6, [sp]
 6940 027c 0630A0E3 		mov	r3, #6
 6941 0280 0520A0E1 		mov	r2, r5
 6942 0284 0910A0E1 		mov	r1, r9
 6943 0288 58009FE5 		ldr	r0, .L398+60
 6944 028c FEFFFFEB 		bl	vLoggingPrintf
 6945              	.LVL847:
 6946 0290 FA2FA0E3 		mov	r2, #1000
 6947 0294 920602E0 		mul	r2, r2, r6
 6948 0298 8660A0E1 		lsl	r6, r6, #1
 6949              	.LVL848:
 6950 029c 922A83E0 		umull	r2, r3, r2, r10
 6951 02a0 2303A0E1 		lsr	r0, r3, #6
 6952 02a4 FEFFFFEB 		bl	vTaskDelay
 6953              	.LVL849:
 6954 02a8 87FFFFEA 		b	.L390
 6955              	.L399:
 6956              		.align	2
 6957              	.L398:
 6958 02ac 2A010000 		.word	.LC76
 6959 02b0 00000000 		.word	.LANCHOR1
 6960 02b4 00000000 		.word	.LANCHOR0
 6961 02b8 00000000 		.word	.LC13
 6962 02bc 17000000 		.word	.LC14
 6963 02c0 7B000000 		.word	.LC79
 6964 02c4 00000000 		.word	.LC77
 6965 02c8 D34D6210 		.word	274877907
 6966 02cc 00000000 		.word	.LC29
 6967 02d0 92000000 		.word	.LC18
 6968 02d4 90000000 		.word	.LC80
 6969 02d8 B8000000 		.word	.LC81
 6970 02dc 16FCFFFF 		.word	-1002
 6971 02e0 00000000 		.word	.LANCHOR11
 6972 02e4 F6000000 		.word	.LC82
 6973 02e8 58000000 		.word	.LC78
 6974              	.LBE302:
 6975              	.LBE305:
 6976              	.LBE306:
 6977              	.LBE317:
 6978              	.LBE318:
 6979              	.LBE319:
 6980              		.cfi_endproc
 6981              	.LFE117:
 6983              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_,"ax",%progbits
 6984              		.align	2
 6985              		.global	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_
 6986              		.syntax unified
 6987              		.arm
 6988              		.fpu neon
 6990              	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_:
 6991              	.LFB159:
 6992              		.cfi_startproc
 6993              		@ args = 0, pretend = 0, frame = 0
 6994              		@ frame_needed = 0, uses_anonymous_args = 0
 6995              		@ link register save eliminated.
 6996 0000 1EFF2FE1 		bx	lr
 6997              		.cfi_endproc
 6998              	.LFE159:
 7000              		.section	.text.TEST_Full_TCP_SETUP,"ax",%progbits
 7001              		.align	2
 7002              		.global	TEST_Full_TCP_SETUP
 7003              		.syntax unified
 7004              		.arm
 7005              		.fpu neon
 7007              	TEST_Full_TCP_SETUP:
 7008              	.LFB161:
 7009              		.cfi_startproc
 7010              		@ args = 0, pretend = 0, frame = 0
 7011              		@ frame_needed = 0, uses_anonymous_args = 0
 7012              		@ link register save eliminated.
 7013 0000 1EFF2FE1 		bx	lr
 7014              		.cfi_endproc
 7015              	.LFE161:
 7017              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_,"ax",%progbits
 7018              		.align	2
 7019              		.global	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_
 7020              		.syntax unified
 7021              		.arm
 7022              		.fpu neon
 7024              	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_:
 7025              	.LFB169:
 7026              		.cfi_startproc
 7027              		@ args = 0, pretend = 0, frame = 0
 7028              		@ frame_needed = 0, uses_anonymous_args = 0
 7029              		@ link register save eliminated.
 7030 0000 FEFFFFEA 		b	prvSOCKETS_Connect_InvalidParams.isra.9
 7031              		.cfi_endproc
 7032              	.LFE169:
 7034              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_,"ax",%progbits
 7035              		.align	2
 7036              		.global	TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_
 7037              		.syntax unified
 7038              		.arm
 7039              		.fpu neon
 7041              	TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_:
 7042              	.LFB163:
 7043              		.cfi_startproc
 7044              		@ args = 0, pretend = 0, frame = 0
 7045              		@ frame_needed = 0, uses_anonymous_args = 0
 7046              		@ link register save eliminated.
 7047 0000 FEFFFFEA 		b	prvSOCKETS_CloseInvalidParams.isra.2
 7048              		.cfi_endproc
 7049              	.LFE163:
 7051              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_,"ax",%progbits
 7052              		.align	2
 7053              		.global	TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_
 7054              		.syntax unified
 7055              		.arm
 7056              		.fpu neon
 7058              	TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_:
 7059              	.LFB165:
 7060              		.cfi_startproc
 7061              		@ args = 0, pretend = 0, frame = 0
 7062              		@ frame_needed = 0, uses_anonymous_args = 0
 7063              		@ link register save eliminated.
 7064 0000 FEFFFFEA 		b	prvSOCKETS_ShutdownInvalidParams.isra.7
 7065              		.cfi_endproc
 7066              	.LFE165:
 7068              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_,"ax",%progbits
 7069              		.align	2
 7070              		.global	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_
 7071              		.syntax unified
 7072              		.arm
 7073              		.fpu neon
 7075              	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_:
 7076              	.LFB167:
 7077              		.cfi_startproc
 7078              		@ args = 0, pretend = 0, frame = 0
 7079              		@ frame_needed = 0, uses_anonymous_args = 0
 7080              		@ link register save eliminated.
 7081 0000 171500E3 		movw	r1, #1303
 7082 0004 00009FE5 		ldr	r0, .L406
 7083 0008 FEFFFFEA 		b	UnityFail
 7084              	.L407:
 7085              		.align	2
 7086              	.L406:
 7087 000c 00000000 		.word	.LC83
 7088              		.cfi_endproc
 7089              	.LFE167:
 7091              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_,"ax",%progbits
 7092              		.align	2
 7093              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_
 7094              		.syntax unified
 7095              		.arm
 7096              		.fpu neon
 7098              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_:
 7099              	.LFB66:
1314:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 7100              		.loc 1 1314 0
 7101              		.cfi_startproc
 7102              		@ args = 0, pretend = 0, frame = 0
 7103              		@ frame_needed = 0, uses_anonymous_args = 0
 7104              		@ link register save eliminated.
 7105              	.LVL850:
 7106              	.LBB322:
 7107              	.LBB323:
1303:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 7108              		.loc 1 1303 0
 7109 0000 171500E3 		movw	r1, #1303
 7110 0004 00009FE5 		ldr	r0, .L409
 7111 0008 FEFFFFEA 		b	UnityFail
 7112              	.LVL851:
 7113              	.L410:
 7114              		.align	2
 7115              	.L409:
 7116 000c 00000000 		.word	.LC83
 7117              	.LBE323:
 7118              	.LBE322:
 7119              		.cfi_endproc
 7120              	.LFE66:
 7122              		.section	.text.prvThreadSafeDifferentSocketsDifferentTasks,"ax",%progbits
 7123              		.align	2
 7124              		.syntax unified
 7125              		.arm
 7126              		.fpu neon
 7128              	prvThreadSafeDifferentSocketsDifferentTasks:
 7129              	.LFB135:
2601:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     Socket_t xTaskSocket = SOCKETS_INVALID_SOCKET;
 7130              		.loc 1 2601 0
 7131              		.cfi_startproc
 7132              		@ args = 0, pretend = 0, frame = 8
 7133              		@ frame_needed = 0, uses_anonymous_args = 0
 7134              	.LVL852:
 7135 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7136              		.cfi_def_cfa_offset 36
 7137              		.cfi_offset 4, -36
 7138              		.cfi_offset 5, -32
 7139              		.cfi_offset 6, -28
 7140              		.cfi_offset 7, -24
 7141              		.cfi_offset 8, -20
 7142              		.cfi_offset 9, -16
 7143              		.cfi_offset 10, -12
 7144              		.cfi_offset 11, -8
 7145              		.cfi_offset 14, -4
 7146 0004 0050A0E1 		mov	r5, r0
 7147 0008 14D04DE2 		sub	sp, sp, #20
 7148              		.cfi_def_cfa_offset 56
2602:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lLoopCount = 0UL;
 7149              		.loc 1 2602 0
 7150 000c 0040E0E3 		mvn	r4, #0
2609:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestEchoClientsTaskParams_t * pxTcptestEchoClientsTaskParams;
 7151              		.loc 1 2609 0
 7152 0010 0060A0E3 		mov	r6, #0
2614:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7153              		.loc 1 2614 0
 7154 0014 010CA0E3 		mov	r0, #256
 7155              	.LVL853:
2602:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     int32_t lLoopCount = 0UL;
 7156              		.loc 1 2602 0
 7157 0018 08408DE5 		str	r4, [sp, #8]
 7158              	.LVL854:
2609:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestEchoClientsTaskParams_t * pxTcptestEchoClientsTaskParams;
 7159              		.loc 1 2609 0
 7160 001c 0C608DE5 		str	r6, [sp, #12]
 7161              	.LVL855:
2614:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7162              		.loc 1 2614 0
 7163 0020 FEFFFFEB 		bl	pvPortMalloc
 7164              	.LVL856:
2616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7165              		.loc 1 2616 0
 7166 0024 009050E2 		subs	r9, r0, #0
2634:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                  pxTcptestEchoClientsTaskParams->xConn,
 7167              		.loc 1 2634 0
 7168 0028 0CB08D12 		addne	fp, sp, #12
2651:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                          ( void * ) cTransmittedString, /* The data being sent. */
 7169              		.loc 1 2651 0
 7170 002c 74A19F15 		ldrne	r10, .L429
2616:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7171              		.loc 1 2616 0
 7172 0030 4A00001A 		bne	.L421
2623:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                 __FUNCTION__,
 7173              		.loc 1 2623 0
 7174 0034 B220D5E1 		ldrh	r2, [r5, #2]
 7175 0038 6C119FE5 		ldr	r1, .L429+4
 7176 003c 6C019FE5 		ldr	r0, .L429+8
 7177              	.LVL857:
 7178 0040 FEFFFFEB 		bl	vLoggingPrintf
 7179              	.LVL858:
 7180              	.L413:
2722:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7181              		.loc 1 2722 0
 7182 0044 0C309DE5 		ldr	r3, [sp, #12]
 7183 0048 010053E3 		cmp	r3, #1
 7184 004c 0300001A 		bne	.L422
 7185              	.LVL859:
 7186              	.LBB328:
 7187              	.LBB329:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7188              		.loc 1 633 0
 7189 0050 08009DE5 		ldr	r0, [sp, #8]
 7190 0054 FEFFFFEB 		bl	SOCKETS_Close
 7191              	.LVL860:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7192              		.loc 1 635 0
 7193 0058 0030A0E3 		mov	r3, #0
 7194 005c 0C308DE5 		str	r3, [sp, #12]
 7195              	.LVL861:
 7196              	.L422:
 7197              	.LBE329:
 7198              	.LBE328:
2731:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                      tcptestECHO_CLIENT_EVENT_MASK,
 7199              		.loc 1 2731 0
 7200 0060 B210D5E1 		ldrh	r1, [r5, #2]
2730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                      ( 1 << pxTcptestEchoClientsTaskParams->usTaskTag ),
 7201              		.loc 1 2730 0
 7202 0064 01C0A0E3 		mov	ip, #1
 7203 0068 44319FE5 		ldr	r3, .L429+12
 7204 006c 0320A0E3 		mov	r2, #3
2727:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7205              		.loc 1 2727 0
 7206 0070 044085E5 		str	r4, [r5, #4]
2730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                      ( 1 << pxTcptestEchoClientsTaskParams->usTaskTag ),
 7207              		.loc 1 2730 0
 7208 0074 1C11A0E1 		lsl	r1, ip, r1
 7209 0078 000093E5 		ldr	r0, [r3]
 7210 007c 34319FE5 		ldr	r3, .L429+16
 7211 0080 FEFFFFEB 		bl	xEventGroupSync
 7212              	.LVL862:
2736:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 7213              		.loc 1 2736 0
 7214 0084 0000A0E3 		mov	r0, #0
 7215 0088 FEFFFFEB 		bl	vTaskDelete
 7216              	.LVL863:
2737:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7217              		.loc 1 2737 0
 7218 008c 14D08DE2 		add	sp, sp, #20
 7219              		.cfi_remember_state
 7220              		.cfi_def_cfa_offset 36
 7221              		@ sp needed
 7222 0090 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7223              	.LVL864:
 7224              	.L414:
 7225              		.cfi_restore_state
2651:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                          ( void * ) cTransmittedString, /* The data being sent. */
 7226              		.loc 1 2651 0
 7227 0094 0430A0E1 		mov	r3, r4
 7228 0098 012CA0E3 		mov	r2, #256
 7229 009c 0A10A0E1 		mov	r1, r10
 7230 00a0 08009DE5 		ldr	r0, [sp, #8]
 7231              	.LVL865:
 7232 00a4 FEFFFFEB 		bl	SOCKETS_Send
 7233              	.LVL866:
2656:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 7234              		.loc 1 2656 0
 7235 00a8 FF0050E3 		cmp	r0, #255
2651:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                          ( void * ) cTransmittedString, /* The data being sent. */
 7236              		.loc 1 2651 0
 7237 00ac 0080A0E1 		mov	r8, r0
 7238              	.LVL867:
2656:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 7239              		.loc 1 2656 0
 7240 00b0 060000CA 		bgt	.L416
2658:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         __FUNCTION__,
 7241              		.loc 1 2658 0
 7242 00b4 0030A0E1 		mov	r3, r0
 7243 00b8 B220D5E1 		ldrh	r2, [r5, #2]
 7244 00bc E8109FE5 		ldr	r1, .L429+4
 7245 00c0 F4009FE5 		ldr	r0, .L429+20
 7246              	.LVL868:
 7247 00c4 FEFFFFEB 		bl	vLoggingPrintf
 7248              	.LVL869:
 7249              	.L428:
2706:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 break;
 7250              		.loc 1 2706 0
 7251 00c8 0040E0E3 		mvn	r4, #0
2707:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 7252              		.loc 1 2707 0
 7253 00cc 320000EA 		b	.L415
 7254              	.LVL870:
 7255              	.L416:
 7256 00d0 0470A0E1 		mov	r7, r4
 7257              	.LVL871:
 7258              	.L418:
2673:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                           &( pcReceivedString[ xReceivedBytes ] ), /* The buffer in
 7259              		.loc 1 2673 0
 7260 00d4 0030A0E3 		mov	r3, #0
 7261 00d8 012C67E2 		rsb	r2, r7, #256
 7262 00dc 071089E0 		add	r1, r9, r7
 7263 00e0 08009DE5 		ldr	r0, [sp, #8]
 7264 00e4 FEFFFFEB 		bl	SOCKETS_Recv
 7265              	.LVL872:
2678:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 7266              		.loc 1 2678 0
 7267 00e8 000050E3 		cmp	r0, #0
 7268 00ec 020000DA 		ble	.L417
2683:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 7269              		.loc 1 2683 0
 7270 00f0 007087E0 		add	r7, r7, r0
 7271              	.LVL873:
2671:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 7272              		.loc 1 2671 0
 7273 00f4 070058E1 		cmp	r8, r7
 7274 00f8 F5FFFFCA 		bgt	.L418
 7275              	.L417:
2689:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 7276              		.loc 1 2689 0
 7277 00fc 010C57E3 		cmp	r7, #256
 7278 0100 0A00001A 		bne	.L419
2692:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                 {
 7279              		.loc 1 2692 0
 7280 0104 0820A0E1 		mov	r2, r8
 7281 0108 0A10A0E1 		mov	r1, r10
 7282 010c 0900A0E1 		mov	r0, r9
 7283              	.LVL874:
 7284 0110 FEFFFFEB 		bl	strncmp
 7285              	.LVL875:
 7286 0114 007050E2 		subs	r7, r0, #0
 7287              	.LVL876:
 7288 0118 0800000A 		beq	.L420
2694:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                             __FUNCTION__,
 7289              		.loc 1 2694 0
 7290 011c B220D5E1 		ldrh	r2, [r5, #2]
 7291 0120 84109FE5 		ldr	r1, .L429+4
 7292 0124 94009FE5 		ldr	r0, .L429+24
 7293              	.L427:
2703:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         __FUNCTION__,
 7294              		.loc 1 2703 0
 7295 0128 FEFFFFEB 		bl	vLoggingPrintf
 7296              	.LVL877:
 7297 012c E5FFFFEA 		b	.L428
 7298              	.LVL878:
 7299              	.L419:
 7300 0130 B220D5E1 		ldrh	r2, [r5, #2]
 7301 0134 70109FE5 		ldr	r1, .L429+4
 7302 0138 84009FE5 		ldr	r0, .L429+28
 7303              	.LVL879:
 7304 013c F9FFFFEA 		b	.L427
 7305              	.LVL880:
 7306              	.L420:
2711:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             ( void ) prvCloseHelper( xTaskSocket, &xSocketOpen );
 7307              		.loc 1 2711 0 discriminator 2
 7308 0140 08009DE5 		ldr	r0, [sp, #8]
2631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 7309              		.loc 1 2631 0 discriminator 2
 7310 0144 016086E2 		add	r6, r6, #1
 7311              	.LVL881:
2711:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             ( void ) prvCloseHelper( xTaskSocket, &xSocketOpen );
 7312              		.loc 1 2711 0 discriminator 2
 7313 0148 FEFFFFEB 		bl	prvShutdownHelper
 7314              	.LVL882:
 7315              	.LBB330:
 7316              	.LBB331:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7317              		.loc 1 633 0 discriminator 2
 7318 014c 08009DE5 		ldr	r0, [sp, #8]
 7319 0150 FEFFFFEB 		bl	SOCKETS_Close
 7320              	.LVL883:
 7321              	.LBE331:
 7322              	.LBE330:
2631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 7323              		.loc 1 2631 0 discriminator 2
 7324 0154 0A0056E3 		cmp	r6, #10
 7325              	.LBB333:
 7326              	.LBB332:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7327              		.loc 1 635 0 discriminator 2
 7328 0158 0C708DE5 		str	r7, [sp, #12]
 7329              	.LVL884:
 7330              	.LBE332:
 7331              	.LBE333:
2631:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         {
 7332              		.loc 1 2631 0 discriminator 2
 7333 015c 0E00000A 		beq	.L415
 7334              	.LVL885:
 7335              	.L421:
2634:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                                  pxTcptestEchoClientsTaskParams->xConn,
 7336              		.loc 1 2634 0
 7337 0160 883301E3 		movw	r3, #5000
 7338 0164 0010D5E5 		ldrb	r1, [r5]	@ zero_extendqisi2
 7339 0168 00B08DE5 		str	fp, [sp]
 7340 016c 0320A0E1 		mov	r2, r3
 7341 0170 08008DE2 		add	r0, sp, #8
 7342 0174 FEFFFFEB 		bl	prvConnectHelperWithRetry
 7343              	.LVL886:
2640:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 7344              		.loc 1 2640 0
 7345 0178 004050E2 		subs	r4, r0, #0
 7346 017c C4FFFF0A 		beq	.L414
2642:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                         __FUNCTION__,
 7347              		.loc 1 2642 0
 7348 0180 B230D5E1 		ldrh	r3, [r5, #2]
 7349 0184 0420A0E1 		mov	r2, r4
 7350 0188 1C109FE5 		ldr	r1, .L429+4
 7351 018c 34009FE5 		ldr	r0, .L429+32
 7352              	.LVL887:
 7353 0190 00308DE5 		str	r3, [sp]
 7354 0194 0630A0E1 		mov	r3, r6
 7355 0198 FEFFFFEB 		bl	vLoggingPrintf
 7356              	.LVL888:
 7357              	.L415:
2719:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7358              		.loc 1 2719 0
 7359 019c 0900A0E1 		mov	r0, r9
 7360 01a0 FEFFFFEB 		bl	vPortFree
 7361              	.LVL889:
 7362 01a4 A6FFFFEA 		b	.L413
 7363              	.L430:
 7364              		.align	2
 7365              	.L429:
 7366 01a8 00000000 		.word	.LANCHOR7
 7367 01ac 00000000 		.word	.LANCHOR17
 7368 01b0 00000000 		.word	.LC84
 7369 01b4 00000000 		.word	.LANCHOR6
 7370 01b8 80380100 		.word	80000
 7371 01bc 65000000 		.word	.LC86
 7372 01c0 96000000 		.word	.LC87
 7373 01c4 C0000000 		.word	.LC88
 7374 01c8 26000000 		.word	.LC85
 7375              		.cfi_endproc
 7376              	.LFE135:
 7378              		.section	.text.prvSOCKETS_Socket_InvalidInputParams.isra.6,"ax",%progbits
 7379              		.align	2
 7380              		.syntax unified
 7381              		.arm
 7382              		.fpu neon
 7384              	prvSOCKETS_Socket_InvalidInputParams.isra.6:
 7385              	.LFB154:
1646:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7386              		.loc 1 1646 0
 7387              		.cfi_startproc
 7388              		@ args = 0, pretend = 0, frame = 0
 7389              		@ frame_needed = 0, uses_anonymous_args = 0
 7390              	.LVL890:
 7391 0000 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
 7392              		.cfi_def_cfa_offset 24
 7393              		.cfi_offset 4, -12
 7394              		.cfi_offset 5, -8
 7395              		.cfi_offset 14, -4
1653:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7396              		.loc 1 1653 0
 7397 0004 24029FE5 		ldr	r0, .L448
 7398 0008 FEFFFFEB 		bl	setjmp
 7399              	.LVL891:
 7400 000c 004050E2 		subs	r4, r0, #0
 7401 0010 1300001A 		bne	.L433
1655:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
 7402              		.loc 1 1655 0
 7403 0014 18529FE5 		ldr	r5, .L448+4
 7404 0018 0620A0E3 		mov	r2, #6
 7405 001c 0110A0E3 		mov	r1, #1
 7406 0020 0300A0E3 		mov	r0, #3
 7407 0024 FEFFFFEB 		bl	SOCKETS_Socket
 7408              	.LVL892:
1660:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7409              		.loc 1 1660 0
 7410 0028 7C1600E3 		movw	r1, #1660
1655:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
 7411              		.loc 1 1655 0
 7412 002c 000085E5 		str	r0, [r5]
1660:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7413              		.loc 1 1660 0
 7414 0030 00029FE5 		ldr	r0, .L448+8
 7415 0034 FEFFFFEB 		bl	UnityFail
 7416              	.LVL893:
1661:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 7417              		.loc 1 1661 0
 7418 0038 000095E5 		ldr	r0, [r5]
 7419              	.LVL894:
 7420              	.LBB346:
 7421              	.LBB347:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7422              		.loc 1 633 0
 7423 003c FEFFFFEB 		bl	SOCKETS_Close
 7424              	.LVL895:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7425              		.loc 1 635 0
 7426 0040 F4319FE5 		ldr	r3, .L448+12
 7427              	.LBE347:
 7428              	.LBE346:
1662:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7429              		.loc 1 1662 0
 7430 0044 0010A0E1 		mov	r1, r0
 7431 0048 F0219FE5 		ldr	r2, .L448+16
 7432 004c 0400A0E1 		mov	r0, r4
 7433              	.LVL896:
 7434              	.LBB349:
 7435              	.LBB348:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7436              		.loc 1 635 0
 7437 0050 004083E5 		str	r4, [r3]
 7438              	.LVL897:
 7439              	.LBE348:
 7440              	.LBE349:
1662:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7441              		.loc 1 1662 0
 7442 0054 1430A0E3 		mov	r3, #20
 7443 0058 00308DE5 		str	r3, [sp]
 7444 005c 7E3600E3 		movw	r3, #1662
 7445 0060 FEFFFFEB 		bl	UnityAssertEqualNumber
 7446              	.LVL898:
 7447              	.L433:
1666:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7448              		.loc 1 1666 0
 7449 0064 C4019FE5 		ldr	r0, .L448
 7450 0068 FEFFFFEB 		bl	setjmp
 7451              	.LVL899:
 7452 006c 004050E2 		subs	r4, r0, #0
 7453 0070 1300001A 		bne	.L436
1668:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( SOCKETS_SOCK_STREAM | SOCKETS_SOCK_DGRAM ),
 7454              		.loc 1 1668 0
 7455 0074 B8519FE5 		ldr	r5, .L448+4
 7456 0078 0620A0E3 		mov	r2, #6
 7457 007c 0310A0E3 		mov	r1, #3
 7458 0080 0200A0E3 		mov	r0, #2
 7459 0084 FEFFFFEB 		bl	SOCKETS_Socket
 7460              	.LVL900:
1672:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7461              		.loc 1 1672 0
 7462 0088 881600E3 		movw	r1, #1672
1668:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   ( SOCKETS_SOCK_STREAM | SOCKETS_SOCK_DGRAM ),
 7463              		.loc 1 1668 0
 7464 008c 000085E5 		str	r0, [r5]
1672:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7465              		.loc 1 1672 0
 7466 0090 AC019FE5 		ldr	r0, .L448+20
 7467 0094 FEFFFFEB 		bl	UnityFail
 7468              	.LVL901:
1673:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 7469              		.loc 1 1673 0
 7470 0098 000095E5 		ldr	r0, [r5]
 7471              	.LVL902:
 7472              	.LBB350:
 7473              	.LBB351:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7474              		.loc 1 633 0
 7475 009c FEFFFFEB 		bl	SOCKETS_Close
 7476              	.LVL903:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7477              		.loc 1 635 0
 7478 00a0 94319FE5 		ldr	r3, .L448+12
 7479              	.LBE351:
 7480              	.LBE350:
1674:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7481              		.loc 1 1674 0
 7482 00a4 0010A0E1 		mov	r1, r0
 7483 00a8 90219FE5 		ldr	r2, .L448+16
 7484 00ac 0400A0E1 		mov	r0, r4
 7485              	.LVL904:
 7486              	.LBB353:
 7487              	.LBB352:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7488              		.loc 1 635 0
 7489 00b0 004083E5 		str	r4, [r3]
 7490              	.LVL905:
 7491              	.LBE352:
 7492              	.LBE353:
1674:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7493              		.loc 1 1674 0
 7494 00b4 1430A0E3 		mov	r3, #20
 7495 00b8 00308DE5 		str	r3, [sp]
 7496 00bc 8A3600E3 		movw	r3, #1674
 7497 00c0 FEFFFFEB 		bl	UnityAssertEqualNumber
 7498              	.LVL906:
 7499              	.L436:
1678:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7500              		.loc 1 1678 0
 7501 00c4 64019FE5 		ldr	r0, .L448
 7502 00c8 FEFFFFEB 		bl	setjmp
 7503              	.LVL907:
 7504 00cc 004050E2 		subs	r4, r0, #0
 7505 00d0 1300001A 		bne	.L439
1680:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
 7506              		.loc 1 1680 0
 7507 00d4 58519FE5 		ldr	r5, .L448+4
 7508 00d8 1720A0E3 		mov	r2, #23
 7509 00dc 0110A0E3 		mov	r1, #1
 7510 00e0 0200A0E3 		mov	r0, #2
 7511 00e4 FEFFFFEB 		bl	SOCKETS_Socket
 7512              	.LVL908:
1684:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7513              		.loc 1 1684 0
 7514 00e8 941600E3 		movw	r1, #1684
1680:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
 7515              		.loc 1 1680 0
 7516 00ec 000085E5 		str	r0, [r5]
1684:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7517              		.loc 1 1684 0
 7518 00f0 50019FE5 		ldr	r0, .L448+24
 7519 00f4 FEFFFFEB 		bl	UnityFail
 7520              	.LVL909:
1685:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 7521              		.loc 1 1685 0
 7522 00f8 000095E5 		ldr	r0, [r5]
 7523              	.LVL910:
 7524              	.LBB354:
 7525              	.LBB355:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7526              		.loc 1 633 0
 7527 00fc FEFFFFEB 		bl	SOCKETS_Close
 7528              	.LVL911:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7529              		.loc 1 635 0
 7530 0100 34319FE5 		ldr	r3, .L448+12
 7531              	.LBE355:
 7532              	.LBE354:
1686:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7533              		.loc 1 1686 0
 7534 0104 0010A0E1 		mov	r1, r0
 7535 0108 30219FE5 		ldr	r2, .L448+16
 7536 010c 0400A0E1 		mov	r0, r4
 7537              	.LVL912:
 7538              	.LBB357:
 7539              	.LBB356:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7540              		.loc 1 635 0
 7541 0110 004083E5 		str	r4, [r3]
 7542              	.LVL913:
 7543              	.LBE356:
 7544              	.LBE357:
1686:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7545              		.loc 1 1686 0
 7546 0114 1430A0E3 		mov	r3, #20
 7547 0118 00308DE5 		str	r3, [sp]
 7548 011c 963600E3 		movw	r3, #1686
 7549 0120 FEFFFFEB 		bl	UnityAssertEqualNumber
 7550              	.LVL914:
 7551              	.L439:
1690:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7552              		.loc 1 1690 0
 7553 0124 04019FE5 		ldr	r0, .L448
 7554 0128 FEFFFFEB 		bl	setjmp
 7555              	.LVL915:
 7556 012c 005050E2 		subs	r5, r0, #0
 7557 0130 0C00001A 		bne	.L441
1693:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_DGRAM,
 7558              		.loc 1 1693 0
 7559 0134 F8409FE5 		ldr	r4, .L448+4
 7560 0138 0210A0E3 		mov	r1, #2
 7561 013c 1120A0E3 		mov	r2, #17
 7562 0140 0100A0E1 		mov	r0, r1
 7563 0144 FEFFFFEB 		bl	SOCKETS_Socket
 7564              	.LVL916:
1697:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         prvCloseHelper( xSocket, &xSocketOpen );
 7565              		.loc 1 1697 0
 7566 0148 A11600E3 		movw	r1, #1697
1693:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_DGRAM,
 7567              		.loc 1 1693 0
 7568 014c 000084E5 		str	r0, [r4]
1697:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         prvCloseHelper( xSocket, &xSocketOpen );
 7569              		.loc 1 1697 0
 7570 0150 F4009FE5 		ldr	r0, .L448+28
 7571 0154 FEFFFFEB 		bl	UnityFail
 7572              	.LVL917:
1698:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7573              		.loc 1 1698 0
 7574 0158 000094E5 		ldr	r0, [r4]
 7575              	.LVL918:
 7576              	.LBB358:
 7577              	.LBB359:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7578              		.loc 1 633 0
 7579 015c FEFFFFEB 		bl	SOCKETS_Close
 7580              	.LVL919:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7581              		.loc 1 635 0
 7582 0160 D4309FE5 		ldr	r3, .L448+12
 7583 0164 005083E5 		str	r5, [r3]
 7584              	.LVL920:
 7585              	.L441:
 7586              	.LBE359:
 7587              	.LBE358:
1701:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7588              		.loc 1 1701 0
 7589 0168 C0009FE5 		ldr	r0, .L448
 7590 016c FEFFFFEB 		bl	setjmp
 7591              	.LVL921:
 7592 0170 004050E2 		subs	r4, r0, #0
 7593 0174 1300001A 		bne	.L443
1704:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_DGRAM,
 7594              		.loc 1 1704 0
 7595 0178 B4509FE5 		ldr	r5, .L448+4
 7596 017c 0210A0E3 		mov	r1, #2
 7597 0180 0620A0E3 		mov	r2, #6
 7598 0184 0100A0E1 		mov	r0, r1
 7599 0188 FEFFFFEB 		bl	SOCKETS_Socket
 7600              	.LVL922:
1708:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7601              		.loc 1 1708 0
 7602 018c AC1600E3 		movw	r1, #1708
1704:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_DGRAM,
 7603              		.loc 1 1704 0
 7604 0190 000085E5 		str	r0, [r5]
1708:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7605              		.loc 1 1708 0
 7606 0194 B4009FE5 		ldr	r0, .L448+32
 7607 0198 FEFFFFEB 		bl	UnityFail
 7608              	.LVL923:
1709:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 7609              		.loc 1 1709 0
 7610 019c 000095E5 		ldr	r0, [r5]
 7611              	.LVL924:
 7612              	.LBB360:
 7613              	.LBB361:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7614              		.loc 1 633 0
 7615 01a0 FEFFFFEB 		bl	SOCKETS_Close
 7616              	.LVL925:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7617              		.loc 1 635 0
 7618 01a4 90309FE5 		ldr	r3, .L448+12
 7619              	.LBE361:
 7620              	.LBE360:
1710:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7621              		.loc 1 1710 0
 7622 01a8 0010A0E1 		mov	r1, r0
 7623 01ac 8C209FE5 		ldr	r2, .L448+16
 7624 01b0 0400A0E1 		mov	r0, r4
 7625              	.LVL926:
 7626              	.LBB363:
 7627              	.LBB362:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7628              		.loc 1 635 0
 7629 01b4 004083E5 		str	r4, [r3]
 7630              	.LVL927:
 7631              	.LBE362:
 7632              	.LBE363:
1710:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7633              		.loc 1 1710 0
 7634 01b8 1430A0E3 		mov	r3, #20
 7635 01bc 00308DE5 		str	r3, [sp]
 7636 01c0 AE3600E3 		movw	r3, #1710
 7637 01c4 FEFFFFEB 		bl	UnityAssertEqualNumber
 7638              	.LVL928:
 7639              	.L443:
1714:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 7640              		.loc 1 1714 0
 7641 01c8 60009FE5 		ldr	r0, .L448
 7642 01cc FEFFFFEB 		bl	setjmp
 7643              	.LVL929:
 7644 01d0 004050E2 		subs	r4, r0, #0
 7645 01d4 1300001A 		bne	.L431
1716:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
 7646              		.loc 1 1716 0
 7647 01d8 54509FE5 		ldr	r5, .L448+4
 7648 01dc 1120A0E3 		mov	r2, #17
 7649 01e0 0110A0E3 		mov	r1, #1
 7650 01e4 0200A0E3 		mov	r0, #2
 7651 01e8 FEFFFFEB 		bl	SOCKETS_Socket
 7652              	.LVL930:
1720:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7653              		.loc 1 1720 0
 7654 01ec B81600E3 		movw	r1, #1720
1716:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                   SOCKETS_SOCK_STREAM,
 7655              		.loc 1 1716 0
 7656 01f0 000085E5 		str	r0, [r5]
1720:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xResult = prvCloseHelper( xSocket, &xSocketOpen );
 7657              		.loc 1 1720 0
 7658 01f4 58009FE5 		ldr	r0, .L448+36
 7659 01f8 FEFFFFEB 		bl	UnityFail
 7660              	.LVL931:
1721:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         TEST_ASSERT_EQUAL_INT32_MESSAGE( SOCKETS_ERROR_NONE, xResult, "Socket failed to close" );
 7661              		.loc 1 1721 0
 7662 01fc 000095E5 		ldr	r0, [r5]
 7663              	.LVL932:
 7664              	.LBB364:
 7665              	.LBB365:
 633:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7666              		.loc 1 633 0
 7667 0200 FEFFFFEB 		bl	SOCKETS_Close
 7668              	.LVL933:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7669              		.loc 1 635 0
 7670 0204 30309FE5 		ldr	r3, .L448+12
 7671              	.LBE365:
 7672              	.LBE364:
1722:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7673              		.loc 1 1722 0
 7674 0208 0010A0E1 		mov	r1, r0
 7675 020c 2C209FE5 		ldr	r2, .L448+16
 7676 0210 0400A0E1 		mov	r0, r4
 7677              	.LVL934:
 7678              	.LBB367:
 7679              	.LBB366:
 635:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7680              		.loc 1 635 0
 7681 0214 004083E5 		str	r4, [r3]
 7682              	.LVL935:
 7683              	.LBE366:
 7684              	.LBE367:
1722:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 7685              		.loc 1 1722 0
 7686 0218 1430A0E3 		mov	r3, #20
 7687 021c 00308DE5 		str	r3, [sp]
 7688 0220 BA3600E3 		movw	r3, #1722
 7689 0224 FEFFFFEB 		bl	UnityAssertEqualNumber
 7690              	.LVL936:
 7691              	.L431:
1727:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 7692              		.loc 1 1727 0
 7693 0228 0CD08DE2 		add	sp, sp, #12
 7694              		.cfi_def_cfa_offset 12
 7695              		@ sp needed
 7696 022c 3080BDE8 		pop	{r4, r5, pc}
 7697              	.L449:
 7698              		.align	2
 7699              	.L448:
 7700 0230 28000000 		.word	Unity+40
 7701 0234 00000000 		.word	.LANCHOR1
 7702 0238 00000000 		.word	.LC89
 7703 023c 00000000 		.word	.LANCHOR0
 7704 0240 92000000 		.word	.LC18
 7705 0244 1F000000 		.word	.LC90
 7706 0248 3C000000 		.word	.LC91
 7707 024c 5D000000 		.word	.LC92
 7708 0250 8D000000 		.word	.LC93
 7709 0254 BC000000 		.word	.LC94
 7710              		.cfi_endproc
 7711              	.LFE154:
 7713              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_,"ax",%progbits
 7714              		.align	2
 7715              		.global	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_
 7716              		.syntax unified
 7717              		.arm
 7718              		.fpu neon
 7720              	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_:
 7721              	.LFB89:
1730:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 7722              		.loc 1 1730 0
 7723              		.cfi_startproc
 7724              		@ args = 0, pretend = 0, frame = 0
 7725              		@ frame_needed = 0, uses_anonymous_args = 0
 7726              		@ link register save eliminated.
1733:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 7727              		.loc 1 1733 0
 7728 0000 FEFFFFEA 		b	prvSOCKETS_Socket_InvalidInputParams.isra.6
 7729              	.LVL937:
 7730              		.cfi_endproc
 7731              	.LFE89:
 7733              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run,"ax",%progbits
 7734              		.align	2
 7735              		.global	TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run
 7736              		.syntax unified
 7737              		.arm
 7738              		.fpu neon
 7740              	TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run:
 7741              	.LFB20:
 837:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7742              		.loc 1 837 0
 7743              		.cfi_startproc
 7744              		@ args = 0, pretend = 0, frame = 0
 7745              		@ frame_needed = 0, uses_anonymous_args = 0
 7746 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 7747              		.cfi_def_cfa_offset 24
 7748              		.cfi_offset 14, -4
 837:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7749              		.loc 1 837 0
 7750 0004 453300E3 		movw	r3, #837
 7751 0008 0C308DE5 		str	r3, [sp, #12]
 7752 000c 2C309FE5 		ldr	r3, .L453
 7753 0010 2C209FE5 		ldr	r2, .L453+4
 7754 0014 2C109FE5 		ldr	r1, .L453+8
 7755 0018 08308DE5 		str	r3, [sp, #8]
 7756 001c 28309FE5 		ldr	r3, .L453+12
 7757 0020 28009FE5 		ldr	r0, .L453+16
 7758 0024 04308DE5 		str	r3, [sp, #4]
 7759 0028 24309FE5 		ldr	r3, .L453+20
 7760 002c 00308DE5 		str	r3, [sp]
 7761 0030 20309FE5 		ldr	r3, .L453+24
 7762 0034 FEFFFFEB 		bl	UnityTestRunner
 7763              	.LVL938:
 7764 0038 14D08DE2 		add	sp, sp, #20
 7765              		.cfi_def_cfa_offset 4
 7766              		@ sp needed
 7767 003c 04F09DE4 		ldr	pc, [sp], #4
 7768              	.L454:
 7769              		.align	2
 7770              	.L453:
 7771 0040 30000000 		.word	.LC96
 7772 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 7773 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_
 7774 004c 80000000 		.word	.LC97
 7775 0050 00000000 		.word	TEST_Full_TCP_SETUP
 7776 0054 A0000000 		.word	.LC98
 7777 0058 00000000 		.word	.LC95
 7778              		.cfi_endproc
 7779              	.LFE20:
 7781              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run,"ax",%progbits
 7782              		.align	2
 7783              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run
 7784              		.syntax unified
 7785              		.arm
 7786              		.fpu neon
 7788              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run:
 7789              	.LFB22:
 844:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7790              		.loc 1 844 0
 7791              		.cfi_startproc
 7792              		@ args = 0, pretend = 0, frame = 0
 7793              		@ frame_needed = 0, uses_anonymous_args = 0
 7794 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 7795              		.cfi_def_cfa_offset 24
 7796              		.cfi_offset 14, -4
 844:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7797              		.loc 1 844 0
 7798 0004 D33FA0E3 		mov	r3, #844
 7799 0008 0C308DE5 		str	r3, [sp, #12]
 7800 000c 2C309FE5 		ldr	r3, .L457
 7801 0010 2C209FE5 		ldr	r2, .L457+4
 7802 0014 2C109FE5 		ldr	r1, .L457+8
 7803 0018 08308DE5 		str	r3, [sp, #8]
 7804 001c 28309FE5 		ldr	r3, .L457+12
 7805 0020 28009FE5 		ldr	r0, .L457+16
 7806 0024 04308DE5 		str	r3, [sp, #4]
 7807 0028 24309FE5 		ldr	r3, .L457+20
 7808 002c 00308DE5 		str	r3, [sp]
 7809 0030 20309FE5 		ldr	r3, .L457+24
 7810 0034 FEFFFFEB 		bl	UnityTestRunner
 7811              	.LVL939:
 7812 0038 14D08DE2 		add	sp, sp, #20
 7813              		.cfi_def_cfa_offset 4
 7814              		@ sp needed
 7815 003c 04F09DE4 		ldr	pc, [sp], #4
 7816              	.L458:
 7817              		.align	2
 7818              	.L457:
 7819 0040 30000000 		.word	.LC96
 7820 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 7821 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_
 7822 004c 37000000 		.word	.LC100
 7823 0050 00000000 		.word	TEST_Full_TCP_SETUP
 7824 0054 A0000000 		.word	.LC98
 7825 0058 00000000 		.word	.LC99
 7826              		.cfi_endproc
 7827              	.LFE22:
 7829              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run,"ax",%progbits
 7830              		.align	2
 7831              		.global	TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run
 7832              		.syntax unified
 7833              		.arm
 7834              		.fpu neon
 7836              	TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run:
 7837              	.LFB25:
 871:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7838              		.loc 1 871 0
 7839              		.cfi_startproc
 7840              		@ args = 0, pretend = 0, frame = 0
 7841              		@ frame_needed = 0, uses_anonymous_args = 0
 7842 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 7843              		.cfi_def_cfa_offset 24
 7844              		.cfi_offset 14, -4
 871:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7845              		.loc 1 871 0
 7846 0004 673300E3 		movw	r3, #871
 7847 0008 0C308DE5 		str	r3, [sp, #12]
 7848 000c 2C309FE5 		ldr	r3, .L461
 7849 0010 2C209FE5 		ldr	r2, .L461+4
 7850 0014 2C109FE5 		ldr	r1, .L461+8
 7851 0018 08308DE5 		str	r3, [sp, #8]
 7852 001c 28309FE5 		ldr	r3, .L461+12
 7853 0020 28009FE5 		ldr	r0, .L461+16
 7854 0024 04308DE5 		str	r3, [sp, #4]
 7855 0028 24309FE5 		ldr	r3, .L461+20
 7856 002c 00308DE5 		str	r3, [sp]
 7857 0030 20309FE5 		ldr	r3, .L461+24
 7858 0034 FEFFFFEB 		bl	UnityTestRunner
 7859              	.LVL940:
 7860 0038 14D08DE2 		add	sp, sp, #20
 7861              		.cfi_def_cfa_offset 4
 7862              		@ sp needed
 7863 003c 04F09DE4 		ldr	pc, [sp], #4
 7864              	.L462:
 7865              		.align	2
 7866              	.L461:
 7867 0040 30000000 		.word	.LC96
 7868 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 7869 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_
 7870 004c 33000000 		.word	.LC102
 7871 0050 00000000 		.word	TEST_Full_TCP_SETUP
 7872 0054 A0000000 		.word	.LC98
 7873 0058 00000000 		.word	.LC101
 7874              		.cfi_endproc
 7875              	.LFE25:
 7877              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run,"ax",%progbits
 7878              		.align	2
 7879              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run
 7880              		.syntax unified
 7881              		.arm
 7882              		.fpu neon
 7884              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run:
 7885              	.LFB27:
 878:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7886              		.loc 1 878 0
 7887              		.cfi_startproc
 7888              		@ args = 0, pretend = 0, frame = 0
 7889              		@ frame_needed = 0, uses_anonymous_args = 0
 7890 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 7891              		.cfi_def_cfa_offset 24
 7892              		.cfi_offset 14, -4
 878:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7893              		.loc 1 878 0
 7894 0004 6E3300E3 		movw	r3, #878
 7895 0008 0C308DE5 		str	r3, [sp, #12]
 7896 000c 2C309FE5 		ldr	r3, .L465
 7897 0010 2C209FE5 		ldr	r2, .L465+4
 7898 0014 2C109FE5 		ldr	r1, .L465+8
 7899 0018 08308DE5 		str	r3, [sp, #8]
 7900 001c 28309FE5 		ldr	r3, .L465+12
 7901 0020 28009FE5 		ldr	r0, .L465+16
 7902 0024 04308DE5 		str	r3, [sp, #4]
 7903 0028 24309FE5 		ldr	r3, .L465+20
 7904 002c 00308DE5 		str	r3, [sp]
 7905 0030 20309FE5 		ldr	r3, .L465+24
 7906 0034 FEFFFFEB 		bl	UnityTestRunner
 7907              	.LVL941:
 7908 0038 14D08DE2 		add	sp, sp, #20
 7909              		.cfi_def_cfa_offset 4
 7910              		@ sp needed
 7911 003c 04F09DE4 		ldr	pc, [sp], #4
 7912              	.L466:
 7913              		.align	2
 7914              	.L465:
 7915 0040 30000000 		.word	.LC96
 7916 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 7917 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_
 7918 004c 3A000000 		.word	.LC104
 7919 0050 00000000 		.word	TEST_Full_TCP_SETUP
 7920 0054 A0000000 		.word	.LC98
 7921 0058 00000000 		.word	.LC103
 7922              		.cfi_endproc
 7923              	.LFE27:
 7925              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run,"ax",%progbits
 7926              		.align	2
 7927              		.global	TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run
 7928              		.syntax unified
 7929              		.arm
 7930              		.fpu neon
 7932              	TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run:
 7933              	.LFB30:
 911:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7934              		.loc 1 911 0
 7935              		.cfi_startproc
 7936              		@ args = 0, pretend = 0, frame = 0
 7937              		@ frame_needed = 0, uses_anonymous_args = 0
 7938 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 7939              		.cfi_def_cfa_offset 24
 7940              		.cfi_offset 14, -4
 911:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7941              		.loc 1 911 0
 7942 0004 8F3300E3 		movw	r3, #911
 7943 0008 0C308DE5 		str	r3, [sp, #12]
 7944 000c 2C309FE5 		ldr	r3, .L469
 7945 0010 2C209FE5 		ldr	r2, .L469+4
 7946 0014 2C109FE5 		ldr	r1, .L469+8
 7947 0018 08308DE5 		str	r3, [sp, #8]
 7948 001c 28309FE5 		ldr	r3, .L469+12
 7949 0020 28009FE5 		ldr	r0, .L469+16
 7950 0024 04308DE5 		str	r3, [sp, #4]
 7951 0028 24309FE5 		ldr	r3, .L469+20
 7952 002c 00308DE5 		str	r3, [sp]
 7953 0030 20309FE5 		ldr	r3, .L469+24
 7954 0034 FEFFFFEB 		bl	UnityTestRunner
 7955              	.LVL942:
 7956 0038 14D08DE2 		add	sp, sp, #20
 7957              		.cfi_def_cfa_offset 4
 7958              		@ sp needed
 7959 003c 04F09DE4 		ldr	pc, [sp], #4
 7960              	.L470:
 7961              		.align	2
 7962              	.L469:
 7963 0040 30000000 		.word	.LC96
 7964 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 7965 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_
 7966 004c 33000000 		.word	.LC106
 7967 0050 00000000 		.word	TEST_Full_TCP_SETUP
 7968 0054 A0000000 		.word	.LC98
 7969 0058 00000000 		.word	.LC105
 7970              		.cfi_endproc
 7971              	.LFE30:
 7973              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run,"ax",%progbits
 7974              		.align	2
 7975              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run
 7976              		.syntax unified
 7977              		.arm
 7978              		.fpu neon
 7980              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run:
 7981              	.LFB32:
 918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7982              		.loc 1 918 0
 7983              		.cfi_startproc
 7984              		@ args = 0, pretend = 0, frame = 0
 7985              		@ frame_needed = 0, uses_anonymous_args = 0
 7986 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 7987              		.cfi_def_cfa_offset 24
 7988              		.cfi_offset 14, -4
 918:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 7989              		.loc 1 918 0
 7990 0004 963300E3 		movw	r3, #918
 7991 0008 0C308DE5 		str	r3, [sp, #12]
 7992 000c 2C309FE5 		ldr	r3, .L473
 7993 0010 2C209FE5 		ldr	r2, .L473+4
 7994 0014 2C109FE5 		ldr	r1, .L473+8
 7995 0018 08308DE5 		str	r3, [sp, #8]
 7996 001c 28309FE5 		ldr	r3, .L473+12
 7997 0020 28009FE5 		ldr	r0, .L473+16
 7998 0024 04308DE5 		str	r3, [sp, #4]
 7999 0028 24309FE5 		ldr	r3, .L473+20
 8000 002c 00308DE5 		str	r3, [sp]
 8001 0030 20309FE5 		ldr	r3, .L473+24
 8002 0034 FEFFFFEB 		bl	UnityTestRunner
 8003              	.LVL943:
 8004 0038 14D08DE2 		add	sp, sp, #20
 8005              		.cfi_def_cfa_offset 4
 8006              		@ sp needed
 8007 003c 04F09DE4 		ldr	pc, [sp], #4
 8008              	.L474:
 8009              		.align	2
 8010              	.L473:
 8011 0040 30000000 		.word	.LC96
 8012 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8013 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_
 8014 004c 3A000000 		.word	.LC108
 8015 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8016 0054 A0000000 		.word	.LC98
 8017 0058 00000000 		.word	.LC107
 8018              		.cfi_endproc
 8019              	.LFE32:
 8021              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run,"ax",%progbits
 8022              		.align	2
 8023              		.global	TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run
 8024              		.syntax unified
 8025              		.arm
 8026              		.fpu neon
 8028              	TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run:
 8029              	.LFB35:
 946:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8030              		.loc 1 946 0
 8031              		.cfi_startproc
 8032              		@ args = 0, pretend = 0, frame = 0
 8033              		@ frame_needed = 0, uses_anonymous_args = 0
 8034 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8035              		.cfi_def_cfa_offset 24
 8036              		.cfi_offset 14, -4
 946:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8037              		.loc 1 946 0
 8038 0004 B23300E3 		movw	r3, #946
 8039 0008 0C308DE5 		str	r3, [sp, #12]
 8040 000c 2C309FE5 		ldr	r3, .L477
 8041 0010 2C209FE5 		ldr	r2, .L477+4
 8042 0014 2C109FE5 		ldr	r1, .L477+8
 8043 0018 08308DE5 		str	r3, [sp, #8]
 8044 001c 28309FE5 		ldr	r3, .L477+12
 8045 0020 28009FE5 		ldr	r0, .L477+16
 8046 0024 04308DE5 		str	r3, [sp, #4]
 8047 0028 24309FE5 		ldr	r3, .L477+20
 8048 002c 00308DE5 		str	r3, [sp]
 8049 0030 20309FE5 		ldr	r3, .L477+24
 8050 0034 FEFFFFEB 		bl	UnityTestRunner
 8051              	.LVL944:
 8052 0038 14D08DE2 		add	sp, sp, #20
 8053              		.cfi_def_cfa_offset 4
 8054              		@ sp needed
 8055 003c 04F09DE4 		ldr	pc, [sp], #4
 8056              	.L478:
 8057              		.align	2
 8058              	.L477:
 8059 0040 30000000 		.word	.LC96
 8060 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8061 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_
 8062 004c 36000000 		.word	.LC110
 8063 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8064 0054 A0000000 		.word	.LC98
 8065 0058 00000000 		.word	.LC109
 8066              		.cfi_endproc
 8067              	.LFE35:
 8069              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run,"ax",%progbits
 8070              		.align	2
 8071              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run
 8072              		.syntax unified
 8073              		.arm
 8074              		.fpu neon
 8076              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run:
 8077              	.LFB37:
 953:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8078              		.loc 1 953 0
 8079              		.cfi_startproc
 8080              		@ args = 0, pretend = 0, frame = 0
 8081              		@ frame_needed = 0, uses_anonymous_args = 0
 8082 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8083              		.cfi_def_cfa_offset 24
 8084              		.cfi_offset 14, -4
 953:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8085              		.loc 1 953 0
 8086 0004 B93300E3 		movw	r3, #953
 8087 0008 0C308DE5 		str	r3, [sp, #12]
 8088 000c 2C309FE5 		ldr	r3, .L481
 8089 0010 2C209FE5 		ldr	r2, .L481+4
 8090 0014 2C109FE5 		ldr	r1, .L481+8
 8091 0018 08308DE5 		str	r3, [sp, #8]
 8092 001c 28309FE5 		ldr	r3, .L481+12
 8093 0020 28009FE5 		ldr	r0, .L481+16
 8094 0024 04308DE5 		str	r3, [sp, #4]
 8095 0028 24309FE5 		ldr	r3, .L481+20
 8096 002c 00308DE5 		str	r3, [sp]
 8097 0030 20309FE5 		ldr	r3, .L481+24
 8098 0034 FEFFFFEB 		bl	UnityTestRunner
 8099              	.LVL945:
 8100 0038 14D08DE2 		add	sp, sp, #20
 8101              		.cfi_def_cfa_offset 4
 8102              		@ sp needed
 8103 003c 04F09DE4 		ldr	pc, [sp], #4
 8104              	.L482:
 8105              		.align	2
 8106              	.L481:
 8107 0040 30000000 		.word	.LC96
 8108 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8109 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_
 8110 004c 3D000000 		.word	.LC112
 8111 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8112 0054 A0000000 		.word	.LC98
 8113 0058 00000000 		.word	.LC111
 8114              		.cfi_endproc
 8115              	.LFE37:
 8117              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run,"ax",%progbits
 8118              		.align	2
 8119              		.global	TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run
 8120              		.syntax unified
 8121              		.arm
 8122              		.fpu neon
 8124              	TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run:
 8125              	.LFB40:
1013:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8126              		.loc 1 1013 0
 8127              		.cfi_startproc
 8128              		@ args = 0, pretend = 0, frame = 0
 8129              		@ frame_needed = 0, uses_anonymous_args = 0
 8130 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8131              		.cfi_def_cfa_offset 24
 8132              		.cfi_offset 14, -4
1013:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8133              		.loc 1 1013 0
 8134 0004 F53300E3 		movw	r3, #1013
 8135 0008 0C308DE5 		str	r3, [sp, #12]
 8136 000c 2C309FE5 		ldr	r3, .L485
 8137 0010 2C209FE5 		ldr	r2, .L485+4
 8138 0014 2C109FE5 		ldr	r1, .L485+8
 8139 0018 08308DE5 		str	r3, [sp, #8]
 8140 001c 28309FE5 		ldr	r3, .L485+12
 8141 0020 28009FE5 		ldr	r0, .L485+16
 8142 0024 04308DE5 		str	r3, [sp, #4]
 8143 0028 24309FE5 		ldr	r3, .L485+20
 8144 002c 00308DE5 		str	r3, [sp]
 8145 0030 20309FE5 		ldr	r3, .L485+24
 8146 0034 FEFFFFEB 		bl	UnityTestRunner
 8147              	.LVL946:
 8148 0038 14D08DE2 		add	sp, sp, #20
 8149              		.cfi_def_cfa_offset 4
 8150              		@ sp needed
 8151 003c 04F09DE4 		ldr	pc, [sp], #4
 8152              	.L486:
 8153              		.align	2
 8154              	.L485:
 8155 0040 30000000 		.word	.LC96
 8156 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8157 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_
 8158 004c 38000000 		.word	.LC114
 8159 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8160 0054 A0000000 		.word	.LC98
 8161 0058 00000000 		.word	.LC113
 8162              		.cfi_endproc
 8163              	.LFE40:
 8165              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run,"ax",%progbits
 8166              		.align	2
 8167              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run
 8168              		.syntax unified
 8169              		.arm
 8170              		.fpu neon
 8172              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run:
 8173              	.LFB42:
1020:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8174              		.loc 1 1020 0
 8175              		.cfi_startproc
 8176              		@ args = 0, pretend = 0, frame = 0
 8177              		@ frame_needed = 0, uses_anonymous_args = 0
 8178 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8179              		.cfi_def_cfa_offset 24
 8180              		.cfi_offset 14, -4
1020:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8181              		.loc 1 1020 0
 8182 0004 FF3FA0E3 		mov	r3, #1020
 8183 0008 0C308DE5 		str	r3, [sp, #12]
 8184 000c 2C309FE5 		ldr	r3, .L489
 8185 0010 2C209FE5 		ldr	r2, .L489+4
 8186 0014 2C109FE5 		ldr	r1, .L489+8
 8187 0018 08308DE5 		str	r3, [sp, #8]
 8188 001c 28309FE5 		ldr	r3, .L489+12
 8189 0020 28009FE5 		ldr	r0, .L489+16
 8190 0024 04308DE5 		str	r3, [sp, #4]
 8191 0028 24309FE5 		ldr	r3, .L489+20
 8192 002c 00308DE5 		str	r3, [sp]
 8193 0030 20309FE5 		ldr	r3, .L489+24
 8194 0034 FEFFFFEB 		bl	UnityTestRunner
 8195              	.LVL947:
 8196 0038 14D08DE2 		add	sp, sp, #20
 8197              		.cfi_def_cfa_offset 4
 8198              		@ sp needed
 8199 003c 04F09DE4 		ldr	pc, [sp], #4
 8200              	.L490:
 8201              		.align	2
 8202              	.L489:
 8203 0040 30000000 		.word	.LC96
 8204 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8205 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_
 8206 004c 3F000000 		.word	.LC116
 8207 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8208 0054 A0000000 		.word	.LC98
 8209 0058 00000000 		.word	.LC115
 8210              		.cfi_endproc
 8211              	.LFE42:
 8213              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run,"ax",%progbits
 8214              		.align	2
 8215              		.global	TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run
 8216              		.syntax unified
 8217              		.arm
 8218              		.fpu neon
 8220              	TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run:
 8221              	.LFB45:
1045:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8222              		.loc 1 1045 0
 8223              		.cfi_startproc
 8224              		@ args = 0, pretend = 0, frame = 0
 8225              		@ frame_needed = 0, uses_anonymous_args = 0
 8226 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8227              		.cfi_def_cfa_offset 24
 8228              		.cfi_offset 14, -4
1045:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8229              		.loc 1 1045 0
 8230 0004 153400E3 		movw	r3, #1045
 8231 0008 0C308DE5 		str	r3, [sp, #12]
 8232 000c 2C309FE5 		ldr	r3, .L493
 8233 0010 2C209FE5 		ldr	r2, .L493+4
 8234 0014 2C109FE5 		ldr	r1, .L493+8
 8235 0018 08308DE5 		str	r3, [sp, #8]
 8236 001c 28309FE5 		ldr	r3, .L493+12
 8237 0020 28009FE5 		ldr	r0, .L493+16
 8238 0024 04308DE5 		str	r3, [sp, #4]
 8239 0028 24309FE5 		ldr	r3, .L493+20
 8240 002c 00308DE5 		str	r3, [sp]
 8241 0030 20309FE5 		ldr	r3, .L493+24
 8242 0034 FEFFFFEB 		bl	UnityTestRunner
 8243              	.LVL948:
 8244 0038 14D08DE2 		add	sp, sp, #20
 8245              		.cfi_def_cfa_offset 4
 8246              		@ sp needed
 8247 003c 04F09DE4 		ldr	pc, [sp], #4
 8248              	.L494:
 8249              		.align	2
 8250              	.L493:
 8251 0040 30000000 		.word	.LC96
 8252 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8253 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_
 8254 004c 28000000 		.word	.LC118
 8255 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8256 0054 A0000000 		.word	.LC98
 8257 0058 00000000 		.word	.LC117
 8258              		.cfi_endproc
 8259              	.LFE45:
 8261              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run,"ax",%progbits
 8262              		.align	2
 8263              		.global	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run
 8264              		.syntax unified
 8265              		.arm
 8266              		.fpu neon
 8268              	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run:
 8269              	.LFB48:
1118:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8270              		.loc 1 1118 0
 8271              		.cfi_startproc
 8272              		@ args = 0, pretend = 0, frame = 0
 8273              		@ frame_needed = 0, uses_anonymous_args = 0
 8274 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8275              		.cfi_def_cfa_offset 24
 8276              		.cfi_offset 14, -4
1118:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8277              		.loc 1 1118 0
 8278 0004 5E3400E3 		movw	r3, #1118
 8279 0008 0C308DE5 		str	r3, [sp, #12]
 8280 000c 2C309FE5 		ldr	r3, .L497
 8281 0010 2C209FE5 		ldr	r2, .L497+4
 8282 0014 2C109FE5 		ldr	r1, .L497+8
 8283 0018 08308DE5 		str	r3, [sp, #8]
 8284 001c 28309FE5 		ldr	r3, .L497+12
 8285 0020 28009FE5 		ldr	r0, .L497+16
 8286 0024 04308DE5 		str	r3, [sp, #4]
 8287 0028 24309FE5 		ldr	r3, .L497+20
 8288 002c 00308DE5 		str	r3, [sp]
 8289 0030 20309FE5 		ldr	r3, .L497+24
 8290 0034 FEFFFFEB 		bl	UnityTestRunner
 8291              	.LVL949:
 8292 0038 14D08DE2 		add	sp, sp, #20
 8293              		.cfi_def_cfa_offset 4
 8294              		@ sp needed
 8295 003c 04F09DE4 		ldr	pc, [sp], #4
 8296              	.L498:
 8297              		.align	2
 8298              	.L497:
 8299 0040 30000000 		.word	.LC96
 8300 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8301 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_
 8302 004c 31000000 		.word	.LC120
 8303 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8304 0054 A0000000 		.word	.LC98
 8305 0058 00000000 		.word	.LC119
 8306              		.cfi_endproc
 8307              	.LFE48:
 8309              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run,"ax",%progbits
 8310              		.align	2
 8311              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run
 8312              		.syntax unified
 8313              		.arm
 8314              		.fpu neon
 8316              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run:
 8317              	.LFB50:
1125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8318              		.loc 1 1125 0
 8319              		.cfi_startproc
 8320              		@ args = 0, pretend = 0, frame = 0
 8321              		@ frame_needed = 0, uses_anonymous_args = 0
 8322 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8323              		.cfi_def_cfa_offset 24
 8324              		.cfi_offset 14, -4
1125:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8325              		.loc 1 1125 0
 8326 0004 653400E3 		movw	r3, #1125
 8327 0008 0C308DE5 		str	r3, [sp, #12]
 8328 000c 2C309FE5 		ldr	r3, .L501
 8329 0010 2C209FE5 		ldr	r2, .L501+4
 8330 0014 2C109FE5 		ldr	r1, .L501+8
 8331 0018 08308DE5 		str	r3, [sp, #8]
 8332 001c 28309FE5 		ldr	r3, .L501+12
 8333 0020 28009FE5 		ldr	r0, .L501+16
 8334 0024 04308DE5 		str	r3, [sp, #4]
 8335 0028 24309FE5 		ldr	r3, .L501+20
 8336 002c 00308DE5 		str	r3, [sp]
 8337 0030 20309FE5 		ldr	r3, .L501+24
 8338 0034 FEFFFFEB 		bl	UnityTestRunner
 8339              	.LVL950:
 8340 0038 14D08DE2 		add	sp, sp, #20
 8341              		.cfi_def_cfa_offset 4
 8342              		@ sp needed
 8343 003c 04F09DE4 		ldr	pc, [sp], #4
 8344              	.L502:
 8345              		.align	2
 8346              	.L501:
 8347 0040 30000000 		.word	.LC96
 8348 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8349 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_
 8350 004c 38000000 		.word	.LC122
 8351 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8352 0054 A0000000 		.word	.LC98
 8353 0058 00000000 		.word	.LC121
 8354              		.cfi_endproc
 8355              	.LFE50:
 8357              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run,"ax",%progbits
 8358              		.align	2
 8359              		.global	TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run
 8360              		.syntax unified
 8361              		.arm
 8362              		.fpu neon
 8364              	TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run:
 8365              	.LFB53:
1219:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8366              		.loc 1 1219 0
 8367              		.cfi_startproc
 8368              		@ args = 0, pretend = 0, frame = 0
 8369              		@ frame_needed = 0, uses_anonymous_args = 0
 8370 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8371              		.cfi_def_cfa_offset 24
 8372              		.cfi_offset 14, -4
1219:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8373              		.loc 1 1219 0
 8374 0004 C33400E3 		movw	r3, #1219
 8375 0008 0C308DE5 		str	r3, [sp, #12]
 8376 000c 2C309FE5 		ldr	r3, .L505
 8377 0010 2C209FE5 		ldr	r2, .L505+4
 8378 0014 2C109FE5 		ldr	r1, .L505+8
 8379 0018 08308DE5 		str	r3, [sp, #8]
 8380 001c 28309FE5 		ldr	r3, .L505+12
 8381 0020 28009FE5 		ldr	r0, .L505+16
 8382 0024 04308DE5 		str	r3, [sp, #4]
 8383 0028 24309FE5 		ldr	r3, .L505+20
 8384 002c 00308DE5 		str	r3, [sp]
 8385 0030 20309FE5 		ldr	r3, .L505+24
 8386 0034 FEFFFFEB 		bl	UnityTestRunner
 8387              	.LVL951:
 8388 0038 14D08DE2 		add	sp, sp, #20
 8389              		.cfi_def_cfa_offset 4
 8390              		@ sp needed
 8391 003c 04F09DE4 		ldr	pc, [sp], #4
 8392              	.L506:
 8393              		.align	2
 8394              	.L505:
 8395 0040 30000000 		.word	.LC96
 8396 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8397 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_
 8398 004c 2E000000 		.word	.LC124
 8399 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8400 0054 A0000000 		.word	.LC98
 8401 0058 00000000 		.word	.LC123
 8402              		.cfi_endproc
 8403              	.LFE53:
 8405              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run,"ax",%progbits
 8406              		.align	2
 8407              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run
 8408              		.syntax unified
 8409              		.arm
 8410              		.fpu neon
 8412              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run:
 8413              	.LFB55:
1226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8414              		.loc 1 1226 0
 8415              		.cfi_startproc
 8416              		@ args = 0, pretend = 0, frame = 0
 8417              		@ frame_needed = 0, uses_anonymous_args = 0
 8418 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8419              		.cfi_def_cfa_offset 24
 8420              		.cfi_offset 14, -4
1226:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8421              		.loc 1 1226 0
 8422 0004 CA3400E3 		movw	r3, #1226
 8423 0008 0C308DE5 		str	r3, [sp, #12]
 8424 000c 2C309FE5 		ldr	r3, .L509
 8425 0010 2C209FE5 		ldr	r2, .L509+4
 8426 0014 2C109FE5 		ldr	r1, .L509+8
 8427 0018 08308DE5 		str	r3, [sp, #8]
 8428 001c 28309FE5 		ldr	r3, .L509+12
 8429 0020 28009FE5 		ldr	r0, .L509+16
 8430 0024 04308DE5 		str	r3, [sp, #4]
 8431 0028 24309FE5 		ldr	r3, .L509+20
 8432 002c 00308DE5 		str	r3, [sp]
 8433 0030 20309FE5 		ldr	r3, .L509+24
 8434 0034 FEFFFFEB 		bl	UnityTestRunner
 8435              	.LVL952:
 8436 0038 14D08DE2 		add	sp, sp, #20
 8437              		.cfi_def_cfa_offset 4
 8438              		@ sp needed
 8439 003c 04F09DE4 		ldr	pc, [sp], #4
 8440              	.L510:
 8441              		.align	2
 8442              	.L509:
 8443 0040 30000000 		.word	.LC96
 8444 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8445 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_
 8446 004c 35000000 		.word	.LC126
 8447 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8448 0054 A0000000 		.word	.LC98
 8449 0058 00000000 		.word	.LC125
 8450              		.cfi_endproc
 8451              	.LFE55:
 8453              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run,"ax",%progbits
 8454              		.align	2
 8455              		.global	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run
 8456              		.syntax unified
 8457              		.arm
 8458              		.fpu neon
 8460              	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run:
 8461              	.LFB58:
1281:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8462              		.loc 1 1281 0
 8463              		.cfi_startproc
 8464              		@ args = 0, pretend = 0, frame = 0
 8465              		@ frame_needed = 0, uses_anonymous_args = 0
 8466 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8467              		.cfi_def_cfa_offset 24
 8468              		.cfi_offset 14, -4
1281:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8469              		.loc 1 1281 0
 8470 0004 013500E3 		movw	r3, #1281
 8471 0008 0C308DE5 		str	r3, [sp, #12]
 8472 000c 2C309FE5 		ldr	r3, .L513
 8473 0010 2C209FE5 		ldr	r2, .L513+4
 8474 0014 2C109FE5 		ldr	r1, .L513+8
 8475 0018 08308DE5 		str	r3, [sp, #8]
 8476 001c 28309FE5 		ldr	r3, .L513+12
 8477 0020 28009FE5 		ldr	r0, .L513+16
 8478 0024 04308DE5 		str	r3, [sp, #4]
 8479 0028 24309FE5 		ldr	r3, .L513+20
 8480 002c 00308DE5 		str	r3, [sp]
 8481 0030 20309FE5 		ldr	r3, .L513+24
 8482 0034 FEFFFFEB 		bl	UnityTestRunner
 8483              	.LVL953:
 8484 0038 14D08DE2 		add	sp, sp, #20
 8485              		.cfi_def_cfa_offset 4
 8486              		@ sp needed
 8487 003c 04F09DE4 		ldr	pc, [sp], #4
 8488              	.L514:
 8489              		.align	2
 8490              	.L513:
 8491 0040 30000000 		.word	.LC96
 8492 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8493 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_
 8494 004c 36000000 		.word	.LC128
 8495 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8496 0054 A0000000 		.word	.LC98
 8497 0058 00000000 		.word	.LC127
 8498              		.cfi_endproc
 8499              	.LFE58:
 8501              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run,"ax",%progbits
 8502              		.align	2
 8503              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run
 8504              		.syntax unified
 8505              		.arm
 8506              		.fpu neon
 8508              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run:
 8509              	.LFB60:
1290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8510              		.loc 1 1290 0
 8511              		.cfi_startproc
 8512              		@ args = 0, pretend = 0, frame = 0
 8513              		@ frame_needed = 0, uses_anonymous_args = 0
 8514 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8515              		.cfi_def_cfa_offset 24
 8516              		.cfi_offset 14, -4
1290:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8517              		.loc 1 1290 0
 8518 0004 0A3500E3 		movw	r3, #1290
 8519 0008 0C308DE5 		str	r3, [sp, #12]
 8520 000c 2C309FE5 		ldr	r3, .L517
 8521 0010 2C209FE5 		ldr	r2, .L517+4
 8522 0014 2C109FE5 		ldr	r1, .L517+8
 8523 0018 08308DE5 		str	r3, [sp, #8]
 8524 001c 28309FE5 		ldr	r3, .L517+12
 8525 0020 28009FE5 		ldr	r0, .L517+16
 8526 0024 04308DE5 		str	r3, [sp, #4]
 8527 0028 24309FE5 		ldr	r3, .L517+20
 8528 002c 00308DE5 		str	r3, [sp]
 8529 0030 20309FE5 		ldr	r3, .L517+24
 8530 0034 FEFFFFEB 		bl	UnityTestRunner
 8531              	.LVL954:
 8532 0038 14D08DE2 		add	sp, sp, #20
 8533              		.cfi_def_cfa_offset 4
 8534              		@ sp needed
 8535 003c 04F09DE4 		ldr	pc, [sp], #4
 8536              	.L518:
 8537              		.align	2
 8538              	.L517:
 8539 0040 30000000 		.word	.LC96
 8540 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8541 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_
 8542 004c 3D000000 		.word	.LC130
 8543 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8544 0054 A0000000 		.word	.LC98
 8545 0058 00000000 		.word	.LC129
 8546              		.cfi_endproc
 8547              	.LFE60:
 8549              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run,"ax",%progbits
 8550              		.align	2
 8551              		.global	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run
 8552              		.syntax unified
 8553              		.arm
 8554              		.fpu neon
 8556              	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run:
 8557              	.LFB63:
1306:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8558              		.loc 1 1306 0
 8559              		.cfi_startproc
 8560              		@ args = 0, pretend = 0, frame = 0
 8561              		@ frame_needed = 0, uses_anonymous_args = 0
 8562 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8563              		.cfi_def_cfa_offset 24
 8564              		.cfi_offset 14, -4
1306:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8565              		.loc 1 1306 0
 8566 0004 1A3500E3 		movw	r3, #1306
 8567 0008 0C308DE5 		str	r3, [sp, #12]
 8568 000c 2C309FE5 		ldr	r3, .L521
 8569 0010 2C209FE5 		ldr	r2, .L521+4
 8570 0014 2C109FE5 		ldr	r1, .L521+8
 8571 0018 08308DE5 		str	r3, [sp, #8]
 8572 001c 28309FE5 		ldr	r3, .L521+12
 8573 0020 28009FE5 		ldr	r0, .L521+16
 8574 0024 04308DE5 		str	r3, [sp, #4]
 8575 0028 24309FE5 		ldr	r3, .L521+20
 8576 002c 00308DE5 		str	r3, [sp]
 8577 0030 20309FE5 		ldr	r3, .L521+24
 8578 0034 FEFFFFEB 		bl	UnityTestRunner
 8579              	.LVL955:
 8580 0038 14D08DE2 		add	sp, sp, #20
 8581              		.cfi_def_cfa_offset 4
 8582              		@ sp needed
 8583 003c 04F09DE4 		ldr	pc, [sp], #4
 8584              	.L522:
 8585              		.align	2
 8586              	.L521:
 8587 0040 30000000 		.word	.LC96
 8588 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8589 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_
 8590 004c 31000000 		.word	.LC132
 8591 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8592 0054 A0000000 		.word	.LC98
 8593 0058 00000000 		.word	.LC131
 8594              		.cfi_endproc
 8595              	.LFE63:
 8597              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run,"ax",%progbits
 8598              		.align	2
 8599              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run
 8600              		.syntax unified
 8601              		.arm
 8602              		.fpu neon
 8604              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run:
 8605              	.LFB65:
1313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8606              		.loc 1 1313 0
 8607              		.cfi_startproc
 8608              		@ args = 0, pretend = 0, frame = 0
 8609              		@ frame_needed = 0, uses_anonymous_args = 0
 8610 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8611              		.cfi_def_cfa_offset 24
 8612              		.cfi_offset 14, -4
1313:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8613              		.loc 1 1313 0
 8614 0004 213500E3 		movw	r3, #1313
 8615 0008 0C308DE5 		str	r3, [sp, #12]
 8616 000c 2C309FE5 		ldr	r3, .L525
 8617 0010 2C209FE5 		ldr	r2, .L525+4
 8618 0014 2C109FE5 		ldr	r1, .L525+8
 8619 0018 08308DE5 		str	r3, [sp, #8]
 8620 001c 28309FE5 		ldr	r3, .L525+12
 8621 0020 28009FE5 		ldr	r0, .L525+16
 8622 0024 04308DE5 		str	r3, [sp, #4]
 8623 0028 24309FE5 		ldr	r3, .L525+20
 8624 002c 00308DE5 		str	r3, [sp]
 8625 0030 20309FE5 		ldr	r3, .L525+24
 8626 0034 FEFFFFEB 		bl	UnityTestRunner
 8627              	.LVL956:
 8628 0038 14D08DE2 		add	sp, sp, #20
 8629              		.cfi_def_cfa_offset 4
 8630              		@ sp needed
 8631 003c 04F09DE4 		ldr	pc, [sp], #4
 8632              	.L526:
 8633              		.align	2
 8634              	.L525:
 8635 0040 30000000 		.word	.LC96
 8636 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8637 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_
 8638 004c 38000000 		.word	.LC134
 8639 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8640 0054 A0000000 		.word	.LC98
 8641 0058 00000000 		.word	.LC133
 8642              		.cfi_endproc
 8643              	.LFE65:
 8645              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run,"ax",%progbits
 8646              		.align	2
 8647              		.global	TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run
 8648              		.syntax unified
 8649              		.arm
 8650              		.fpu neon
 8652              	TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run:
 8653              	.LFB68:
1394:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8654              		.loc 1 1394 0
 8655              		.cfi_startproc
 8656              		@ args = 0, pretend = 0, frame = 0
 8657              		@ frame_needed = 0, uses_anonymous_args = 0
 8658 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8659              		.cfi_def_cfa_offset 24
 8660              		.cfi_offset 14, -4
1394:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8661              		.loc 1 1394 0
 8662 0004 723500E3 		movw	r3, #1394
 8663 0008 0C308DE5 		str	r3, [sp, #12]
 8664 000c 2C309FE5 		ldr	r3, .L529
 8665 0010 2C209FE5 		ldr	r2, .L529+4
 8666 0014 2C109FE5 		ldr	r1, .L529+8
 8667 0018 08308DE5 		str	r3, [sp, #8]
 8668 001c 28309FE5 		ldr	r3, .L529+12
 8669 0020 28009FE5 		ldr	r0, .L529+16
 8670 0024 04308DE5 		str	r3, [sp, #4]
 8671 0028 24309FE5 		ldr	r3, .L529+20
 8672 002c 00308DE5 		str	r3, [sp]
 8673 0030 20309FE5 		ldr	r3, .L529+24
 8674 0034 FEFFFFEB 		bl	UnityTestRunner
 8675              	.LVL957:
 8676 0038 14D08DE2 		add	sp, sp, #20
 8677              		.cfi_def_cfa_offset 4
 8678              		@ sp needed
 8679 003c 04F09DE4 		ldr	pc, [sp], #4
 8680              	.L530:
 8681              		.align	2
 8682              	.L529:
 8683 0040 30000000 		.word	.LC96
 8684 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8685 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Shutdown_
 8686 004c 26000000 		.word	.LC136
 8687 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8688 0054 A0000000 		.word	.LC98
 8689 0058 00000000 		.word	.LC135
 8690              		.cfi_endproc
 8691              	.LFE68:
 8693              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run,"ax",%progbits
 8694              		.align	2
 8695              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run
 8696              		.syntax unified
 8697              		.arm
 8698              		.fpu neon
 8700              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run:
 8701              	.LFB70:
1401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8702              		.loc 1 1401 0
 8703              		.cfi_startproc
 8704              		@ args = 0, pretend = 0, frame = 0
 8705              		@ frame_needed = 0, uses_anonymous_args = 0
 8706 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8707              		.cfi_def_cfa_offset 24
 8708              		.cfi_offset 14, -4
1401:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8709              		.loc 1 1401 0
 8710 0004 793500E3 		movw	r3, #1401
 8711 0008 0C308DE5 		str	r3, [sp, #12]
 8712 000c 2C309FE5 		ldr	r3, .L533
 8713 0010 2C209FE5 		ldr	r2, .L533+4
 8714 0014 2C109FE5 		ldr	r1, .L533+8
 8715 0018 08308DE5 		str	r3, [sp, #8]
 8716 001c 28309FE5 		ldr	r3, .L533+12
 8717 0020 28009FE5 		ldr	r0, .L533+16
 8718 0024 04308DE5 		str	r3, [sp, #4]
 8719 0028 24309FE5 		ldr	r3, .L533+20
 8720 002c 00308DE5 		str	r3, [sp]
 8721 0030 20309FE5 		ldr	r3, .L533+24
 8722 0034 FEFFFFEB 		bl	UnityTestRunner
 8723              	.LVL958:
 8724 0038 14D08DE2 		add	sp, sp, #20
 8725              		.cfi_def_cfa_offset 4
 8726              		@ sp needed
 8727 003c 04F09DE4 		ldr	pc, [sp], #4
 8728              	.L534:
 8729              		.align	2
 8730              	.L533:
 8731 0040 30000000 		.word	.LC96
 8732 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8733 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_
 8734 004c 2D000000 		.word	.LC138
 8735 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8736 0054 A0000000 		.word	.LC98
 8737 0058 00000000 		.word	.LC137
 8738              		.cfi_endproc
 8739              	.LFE70:
 8741              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Close_run,"ax",%progbits
 8742              		.align	2
 8743              		.global	TEST_Full_TCP_AFQP_SOCKETS_Close_run
 8744              		.syntax unified
 8745              		.arm
 8746              		.fpu neon
 8748              	TEST_Full_TCP_AFQP_SOCKETS_Close_run:
 8749              	.LFB73:
1475:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8750              		.loc 1 1475 0
 8751              		.cfi_startproc
 8752              		@ args = 0, pretend = 0, frame = 0
 8753              		@ frame_needed = 0, uses_anonymous_args = 0
 8754 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8755              		.cfi_def_cfa_offset 24
 8756              		.cfi_offset 14, -4
1475:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8757              		.loc 1 1475 0
 8758 0004 C33500E3 		movw	r3, #1475
 8759 0008 0C308DE5 		str	r3, [sp, #12]
 8760 000c 2C309FE5 		ldr	r3, .L537
 8761 0010 2C209FE5 		ldr	r2, .L537+4
 8762 0014 2C109FE5 		ldr	r1, .L537+8
 8763 0018 08308DE5 		str	r3, [sp, #8]
 8764 001c 28309FE5 		ldr	r3, .L537+12
 8765 0020 28009FE5 		ldr	r0, .L537+16
 8766 0024 04308DE5 		str	r3, [sp, #4]
 8767 0028 24309FE5 		ldr	r3, .L537+20
 8768 002c 00308DE5 		str	r3, [sp]
 8769 0030 20309FE5 		ldr	r3, .L537+24
 8770 0034 FEFFFFEB 		bl	UnityTestRunner
 8771              	.LVL959:
 8772 0038 14D08DE2 		add	sp, sp, #20
 8773              		.cfi_def_cfa_offset 4
 8774              		@ sp needed
 8775 003c 04F09DE4 		ldr	pc, [sp], #4
 8776              	.L538:
 8777              		.align	2
 8778              	.L537:
 8779 0040 30000000 		.word	.LC96
 8780 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8781 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Close_
 8782 004c 23000000 		.word	.LC140
 8783 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8784 0054 A0000000 		.word	.LC98
 8785 0058 00000000 		.word	.LC139
 8786              		.cfi_endproc
 8787              	.LFE73:
 8789              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run,"ax",%progbits
 8790              		.align	2
 8791              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run
 8792              		.syntax unified
 8793              		.arm
 8794              		.fpu neon
 8796              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run:
 8797              	.LFB75:
1482:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8798              		.loc 1 1482 0
 8799              		.cfi_startproc
 8800              		@ args = 0, pretend = 0, frame = 0
 8801              		@ frame_needed = 0, uses_anonymous_args = 0
 8802 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8803              		.cfi_def_cfa_offset 24
 8804              		.cfi_offset 14, -4
1482:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8805              		.loc 1 1482 0
 8806 0004 CA3500E3 		movw	r3, #1482
 8807 0008 0C308DE5 		str	r3, [sp, #12]
 8808 000c 2C309FE5 		ldr	r3, .L541
 8809 0010 2C209FE5 		ldr	r2, .L541+4
 8810 0014 2C109FE5 		ldr	r1, .L541+8
 8811 0018 08308DE5 		str	r3, [sp, #8]
 8812 001c 28309FE5 		ldr	r3, .L541+12
 8813 0020 28009FE5 		ldr	r0, .L541+16
 8814 0024 04308DE5 		str	r3, [sp, #4]
 8815 0028 24309FE5 		ldr	r3, .L541+20
 8816 002c 00308DE5 		str	r3, [sp]
 8817 0030 20309FE5 		ldr	r3, .L541+24
 8818 0034 FEFFFFEB 		bl	UnityTestRunner
 8819              	.LVL960:
 8820 0038 14D08DE2 		add	sp, sp, #20
 8821              		.cfi_def_cfa_offset 4
 8822              		@ sp needed
 8823 003c 04F09DE4 		ldr	pc, [sp], #4
 8824              	.L542:
 8825              		.align	2
 8826              	.L541:
 8827 0040 30000000 		.word	.LC96
 8828 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8829 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_
 8830 004c 2A000000 		.word	.LC142
 8831 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8832 0054 A0000000 		.word	.LC98
 8833 0058 00000000 		.word	.LC141
 8834              		.cfi_endproc
 8835              	.LFE75:
 8837              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run,"ax",%progbits
 8838              		.align	2
 8839              		.global	TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run
 8840              		.syntax unified
 8841              		.arm
 8842              		.fpu neon
 8844              	TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run:
 8845              	.LFB78:
1548:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8846              		.loc 1 1548 0
 8847              		.cfi_startproc
 8848              		@ args = 0, pretend = 0, frame = 0
 8849              		@ frame_needed = 0, uses_anonymous_args = 0
 8850 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8851              		.cfi_def_cfa_offset 24
 8852              		.cfi_offset 14, -4
1548:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8853              		.loc 1 1548 0
 8854 0004 0C3600E3 		movw	r3, #1548
 8855 0008 0C308DE5 		str	r3, [sp, #12]
 8856 000c 2C309FE5 		ldr	r3, .L545
 8857 0010 2C209FE5 		ldr	r2, .L545+4
 8858 0014 2C109FE5 		ldr	r1, .L545+8
 8859 0018 08308DE5 		str	r3, [sp, #8]
 8860 001c 28309FE5 		ldr	r3, .L545+12
 8861 0020 28009FE5 		ldr	r0, .L545+16
 8862 0024 04308DE5 		str	r3, [sp, #4]
 8863 0028 24309FE5 		ldr	r3, .L545+20
 8864 002c 00308DE5 		str	r3, [sp]
 8865 0030 20309FE5 		ldr	r3, .L545+24
 8866 0034 FEFFFFEB 		bl	UnityTestRunner
 8867              	.LVL961:
 8868 0038 14D08DE2 		add	sp, sp, #20
 8869              		.cfi_def_cfa_offset 4
 8870              		@ sp needed
 8871 003c 04F09DE4 		ldr	pc, [sp], #4
 8872              	.L546:
 8873              		.align	2
 8874              	.L545:
 8875 0040 30000000 		.word	.LC96
 8876 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8877 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_
 8878 004c 2D000000 		.word	.LC144
 8879 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8880 0054 A0000000 		.word	.LC98
 8881 0058 00000000 		.word	.LC143
 8882              		.cfi_endproc
 8883              	.LFE78:
 8885              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run,"ax",%progbits
 8886              		.align	2
 8887              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run
 8888              		.syntax unified
 8889              		.arm
 8890              		.fpu neon
 8892              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run:
 8893              	.LFB80:
1555:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8894              		.loc 1 1555 0
 8895              		.cfi_startproc
 8896              		@ args = 0, pretend = 0, frame = 0
 8897              		@ frame_needed = 0, uses_anonymous_args = 0
 8898 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8899              		.cfi_def_cfa_offset 24
 8900              		.cfi_offset 14, -4
1555:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8901              		.loc 1 1555 0
 8902 0004 133600E3 		movw	r3, #1555
 8903 0008 0C308DE5 		str	r3, [sp, #12]
 8904 000c 2C309FE5 		ldr	r3, .L549
 8905 0010 2C209FE5 		ldr	r2, .L549+4
 8906 0014 2C109FE5 		ldr	r1, .L549+8
 8907 0018 08308DE5 		str	r3, [sp, #8]
 8908 001c 28309FE5 		ldr	r3, .L549+12
 8909 0020 28009FE5 		ldr	r0, .L549+16
 8910 0024 04308DE5 		str	r3, [sp, #4]
 8911 0028 24309FE5 		ldr	r3, .L549+20
 8912 002c 00308DE5 		str	r3, [sp]
 8913 0030 20309FE5 		ldr	r3, .L549+24
 8914 0034 FEFFFFEB 		bl	UnityTestRunner
 8915              	.LVL962:
 8916 0038 14D08DE2 		add	sp, sp, #20
 8917              		.cfi_def_cfa_offset 4
 8918              		@ sp needed
 8919 003c 04F09DE4 		ldr	pc, [sp], #4
 8920              	.L550:
 8921              		.align	2
 8922              	.L549:
 8923 0040 30000000 		.word	.LC96
 8924 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8925 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_
 8926 004c 34000000 		.word	.LC146
 8927 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8928 0054 A0000000 		.word	.LC98
 8929 0058 00000000 		.word	.LC145
 8930              		.cfi_endproc
 8931              	.LFE80:
 8933              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run,"ax",%progbits
 8934              		.align	2
 8935              		.global	TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run
 8936              		.syntax unified
 8937              		.arm
 8938              		.fpu neon
 8940              	TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run:
 8941              	.LFB83:
1630:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8942              		.loc 1 1630 0
 8943              		.cfi_startproc
 8944              		@ args = 0, pretend = 0, frame = 0
 8945              		@ frame_needed = 0, uses_anonymous_args = 0
 8946 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8947              		.cfi_def_cfa_offset 24
 8948              		.cfi_offset 14, -4
1630:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8949              		.loc 1 1630 0
 8950 0004 5E3600E3 		movw	r3, #1630
 8951 0008 0C308DE5 		str	r3, [sp, #12]
 8952 000c 2C309FE5 		ldr	r3, .L553
 8953 0010 2C209FE5 		ldr	r2, .L553+4
 8954 0014 2C109FE5 		ldr	r1, .L553+8
 8955 0018 08308DE5 		str	r3, [sp, #8]
 8956 001c 28309FE5 		ldr	r3, .L553+12
 8957 0020 28009FE5 		ldr	r0, .L553+16
 8958 0024 04308DE5 		str	r3, [sp, #4]
 8959 0028 24309FE5 		ldr	r3, .L553+20
 8960 002c 00308DE5 		str	r3, [sp]
 8961 0030 20309FE5 		ldr	r3, .L553+24
 8962 0034 FEFFFFEB 		bl	UnityTestRunner
 8963              	.LVL963:
 8964 0038 14D08DE2 		add	sp, sp, #20
 8965              		.cfi_def_cfa_offset 4
 8966              		@ sp needed
 8967 003c 04F09DE4 		ldr	pc, [sp], #4
 8968              	.L554:
 8969              		.align	2
 8970              	.L553:
 8971 0040 30000000 		.word	.LC96
 8972 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 8973 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_
 8974 004c 31000000 		.word	.LC148
 8975 0050 00000000 		.word	TEST_Full_TCP_SETUP
 8976 0054 A0000000 		.word	.LC98
 8977 0058 00000000 		.word	.LC147
 8978              		.cfi_endproc
 8979              	.LFE83:
 8981              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run,"ax",%progbits
 8982              		.align	2
 8983              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run
 8984              		.syntax unified
 8985              		.arm
 8986              		.fpu neon
 8988              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run:
 8989              	.LFB85:
1637:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8990              		.loc 1 1637 0
 8991              		.cfi_startproc
 8992              		@ args = 0, pretend = 0, frame = 0
 8993              		@ frame_needed = 0, uses_anonymous_args = 0
 8994 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 8995              		.cfi_def_cfa_offset 24
 8996              		.cfi_offset 14, -4
1637:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 8997              		.loc 1 1637 0
 8998 0004 653600E3 		movw	r3, #1637
 8999 0008 0C308DE5 		str	r3, [sp, #12]
 9000 000c 2C309FE5 		ldr	r3, .L557
 9001 0010 2C209FE5 		ldr	r2, .L557+4
 9002 0014 2C109FE5 		ldr	r1, .L557+8
 9003 0018 08308DE5 		str	r3, [sp, #8]
 9004 001c 28309FE5 		ldr	r3, .L557+12
 9005 0020 28009FE5 		ldr	r0, .L557+16
 9006 0024 04308DE5 		str	r3, [sp, #4]
 9007 0028 24309FE5 		ldr	r3, .L557+20
 9008 002c 00308DE5 		str	r3, [sp]
 9009 0030 20309FE5 		ldr	r3, .L557+24
 9010 0034 FEFFFFEB 		bl	UnityTestRunner
 9011              	.LVL964:
 9012 0038 14D08DE2 		add	sp, sp, #20
 9013              		.cfi_def_cfa_offset 4
 9014              		@ sp needed
 9015 003c 04F09DE4 		ldr	pc, [sp], #4
 9016              	.L558:
 9017              		.align	2
 9018              	.L557:
 9019 0040 30000000 		.word	.LC96
 9020 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9021 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_
 9022 004c 38000000 		.word	.LC150
 9023 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9024 0054 A0000000 		.word	.LC98
 9025 0058 00000000 		.word	.LC149
 9026              		.cfi_endproc
 9027              	.LFE85:
 9029              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run,"ax",%progbits
 9030              		.align	2
 9031              		.global	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run
 9032              		.syntax unified
 9033              		.arm
 9034              		.fpu neon
 9036              	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run:
 9037              	.LFB88:
1729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9038              		.loc 1 1729 0
 9039              		.cfi_startproc
 9040              		@ args = 0, pretend = 0, frame = 0
 9041              		@ frame_needed = 0, uses_anonymous_args = 0
 9042 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9043              		.cfi_def_cfa_offset 24
 9044              		.cfi_offset 14, -4
1729:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9045              		.loc 1 1729 0
 9046 0004 C13600E3 		movw	r3, #1729
 9047 0008 0C308DE5 		str	r3, [sp, #12]
 9048 000c 2C309FE5 		ldr	r3, .L561
 9049 0010 2C209FE5 		ldr	r2, .L561+4
 9050 0014 2C109FE5 		ldr	r1, .L561+8
 9051 0018 08308DE5 		str	r3, [sp, #8]
 9052 001c 28309FE5 		ldr	r3, .L561+12
 9053 0020 28009FE5 		ldr	r0, .L561+16
 9054 0024 04308DE5 		str	r3, [sp, #4]
 9055 0028 24309FE5 		ldr	r3, .L561+20
 9056 002c 00308DE5 		str	r3, [sp]
 9057 0030 20309FE5 		ldr	r3, .L561+24
 9058 0034 FEFFFFEB 		bl	UnityTestRunner
 9059              	.LVL965:
 9060 0038 14D08DE2 		add	sp, sp, #20
 9061              		.cfi_def_cfa_offset 4
 9062              		@ sp needed
 9063 003c 04F09DE4 		ldr	pc, [sp], #4
 9064              	.L562:
 9065              		.align	2
 9066              	.L561:
 9067 0040 30000000 		.word	.LC96
 9068 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9069 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_
 9070 004c 37000000 		.word	.LC152
 9071 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9072 0054 A0000000 		.word	.LC98
 9073 0058 00000000 		.word	.LC151
 9074              		.cfi_endproc
 9075              	.LFE88:
 9077              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run,"ax",%progbits
 9078              		.align	2
 9079              		.global	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run
 9080              		.syntax unified
 9081              		.arm
 9082              		.fpu neon
 9084              	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run:
 9085              	.LFB91:
1793:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9086              		.loc 1 1793 0
 9087              		.cfi_startproc
 9088              		@ args = 0, pretend = 0, frame = 0
 9089              		@ frame_needed = 0, uses_anonymous_args = 0
 9090 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9091              		.cfi_def_cfa_offset 24
 9092              		.cfi_offset 14, -4
1793:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9093              		.loc 1 1793 0
 9094 0004 013700E3 		movw	r3, #1793
 9095 0008 0C308DE5 		str	r3, [sp, #12]
 9096 000c 2C309FE5 		ldr	r3, .L565
 9097 0010 2C209FE5 		ldr	r2, .L565+4
 9098 0014 2C109FE5 		ldr	r1, .L565+8
 9099 0018 08308DE5 		str	r3, [sp, #8]
 9100 001c 28309FE5 		ldr	r3, .L565+12
 9101 0020 28009FE5 		ldr	r0, .L565+16
 9102 0024 04308DE5 		str	r3, [sp, #4]
 9103 0028 24309FE5 		ldr	r3, .L565+20
 9104 002c 00308DE5 		str	r3, [sp]
 9105 0030 20309FE5 		ldr	r3, .L565+24
 9106 0034 FEFFFFEB 		bl	UnityTestRunner
 9107              	.LVL966:
 9108 0038 14D08DE2 		add	sp, sp, #20
 9109              		.cfi_def_cfa_offset 4
 9110              		@ sp needed
 9111 003c 04F09DE4 		ldr	pc, [sp], #4
 9112              	.L566:
 9113              		.align	2
 9114              	.L565:
 9115 0040 30000000 		.word	.LC96
 9116 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9117 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_
 9118 004c 3A000000 		.word	.LC154
 9119 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9120 0054 A0000000 		.word	.LC98
 9121 0058 00000000 		.word	.LC153
 9122              		.cfi_endproc
 9123              	.LFE91:
 9125              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run,"ax",%progbits
 9126              		.align	2
 9127              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run
 9128              		.syntax unified
 9129              		.arm
 9130              		.fpu neon
 9132              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run:
 9133              	.LFB93:
1800:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9134              		.loc 1 1800 0
 9135              		.cfi_startproc
 9136              		@ args = 0, pretend = 0, frame = 0
 9137              		@ frame_needed = 0, uses_anonymous_args = 0
 9138 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9139              		.cfi_def_cfa_offset 24
 9140              		.cfi_offset 14, -4
1800:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9141              		.loc 1 1800 0
 9142 0004 083700E3 		movw	r3, #1800
 9143 0008 0C308DE5 		str	r3, [sp, #12]
 9144 000c 2C309FE5 		ldr	r3, .L569
 9145 0010 2C209FE5 		ldr	r2, .L569+4
 9146 0014 2C109FE5 		ldr	r1, .L569+8
 9147 0018 08308DE5 		str	r3, [sp, #8]
 9148 001c 28309FE5 		ldr	r3, .L569+12
 9149 0020 28009FE5 		ldr	r0, .L569+16
 9150 0024 04308DE5 		str	r3, [sp, #4]
 9151 0028 24309FE5 		ldr	r3, .L569+20
 9152 002c 00308DE5 		str	r3, [sp]
 9153 0030 20309FE5 		ldr	r3, .L569+24
 9154 0034 FEFFFFEB 		bl	UnityTestRunner
 9155              	.LVL967:
 9156 0038 14D08DE2 		add	sp, sp, #20
 9157              		.cfi_def_cfa_offset 4
 9158              		@ sp needed
 9159 003c 04F09DE4 		ldr	pc, [sp], #4
 9160              	.L570:
 9161              		.align	2
 9162              	.L569:
 9163 0040 30000000 		.word	.LC96
 9164 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9165 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_
 9166 004c 41000000 		.word	.LC156
 9167 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9168 0054 A0000000 		.word	.LC98
 9169 0058 00000000 		.word	.LC155
 9170              		.cfi_endproc
 9171              	.LFE93:
 9173              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run,"ax",%progbits
 9174              		.align	2
 9175              		.global	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run
 9176              		.syntax unified
 9177              		.arm
 9178              		.fpu neon
 9180              	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run:
 9181              	.LFB96:
1869:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9182              		.loc 1 1869 0
 9183              		.cfi_startproc
 9184              		@ args = 0, pretend = 0, frame = 0
 9185              		@ frame_needed = 0, uses_anonymous_args = 0
 9186 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9187              		.cfi_def_cfa_offset 24
 9188              		.cfi_offset 14, -4
1869:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9189              		.loc 1 1869 0
 9190 0004 4D3700E3 		movw	r3, #1869
 9191 0008 0C308DE5 		str	r3, [sp, #12]
 9192 000c 2C309FE5 		ldr	r3, .L573
 9193 0010 2C209FE5 		ldr	r2, .L573+4
 9194 0014 2C109FE5 		ldr	r1, .L573+8
 9195 0018 08308DE5 		str	r3, [sp, #8]
 9196 001c 28309FE5 		ldr	r3, .L573+12
 9197 0020 28009FE5 		ldr	r0, .L573+16
 9198 0024 04308DE5 		str	r3, [sp, #4]
 9199 0028 24309FE5 		ldr	r3, .L573+20
 9200 002c 00308DE5 		str	r3, [sp]
 9201 0030 20309FE5 		ldr	r3, .L573+24
 9202 0034 FEFFFFEB 		bl	UnityTestRunner
 9203              	.LVL968:
 9204 0038 14D08DE2 		add	sp, sp, #20
 9205              		.cfi_def_cfa_offset 4
 9206              		@ sp needed
 9207 003c 04F09DE4 		ldr	pc, [sp], #4
 9208              	.L574:
 9209              		.align	2
 9210              	.L573:
 9211 0040 30000000 		.word	.LC96
 9212 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9213 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_
 9214 004c 33000000 		.word	.LC158
 9215 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9216 0054 A0000000 		.word	.LC98
 9217 0058 00000000 		.word	.LC157
 9218              		.cfi_endproc
 9219              	.LFE96:
 9221              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run,"ax",%progbits
 9222              		.align	2
 9223              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run
 9224              		.syntax unified
 9225              		.arm
 9226              		.fpu neon
 9228              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run:
 9229              	.LFB98:
1876:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9230              		.loc 1 1876 0
 9231              		.cfi_startproc
 9232              		@ args = 0, pretend = 0, frame = 0
 9233              		@ frame_needed = 0, uses_anonymous_args = 0
 9234 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9235              		.cfi_def_cfa_offset 24
 9236              		.cfi_offset 14, -4
1876:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9237              		.loc 1 1876 0
 9238 0004 543700E3 		movw	r3, #1876
 9239 0008 0C308DE5 		str	r3, [sp, #12]
 9240 000c 2C309FE5 		ldr	r3, .L577
 9241 0010 2C209FE5 		ldr	r2, .L577+4
 9242 0014 2C109FE5 		ldr	r1, .L577+8
 9243 0018 08308DE5 		str	r3, [sp, #8]
 9244 001c 28309FE5 		ldr	r3, .L577+12
 9245 0020 28009FE5 		ldr	r0, .L577+16
 9246 0024 04308DE5 		str	r3, [sp, #4]
 9247 0028 24309FE5 		ldr	r3, .L577+20
 9248 002c 00308DE5 		str	r3, [sp]
 9249 0030 20309FE5 		ldr	r3, .L577+24
 9250 0034 FEFFFFEB 		bl	UnityTestRunner
 9251              	.LVL969:
 9252 0038 14D08DE2 		add	sp, sp, #20
 9253              		.cfi_def_cfa_offset 4
 9254              		@ sp needed
 9255 003c 04F09DE4 		ldr	pc, [sp], #4
 9256              	.L578:
 9257              		.align	2
 9258              	.L577:
 9259 0040 30000000 		.word	.LC96
 9260 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9261 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_
 9262 004c 3A000000 		.word	.LC160
 9263 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9264 0054 A0000000 		.word	.LC98
 9265 0058 00000000 		.word	.LC159
 9266              		.cfi_endproc
 9267              	.LFE98:
 9269              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run,"ax",%progbits
 9270              		.align	2
 9271              		.global	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run
 9272              		.syntax unified
 9273              		.arm
 9274              		.fpu neon
 9276              	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run:
 9277              	.LFB101:
1948:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9278              		.loc 1 1948 0
 9279              		.cfi_startproc
 9280              		@ args = 0, pretend = 0, frame = 0
 9281              		@ frame_needed = 0, uses_anonymous_args = 0
 9282 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9283              		.cfi_def_cfa_offset 24
 9284              		.cfi_offset 14, -4
1948:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9285              		.loc 1 1948 0
 9286 0004 9C3700E3 		movw	r3, #1948
 9287 0008 0C308DE5 		str	r3, [sp, #12]
 9288 000c 2C309FE5 		ldr	r3, .L581
 9289 0010 2C209FE5 		ldr	r2, .L581+4
 9290 0014 2C109FE5 		ldr	r1, .L581+8
 9291 0018 08308DE5 		str	r3, [sp, #8]
 9292 001c 28309FE5 		ldr	r3, .L581+12
 9293 0020 28009FE5 		ldr	r0, .L581+16
 9294 0024 04308DE5 		str	r3, [sp, #4]
 9295 0028 24309FE5 		ldr	r3, .L581+20
 9296 002c 00308DE5 		str	r3, [sp]
 9297 0030 20309FE5 		ldr	r3, .L581+24
 9298 0034 FEFFFFEB 		bl	UnityTestRunner
 9299              	.LVL970:
 9300 0038 14D08DE2 		add	sp, sp, #20
 9301              		.cfi_def_cfa_offset 4
 9302              		@ sp needed
 9303 003c 04F09DE4 		ldr	pc, [sp], #4
 9304              	.L582:
 9305              		.align	2
 9306              	.L581:
 9307 0040 30000000 		.word	.LC96
 9308 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9309 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_
 9310 004c 3A000000 		.word	.LC162
 9311 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9312 0054 A0000000 		.word	.LC98
 9313 0058 00000000 		.word	.LC161
 9314              		.cfi_endproc
 9315              	.LFE101:
 9317              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run,"ax",%progbits
 9318              		.align	2
 9319              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run
 9320              		.syntax unified
 9321              		.arm
 9322              		.fpu neon
 9324              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run:
 9325              	.LFB103:
1962:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9326              		.loc 1 1962 0
 9327              		.cfi_startproc
 9328              		@ args = 0, pretend = 0, frame = 0
 9329              		@ frame_needed = 0, uses_anonymous_args = 0
 9330 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9331              		.cfi_def_cfa_offset 24
 9332              		.cfi_offset 14, -4
1962:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9333              		.loc 1 1962 0
 9334 0004 AA3700E3 		movw	r3, #1962
 9335 0008 0C308DE5 		str	r3, [sp, #12]
 9336 000c 2C309FE5 		ldr	r3, .L585
 9337 0010 2C209FE5 		ldr	r2, .L585+4
 9338 0014 2C109FE5 		ldr	r1, .L585+8
 9339 0018 08308DE5 		str	r3, [sp, #8]
 9340 001c 28309FE5 		ldr	r3, .L585+12
 9341 0020 28009FE5 		ldr	r0, .L585+16
 9342 0024 04308DE5 		str	r3, [sp, #4]
 9343 0028 24309FE5 		ldr	r3, .L585+20
 9344 002c 00308DE5 		str	r3, [sp]
 9345 0030 20309FE5 		ldr	r3, .L585+24
 9346 0034 FEFFFFEB 		bl	UnityTestRunner
 9347              	.LVL971:
 9348 0038 14D08DE2 		add	sp, sp, #20
 9349              		.cfi_def_cfa_offset 4
 9350              		@ sp needed
 9351 003c 04F09DE4 		ldr	pc, [sp], #4
 9352              	.L586:
 9353              		.align	2
 9354              	.L585:
 9355 0040 30000000 		.word	.LC96
 9356 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9357 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_
 9358 004c 41000000 		.word	.LC164
 9359 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9360 0054 A0000000 		.word	.LC98
 9361 0058 00000000 		.word	.LC163
 9362              		.cfi_endproc
 9363              	.LFE103:
 9365              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run,"ax",%progbits
 9366              		.align	2
 9367              		.global	TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run
 9368              		.syntax unified
 9369              		.arm
 9370              		.fpu neon
 9372              	TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run:
 9373              	.LFB106:
2031:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9374              		.loc 1 2031 0
 9375              		.cfi_startproc
 9376              		@ args = 0, pretend = 0, frame = 0
 9377              		@ frame_needed = 0, uses_anonymous_args = 0
 9378 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9379              		.cfi_def_cfa_offset 24
 9380              		.cfi_offset 14, -4
2031:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9381              		.loc 1 2031 0
 9382 0004 EF3700E3 		movw	r3, #2031
 9383 0008 0C308DE5 		str	r3, [sp, #12]
 9384 000c 2C309FE5 		ldr	r3, .L589
 9385 0010 2C209FE5 		ldr	r2, .L589+4
 9386 0014 2C109FE5 		ldr	r1, .L589+8
 9387 0018 08308DE5 		str	r3, [sp, #8]
 9388 001c 28309FE5 		ldr	r3, .L589+12
 9389 0020 28009FE5 		ldr	r0, .L589+16
 9390 0024 04308DE5 		str	r3, [sp, #4]
 9391 0028 24309FE5 		ldr	r3, .L589+20
 9392 002c 00308DE5 		str	r3, [sp]
 9393 0030 20309FE5 		ldr	r3, .L589+24
 9394 0034 FEFFFFEB 		bl	UnityTestRunner
 9395              	.LVL972:
 9396 0038 14D08DE2 		add	sp, sp, #20
 9397              		.cfi_def_cfa_offset 4
 9398              		@ sp needed
 9399 003c 04F09DE4 		ldr	pc, [sp], #4
 9400              	.L590:
 9401              		.align	2
 9402              	.L589:
 9403 0040 30000000 		.word	.LC96
 9404 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9405 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_
 9406 004c 2A000000 		.word	.LC166
 9407 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9408 0054 A0000000 		.word	.LC98
 9409 0058 00000000 		.word	.LC165
 9410              		.cfi_endproc
 9411              	.LFE106:
 9413              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run,"ax",%progbits
 9414              		.align	2
 9415              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run
 9416              		.syntax unified
 9417              		.arm
 9418              		.fpu neon
 9420              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run:
 9421              	.LFB108:
2038:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9422              		.loc 1 2038 0
 9423              		.cfi_startproc
 9424              		@ args = 0, pretend = 0, frame = 0
 9425              		@ frame_needed = 0, uses_anonymous_args = 0
 9426 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9427              		.cfi_def_cfa_offset 24
 9428              		.cfi_offset 14, -4
2038:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9429              		.loc 1 2038 0
 9430 0004 F63700E3 		movw	r3, #2038
 9431 0008 0C308DE5 		str	r3, [sp, #12]
 9432 000c 2C309FE5 		ldr	r3, .L593
 9433 0010 2C209FE5 		ldr	r2, .L593+4
 9434 0014 2C109FE5 		ldr	r1, .L593+8
 9435 0018 08308DE5 		str	r3, [sp, #8]
 9436 001c 28309FE5 		ldr	r3, .L593+12
 9437 0020 28009FE5 		ldr	r0, .L593+16
 9438 0024 04308DE5 		str	r3, [sp, #4]
 9439 0028 24309FE5 		ldr	r3, .L593+20
 9440 002c 00308DE5 		str	r3, [sp]
 9441 0030 20309FE5 		ldr	r3, .L593+24
 9442 0034 FEFFFFEB 		bl	UnityTestRunner
 9443              	.LVL973:
 9444 0038 14D08DE2 		add	sp, sp, #20
 9445              		.cfi_def_cfa_offset 4
 9446              		@ sp needed
 9447 003c 04F09DE4 		ldr	pc, [sp], #4
 9448              	.L594:
 9449              		.align	2
 9450              	.L593:
 9451 0040 30000000 		.word	.LC96
 9452 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9453 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_
 9454 004c 31000000 		.word	.LC168
 9455 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9456 0054 A0000000 		.word	.LC98
 9457 0058 00000000 		.word	.LC167
 9458              		.cfi_endproc
 9459              	.LFE108:
 9461              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run,"ax",%progbits
 9462              		.align	2
 9463              		.global	TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run
 9464              		.syntax unified
 9465              		.arm
 9466              		.fpu neon
 9468              	TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run:
 9469              	.LFB111:
2070:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9470              		.loc 1 2070 0
 9471              		.cfi_startproc
 9472              		@ args = 0, pretend = 0, frame = 0
 9473              		@ frame_needed = 0, uses_anonymous_args = 0
 9474 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9475              		.cfi_def_cfa_offset 24
 9476              		.cfi_offset 14, -4
2070:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9477              		.loc 1 2070 0
 9478 0004 163800E3 		movw	r3, #2070
 9479 0008 0C308DE5 		str	r3, [sp, #12]
 9480 000c 2C309FE5 		ldr	r3, .L597
 9481 0010 2C209FE5 		ldr	r2, .L597+4
 9482 0014 2C109FE5 		ldr	r1, .L597+8
 9483 0018 08308DE5 		str	r3, [sp, #8]
 9484 001c 28309FE5 		ldr	r3, .L597+12
 9485 0020 28009FE5 		ldr	r0, .L597+16
 9486 0024 04308DE5 		str	r3, [sp, #4]
 9487 0028 24309FE5 		ldr	r3, .L597+20
 9488 002c 00308DE5 		str	r3, [sp]
 9489 0030 20309FE5 		ldr	r3, .L597+24
 9490 0034 FEFFFFEB 		bl	UnityTestRunner
 9491              	.LVL974:
 9492 0038 14D08DE2 		add	sp, sp, #20
 9493              		.cfi_def_cfa_offset 4
 9494              		@ sp needed
 9495 003c 04F09DE4 		ldr	pc, [sp], #4
 9496              	.L598:
 9497              		.align	2
 9498              	.L597:
 9499 0040 30000000 		.word	.LC96
 9500 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9501 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_
 9502 004c 2A000000 		.word	.LC170
 9503 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9504 0054 A0000000 		.word	.LC98
 9505 0058 00000000 		.word	.LC169
 9506              		.cfi_endproc
 9507              	.LFE111:
 9509              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run,"ax",%progbits
 9510              		.align	2
 9511              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run
 9512              		.syntax unified
 9513              		.arm
 9514              		.fpu neon
 9516              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run:
 9517              	.LFB113:
2077:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9518              		.loc 1 2077 0
 9519              		.cfi_startproc
 9520              		@ args = 0, pretend = 0, frame = 0
 9521              		@ frame_needed = 0, uses_anonymous_args = 0
 9522 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9523              		.cfi_def_cfa_offset 24
 9524              		.cfi_offset 14, -4
2077:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9525              		.loc 1 2077 0
 9526 0004 1D3800E3 		movw	r3, #2077
 9527 0008 0C308DE5 		str	r3, [sp, #12]
 9528 000c 2C309FE5 		ldr	r3, .L601
 9529 0010 2C209FE5 		ldr	r2, .L601+4
 9530 0014 2C109FE5 		ldr	r1, .L601+8
 9531 0018 08308DE5 		str	r3, [sp, #8]
 9532 001c 28309FE5 		ldr	r3, .L601+12
 9533 0020 28009FE5 		ldr	r0, .L601+16
 9534 0024 04308DE5 		str	r3, [sp, #4]
 9535 0028 24309FE5 		ldr	r3, .L601+20
 9536 002c 00308DE5 		str	r3, [sp]
 9537 0030 20309FE5 		ldr	r3, .L601+24
 9538 0034 FEFFFFEB 		bl	UnityTestRunner
 9539              	.LVL975:
 9540 0038 14D08DE2 		add	sp, sp, #20
 9541              		.cfi_def_cfa_offset 4
 9542              		@ sp needed
 9543 003c 04F09DE4 		ldr	pc, [sp], #4
 9544              	.L602:
 9545              		.align	2
 9546              	.L601:
 9547 0040 30000000 		.word	.LC96
 9548 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9549 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_
 9550 004c 31000000 		.word	.LC172
 9551 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9552 0054 A0000000 		.word	.LC98
 9553 0058 00000000 		.word	.LC171
 9554              		.cfi_endproc
 9555              	.LFE113:
 9557              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run,"ax",%progb
 9558              		.align	2
 9559              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run
 9560              		.syntax unified
 9561              		.arm
 9562              		.fpu neon
 9564              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run:
 9565              	.LFB116:
2153:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9566              		.loc 1 2153 0
 9567              		.cfi_startproc
 9568              		@ args = 0, pretend = 0, frame = 0
 9569              		@ frame_needed = 0, uses_anonymous_args = 0
 9570 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9571              		.cfi_def_cfa_offset 24
 9572              		.cfi_offset 14, -4
2153:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9573              		.loc 1 2153 0
 9574 0004 693800E3 		movw	r3, #2153
 9575 0008 0C308DE5 		str	r3, [sp, #12]
 9576 000c 2C309FE5 		ldr	r3, .L605
 9577 0010 2C209FE5 		ldr	r2, .L605+4
 9578 0014 2C109FE5 		ldr	r1, .L605+8
 9579 0018 08308DE5 		str	r3, [sp, #8]
 9580 001c 28309FE5 		ldr	r3, .L605+12
 9581 0020 28009FE5 		ldr	r0, .L605+16
 9582 0024 04308DE5 		str	r3, [sp, #4]
 9583 0028 24309FE5 		ldr	r3, .L605+20
 9584 002c 00308DE5 		str	r3, [sp]
 9585 0030 20309FE5 		ldr	r3, .L605+24
 9586 0034 FEFFFFEB 		bl	UnityTestRunner
 9587              	.LVL976:
 9588 0038 14D08DE2 		add	sp, sp, #20
 9589              		.cfi_def_cfa_offset 4
 9590              		@ sp needed
 9591 003c 04F09DE4 		ldr	pc, [sp], #4
 9592              	.L606:
 9593              		.align	2
 9594              	.L605:
 9595 0040 30000000 		.word	.LC96
 9596 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9597 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_
 9598 004c 46000000 		.word	.LC174
 9599 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9600 0054 A0000000 		.word	.LC98
 9601 0058 00000000 		.word	.LC173
 9602              		.cfi_endproc
 9603              	.LFE116:
 9605              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run,"ax",%p
 9606              		.align	2
 9607              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run
 9608              		.syntax unified
 9609              		.arm
 9610              		.fpu neon
 9612              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run:
 9613              	.LFB119:
2205:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9614              		.loc 1 2205 0
 9615              		.cfi_startproc
 9616              		@ args = 0, pretend = 0, frame = 0
 9617              		@ frame_needed = 0, uses_anonymous_args = 0
 9618 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9619              		.cfi_def_cfa_offset 24
 9620              		.cfi_offset 14, -4
2205:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9621              		.loc 1 2205 0
 9622 0004 9D3800E3 		movw	r3, #2205
 9623 0008 0C308DE5 		str	r3, [sp, #12]
 9624 000c 2C309FE5 		ldr	r3, .L609
 9625 0010 2C209FE5 		ldr	r2, .L609+4
 9626 0014 2C109FE5 		ldr	r1, .L609+8
 9627 0018 08308DE5 		str	r3, [sp, #8]
 9628 001c 28309FE5 		ldr	r3, .L609+12
 9629 0020 28009FE5 		ldr	r0, .L609+16
 9630 0024 04308DE5 		str	r3, [sp, #4]
 9631 0028 24309FE5 		ldr	r3, .L609+20
 9632 002c 00308DE5 		str	r3, [sp]
 9633 0030 20309FE5 		ldr	r3, .L609+24
 9634 0034 FEFFFFEB 		bl	UnityTestRunner
 9635              	.LVL977:
 9636 0038 14D08DE2 		add	sp, sp, #20
 9637              		.cfi_def_cfa_offset 4
 9638              		@ sp needed
 9639 003c 04F09DE4 		ldr	pc, [sp], #4
 9640              	.L610:
 9641              		.align	2
 9642              	.L609:
 9643 0040 30000000 		.word	.LC96
 9644 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9645 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_
 9646 004c 4A000000 		.word	.LC176
 9647 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9648 0054 A0000000 		.word	.LC98
 9649 0058 00000000 		.word	.LC175
 9650              		.cfi_endproc
 9651              	.LFE119:
 9653              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run,"ax",%progbits
 9654              		.align	2
 9655              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run
 9656              		.syntax unified
 9657              		.arm
 9658              		.fpu neon
 9660              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run:
 9661              	.LFB122:
2256:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9662              		.loc 1 2256 0
 9663              		.cfi_startproc
 9664              		@ args = 0, pretend = 0, frame = 0
 9665              		@ frame_needed = 0, uses_anonymous_args = 0
 9666 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9667              		.cfi_def_cfa_offset 24
 9668              		.cfi_offset 14, -4
2256:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9669              		.loc 1 2256 0
 9670 0004 8D3EA0E3 		mov	r3, #2256
 9671 0008 0C308DE5 		str	r3, [sp, #12]
 9672 000c 2C309FE5 		ldr	r3, .L613
 9673 0010 2C209FE5 		ldr	r2, .L613+4
 9674 0014 2C109FE5 		ldr	r1, .L613+8
 9675 0018 08308DE5 		str	r3, [sp, #8]
 9676 001c 28309FE5 		ldr	r3, .L613+12
 9677 0020 28009FE5 		ldr	r0, .L613+16
 9678 0024 04308DE5 		str	r3, [sp, #4]
 9679 0028 24309FE5 		ldr	r3, .L613+20
 9680 002c 00308DE5 		str	r3, [sp]
 9681 0030 20309FE5 		ldr	r3, .L613+24
 9682 0034 FEFFFFEB 		bl	UnityTestRunner
 9683              	.LVL978:
 9684 0038 14D08DE2 		add	sp, sp, #20
 9685              		.cfi_def_cfa_offset 4
 9686              		@ sp needed
 9687 003c 04F09DE4 		ldr	pc, [sp], #4
 9688              	.L614:
 9689              		.align	2
 9690              	.L613:
 9691 0040 30000000 		.word	.LC96
 9692 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9693 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_
 9694 004c 35000000 		.word	.LC178
 9695 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9696 0054 A0000000 		.word	.LC98
 9697 0058 00000000 		.word	.LC177
 9698              		.cfi_endproc
 9699              	.LFE122:
 9701              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run,"ax",%progbits
 9702              		.align	2
 9703              		.global	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run
 9704              		.syntax unified
 9705              		.arm
 9706              		.fpu neon
 9708              	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:
 9709              	.LFB125:
2398:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9710              		.loc 1 2398 0
 9711              		.cfi_startproc
 9712              		@ args = 0, pretend = 0, frame = 0
 9713              		@ frame_needed = 0, uses_anonymous_args = 0
 9714 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9715              		.cfi_def_cfa_offset 24
 9716              		.cfi_offset 14, -4
2398:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9717              		.loc 1 2398 0
 9718 0004 5E3900E3 		movw	r3, #2398
 9719 0008 0C308DE5 		str	r3, [sp, #12]
 9720 000c 2C309FE5 		ldr	r3, .L617
 9721 0010 2C209FE5 		ldr	r2, .L617+4
 9722 0014 2C109FE5 		ldr	r1, .L617+8
 9723 0018 08308DE5 		str	r3, [sp, #8]
 9724 001c 28309FE5 		ldr	r3, .L617+12
 9725 0020 28009FE5 		ldr	r0, .L617+16
 9726 0024 04308DE5 		str	r3, [sp, #4]
 9727 0028 24309FE5 		ldr	r3, .L617+20
 9728 002c 00308DE5 		str	r3, [sp]
 9729 0030 20309FE5 		ldr	r3, .L617+24
 9730 0034 FEFFFFEB 		bl	UnityTestRunner
 9731              	.LVL979:
 9732 0038 14D08DE2 		add	sp, sp, #20
 9733              		.cfi_def_cfa_offset 4
 9734              		@ sp needed
 9735 003c 04F09DE4 		ldr	pc, [sp], #4
 9736              	.L618:
 9737              		.align	2
 9738              	.L617:
 9739 0040 30000000 		.word	.LC96
 9740 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9741 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_
 9742 004c 41000000 		.word	.LC180
 9743 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9744 0054 A0000000 		.word	.LC98
 9745 0058 00000000 		.word	.LC179
 9746              		.cfi_endproc
 9747              	.LFE125:
 9749              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run,"ax",%pro
 9750              		.align	2
 9751              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run
 9752              		.syntax unified
 9753              		.arm
 9754              		.fpu neon
 9756              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:
 9757              	.LFB127:
2405:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9758              		.loc 1 2405 0
 9759              		.cfi_startproc
 9760              		@ args = 0, pretend = 0, frame = 0
 9761              		@ frame_needed = 0, uses_anonymous_args = 0
 9762 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 9763              		.cfi_def_cfa_offset 24
 9764              		.cfi_offset 14, -4
2405:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 9765              		.loc 1 2405 0
 9766 0004 653900E3 		movw	r3, #2405
 9767 0008 0C308DE5 		str	r3, [sp, #12]
 9768 000c 2C309FE5 		ldr	r3, .L621
 9769 0010 2C209FE5 		ldr	r2, .L621+4
 9770 0014 2C109FE5 		ldr	r1, .L621+8
 9771 0018 08308DE5 		str	r3, [sp, #8]
 9772 001c 28309FE5 		ldr	r3, .L621+12
 9773 0020 28009FE5 		ldr	r0, .L621+16
 9774 0024 04308DE5 		str	r3, [sp, #4]
 9775 0028 24309FE5 		ldr	r3, .L621+20
 9776 002c 00308DE5 		str	r3, [sp]
 9777 0030 20309FE5 		ldr	r3, .L621+24
 9778 0034 FEFFFFEB 		bl	UnityTestRunner
 9779              	.LVL980:
 9780 0038 14D08DE2 		add	sp, sp, #20
 9781              		.cfi_def_cfa_offset 4
 9782              		@ sp needed
 9783 003c 04F09DE4 		ldr	pc, [sp], #4
 9784              	.L622:
 9785              		.align	2
 9786              	.L621:
 9787 0040 30000000 		.word	.LC96
 9788 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 9789 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_
 9790 004c 48000000 		.word	.LC182
 9791 0050 00000000 		.word	TEST_Full_TCP_SETUP
 9792 0054 A0000000 		.word	.LC98
 9793 0058 00000000 		.word	.LC181
 9794              		.cfi_endproc
 9795              	.LFE127:
 9797              		.section	.text.prvStartTCPEchoClientTasks_DifferentSockets,"ax",%progbits
 9798              		.align	2
 9799              		.global	prvStartTCPEchoClientTasks_DifferentSockets
 9800              		.syntax unified
 9801              		.arm
 9802              		.fpu neon
 9804              	prvStartTCPEchoClientTasks_DifferentSockets:
 9805              	.LFB130:
2525:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint16_t usIndex;
 9806              		.loc 1 2525 0
 9807              		.cfi_startproc
 9808              		@ args = 0, pretend = 0, frame = 40
 9809              		@ frame_needed = 0, uses_anonymous_args = 0
 9810              	.LVL981:
 9811 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9812              		.cfi_def_cfa_offset 36
 9813              		.cfi_offset 4, -36
 9814              		.cfi_offset 5, -32
 9815              		.cfi_offset 6, -28
 9816              		.cfi_offset 7, -24
 9817              		.cfi_offset 8, -20
 9818              		.cfi_offset 9, -16
 9819              		.cfi_offset 10, -12
 9820              		.cfi_offset 11, -8
 9821              		.cfi_offset 14, -4
 9822 0004 34D04DE2 		sub	sp, sp, #52
 9823              		.cfi_def_cfa_offset 88
2525:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     uint16_t usIndex;
 9824              		.loc 1 2525 0
 9825 0008 0C008DE5 		str	r0, [sp, #12]
2529:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 9826              		.loc 1 2529 0
 9827 000c 0030A0E3 		mov	r3, #0
2532:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 9828              		.loc 1 2532 0
 9829 0010 74019FE5 		ldr	r0, .L635
 9830              	.LVL982:
2529:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     BaseType_t xResult;
 9831              		.loc 1 2529 0
 9832 0014 14308DE5 		str	r3, [sp, #20]
2532:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 9833              		.loc 1 2532 0
 9834 0018 FEFFFFEB 		bl	setjmp
 9835              	.LVL983:
 9836 001c 004050E2 		subs	r4, r0, #0
 9837 0020 0700000A 		beq	.L624
 9838              	.L633:
2578:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     {
 9839              		.loc 1 2578 0
 9840 0024 14309DE5 		ldr	r3, [sp, #20]
 9841 0028 010053E3 		cmp	r3, #1
 9842 002c 0200001A 		bne	.L623
2580:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     }
 9843              		.loc 1 2580 0
 9844 0030 58319FE5 		ldr	r3, .L635+4
 9845 0034 000093E5 		ldr	r0, [r3]
 9846 0038 FEFFFFEB 		bl	vEventGroupDelete
 9847              	.LVL984:
 9848              	.L623:
2582:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 9849              		.loc 1 2582 0
 9850 003c 34D08DE2 		add	sp, sp, #52
 9851              		.cfi_remember_state
 9852              		.cfi_def_cfa_offset 36
 9853              		@ sp needed
 9854 0040 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9855              	.L624:
 9856              		.cfi_restore_state
2536:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         configASSERT( xSyncEventGroup );
 9857              		.loc 1 2536 0
 9858 0044 44619FE5 		ldr	r6, .L635+4
 9859 0048 FEFFFFEB 		bl	xEventGroupCreate
 9860              	.LVL985:
 9861 004c 000086E5 		str	r0, [r6]
2537:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroupAllocated = pdTRUE;
 9862              		.loc 1 2537 0
 9863 0050 003096E5 		ldr	r3, [r6]
 9864 0054 000053E3 		cmp	r3, #0
 9865 0058 0200001A 		bne	.L627
2537:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         xSyncEventGroupAllocated = pdTRUE;
 9866              		.loc 1 2537 0 is_stmt 0 discriminator 1
 9867 005c 0110A0E3 		mov	r1, #1
 9868 0060 24019FE5 		ldr	r0, .L635
 9869 0064 FEFFFFEB 		bl	longjmp
 9870              	.LVL986:
 9871              	.L627:
2544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xResult = SOCKETS_SOCKET_ERROR;
 9872              		.loc 1 2544 0 is_stmt 1
 9873 0068 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
2538:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 9874              		.loc 1 2538 0
 9875 006c 0150A0E3 		mov	r5, #1
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9876              		.loc 1 2547 0
 9877 0070 1CA19FE5 		ldr	r10, .L635+8
2545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 9878              		.loc 1 2545 0
 9879 0074 00B0E0E3 		mvn	fp, #0
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9880              		.loc 1 2547 0
 9881 0078 18919FE5 		ldr	r9, .L635+12
 9882 007c 022BA0E3 		mov	r2, #2048
2553:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 9883              		.loc 1 2553 0
 9884 0080 14719FE5 		ldr	r7, .L635+16
 9885 0084 1480A0E3 		mov	r8, #20
2544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xResult = SOCKETS_SOCKET_ERROR;
 9886              		.loc 1 2544 0
 9887 0088 1830CDE5 		strb	r3, [sp, #24]
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9888              		.loc 1 2547 0
 9889 008c 20308DE2 		add	r3, sp, #32
 9890 0090 04308DE5 		str	r3, [sp, #4]
 9891 0094 0A10A0E1 		mov	r1, r10
 9892 0098 00408DE5 		str	r4, [sp]
 9893 009c 18308DE2 		add	r3, sp, #24
 9894 00a0 0900A0E1 		mov	r0, r9
2543:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xConn = xConn;
 9895              		.loc 1 2543 0
 9896 00a4 BA41CDE1 		strh	r4, [sp, #26]	@ movhi
2538:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 9897              		.loc 1 2538 0
 9898 00a8 14508DE5 		str	r5, [sp, #20]
 9899              	.LVL987:
2545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 9900              		.loc 1 2545 0
 9901 00ac 1CB08DE5 		str	fp, [sp, #28]
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9902              		.loc 1 2547 0
 9903 00b0 FEFFFFEB 		bl	xTaskCreate
 9904              	.LVL988:
2553:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 9905              		.loc 1 2553 0
 9906 00b4 F93900E3 		movw	r3, #2553
 9907 00b8 0010A0E1 		mov	r1, r0
 9908 00bc 0720A0E1 		mov	r2, r7
 9909 00c0 0500A0E1 		mov	r0, r5
 9910              	.LVL989:
 9911 00c4 00808DE5 		str	r8, [sp]
 9912 00c8 FEFFFFEB 		bl	UnityAssertEqualNumber
 9913              	.LVL990:
2544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xResult = SOCKETS_SOCKET_ERROR;
 9914              		.loc 1 2544 0
 9915 00cc 0C30DDE5 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9916              		.loc 1 2547 0
 9917 00d0 022BA0E3 		mov	r2, #2048
 9918 00d4 00408DE5 		str	r4, [sp]
 9919 00d8 0A10A0E1 		mov	r1, r10
 9920 00dc 0900A0E1 		mov	r0, r9
2543:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xConn = xConn;
 9921              		.loc 1 2543 0
 9922 00e0 B652CDE1 		strh	r5, [sp, #38]	@ movhi
2544:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             xTcptestEchoClientsTaskParams[ usIndex ].xResult = SOCKETS_SOCKET_ERROR;
 9923              		.loc 1 2544 0
 9924 00e4 2430CDE5 		strb	r3, [sp, #36]
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9925              		.loc 1 2547 0
 9926 00e8 2C308DE2 		add	r3, sp, #44
 9927 00ec 04308DE5 		str	r3, [sp, #4]
 9928 00f0 24308DE2 		add	r3, sp, #36
2545:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 9929              		.loc 1 2545 0
 9930 00f4 28B08DE5 		str	fp, [sp, #40]
2547:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                    "ClientTask",                                                /* 
 9931              		.loc 1 2547 0
 9932 00f8 FEFFFFEB 		bl	xTaskCreate
 9933              	.LVL991:
2553:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         }
 9934              		.loc 1 2553 0
 9935 00fc F93900E3 		movw	r3, #2553
 9936 0100 0010A0E1 		mov	r1, r0
 9937 0104 0720A0E1 		mov	r2, r7
 9938 0108 0500A0E1 		mov	r0, r5
 9939              	.LVL992:
 9940 010c 00808DE5 		str	r8, [sp]
 9941 0110 FEFFFFEB 		bl	UnityAssertEqualNumber
 9942              	.LVL993:
2556:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        0,
 9943              		.loc 1 2556 0
 9944 0114 0410A0E1 		mov	r1, r4
 9945 0118 000096E5 		ldr	r0, [r6]
 9946 011c 7C309FE5 		ldr	r3, .L635+20
 9947 0120 0320A0E3 		mov	r2, #3
 9948 0124 FEFFFFEB 		bl	xEventGroupSync
 9949              	.LVL994:
2564:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 9950              		.loc 1 2564 0
 9951 0128 010010E3 		tst	r0, #1
2556:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        0,
 9952              		.loc 1 2556 0
 9953 012c 0040A0E1 		mov	r4, r0
 9954              	.LVL995:
2564:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             {
 9955              		.loc 1 2564 0
 9956 0130 1200000A 		beq	.L628
 9957              	.L631:
 9958              	.LVL996:
 9959 0134 020014E3 		tst	r4, #2
 9960 0138 0100001A 		bne	.L630
2566:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 9961              		.loc 1 2566 0
 9962 013c 2C009DE5 		ldr	r0, [sp, #44]
 9963 0140 FEFFFFEB 		bl	vTaskDelete
 9964              	.LVL997:
 9965              	.L630:
2572:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****                                        xTcptestEchoClientsTaskParams[ usIndex ].xResult,
 9966              		.loc 1 2572 0
 9967 0144 58409FE5 		ldr	r4, .L635+24
 9968 0148 1450A0E3 		mov	r5, #20
 9969 014c 1C109DE5 		ldr	r1, [sp, #28]
 9970 0150 0E3A00E3 		movw	r3, #2574
 9971 0154 00508DE5 		str	r5, [sp]
 9972 0158 0000A0E3 		mov	r0, #0
 9973 015c 0420A0E1 		mov	r2, r4
 9974 0160 FEFFFFEB 		bl	UnityAssertEqualNumber
 9975              	.LVL998:
 9976 0164 00508DE5 		str	r5, [sp]
 9977 0168 0E3A00E3 		movw	r3, #2574
 9978 016c 0420A0E1 		mov	r2, r4
 9979 0170 28109DE5 		ldr	r1, [sp, #40]
 9980 0174 0000A0E3 		mov	r0, #0
 9981 0178 FEFFFFEB 		bl	UnityAssertEqualNumber
 9982              	.LVL999:
 9983 017c A8FFFFEA 		b	.L633
 9984              	.LVL1000:
 9985              	.L628:
2566:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****             }
 9986              		.loc 1 2566 0
 9987 0180 20009DE5 		ldr	r0, [sp, #32]
 9988 0184 FEFFFFEB 		bl	vTaskDelete
 9989              	.LVL1001:
 9990 0188 E9FFFFEA 		b	.L631
 9991              	.L636:
 9992              		.align	2
 9993              	.L635:
 9994 018c 28000000 		.word	Unity+40
 9995 0190 00000000 		.word	.LANCHOR6
 9996 0194 00000000 		.word	.LC183
 9997 0198 00000000 		.word	prvThreadSafeDifferentSocketsDifferentTasks
 9998 019c 0C000000 		.word	.LC67
 9999 01a0 80380100 		.word	80000
 10000 01a4 0B000000 		.word	.LC184
 10001              		.cfi_endproc
 10002              	.LFE130:
 10004              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_,"ax",%progbit
 10005              		.align	2
 10006              		.global	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_
 10007              		.syntax unified
 10008              		.arm
 10009              		.fpu neon
 10011              	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_:
 10012              	.LFB132:
2586:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 10013              		.loc 1 2586 0
 10014              		.cfi_startproc
 10015              		@ args = 0, pretend = 0, frame = 0
 10016              		@ frame_needed = 0, uses_anonymous_args = 0
 10017              		@ link register save eliminated.
2589:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 10018              		.loc 1 2589 0
 10019 0000 0100A0E3 		mov	r0, #1
 10020 0004 FEFFFFEA 		b	prvStartTCPEchoClientTasks_DifferentSockets
 10021              	.LVL1002:
 10022              		.cfi_endproc
 10023              	.LFE132:
 10025              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_,"ax",%
 10026              		.align	2
 10027              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_
 10028              		.syntax unified
 10029              		.arm
 10030              		.fpu neon
 10032              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_:
 10033              	.LFB134:
2593:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     tcptestPRINTF( ( "Starting %s.\r\n", __FUNCTION__ ) );
 10034              		.loc 1 2593 0
 10035              		.cfi_startproc
 10036              		@ args = 0, pretend = 0, frame = 0
 10037              		@ frame_needed = 0, uses_anonymous_args = 0
 10038              		@ link register save eliminated.
2596:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** }
 10039              		.loc 1 2596 0
 10040 0000 0000A0E3 		mov	r0, #0
 10041 0004 FEFFFFEA 		b	prvStartTCPEchoClientTasks_DifferentSockets
 10042              	.LVL1003:
 10043              		.cfi_endproc
 10044              	.LFE134:
 10046              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run,"ax",%prog
 10047              		.align	2
 10048              		.global	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run
 10049              		.syntax unified
 10050              		.arm
 10051              		.fpu neon
 10053              	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:
 10054              	.LFB131:
2585:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10055              		.loc 1 2585 0
 10056              		.cfi_startproc
 10057              		@ args = 0, pretend = 0, frame = 0
 10058              		@ frame_needed = 0, uses_anonymous_args = 0
 10059 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10060              		.cfi_def_cfa_offset 24
 10061              		.cfi_offset 14, -4
2585:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10062              		.loc 1 2585 0
 10063 0004 193A00E3 		movw	r3, #2585
 10064 0008 0C308DE5 		str	r3, [sp, #12]
 10065 000c 2C309FE5 		ldr	r3, .L641
 10066 0010 2C209FE5 		ldr	r2, .L641+4
 10067 0014 2C109FE5 		ldr	r1, .L641+8
 10068 0018 08308DE5 		str	r3, [sp, #8]
 10069 001c 28309FE5 		ldr	r3, .L641+12
 10070 0020 28009FE5 		ldr	r0, .L641+16
 10071 0024 04308DE5 		str	r3, [sp, #4]
 10072 0028 24309FE5 		ldr	r3, .L641+20
 10073 002c 00308DE5 		str	r3, [sp]
 10074 0030 20309FE5 		ldr	r3, .L641+24
 10075 0034 FEFFFFEB 		bl	UnityTestRunner
 10076              	.LVL1004:
 10077 0038 14D08DE2 		add	sp, sp, #20
 10078              		.cfi_def_cfa_offset 4
 10079              		@ sp needed
 10080 003c 04F09DE4 		ldr	pc, [sp], #4
 10081              	.L642:
 10082              		.align	2
 10083              	.L641:
 10084 0040 30000000 		.word	.LC96
 10085 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10086 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_
 10087 004c 47000000 		.word	.LC186
 10088 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10089 0054 A0000000 		.word	.LC98
 10090 0058 00000000 		.word	.LC185
 10091              		.cfi_endproc
 10092              	.LFE131:
 10094              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run,"ax
 10095              		.align	2
 10096              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run
 10097              		.syntax unified
 10098              		.arm
 10099              		.fpu neon
 10101              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:
 10102              	.LFB133:
2592:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10103              		.loc 1 2592 0
 10104              		.cfi_startproc
 10105              		@ args = 0, pretend = 0, frame = 0
 10106              		@ frame_needed = 0, uses_anonymous_args = 0
 10107 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10108              		.cfi_def_cfa_offset 24
 10109              		.cfi_offset 14, -4
2592:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10110              		.loc 1 2592 0
 10111 0004 A23EA0E3 		mov	r3, #2592
 10112 0008 0C308DE5 		str	r3, [sp, #12]
 10113 000c 2C309FE5 		ldr	r3, .L645
 10114 0010 2C209FE5 		ldr	r2, .L645+4
 10115 0014 2C109FE5 		ldr	r1, .L645+8
 10116 0018 08308DE5 		str	r3, [sp, #8]
 10117 001c 28309FE5 		ldr	r3, .L645+12
 10118 0020 28009FE5 		ldr	r0, .L645+16
 10119 0024 04308DE5 		str	r3, [sp, #4]
 10120 0028 24309FE5 		ldr	r3, .L645+20
 10121 002c 00308DE5 		str	r3, [sp]
 10122 0030 20309FE5 		ldr	r3, .L645+24
 10123 0034 FEFFFFEB 		bl	UnityTestRunner
 10124              	.LVL1005:
 10125 0038 14D08DE2 		add	sp, sp, #20
 10126              		.cfi_def_cfa_offset 4
 10127              		@ sp needed
 10128 003c 04F09DE4 		ldr	pc, [sp], #4
 10129              	.L646:
 10130              		.align	2
 10131              	.L645:
 10132 0040 30000000 		.word	.LC96
 10133 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10134 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_
 10135 004c 4E000000 		.word	.LC188
 10136 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10137 0054 A0000000 		.word	.LC98
 10138 0058 00000000 		.word	.LC187
 10139              		.cfi_endproc
 10140              	.LFE133:
 10142              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run,"ax",%progbits
 10143              		.align	2
 10144              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run
 10145              		.syntax unified
 10146              		.arm
 10147              		.fpu neon
 10149              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run:
 10150              	.LFB137:
2761:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10151              		.loc 1 2761 0
 10152              		.cfi_startproc
 10153              		@ args = 0, pretend = 0, frame = 0
 10154              		@ frame_needed = 0, uses_anonymous_args = 0
 10155 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10156              		.cfi_def_cfa_offset 24
 10157              		.cfi_offset 14, -4
2761:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10158              		.loc 1 2761 0
 10159 0004 C93A00E3 		movw	r3, #2761
 10160 0008 0C308DE5 		str	r3, [sp, #12]
 10161 000c 2C309FE5 		ldr	r3, .L649
 10162 0010 2C209FE5 		ldr	r2, .L649+4
 10163 0014 2C109FE5 		ldr	r1, .L649+8
 10164 0018 08308DE5 		str	r3, [sp, #8]
 10165 001c 28309FE5 		ldr	r3, .L649+12
 10166 0020 28009FE5 		ldr	r0, .L649+16
 10167 0024 04308DE5 		str	r3, [sp, #4]
 10168 0028 24309FE5 		ldr	r3, .L649+20
 10169 002c 00308DE5 		str	r3, [sp]
 10170 0030 20309FE5 		ldr	r3, .L649+24
 10171 0034 FEFFFFEB 		bl	UnityTestRunner
 10172              	.LVL1006:
 10173 0038 14D08DE2 		add	sp, sp, #20
 10174              		.cfi_def_cfa_offset 4
 10175              		@ sp needed
 10176 003c 04F09DE4 		ldr	pc, [sp], #4
 10177              	.L650:
 10178              		.align	2
 10179              	.L649:
 10180 0040 30000000 		.word	.LC96
 10181 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10182 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_
 10183 004c 37000000 		.word	.LC190
 10184 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10185 0054 A0000000 		.word	.LC98
 10186 0058 00000000 		.word	.LC189
 10187              		.cfi_endproc
 10188              	.LFE137:
 10190              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run,"ax",%progbits
 10191              		.align	2
 10192              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run
 10193              		.syntax unified
 10194              		.arm
 10195              		.fpu neon
 10197              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run:
 10198              	.LFB140:
2865:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10199              		.loc 1 2865 0
 10200              		.cfi_startproc
 10201              		@ args = 0, pretend = 0, frame = 0
 10202              		@ frame_needed = 0, uses_anonymous_args = 0
 10203 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10204              		.cfi_def_cfa_offset 24
 10205              		.cfi_offset 14, -4
2865:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10206              		.loc 1 2865 0
 10207 0004 313B00E3 		movw	r3, #2865
 10208 0008 0C308DE5 		str	r3, [sp, #12]
 10209 000c 2C309FE5 		ldr	r3, .L653
 10210 0010 2C209FE5 		ldr	r2, .L653+4
 10211 0014 2C109FE5 		ldr	r1, .L653+8
 10212 0018 08308DE5 		str	r3, [sp, #8]
 10213 001c 28309FE5 		ldr	r3, .L653+12
 10214 0020 28009FE5 		ldr	r0, .L653+16
 10215 0024 04308DE5 		str	r3, [sp, #4]
 10216 0028 24309FE5 		ldr	r3, .L653+20
 10217 002c 00308DE5 		str	r3, [sp]
 10218 0030 20309FE5 		ldr	r3, .L653+24
 10219 0034 FEFFFFEB 		bl	UnityTestRunner
 10220              	.LVL1007:
 10221 0038 14D08DE2 		add	sp, sp, #20
 10222              		.cfi_def_cfa_offset 4
 10223              		@ sp needed
 10224 003c 04F09DE4 		ldr	pc, [sp], #4
 10225              	.L654:
 10226              		.align	2
 10227              	.L653:
 10228 0040 30000000 		.word	.LC96
 10229 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10230 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_
 10231 004c 39000000 		.word	.LC192
 10232 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10233 0054 A0000000 		.word	.LC98
 10234 0058 00000000 		.word	.LC191
 10235              		.cfi_endproc
 10236              	.LFE140:
 10238              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run,"ax",%progbits
 10239              		.align	2
 10240              		.global	TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run
 10241              		.syntax unified
 10242              		.arm
 10243              		.fpu neon
 10245              	TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run:
 10246              	.LFB142:
2873:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10247              		.loc 1 2873 0
 10248              		.cfi_startproc
 10249              		@ args = 0, pretend = 0, frame = 0
 10250              		@ frame_needed = 0, uses_anonymous_args = 0
 10251 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10252              		.cfi_def_cfa_offset 24
 10253              		.cfi_offset 14, -4
2873:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10254              		.loc 1 2873 0
 10255 0004 393B00E3 		movw	r3, #2873
 10256 0008 0C308DE5 		str	r3, [sp, #12]
 10257 000c 2C309FE5 		ldr	r3, .L657
 10258 0010 2C209FE5 		ldr	r2, .L657+4
 10259 0014 2C109FE5 		ldr	r1, .L657+8
 10260 0018 08308DE5 		str	r3, [sp, #8]
 10261 001c 28309FE5 		ldr	r3, .L657+12
 10262 0020 28009FE5 		ldr	r0, .L657+16
 10263 0024 04308DE5 		str	r3, [sp, #4]
 10264 0028 24309FE5 		ldr	r3, .L657+20
 10265 002c 00308DE5 		str	r3, [sp]
 10266 0030 20309FE5 		ldr	r3, .L657+24
 10267 0034 FEFFFFEB 		bl	UnityTestRunner
 10268              	.LVL1008:
 10269 0038 14D08DE2 		add	sp, sp, #20
 10270              		.cfi_def_cfa_offset 4
 10271              		@ sp needed
 10272 003c 04F09DE4 		ldr	pc, [sp], #4
 10273              	.L658:
 10274              		.align	2
 10275              	.L657:
 10276 0040 30000000 		.word	.LC96
 10277 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10278 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_
 10279 004c 2D000000 		.word	.LC194
 10280 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10281 0054 A0000000 		.word	.LC98
 10282 0058 00000000 		.word	.LC193
 10283              		.cfi_endproc
 10284              	.LFE142:
 10286              		.section	.text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run,"ax",%progbits
 10287              		.align	2
 10288              		.global	TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run
 10289              		.syntax unified
 10290              		.arm
 10291              		.fpu neon
 10293              	TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run:
 10294              	.LFB144:
2900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10295              		.loc 1 2900 0
 10296              		.cfi_startproc
 10297              		@ args = 0, pretend = 0, frame = 0
 10298              		@ frame_needed = 0, uses_anonymous_args = 0
 10299 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10300              		.cfi_def_cfa_offset 24
 10301              		.cfi_offset 14, -4
2900:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10302              		.loc 1 2900 0
 10303 0004 543B00E3 		movw	r3, #2900
 10304 0008 0C308DE5 		str	r3, [sp, #12]
 10305 000c 2C309FE5 		ldr	r3, .L661
 10306 0010 2C209FE5 		ldr	r2, .L661+4
 10307 0014 2C109FE5 		ldr	r1, .L661+8
 10308 0018 08308DE5 		str	r3, [sp, #8]
 10309 001c 28309FE5 		ldr	r3, .L661+12
 10310 0020 28009FE5 		ldr	r0, .L661+16
 10311 0024 04308DE5 		str	r3, [sp, #4]
 10312 0028 24309FE5 		ldr	r3, .L661+20
 10313 002c 00308DE5 		str	r3, [sp]
 10314 0030 20309FE5 		ldr	r3, .L661+24
 10315 0034 FEFFFFEB 		bl	UnityTestRunner
 10316              	.LVL1009:
 10317 0038 14D08DE2 		add	sp, sp, #20
 10318              		.cfi_def_cfa_offset 4
 10319              		@ sp needed
 10320 003c 04F09DE4 		ldr	pc, [sp], #4
 10321              	.L662:
 10322              		.align	2
 10323              	.L661:
 10324 0040 30000000 		.word	.LC96
 10325 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10326 0048 00000000 		.word	TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_
 10327 004c 37000000 		.word	.LC196
 10328 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10329 0054 A0000000 		.word	.LC98
 10330 0058 00000000 		.word	.LC195
 10331              		.cfi_endproc
 10332              	.LFE144:
 10334              		.section	.text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run,"ax",%progbits
 10335              		.align	2
 10336              		.global	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run
 10337              		.syntax unified
 10338              		.arm
 10339              		.fpu neon
 10341              	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run:
 10342              	.LFB146:
2926:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10343              		.loc 1 2926 0
 10344              		.cfi_startproc
 10345              		@ args = 0, pretend = 0, frame = 0
 10346              		@ frame_needed = 0, uses_anonymous_args = 0
 10347 0000 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 10348              		.cfi_def_cfa_offset 24
 10349              		.cfi_offset 14, -4
2926:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** {
 10350              		.loc 1 2926 0
 10351 0004 6E3B00E3 		movw	r3, #2926
 10352 0008 0C308DE5 		str	r3, [sp, #12]
 10353 000c 2C309FE5 		ldr	r3, .L665
 10354 0010 2C209FE5 		ldr	r2, .L665+4
 10355 0014 2C109FE5 		ldr	r1, .L665+8
 10356 0018 08308DE5 		str	r3, [sp, #8]
 10357 001c 28309FE5 		ldr	r3, .L665+12
 10358 0020 28009FE5 		ldr	r0, .L665+16
 10359 0024 04308DE5 		str	r3, [sp, #4]
 10360 0028 24309FE5 		ldr	r3, .L665+20
 10361 002c 00308DE5 		str	r3, [sp]
 10362 0030 20309FE5 		ldr	r3, .L665+24
 10363 0034 FEFFFFEB 		bl	UnityTestRunner
 10364              	.LVL1010:
 10365 0038 14D08DE2 		add	sp, sp, #20
 10366              		.cfi_def_cfa_offset 4
 10367              		@ sp needed
 10368 003c 04F09DE4 		ldr	pc, [sp], #4
 10369              	.L666:
 10370              		.align	2
 10371              	.L665:
 10372 0040 30000000 		.word	.LC96
 10373 0044 00000000 		.word	TEST_Full_TCP_TEAR_DOWN
 10374 0048 00000000 		.word	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_
 10375 004c 41000000 		.word	.LC198
 10376 0050 00000000 		.word	TEST_Full_TCP_SETUP
 10377 0054 A0000000 		.word	.LC98
 10378 0058 00000000 		.word	.LC197
 10379              		.cfi_endproc
 10380              	.LFE146:
 10382              		.section	.text.TEST_Full_TCP_GROUP_RUNNER,"ax",%progbits
 10383              		.align	2
 10384              		.global	TEST_Full_TCP_GROUP_RUNNER
 10385              		.syntax unified
 10386              		.arm
 10387              		.fpu neon
 10389              	TEST_Full_TCP_GROUP_RUNNER:
 10390              	.LFB18:
 768:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_CloseInvalidParams );
 10391              		.loc 1 768 0
 10392              		.cfi_startproc
 10393              		@ args = 0, pretend = 0, frame = 0
 10394              		@ frame_needed = 0, uses_anonymous_args = 0
 10395 0000 10402DE9 		push	{r4, lr}
 10396              		.cfi_def_cfa_offset 8
 10397              		.cfi_offset 4, -8
 10398              		.cfi_offset 14, -4
 10399              	.LBB368:
 769:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_CloseWithoutReceiving );
 10400              		.loc 1 769 0
 10401 0004 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run
 10402              	.LVL1011:
 10403              	.LBE368:
 10404              	.LBB369:
 770:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_ShutdownInvalidParams );
 10405              		.loc 1 770 0
 10406 0008 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run
 10407              	.LVL1012:
 10408              	.LBE369:
 10409              	.LBB370:
 771:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_ShutdownWithoutReceiving );
 10410              		.loc 1 771 0
 10411 000c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run
 10412              	.LVL1013:
 10413              	.LBE370:
 10414              	.LBB371:
 772:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Recv_On_Unconnected_Socket );
 10415              		.loc 1 772 0
 10416 0010 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run
 10417              	.LVL1014:
 10418              	.LBE371:
 10419              	.LBB372:
 773:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks );
 10420              		.loc 1 773 0
 10421 0014 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run
 10422              	.LVL1015:
 10423              	.LBE372:
 10424              	.LBB373:
 774:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Connect_InvalidParams );
 10425              		.loc 1 774 0
 10426 0018 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run
 10427              	.LVL1016:
 10428              	.LBE373:
 10429              	.LBB374:
 775:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Connect_InvalidAddressLength );
 10430              		.loc 1 775 0
 10431 001c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run
 10432              	.LVL1017:
 10433              	.LBE374:
 10434              	.LBB375:
 776:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks );
 10435              		.loc 1 776 0
 10436 0020 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run
 10437              	.LVL1018:
 10438              	.LBE375:
 10439              	.LBB376:
 777:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Socket_TCP );
 10440              		.loc 1 777 0
 10441 0024 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run
 10442              	.LVL1019:
 10443              	.LBE376:
 10444              	.LBB377:
 778:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_SetSockOpt_RCVTIMEO );
 10445              		.loc 1 778 0
 10446 0028 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run
 10447              	.LVL1020:
 10448              	.LBE377:
 10449              	.LBB378:
 779:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_NonBlocking_Test );
 10450              		.loc 1 779 0
 10451 002c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run
 10452              	.LVL1021:
 10453              	.LBE378:
 10454              	.LBB379:
 780:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_SetSockOpt_InvalidParams );
 10455              		.loc 1 780 0
 10456 0030 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run
 10457              	.LVL1022:
 10458              	.LBE379:
 10459              	.LBB380:
 781:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Shutdown );
 10460              		.loc 1 781 0
 10461 0034 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run
 10462              	.LVL1023:
 10463              	.LBE380:
 10464              	.LBB381:
 782:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Close );
 10465              		.loc 1 782 0
 10466 0038 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run
 10467              	.LVL1024:
 10468              	.LBE381:
 10469              	.LBB382:
 783:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Recv_ByteByByte );
 10470              		.loc 1 783 0
 10471 003c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Close_run
 10472              	.LVL1025:
 10473              	.LBE382:
 10474              	.LBB383:
 784:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_SendRecv_VaryLength );
 10475              		.loc 1 784 0
 10476 0040 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run
 10477              	.LVL1026:
 10478              	.LBE383:
 10479              	.LBB384:
 785:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Socket_InvalidTooManySockets );
 10480              		.loc 1 785 0
 10481 0044 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run
 10482              	.LVL1027:
 10483              	.LBE384:
 10484              	.LBB385:
 786:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Socket_InvalidInputParams );
 10485              		.loc 1 786 0
 10486 0048 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run
 10487              	.LVL1028:
 10488              	.LBE385:
 10489              	.LBB386:
 787:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Send_Invalid );
 10490              		.loc 1 787 0
 10491 004c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run
 10492              	.LVL1029:
 10493              	.LBE386:
 10494              	.LBB387:
 788:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_Recv_Invalid );
 10495              		.loc 1 788 0
 10496 0050 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run
 10497              	.LVL1030:
 10498              	.LBE387:
 10499              	.LBB388:
 789:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_htons_HappyCase );
 10500              		.loc 1 789 0
 10501 0054 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run
 10502              	.LVL1031:
 10503              	.LBE388:
 10504              	.LBB389:
 790:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     RUN_TEST_CASE( Full_TCP, AFQP_SOCKETS_inet_addr_quick_HappyCase );
 10505              		.loc 1 790 0
 10506 0058 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run
 10507              	.LVL1032:
 10508              	.LBE389:
 10509              	.LBB390:
 791:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 10510              		.loc 1 791 0
 10511 005c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run
 10512              	.LVL1033:
 10513              	.LBE390:
 10514              	.LBB391:
 794:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_CloseWithoutReceiving );
 10515              		.loc 1 794 0
 10516 0060 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run
 10517              	.LVL1034:
 10518              	.LBE391:
 10519              	.LBB392:
 795:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_ShutdownInvalidParams );
 10520              		.loc 1 795 0
 10521 0064 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run
 10522              	.LVL1035:
 10523              	.LBE392:
 10524              	.LBB393:
 796:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving );
 10525              		.loc 1 796 0
 10526 0068 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run
 10527              	.LVL1036:
 10528              	.LBE393:
 10529              	.LBB394:
 797:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket );
 10530              		.loc 1 797 0
 10531 006c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run
 10532              	.LVL1037:
 10533              	.LBE394:
 10534              	.LBB395:
 798:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks );
 10535              		.loc 1 798 0
 10536 0070 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run
 10537              	.LVL1038:
 10538              	.LBE395:
 10539              	.LBB396:
 799:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE );
 10540              		.loc 1 799 0
 10541 0074 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run
 10542              	.LVL1039:
 10543              	.LBE396:
 10544              	.LBB397:
 800:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION );
 10545              		.loc 1 800 0
 10546 0078 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run
 10547              	.LVL1040:
 10548              	.LBE397:
 10549              	.LBB398:
 801:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidParams );
 10550              		.loc 1 801 0
 10551 007c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run
 10552              	.LVL1041:
 10553              	.LBE398:
 10554              	.LBB399:
 802:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength );
 10555              		.loc 1 802 0
 10556 0080 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run
 10557              	.LVL1042:
 10558              	.LBE399:
 10559              	.LBB400:
 803:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks );
 10560              		.loc 1 803 0
 10561 0084 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run
 10562              	.LVL1043:
 10563              	.LBE400:
 10564              	.LBB401:
 804:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* SECURE_SOCKETS_Socket_TCP DNE. */
 10565              		.loc 1 804 0
 10566 0088 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run
 10567              	.LVL1044:
 10568              	.LBE401:
 10569              	.LBB402:
 806:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_NonBlocking_Test );
 10570              		.loc 1 806 0
 10571 008c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run
 10572              	.LVL1045:
 10573              	.LBE402:
 10574              	.LBB403:
 807:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams );
 10575              		.loc 1 807 0
 10576 0090 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run
 10577              	.LVL1046:
 10578              	.LBE403:
 10579              	.LBB404:
 808:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Shutdown );
 10580              		.loc 1 808 0
 10581 0094 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run
 10582              	.LVL1047:
 10583              	.LBE404:
 10584              	.LBB405:
 809:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Close );
 10585              		.loc 1 809 0
 10586 0098 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run
 10587              	.LVL1048:
 10588              	.LBE405:
 10589              	.LBB406:
 810:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Recv_ByteByByte );
 10590              		.loc 1 810 0
 10591 009c FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run
 10592              	.LVL1049:
 10593              	.LBE406:
 10594              	.LBB407:
 811:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SendRecv_VaryLength );
 10595              		.loc 1 811 0
 10596 00a0 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run
 10597              	.LVL1050:
 10598              	.LBE407:
 10599              	.LBB408:
 812:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         /* SECURE_SOCKETS_Socket_InvalidTooManySockets has not been implemented. */
 10600              		.loc 1 812 0
 10601 00a4 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run
 10602              	.LVL1051:
 10603              	.LBE408:
 10604              	.LBB409:
 815:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_Recv_Invalid );
 10605              		.loc 1 815 0
 10606 00a8 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run
 10607              	.LVL1052:
 10608              	.LBE409:
 10609              	.LBB410:
 816:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SockEventHandler );
 10610              		.loc 1 816 0
 10611 00ac FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run
 10612              	.LVL1053:
 10613              	.LBE410:
 10614              	.LBB411:
 817:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_NonBlockingConnect );
 10615              		.loc 1 817 0
 10616 00b0 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run
 10617              	.LVL1054:
 10618              	.LBE411:
 10619              	.LBB412:
 818:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_TwoSecureConnections );
 10620              		.loc 1 818 0
 10621 00b4 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run
 10622              	.LVL1055:
 10623              	.LBE412:
 10624              	.LBB413:
 819:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****         RUN_TEST_CASE( Full_TCP, AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect );
 10625              		.loc 1 819 0
 10626 00b8 FEFFFFEB 		bl	TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run
 10627              	.LVL1056:
 10628              	.LBE413:
 822:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c **** 
 10629              		.loc 1 822 0
 10630 00bc 1040BDE8 		pop	{r4, lr}
 10631              		.cfi_restore 14
 10632              		.cfi_restore 4
 10633              		.cfi_def_cfa_offset 0
 10634              	.LBB414:
 820:D:/Work/DeviceTester/amazon-freertos/tests/common/secure_sockets\aws_test_tcp.c ****     #endif /* if ( tcptestSECURE_SERVER == 1 ) */
 10635              		.loc 1 820 0
 10636 00c0 FEFFFFEA 		b	TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run
 10637              	.LVL1057:
 10638              	.LBE414:
 10639              		.cfi_endproc
 10640              	.LFE18:
 10642              		.comm	xHeapA,4,4
 10643              		.comm	xHeapB,4,4
 10644              		.global	xSocketOpen
 10645              		.global	xSocket
 10646              		.global	pcRxBuffer
 10647              		.global	pcTxBuffer
 10648              		.section	.rodata
 10649              		.align	2
 10650              		.set	.LANCHOR15,. + 0
 10651              	.LC0:
 10652 0000 1E000000 		.word	30
 10653 0004 64000000 		.word	100
 10654 0008 10270000 		.word	10000
 10655              	.LC2:
 10656 000c 01000000 		.word	1
 10657 0010 02000000 		.word	2
 10658 0014 07000000 		.word	7
 10659 0018 08000000 		.word	8
 10660 001c 09000000 		.word	9
 10661 0020 AF040000 		.word	1199
 10662 0024 B0040000 		.word	1200
 10663 0028 B1040000 		.word	1201
 10664              	.LC1:
 10665 002c 02000000 		.word	2
 10666 0030 07000000 		.word	7
 10667 0034 08000000 		.word	8
 10668 0038 09000000 		.word	9
 10669 003c 14000000 		.word	20
 10670              		.section	.bss.xSocketOpen,"aw",%nobits
 10671              		.align	2
 10672              		.set	.LANCHOR0,. + 0
 10675              	xSocketOpen:
 10676 0000 00000000 		.space	4
 10677              		.section	.bss.xSocketPassingQueue,"aw",%nobits
 10678              		.align	2
 10679              		.set	.LANCHOR16,. + 0
 10682              	xSocketPassingQueue:
 10683 0000 00000000 		.space	4
 10684              		.section	.bss.xSyncEventGroup,"aw",%nobits
 10685              		.align	2
 10686              		.set	.LANCHOR6,. + 0
 10689              	xSyncEventGroup:
 10690 0000 00000000 		.space	4
 10691              		.section	.data.pcRxBuffer,"aw",%progbits
 10692              		.align	2
 10693              		.set	.LANCHOR12,. + 0
 10696              	pcRxBuffer:
 10697 0000 D0070000 		.word	cBuffer+2000
 10698              		.section	.data.pcTxBuffer,"aw",%progbits
 10699              		.align	2
 10700              		.set	.LANCHOR11,. + 0
 10703              	pcTxBuffer:
 10704 0000 00000000 		.word	cBuffer
 10705              		.section	.data.xSocket,"aw",%progbits
 10706              		.align	2
 10707              		.set	.LANCHOR1,. + 0
 10710              	xSocket:
 10711 0000 FFFFFFFF 		.word	-1
 10712              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run.str1.1,"aMS",%progbits,1
 10713              	.LC99:
 10714 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_CloseInvalidPara"
 10714      2846756C 
 10714      6C5F5443 
 10714      502C2041 
 10714      4651505F 
 10715 0033 6D732900 		.ascii	"ms)\000"
 10716              	.LC100:
 10717 0037 41465150 		.ascii	"AFQP_SECURE_SOCKETS_CloseInvalidParams\000"
 10717      5F534543 
 10717      5552455F 
 10717      534F434B 
 10717      4554535F 
 10718              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run.str1.1,"aMS",%progbit
 10719              	.LC103:
 10720 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_CloseWithoutRece"
 10720      2846756C 
 10720      6C5F5443 
 10720      502C2041 
 10720      4651505F 
 10721 0033 6976696E 		.ascii	"iving)\000"
 10721      672900
 10722              	.LC104:
 10723 003a 41465150 		.ascii	"AFQP_SECURE_SOCKETS_CloseWithoutReceiving\000"
 10723      5F534543 
 10723      5552455F 
 10723      534F434B 
 10723      4554535F 
 10724              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run.str1.1,"aMS",%progbits,1
 10725              	.LC141:
 10726 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Close)\000"
 10726      2846756C 
 10726      6C5F5443 
 10726      502C2041 
 10726      4651505F 
 10727              	.LC142:
 10728 002a 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Close\000"
 10728      5F534543 
 10728      5552455F 
 10728      534F434B 
 10728      4554535F 
 10729              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run.str1.1,"aMS",%
 10730              	.LC163:
 10731 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidA"
 10731      2846756C 
 10731      6C5F5443 
 10731      502C2041 
 10731      4651505F 
 10732 0033 64647265 		.ascii	"ddressLength)\000"
 10732      73734C65 
 10732      6E677468 
 10732      2900
 10733              	.LC164:
 10734 0041 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength\000"
 10734      5F534543 
 10734      5552455F 
 10734      534F434B 
 10734      4554535F 
 10735              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run.str1.1,"aMS",%progbit
 10736              	.LC159:
 10737 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Connect_InvalidP"
 10737      2846756C 
 10737      6C5F5443 
 10737      502C2041 
 10737      4651505F 
 10738 0033 6172616D 		.ascii	"arams)\000"
 10738      732900
 10739              	.LC160:
 10740 003a 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Connect_InvalidParams\000"
 10740      5F534543 
 10740      5552455F 
 10740      534F434B 
 10740      4554535F 
 10741              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_.str1.1,"aMS",%progbits,1
 10742              	.LC19:
 10743 0000 506F7274 		.ascii	"Port does not support nonblocking connect, but perm"
 10743      20646F65 
 10743      73206E6F 
 10743      74207375 
 10743      70706F72 
 10744 0033 69747465 		.ascii	"itted sockopt to be set before connect. \015\012\000"
 10744      6420736F 
 10744      636B6F70 
 10744      7420746F 
 10744      20626520 
 10745              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run.str1.1,"aMS",%progbits,1
 10746              	.LC189:
 10747 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_NonBlockingConne"
 10747      2846756C 
 10747      6C5F5443 
 10747      502C2041 
 10747      4651505F 
 10748 0033 63742900 		.ascii	"ct)\000"
 10749              	.LC190:
 10750 0037 41465150 		.ascii	"AFQP_SECURE_SOCKETS_NonBlockingConnect\000"
 10750      5F534543 
 10750      5552455F 
 10750      534F434B 
 10750      4554535F 
 10751              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run.str1.1,"aMS",%progbits,1
 10752              	.LC125:
 10753 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_NonBlocking_Test"
 10753      2846756C 
 10753      6C5F5443 
 10753      502C2041 
 10753      4651505F 
 10754 0033 2900     		.ascii	")\000"
 10755              	.LC126:
 10756 0035 41465150 		.ascii	"AFQP_SECURE_SOCKETS_NonBlocking_Test\000"
 10756      5F534543 
 10756      5552455F 
 10756      534F434B 
 10756      4554535F 
 10757              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run.str1.1,"aMS",%progbits,1
 10758              	.LC145:
 10759 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Recv_ByteByByte)"
 10759      2846756C 
 10759      6C5F5443 
 10759      502C2041 
 10759      4651505F 
 10760 0033 00       		.ascii	"\000"
 10761              	.LC146:
 10762 0034 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Recv_ByteByByte\000"
 10762      5F534543 
 10762      5552455F 
 10762      534F434B 
 10762      4554535F 
 10763              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run.str1.1,"aMS",%progbits,1
 10764              	.LC171:
 10765 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Recv_Invalid)\000"
 10765      2846756C 
 10765      6C5F5443 
 10765      502C2041 
 10765      4651505F 
 10766              	.LC172:
 10767 0031 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Recv_Invalid\000"
 10767      5F534543 
 10767      5552455F 
 10767      534F434B 
 10767      4554535F 
 10768              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run.str1.1,"aMS",%pr
 10769              	.LC115:
 10770 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Recv_On_Unconnec"
 10770      2846756C 
 10770      6C5F5443 
 10770      502C2041 
 10770      4651505F 
 10771 0033 7465645F 		.ascii	"ted_Socket)\000"
 10771      536F636B 
 10771      65742900 
 10772              	.LC116:
 10773 003f 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket\000"
 10773      5F534543 
 10773      5552455F 
 10773      534F434B 
 10773      4554535F 
 10774              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run.str1.1,"aMS",%progbits,
 10775              	.LC149:
 10776 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SendRecv_VaryLen"
 10776      2846756C 
 10776      6C5F5443 
 10776      502C2041 
 10776      4651505F 
 10777 0033 67746829 		.ascii	"gth)\000"
 10777      00
 10778              	.LC150:
 10779 0038 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SendRecv_VaryLength\000"
 10779      5F534543 
 10779      5552455F 
 10779      534F434B 
 10779      4554535F 
 10780              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run.str1.1,"aMS",%progbits,1
 10781              	.LC167:
 10782 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Send_Invalid)\000"
 10782      2846756C 
 10782      6C5F5443 
 10782      502C2041 
 10782      4651505F 
 10783              	.LC168:
 10784 0031 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Send_Invalid\000"
 10784      5F534543 
 10784      5552455F 
 10784      534F434B 
 10784      4554535F 
 10785              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_.str1.1,"aMS",%pro
 10786              	.LC56:
 10787 0000 782D616D 		.ascii	"x-amzn-mqtt-ca\000"
 10787      7A6E2D6D 
 10787      7174742D 
 10787      636100
 10788              	.LC57:
 10789 000f 544C5320 		.ascii	"TLS setup after connect succeed when fail was expec"
 10789      73657475 
 10789      70206166 
 10789      74657220 
 10789      636F6E6E 
 10790 0042 7465642E 		.ascii	"ted.\000"
 10790      00
 10791              	.LC58:
 10792 0047 414C504E 		.ascii	"ALPN setup after connect succeed when fail was expe"
 10792      20736574 
 10792      75702061 
 10792      66746572 
 10792      20636F6E 
 10793 007a 63746564 		.ascii	"cted.\000"
 10793      2E00
 10794              	.LC59:
 10795 0080 534E4920 		.ascii	"SNI setup after connect succeed when fail was expec"
 10795      73657475 
 10795      70206166 
 10795      74657220 
 10795      636F6E6E 
 10796 00b3 7465642E 		.ascii	"ted.\000"
 10796      00
 10797              	.LC60:
 10798 00b8 54727573 		.ascii	"Trusted server certificate setup after connect succ"
 10798      74656420 
 10798      73657276 
 10798      65722063 
 10798      65727469 
 10799 00eb 65656420 		.ascii	"eed when fail was expected.\000"
 10799      7768656E 
 10799      20666169 
 10799      6C207761 
 10799      73206578 
 10800              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run.str1.1,"aMS",%
 10801              	.LC197:
 10802 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SetSecureOptions"
 10802      2846756C 
 10802      6C5F5443 
 10802      502C2041 
 10802      4651505F 
 10803 0033 41667465 		.ascii	"AfterConnect)\000"
 10803      72436F6E 
 10803      6E656374 
 10803      2900
 10804              	.LC198:
 10805 0041 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect\000"
 10805      5F534543 
 10805      5552455F 
 10805      534F434B 
 10805      4554535F 
 10806              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run.str1.1,"aMS",%prog
 10807              	.LC129:
 10808 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_Inval"
 10808      2846756C 
 10808      6C5F5443 
 10808      502C2041 
 10808      4651505F 
 10809 0033 69645061 		.ascii	"idParams)\000"
 10809      72616D73 
 10809      2900
 10810              	.LC130:
 10811 003d 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams\000"
 10811      5F534543 
 10811      5552455F 
 10811      534F434B 
 10811      4554535F 
 10812              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run.str1.1,"aMS",%progbits,
 10813              	.LC121:
 10814 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_RCVTI"
 10814      2846756C 
 10814      6C5F5443 
 10814      502C2041 
 10814      4651505F 
 10815 0033 4D454F29 		.ascii	"MEO)\000"
 10815      00
 10816              	.LC122:
 10817 0038 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO\000"
 10817      5F534543 
 10817      5552455F 
 10817      534F434B 
 10817      4554535F 
 10818              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_.str1.1,"aMS"
 10819              	.LC77:
 10820 0000 78526573 		.ascii	"xResult = SOCKETS_Connect( xSocket, &xEchoServerAdd"
 10820      756C7420 
 10820      3D20534F 
 10820      434B4554 
 10820      535F436F 
 10821 0033 72657373 		.ascii	"ress, sizeof( xEchoServerAddress ) )\000"
 10821      2C207369 
 10821      7A656F66 
 10821      28207845 
 10821      63686F53 
 10822              	.LC78:
 10823 0058 72657472 		.ascii	"retrying \"%s\", %d of %d, in %d ms\012\000"
 10823      79696E67 
 10823      20222573 
 10823      222C2025 
 10823      64206F66 
 10824              	.LC79:
 10825 007b 65787065 		.ascii	"expected %d, got %d\012\000"
 10825      63746564 
 10825      2025642C 
 10825      20676F74 
 10825      2025640A 
 10826              	.LC80:
 10827 0090 4661696C 		.ascii	"Failed setup AWS Broker address struct.\000"
 10827      65642073 
 10827      65747570 
 10827      20415753 
 10827      2042726F 
 10828              	.LC81:
 10829 00b8 436F6E6E 		.ascii	"Connect worked when subject name check should have "
 10829      65637420 
 10829      776F726B 
 10829      65642077 
 10829      68656E20 
 10830 00eb 6661696C 		.ascii	"failed it.\000"
 10830      65642069 
 10830      742E00
 10831              	.LC82:
 10832 00f6 53656E64 		.ascii	"Send allowed after subject name connection failure."
 10832      20616C6C 
 10832      6F776564 
 10832      20616674 
 10832      65722073 
 10833 0129 00       		.ascii	"\000"
 10834              	.LC76:
 10835 012a 61333369 		.ascii	"a33i4lqfcxqo2.iot.ap-northeast-1.amazonaws.com\000"
 10835      346C7166 
 10835      6378716F 
 10835      322E696F 
 10835      742E6170 
 10836              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run.str1.1,"a
 10837              	.LC173:
 10838 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_SERVE"
 10838      2846756C 
 10838      6C5F5443 
 10838      502C2041 
 10838      4651505F 
 10839 0033 525F4E41 		.ascii	"R_NAME_INDICATION)\000"
 10839      4D455F49 
 10839      4E444943 
 10839      4154494F 
 10839      4E2900
 10840              	.LC174:
 10841 0046 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATI"
 10841      5F534543 
 10841      5552455F 
 10841      534F434B 
 10841      4554535F 
 10842 0079 4F4E00   		.ascii	"ON\000"
 10843              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run.str1.1,"aMS",%progbits,
 10844              	.LC133:
 10845 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_SNDTI"
 10845      2846756C 
 10845      6C5F5443 
 10845      502C2041 
 10845      4651505F 
 10846 0033 4D454F29 		.ascii	"MEO)\000"
 10846      00
 10847              	.LC134:
 10848 0038 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO\000"
 10848      5F534543 
 10848      5552455F 
 10848      534F434B 
 10848      4554535F 
 10849              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run.str1.
 10850              	.LC175:
 10851 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SetSockOpt_TRUST"
 10851      2846756C 
 10851      6C5F5443 
 10851      502C2041 
 10851      4651505F 
 10852 0033 45445F53 		.ascii	"ED_SERVER_CERTIFICATE)\000"
 10852      45525645 
 10852      525F4345 
 10852      52544946 
 10852      49434154 
 10853              	.LC176:
 10854 004a 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTI"
 10854      5F534543 
 10854      5552455F 
 10854      534F434B 
 10854      4554535F 
 10855 007d 46494341 		.ascii	"FICATE\000"
 10855      544500
 10856              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run.str1.1,"aMS",%progbit
 10857              	.LC107:
 10858 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_ShutdownInvalidP"
 10858      2846756C 
 10858      6C5F5443 
 10858      502C2041 
 10858      4651505F 
 10859 0033 6172616D 		.ascii	"arams)\000"
 10859      732900
 10860              	.LC108:
 10861 003a 41465150 		.ascii	"AFQP_SECURE_SOCKETS_ShutdownInvalidParams\000"
 10861      5F534543 
 10861      5552455F 
 10861      534F434B 
 10861      4554535F 
 10862              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run.str1.1,"aMS",%prog
 10863              	.LC111:
 10864 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_ShutdownWithoutR"
 10864      2846756C 
 10864      6C5F5443 
 10864      502C2041 
 10864      4651505F 
 10865 0033 65636569 		.ascii	"eceiving)\000"
 10865      76696E67 
 10865      2900
 10866              	.LC112:
 10867 003d 41465150 		.ascii	"AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving\000"
 10867      5F534543 
 10867      5552455F 
 10867      534F434B 
 10867      4554535F 
 10868              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run.str1.1,"aMS",%progbits,1
 10869              	.LC137:
 10870 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Shutdown)\000"
 10870      2846756C 
 10870      6C5F5443 
 10870      502C2041 
 10870      4651505F 
 10871              	.LC138:
 10872 002d 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Shutdown\000"
 10872      5F534543 
 10872      5552455F 
 10872      534F434B 
 10872      4554535F 
 10873              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_.str1.1,"aMS",%progbits,1
 10874              	.LC13:
 10875 0000 536F636B 		.ascii	"Socket creation failed\000"
 10875      65742063 
 10875      72656174 
 10875      696F6E20 
 10875      6661696C 
 10876              	.LC14:
 10877 0017 53657420 		.ascii	"Set sockopt Failed\000"
 10877      736F636B 
 10877      6F707420 
 10877      4661696C 
 10877      656400
 10878              	.LC15:
 10879 002a 53657453 		.ascii	"SetSockOpt to require TLS failed\000"
 10879      6F636B4F 
 10879      70742074 
 10879      6F207265 
 10879      71756972 
 10880              	.LC16:
 10881 004b 444E5320 		.ascii	"DNS look up failed.\000"
 10881      6C6F6F6B 
 10881      20757020 
 10881      6661696C 
 10881      65642E00 
 10882              	.LC17:
 10883 005f 436F6E6E 		.ascii	"Connection permitted with untrusted server CA cert\000"
 10883      65637469 
 10883      6F6E2070 
 10883      65726D69 
 10883      74746564 
 10884              	.LC18:
 10885 0092 536F636B 		.ascii	"Socket failed to close\000"
 10885      65742066 
 10885      61696C65 
 10885      6420746F 
 10885      20636C6F 
 10886              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run.str1.1,"aMS",%progbits,1
 10887              	.LC177:
 10888 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_SockEventHandler"
 10888      2846756C 
 10888      6C5F5443 
 10888      502C2041 
 10888      4651505F 
 10889 0033 2900     		.ascii	")\000"
 10890              	.LC178:
 10891 0035 41465150 		.ascii	"AFQP_SECURE_SOCKETS_SockEventHandler\000"
 10891      5F534543 
 10891      5552455F 
 10891      534F434B 
 10891      4554535F 
 10892              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run.str1.1,"aMS",%
 10893              	.LC155:
 10894 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Socket_InvalidTo"
 10894      2846756C 
 10894      6C5F5443 
 10894      502C2041 
 10894      4651505F 
 10895 0033 6F4D616E 		.ascii	"oManySockets)\000"
 10895      79536F63 
 10895      6B657473 
 10895      2900
 10896              	.LC156:
 10897 0041 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets\000"
 10897      5F534543 
 10897      5552455F 
 10897      534F434B 
 10897      4554535F 
 10898              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run.s
 10899              	.LC187:
 10900 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_Diffe"
 10900      2846756C 
 10900      6C5F5443 
 10900      502C2041 
 10900      4651505F 
 10901 0033 72656E74 		.ascii	"rentSocketsDifferentTasks)\000"
 10901      536F636B 
 10901      65747344 
 10901      69666665 
 10901      72656E74 
 10902              	.LC188:
 10903 004e 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDiff"
 10903      5F534543 
 10903      5552455F 
 10903      534F434B 
 10903      4554535F 
 10904 0081 6572656E 		.ascii	"erentTasks\000"
 10904      74546173 
 10904      6B7300
 10905              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run.str1.1,
 10906              	.LC181:
 10907 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_Threadsafe_SameS"
 10907      2846756C 
 10907      6C5F5443 
 10907      502C2041 
 10907      4651505F 
 10908 0033 6F636B65 		.ascii	"ocketDifferentTasks)\000"
 10908      74446966 
 10908      66657265 
 10908      6E745461 
 10908      736B7329 
 10909              	.LC182:
 10910 0048 41465150 		.ascii	"AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentT"
 10910      5F534543 
 10910      5552455F 
 10910      534F434B 
 10910      4554535F 
 10911 007b 61736B73 		.ascii	"asks\000"
 10911      00
 10912              		.section	.rodata.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run.str1.1,"aMS",%progbits
 10913              	.LC191:
 10914 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SECURE_SOCKETS_TwoSecureConnect"
 10914      2846756C 
 10914      6C5F5443 
 10914      502C2041 
 10914      4651505F 
 10915 0033 696F6E73 		.ascii	"ions)\000"
 10915      2900
 10916              	.LC192:
 10917 0039 41465150 		.ascii	"AFQP_SECURE_SOCKETS_TwoSecureConnections\000"
 10917      5F534543 
 10917      5552455F 
 10917      534F434B 
 10917      4554535F 
 10918              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run.str1.1,"aMS",%progbits,1
 10919              	.LC95:
 10920 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_CloseInvalidParams)\000"
 10920      2846756C 
 10920      6C5F5443 
 10920      502C2041 
 10920      4651505F 
 10921              	.LC96:
 10922 0030 443A2F57 		.ascii	"D:/Work/DeviceTester/amazon-freertos/tests/common/s"
 10922      6F726B2F 
 10922      44657669 
 10922      63655465 
 10922      73746572 
 10923 0063 65637572 		.ascii	"ecure_sockets/aws_test_tcp.c\000"
 10923      655F736F 
 10923      636B6574 
 10923      732F6177 
 10923      735F7465 
 10924              	.LC97:
 10925 0080 41465150 		.ascii	"AFQP_SOCKETS_CloseInvalidParams\000"
 10925      5F534F43 
 10925      4B455453 
 10925      5F436C6F 
 10925      7365496E 
 10926              	.LC98:
 10927 00a0 46756C6C 		.ascii	"Full_TCP\000"
 10927      5F544350 
 10927      00
 10928              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run.str1.1,"aMS",%progbits,1
 10929              	.LC101:
 10930 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_CloseWithoutReceiving)\000"
 10930      2846756C 
 10930      6C5F5443 
 10930      502C2041 
 10930      4651505F 
 10931              	.LC102:
 10932 0033 41465150 		.ascii	"AFQP_SOCKETS_CloseWithoutReceiving\000"
 10932      5F534F43 
 10932      4B455453 
 10932      5F436C6F 
 10932      73655769 
 10933              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Close_run.str1.1,"aMS",%progbits,1
 10934              	.LC139:
 10935 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Close)\000"
 10935      2846756C 
 10935      6C5F5443 
 10935      502C2041 
 10935      4651505F 
 10936              	.LC140:
 10937 0023 41465150 		.ascii	"AFQP_SOCKETS_Close\000"
 10937      5F534F43 
 10937      4B455453 
 10937      5F436C6F 
 10937      736500
 10938              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run.str1.1,"aMS",%progbit
 10939              	.LC161:
 10940 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Connect_InvalidAddressL"
 10940      2846756C 
 10940      6C5F5443 
 10940      502C2041 
 10940      4651505F 
 10941 0033 656E6774 		.ascii	"ength)\000"
 10941      682900
 10942              	.LC162:
 10943 003a 41465150 		.ascii	"AFQP_SOCKETS_Connect_InvalidAddressLength\000"
 10943      5F534F43 
 10943      4B455453 
 10943      5F436F6E 
 10943      6E656374 
 10944              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run.str1.1,"aMS",%progbits,1
 10945              	.LC157:
 10946 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Connect_InvalidParams)\000"
 10946      2846756C 
 10946      6C5F5443 
 10946      502C2041 
 10946      4651505F 
 10947              	.LC158:
 10948 0033 41465150 		.ascii	"AFQP_SOCKETS_Connect_InvalidParams\000"
 10948      5F534F43 
 10948      4B455453 
 10948      5F436F6E 
 10948      6E656374 
 10949              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run.str1.1,"aMS",%progbits,1
 10950              	.LC123:
 10951 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_NonBlocking_Test)\000"
 10951      2846756C 
 10951      6C5F5443 
 10951      502C2041 
 10951      4651505F 
 10952              	.LC124:
 10953 002e 41465150 		.ascii	"AFQP_SOCKETS_NonBlocking_Test\000"
 10953      5F534F43 
 10953      4B455453 
 10953      5F4E6F6E 
 10953      426C6F63 
 10954              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run.str1.1,"aMS",%progbits,1
 10955              	.LC143:
 10956 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Recv_ByteByByte)\000"
 10956      2846756C 
 10956      6C5F5443 
 10956      502C2041 
 10956      4651505F 
 10957              	.LC144:
 10958 002d 41465150 		.ascii	"AFQP_SOCKETS_Recv_ByteByByte\000"
 10958      5F534F43 
 10958      4B455453 
 10958      5F526563 
 10958      765F4279 
 10959              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run.str1.1,"aMS",%progbits,1
 10960              	.LC169:
 10961 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Recv_Invalid)\000"
 10961      2846756C 
 10961      6C5F5443 
 10961      502C2041 
 10961      4651505F 
 10962              	.LC170:
 10963 002a 41465150 		.ascii	"AFQP_SOCKETS_Recv_Invalid\000"
 10963      5F534F43 
 10963      4B455453 
 10963      5F526563 
 10963      765F496E 
 10964              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run.str1.1,"aMS",%progbits,
 10965              	.LC113:
 10966 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Recv_On_Unconnected_Soc"
 10966      2846756C 
 10966      6C5F5443 
 10966      502C2041 
 10966      4651505F 
 10967 0033 6B657429 		.ascii	"ket)\000"
 10967      00
 10968              	.LC114:
 10969 0038 41465150 		.ascii	"AFQP_SOCKETS_Recv_On_Unconnected_Socket\000"
 10969      5F534F43 
 10969      4B455453 
 10969      5F526563 
 10969      765F4F6E 
 10970              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run.str1.1,"aMS",%progbits,1
 10971              	.LC147:
 10972 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_SendRecv_VaryLength)\000"
 10972      2846756C 
 10972      6C5F5443 
 10972      502C2041 
 10972      4651505F 
 10973              	.LC148:
 10974 0031 41465150 		.ascii	"AFQP_SOCKETS_SendRecv_VaryLength\000"
 10974      5F534F43 
 10974      4B455453 
 10974      5F53656E 
 10974      64526563 
 10975              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run.str1.1,"aMS",%progbits,1
 10976              	.LC165:
 10977 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Send_Invalid)\000"
 10977      2846756C 
 10977      6C5F5443 
 10977      502C2041 
 10977      4651505F 
 10978              	.LC166:
 10979 002a 41465150 		.ascii	"AFQP_SOCKETS_Send_Invalid\000"
 10979      5F534F43 
 10979      4B455453 
 10979      5F53656E 
 10979      645F496E 
 10980              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run.str1.1,"aMS",%progbits,1
 10981              	.LC127:
 10982 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_SetSockOpt_InvalidParam"
 10982      2846756C 
 10982      6C5F5443 
 10982      502C2041 
 10982      4651505F 
 10983 0033 732900   		.ascii	"s)\000"
 10984              	.LC128:
 10985 0036 41465150 		.ascii	"AFQP_SOCKETS_SetSockOpt_InvalidParams\000"
 10985      5F534F43 
 10985      4B455453 
 10985      5F536574 
 10985      536F636B 
 10986              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run.str1.1,"aMS",%progbits,1
 10987              	.LC119:
 10988 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_SetSockOpt_RCVTIMEO)\000"
 10988      2846756C 
 10988      6C5F5443 
 10988      502C2041 
 10988      4651505F 
 10989              	.LC120:
 10990 0031 41465150 		.ascii	"AFQP_SOCKETS_SetSockOpt_RCVTIMEO\000"
 10990      5F534F43 
 10990      4B455453 
 10990      5F536574 
 10990      536F636B 
 10991              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_.str1.1,"aMS",%progbits,1
 10992              	.LC83:
 10993 0000 54686973 		.ascii	"This test is not implemented.\000"
 10993      20746573 
 10993      74206973 
 10993      206E6F74 
 10993      20696D70 
 10994              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run.str1.1,"aMS",%progbits,1
 10995              	.LC131:
 10996 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_SetSockOpt_SNDTIMEO)\000"
 10996      2846756C 
 10996      6C5F5443 
 10996      502C2041 
 10996      4651505F 
 10997              	.LC132:
 10998 0031 41465150 		.ascii	"AFQP_SOCKETS_SetSockOpt_SNDTIMEO\000"
 10998      5F534F43 
 10998      4B455453 
 10998      5F536574 
 10998      536F636B 
 10999              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run.str1.1,"aMS",%progbits,1
 11000              	.LC105:
 11001 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_ShutdownInvalidParams)\000"
 11001      2846756C 
 11001      6C5F5443 
 11001      502C2041 
 11001      4651505F 
 11002              	.LC106:
 11003 0033 41465150 		.ascii	"AFQP_SOCKETS_ShutdownInvalidParams\000"
 11003      5F534F43 
 11003      4B455453 
 11003      5F536875 
 11003      74646F77 
 11004              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run.str1.1,"aMS",%progbits,1
 11005              	.LC109:
 11006 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_ShutdownWithoutReceivin"
 11006      2846756C 
 11006      6C5F5443 
 11006      502C2041 
 11006      4651505F 
 11007 0033 672900   		.ascii	"g)\000"
 11008              	.LC110:
 11009 0036 41465150 		.ascii	"AFQP_SOCKETS_ShutdownWithoutReceiving\000"
 11009      5F534F43 
 11009      4B455453 
 11009      5F536875 
 11009      74646F77 
 11010              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run.str1.1,"aMS",%progbits,1
 11011              	.LC135:
 11012 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Shutdown)\000"
 11012      2846756C 
 11012      6C5F5443 
 11012      502C2041 
 11012      4651505F 
 11013              	.LC136:
 11014 0026 41465150 		.ascii	"AFQP_SOCKETS_Shutdown\000"
 11014      5F534F43 
 11014      4B455453 
 11014      5F536875 
 11014      74646F77 
 11015              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run.str1.1,"aMS",%progbits,1
 11016              	.LC151:
 11017 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Socket_InvalidInputPara"
 11017      2846756C 
 11017      6C5F5443 
 11017      502C2041 
 11017      4651505F 
 11018 0033 6D732900 		.ascii	"ms)\000"
 11019              	.LC152:
 11020 0037 41465150 		.ascii	"AFQP_SOCKETS_Socket_InvalidInputParams\000"
 11020      5F534F43 
 11020      4B455453 
 11020      5F536F63 
 11020      6B65745F 
 11021              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run.str1.1,"aMS",%progbit
 11022              	.LC153:
 11023 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Socket_InvalidTooManySo"
 11023      2846756C 
 11023      6C5F5443 
 11023      502C2041 
 11023      4651505F 
 11024 0033 636B6574 		.ascii	"ckets)\000"
 11024      732900
 11025              	.LC154:
 11026 003a 41465150 		.ascii	"AFQP_SOCKETS_Socket_InvalidTooManySockets\000"
 11026      5F534F43 
 11026      4B455453 
 11026      5F536F63 
 11026      6B65745F 
 11027              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_.str1.1,"aMS",%progbits,1
 11028              	.LC43:
 11029 0000 20457870 		.ascii	" Expected Not-Equal\000"
 11029      65637465 
 11029      64204E6F 
 11029      742D4571 
 11029      75616C00 
 11030              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run.str1.1,"aMS",%progbits,1
 11031              	.LC117:
 11032 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Socket_TCP)\000"
 11032      2846756C 
 11032      6C5F5443 
 11032      502C2041 
 11032      4651505F 
 11033              	.LC118:
 11034 0028 41465150 		.ascii	"AFQP_SOCKETS_Socket_TCP\000"
 11034      5F534F43 
 11034      4B455453 
 11034      5F536F63 
 11034      6B65745F 
 11035              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run.str1.1,"
 11036              	.LC185:
 11037 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Threadsafe_DifferentSoc"
 11037      2846756C 
 11037      6C5F5443 
 11037      502C2041 
 11037      4651505F 
 11038 0033 6B657473 		.ascii	"ketsDifferentTasks)\000"
 11038      44696666 
 11038      6572656E 
 11038      74546173 
 11038      6B732900 
 11039              	.LC186:
 11040 0047 41465150 		.ascii	"AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTa"
 11040      5F534F43 
 11040      4B455453 
 11040      5F546872 
 11040      65616473 
 11041 007a 736B7300 		.ascii	"sks\000"
 11042              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run.str1.1,"aMS",%
 11043              	.LC179:
 11044 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_Threadsafe_SameSocketDi"
 11044      2846756C 
 11044      6C5F5443 
 11044      502C2041 
 11044      4651505F 
 11045 0033 66666572 		.ascii	"fferentTasks)\000"
 11045      656E7454 
 11045      61736B73 
 11045      2900
 11046              	.LC180:
 11047 0041 41465150 		.ascii	"AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks\000"
 11047      5F534F43 
 11047      4B455453 
 11047      5F546872 
 11047      65616473 
 11048              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_.str1.1,"aMS",%progbits,1
 11049              	.LC4:
 11050 0000 534F434B 		.ascii	"SOCKETS_htons returned incorrect value.\000"
 11050      4554535F 
 11050      68746F6E 
 11050      73207265 
 11050      7475726E 
 11051              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run.str1.1,"aMS",%progbits,1
 11052              	.LC193:
 11053 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_htons_HappyCase)\000"
 11053      2846756C 
 11053      6C5F5443 
 11053      502C2041 
 11053      4651505F 
 11054              	.LC194:
 11055 002d 41465150 		.ascii	"AFQP_SOCKETS_htons_HappyCase\000"
 11055      5F534F43 
 11055      4B455453 
 11055      5F68746F 
 11055      6E735F48 
 11056              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_.str1.1,"aMS",%progbits,1
 11057              	.LC5:
 11058 0000 534F434B 		.ascii	"SOCKETS_inet_addr_quick returned incorrect value.\000"
 11058      4554535F 
 11058      696E6574 
 11058      5F616464 
 11058      725F7175 
 11059              		.section	.rodata.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run.str1.1,"aMS",%progbits,1
 11060              	.LC195:
 11061 0000 54455354 		.ascii	"TEST(Full_TCP, AFQP_SOCKETS_inet_addr_quick_HappyCa"
 11061      2846756C 
 11061      6C5F5443 
 11061      502C2041 
 11061      4651505F 
 11062 0033 73652900 		.ascii	"se)\000"
 11063              	.LC196:
 11064 0037 41465150 		.ascii	"AFQP_SOCKETS_inet_addr_quick_HappyCase\000"
 11064      5F534F43 
 11064      4B455453 
 11064      5F696E65 
 11064      745F6164 
 11065              		.section	.rodata.TEST_Full_TCP_TEAR_DOWN.str1.1,"aMS",%progbits,1
 11066              	.LC3:
 11067 0000 534F434B 		.ascii	"SOCKETS_Close failed in tear down. \015\012\000"
 11067      4554535F 
 11067      436C6F73 
 11067      65206661 
 11067      696C6564 
 11068              		.section	.rodata.__FUNCTION__.8350,"a",%progbits
 11069              		.set	.LANCHOR8,. + 0
 11072              	__FUNCTION__.8350:
 11073 0000 70727653 		.ascii	"prvSecureConnectHelper\000"
 11073      65637572 
 11073      65436F6E 
 11073      6E656374 
 11073      48656C70 
 11074              		.section	.rodata.__FUNCTION__.8360,"a",%progbits
 11075              		.set	.LANCHOR4,. + 0
 11078              	__FUNCTION__.8360:
 11079 0000 70727641 		.ascii	"prvAwsIotBrokerConnectHelper\000"
 11079      7773496F 
 11079      7442726F 
 11079      6B657243 
 11079      6F6E6E65 
 11080              		.section	.rodata.__FUNCTION__.8382,"a",%progbits
 11081              		.set	.LANCHOR2,. + 0
 11084              	__FUNCTION__.8382:
 11085 0000 70727653 		.ascii	"prvSetSockOptHelper\000"
 11085      6574536F 
 11085      636B4F70 
 11085      7448656C 
 11085      70657200 
 11086              		.section	.rodata.__FUNCTION__.8395,"a",%progbits
 11087              		.set	.LANCHOR9,. + 0
 11090              	__FUNCTION__.8395:
 11091 0000 70727643 		.ascii	"prvConnectHelperWithRetry\000"
 11091      6F6E6E65 
 11091      63744865 
 11091      6C706572 
 11091      57697468 
 11092              		.section	.rodata.__FUNCTION__.9286,"a",%progbits
 11093              		.set	.LANCHOR17,. + 0
 11096              	__FUNCTION__.9286:
 11097 0000 70727654 		.ascii	"prvThreadSafeDifferentSocketsDifferentTasks\000"
 11097      68726561 
 11097      64536166 
 11097      65446966 
 11097      66657265 
 11098              		.section	.rodata.cMessageAWS.9318,"a",%progbits
 11099              		.set	.LANCHOR14,. + 0
 11102              	cMessageAWS.9318:
 11103 0000 4D657373 		.ascii	"Message to AWS!  This message should not be sent to"
 11103      61676520 
 11103      746F2041 
 11103      57532120 
 11103      20546869 
 11104 0033 20746865 		.ascii	" the secure server.\000"
 11104      20736563 
 11104      75726520 
 11104      73657276 
 11104      65722E00 
 11105              		.section	.rodata.cMessageSecServer.9319,"a",%progbits
 11106              		.set	.LANCHOR13,. + 0
 11109              	cMessageSecServer.9319:
 11110 0000 4D657373 		.ascii	"Message to Secure Server!  This message should not "
 11110      61676520 
 11110      746F2053 
 11110      65637572 
 11110      65205365 
 11111 0033 62652073 		.ascii	"be sent to AWS.\000"
 11111      656E7420 
 11111      746F2041 
 11111      57532E00 
 11112              		.section	.rodata.cTransmittedString,"a",%progbits
 11113              		.set	.LANCHOR7,. + 0
 11116              	cTransmittedString:
 11117 0000 01       		.byte	1
 11118 0001 02       		.byte	2
 11119 0002 03       		.byte	3
 11120 0003 04       		.byte	4
 11121 0004 05       		.byte	5
 11122 0005 06       		.byte	6
 11123 0006 07       		.byte	7
 11124 0007 08       		.byte	8
 11125 0008 09       		.byte	9
 11126 0009 0A       		.byte	10
 11127 000a 0B       		.byte	11
 11128 000b 0C       		.byte	12
 11129 000c 0D       		.byte	13
 11130 000d 0E       		.byte	14
 11131 000e 0F       		.byte	15
 11132 000f 10       		.byte	16
 11133 0010 11       		.byte	17
 11134 0011 12       		.byte	18
 11135 0012 13       		.byte	19
 11136 0013 14       		.byte	20
 11137 0014 15       		.byte	21
 11138 0015 16       		.byte	22
 11139 0016 17       		.byte	23
 11140 0017 18       		.byte	24
 11141 0018 19       		.byte	25
 11142 0019 1A       		.byte	26
 11143 001a 1B       		.byte	27
 11144 001b 1C       		.byte	28
 11145 001c 1D       		.byte	29
 11146 001d 1E       		.byte	30
 11147 001e 1F       		.byte	31
 11148 001f 20       		.byte	32
 11149 0020 21       		.byte	33
 11150 0021 22       		.byte	34
 11151 0022 23       		.byte	35
 11152 0023 24       		.byte	36
 11153 0024 25       		.byte	37
 11154 0025 26       		.byte	38
 11155 0026 27       		.byte	39
 11156 0027 28       		.byte	40
 11157 0028 29       		.byte	41
 11158 0029 2A       		.byte	42
 11159 002a 2B       		.byte	43
 11160 002b 2C       		.byte	44
 11161 002c 2D       		.byte	45
 11162 002d 2E       		.byte	46
 11163 002e 2F       		.byte	47
 11164 002f 30       		.byte	48
 11165 0030 31       		.byte	49
 11166 0031 32       		.byte	50
 11167 0032 33       		.byte	51
 11168 0033 34       		.byte	52
 11169 0034 35       		.byte	53
 11170 0035 36       		.byte	54
 11171 0036 37       		.byte	55
 11172 0037 38       		.byte	56
 11173 0038 39       		.byte	57
 11174 0039 3A       		.byte	58
 11175 003a 3B       		.byte	59
 11176 003b 3C       		.byte	60
 11177 003c 3D       		.byte	61
 11178 003d 3E       		.byte	62
 11179 003e 3F       		.byte	63
 11180 003f 40       		.byte	64
 11181 0040 41       		.byte	65
 11182 0041 42       		.byte	66
 11183 0042 43       		.byte	67
 11184 0043 44       		.byte	68
 11185 0044 45       		.byte	69
 11186 0045 46       		.byte	70
 11187 0046 47       		.byte	71
 11188 0047 48       		.byte	72
 11189 0048 49       		.byte	73
 11190 0049 4A       		.byte	74
 11191 004a 4B       		.byte	75
 11192 004b 4C       		.byte	76
 11193 004c 4D       		.byte	77
 11194 004d 4E       		.byte	78
 11195 004e 4F       		.byte	79
 11196 004f 50       		.byte	80
 11197 0050 51       		.byte	81
 11198 0051 52       		.byte	82
 11199 0052 53       		.byte	83
 11200 0053 54       		.byte	84
 11201 0054 55       		.byte	85
 11202 0055 56       		.byte	86
 11203 0056 57       		.byte	87
 11204 0057 58       		.byte	88
 11205 0058 59       		.byte	89
 11206 0059 5A       		.byte	90
 11207 005a 5B       		.byte	91
 11208 005b 5C       		.byte	92
 11209 005c 5D       		.byte	93
 11210 005d 5E       		.byte	94
 11211 005e 5F       		.byte	95
 11212 005f 60       		.byte	96
 11213 0060 61       		.byte	97
 11214 0061 62       		.byte	98
 11215 0062 63       		.byte	99
 11216 0063 64       		.byte	100
 11217 0064 65       		.byte	101
 11218 0065 66       		.byte	102
 11219 0066 67       		.byte	103
 11220 0067 68       		.byte	104
 11221 0068 69       		.byte	105
 11222 0069 6A       		.byte	106
 11223 006a 6B       		.byte	107
 11224 006b 6C       		.byte	108
 11225 006c 6D       		.byte	109
 11226 006d 6E       		.byte	110
 11227 006e 6F       		.byte	111
 11228 006f 70       		.byte	112
 11229 0070 71       		.byte	113
 11230 0071 72       		.byte	114
 11231 0072 73       		.byte	115
 11232 0073 74       		.byte	116
 11233 0074 75       		.byte	117
 11234 0075 76       		.byte	118
 11235 0076 77       		.byte	119
 11236 0077 78       		.byte	120
 11237 0078 79       		.byte	121
 11238 0079 7A       		.byte	122
 11239 007a 7B       		.byte	123
 11240 007b 7C       		.byte	124
 11241 007c 7D       		.byte	125
 11242 007d 7E       		.byte	126
 11243 007e 7F       		.byte	127
 11244 007f 80       		.byte	-128
 11245 0080 81       		.byte	-127
 11246 0081 82       		.byte	-126
 11247 0082 83       		.byte	-125
 11248 0083 84       		.byte	-124
 11249 0084 85       		.byte	-123
 11250 0085 86       		.byte	-122
 11251 0086 87       		.byte	-121
 11252 0087 88       		.byte	-120
 11253 0088 89       		.byte	-119
 11254 0089 8A       		.byte	-118
 11255 008a 8B       		.byte	-117
 11256 008b 8C       		.byte	-116
 11257 008c 8D       		.byte	-115
 11258 008d 8E       		.byte	-114
 11259 008e 8F       		.byte	-113
 11260 008f 90       		.byte	-112
 11261 0090 91       		.byte	-111
 11262 0091 92       		.byte	-110
 11263 0092 93       		.byte	-109
 11264 0093 94       		.byte	-108
 11265 0094 95       		.byte	-107
 11266 0095 96       		.byte	-106
 11267 0096 97       		.byte	-105
 11268 0097 98       		.byte	-104
 11269 0098 99       		.byte	-103
 11270 0099 9A       		.byte	-102
 11271 009a 9B       		.byte	-101
 11272 009b 9C       		.byte	-100
 11273 009c 9D       		.byte	-99
 11274 009d 9E       		.byte	-98
 11275 009e 9F       		.byte	-97
 11276 009f A0       		.byte	-96
 11277 00a0 A1       		.byte	-95
 11278 00a1 A2       		.byte	-94
 11279 00a2 A3       		.byte	-93
 11280 00a3 A4       		.byte	-92
 11281 00a4 A5       		.byte	-91
 11282 00a5 A6       		.byte	-90
 11283 00a6 A7       		.byte	-89
 11284 00a7 A8       		.byte	-88
 11285 00a8 A9       		.byte	-87
 11286 00a9 AA       		.byte	-86
 11287 00aa AB       		.byte	-85
 11288 00ab AC       		.byte	-84
 11289 00ac AD       		.byte	-83
 11290 00ad AE       		.byte	-82
 11291 00ae AF       		.byte	-81
 11292 00af B0       		.byte	-80
 11293 00b0 B1       		.byte	-79
 11294 00b1 B2       		.byte	-78
 11295 00b2 B3       		.byte	-77
 11296 00b3 B4       		.byte	-76
 11297 00b4 B5       		.byte	-75
 11298 00b5 B6       		.byte	-74
 11299 00b6 B7       		.byte	-73
 11300 00b7 B8       		.byte	-72
 11301 00b8 B9       		.byte	-71
 11302 00b9 BA       		.byte	-70
 11303 00ba BB       		.byte	-69
 11304 00bb BC       		.byte	-68
 11305 00bc BD       		.byte	-67
 11306 00bd BE       		.byte	-66
 11307 00be BF       		.byte	-65
 11308 00bf C0       		.byte	-64
 11309 00c0 C1       		.byte	-63
 11310 00c1 C2       		.byte	-62
 11311 00c2 C3       		.byte	-61
 11312 00c3 C4       		.byte	-60
 11313 00c4 C5       		.byte	-59
 11314 00c5 C6       		.byte	-58
 11315 00c6 C7       		.byte	-57
 11316 00c7 C8       		.byte	-56
 11317 00c8 C9       		.byte	-55
 11318 00c9 CA       		.byte	-54
 11319 00ca CB       		.byte	-53
 11320 00cb CC       		.byte	-52
 11321 00cc CD       		.byte	-51
 11322 00cd CE       		.byte	-50
 11323 00ce CF       		.byte	-49
 11324 00cf D0       		.byte	-48
 11325 00d0 D1       		.byte	-47
 11326 00d1 D2       		.byte	-46
 11327 00d2 D3       		.byte	-45
 11328 00d3 D4       		.byte	-44
 11329 00d4 D5       		.byte	-43
 11330 00d5 D6       		.byte	-42
 11331 00d6 D7       		.byte	-41
 11332 00d7 D8       		.byte	-40
 11333 00d8 D9       		.byte	-39
 11334 00d9 DA       		.byte	-38
 11335 00da DB       		.byte	-37
 11336 00db DC       		.byte	-36
 11337 00dc DD       		.byte	-35
 11338 00dd DE       		.byte	-34
 11339 00de DF       		.byte	-33
 11340 00df E0       		.byte	-32
 11341 00e0 E1       		.byte	-31
 11342 00e1 E2       		.byte	-30
 11343 00e2 E3       		.byte	-29
 11344 00e3 E4       		.byte	-28
 11345 00e4 E5       		.byte	-27
 11346 00e5 E6       		.byte	-26
 11347 00e6 E7       		.byte	-25
 11348 00e7 E8       		.byte	-24
 11349 00e8 E9       		.byte	-23
 11350 00e9 EA       		.byte	-22
 11351 00ea EB       		.byte	-21
 11352 00eb EC       		.byte	-20
 11353 00ec ED       		.byte	-19
 11354 00ed EE       		.byte	-18
 11355 00ee EF       		.byte	-17
 11356 00ef F0       		.byte	-16
 11357 00f0 F1       		.byte	-15
 11358 00f1 F2       		.byte	-14
 11359 00f2 F3       		.byte	-13
 11360 00f3 F4       		.byte	-12
 11361 00f4 F5       		.byte	-11
 11362 00f5 F6       		.byte	-10
 11363 00f6 F7       		.byte	-9
 11364 00f7 F8       		.byte	-8
 11365 00f8 F9       		.byte	-7
 11366 00f9 FA       		.byte	-6
 11367 00fa FB       		.byte	-5
 11368 00fb FC       		.byte	-4
 11369 00fc FD       		.byte	-3
 11370 00fd FE       		.byte	-2
 11371 00fe FF       		.byte	-1
 11372 00ff 00       		.byte	0
 11373 0100 01       		.byte	1
 11374 0101 02       		.byte	2
 11375 0102 03       		.byte	3
 11376 0103 04       		.byte	4
 11377 0104 05       		.byte	5
 11378 0105 06       		.byte	6
 11379 0106 07       		.byte	7
 11380 0107 08       		.byte	8
 11381 0108 09       		.byte	9
 11382 0109 0A       		.byte	10
 11383 010a 0B       		.byte	11
 11384 010b 0C       		.byte	12
 11385 010c 0D       		.byte	13
 11386 010d 0E       		.byte	14
 11387 010e 0F       		.byte	15
 11388 010f 10       		.byte	16
 11389 0110 11       		.byte	17
 11390 0111 12       		.byte	18
 11391 0112 13       		.byte	19
 11392 0113 14       		.byte	20
 11393 0114 15       		.byte	21
 11394 0115 16       		.byte	22
 11395 0116 17       		.byte	23
 11396 0117 18       		.byte	24
 11397 0118 19       		.byte	25
 11398 0119 1A       		.byte	26
 11399 011a 1B       		.byte	27
 11400 011b 1C       		.byte	28
 11401 011c 1D       		.byte	29
 11402 011d 1E       		.byte	30
 11403 011e 1F       		.byte	31
 11404 011f 20       		.byte	32
 11405 0120 21       		.byte	33
 11406 0121 22       		.byte	34
 11407 0122 23       		.byte	35
 11408 0123 24       		.byte	36
 11409 0124 25       		.byte	37
 11410 0125 26       		.byte	38
 11411 0126 27       		.byte	39
 11412 0127 28       		.byte	40
 11413 0128 29       		.byte	41
 11414 0129 2A       		.byte	42
 11415 012a 2B       		.byte	43
 11416 012b 2C       		.byte	44
 11417 012c 2D       		.byte	45
 11418 012d 2E       		.byte	46
 11419 012e 2F       		.byte	47
 11420 012f 30       		.byte	48
 11421 0130 31       		.byte	49
 11422 0131 32       		.byte	50
 11423 0132 33       		.byte	51
 11424 0133 34       		.byte	52
 11425 0134 35       		.byte	53
 11426 0135 36       		.byte	54
 11427 0136 37       		.byte	55
 11428 0137 38       		.byte	56
 11429 0138 39       		.byte	57
 11430 0139 3A       		.byte	58
 11431 013a 3B       		.byte	59
 11432 013b 3C       		.byte	60
 11433 013c 3D       		.byte	61
 11434 013d 3E       		.byte	62
 11435 013e 3F       		.byte	63
 11436 013f 40       		.byte	64
 11437 0140 41       		.byte	65
 11438 0141 42       		.byte	66
 11439 0142 43       		.byte	67
 11440 0143 44       		.byte	68
 11441 0144 45       		.byte	69
 11442 0145 46       		.byte	70
 11443 0146 47       		.byte	71
 11444 0147 48       		.byte	72
 11445 0148 49       		.byte	73
 11446 0149 4A       		.byte	74
 11447 014a 4B       		.byte	75
 11448 014b 4C       		.byte	76
 11449 014c 4D       		.byte	77
 11450 014d 4E       		.byte	78
 11451 014e 4F       		.byte	79
 11452 014f 50       		.byte	80
 11453 0150 51       		.byte	81
 11454 0151 52       		.byte	82
 11455 0152 53       		.byte	83
 11456 0153 54       		.byte	84
 11457 0154 55       		.byte	85
 11458 0155 56       		.byte	86
 11459 0156 57       		.byte	87
 11460 0157 58       		.byte	88
 11461 0158 59       		.byte	89
 11462 0159 5A       		.byte	90
 11463 015a 5B       		.byte	91
 11464 015b 5C       		.byte	92
 11465 015c 5D       		.byte	93
 11466 015d 5E       		.byte	94
 11467 015e 5F       		.byte	95
 11468 015f 60       		.byte	96
 11469 0160 61       		.byte	97
 11470 0161 62       		.byte	98
 11471 0162 63       		.byte	99
 11472 0163 64       		.byte	100
 11473 0164 65       		.byte	101
 11474 0165 66       		.byte	102
 11475 0166 67       		.byte	103
 11476 0167 68       		.byte	104
 11477 0168 69       		.byte	105
 11478 0169 6A       		.byte	106
 11479 016a 6B       		.byte	107
 11480 016b 6C       		.byte	108
 11481 016c 6D       		.byte	109
 11482 016d 6E       		.byte	110
 11483 016e 6F       		.byte	111
 11484 016f 70       		.byte	112
 11485 0170 71       		.byte	113
 11486 0171 72       		.byte	114
 11487 0172 73       		.byte	115
 11488 0173 74       		.byte	116
 11489 0174 75       		.byte	117
 11490 0175 76       		.byte	118
 11491 0176 77       		.byte	119
 11492 0177 78       		.byte	120
 11493 0178 79       		.byte	121
 11494 0179 7A       		.byte	122
 11495 017a 7B       		.byte	123
 11496 017b 7C       		.byte	124
 11497 017c 7D       		.byte	125
 11498 017d 7E       		.byte	126
 11499 017e 7F       		.byte	127
 11500 017f 80       		.byte	-128
 11501 0180 81       		.byte	-127
 11502 0181 82       		.byte	-126
 11503 0182 83       		.byte	-125
 11504 0183 84       		.byte	-124
 11505 0184 85       		.byte	-123
 11506 0185 86       		.byte	-122
 11507 0186 87       		.byte	-121
 11508 0187 88       		.byte	-120
 11509 0188 89       		.byte	-119
 11510 0189 8A       		.byte	-118
 11511 018a 8B       		.byte	-117
 11512 018b 8C       		.byte	-116
 11513 018c 8D       		.byte	-115
 11514 018d 8E       		.byte	-114
 11515 018e 8F       		.byte	-113
 11516 018f 90       		.byte	-112
 11517 0190 91       		.byte	-111
 11518 0191 92       		.byte	-110
 11519 0192 93       		.byte	-109
 11520 0193 94       		.byte	-108
 11521 0194 95       		.byte	-107
 11522 0195 96       		.byte	-106
 11523 0196 97       		.byte	-105
 11524 0197 98       		.byte	-104
 11525 0198 99       		.byte	-103
 11526 0199 9A       		.byte	-102
 11527 019a 9B       		.byte	-101
 11528 019b 9C       		.byte	-100
 11529 019c 9D       		.byte	-99
 11530 019d 9E       		.byte	-98
 11531 019e 9F       		.byte	-97
 11532 019f A0       		.byte	-96
 11533 01a0 A1       		.byte	-95
 11534 01a1 A2       		.byte	-94
 11535 01a2 A3       		.byte	-93
 11536 01a3 A4       		.byte	-92
 11537 01a4 A5       		.byte	-91
 11538 01a5 A6       		.byte	-90
 11539 01a6 A7       		.byte	-89
 11540 01a7 A8       		.byte	-88
 11541 01a8 A9       		.byte	-87
 11542 01a9 AA       		.byte	-86
 11543 01aa AB       		.byte	-85
 11544 01ab AC       		.byte	-84
 11545 01ac AD       		.byte	-83
 11546 01ad AE       		.byte	-82
 11547 01ae AF       		.byte	-81
 11548 01af B0       		.byte	-80
 11549 01b0 B1       		.byte	-79
 11550 01b1 B2       		.byte	-78
 11551 01b2 B3       		.byte	-77
 11552 01b3 B4       		.byte	-76
 11553 01b4 B5       		.byte	-75
 11554 01b5 B6       		.byte	-74
 11555 01b6 B7       		.byte	-73
 11556 01b7 B8       		.byte	-72
 11557 01b8 B9       		.byte	-71
 11558 01b9 BA       		.byte	-70
 11559 01ba BB       		.byte	-69
 11560 01bb BC       		.byte	-68
 11561 01bc BD       		.byte	-67
 11562 01bd BE       		.byte	-66
 11563 01be BF       		.byte	-65
 11564 01bf C0       		.byte	-64
 11565 01c0 C1       		.byte	-63
 11566 01c1 C2       		.byte	-62
 11567 01c2 C3       		.byte	-61
 11568 01c3 C4       		.byte	-60
 11569 01c4 C5       		.byte	-59
 11570 01c5 C6       		.byte	-58
 11571 01c6 C7       		.byte	-57
 11572 01c7 C8       		.byte	-56
 11573 01c8 C9       		.byte	-55
 11574 01c9 CA       		.byte	-54
 11575 01ca CB       		.byte	-53
 11576 01cb CC       		.byte	-52
 11577 01cc CD       		.byte	-51
 11578 01cd CE       		.byte	-50
 11579 01ce CF       		.byte	-49
 11580 01cf D0       		.byte	-48
 11581 01d0 D1       		.byte	-47
 11582 01d1 D2       		.byte	-46
 11583 01d2 D3       		.byte	-45
 11584 01d3 D4       		.byte	-44
 11585 01d4 D5       		.byte	-43
 11586 01d5 D6       		.byte	-42
 11587 01d6 D7       		.byte	-41
 11588 01d7 D8       		.byte	-40
 11589 01d8 D9       		.byte	-39
 11590 01d9 DA       		.byte	-38
 11591 01da DB       		.byte	-37
 11592 01db DC       		.byte	-36
 11593 01dc DD       		.byte	-35
 11594 01dd DE       		.byte	-34
 11595 01de DF       		.byte	-33
 11596 01df E0       		.byte	-32
 11597 01e0 E1       		.byte	-31
 11598 01e1 E2       		.byte	-30
 11599 01e2 E3       		.byte	-29
 11600 01e3 E4       		.byte	-28
 11601 01e4 E5       		.byte	-27
 11602 01e5 E6       		.byte	-26
 11603 01e6 E7       		.byte	-25
 11604 01e7 E8       		.byte	-24
 11605 01e8 E9       		.byte	-23
 11606 01e9 EA       		.byte	-22
 11607 01ea EB       		.byte	-21
 11608 01eb EC       		.byte	-20
 11609 01ec ED       		.byte	-19
 11610 01ed EE       		.byte	-18
 11611 01ee EF       		.byte	-17
 11612 01ef F0       		.byte	-16
 11613 01f0 F1       		.byte	-15
 11614 01f1 F2       		.byte	-14
 11615 01f2 F3       		.byte	-13
 11616 01f3 F4       		.byte	-12
 11617 01f4 F5       		.byte	-11
 11618 01f5 F6       		.byte	-10
 11619 01f6 F7       		.byte	-9
 11620 01f7 F8       		.byte	-8
 11621 01f8 F9       		.byte	-7
 11622 01f9 FA       		.byte	-6
 11623 01fa FB       		.byte	-5
 11624 01fb FC       		.byte	-4
 11625 01fc FD       		.byte	-3
 11626 01fd FE       		.byte	-2
 11627 01fe FF       		.byte	-1
 11628 01ff 00       		.byte	0
 11629 0200 01       		.byte	1
 11630 0201 02       		.byte	2
 11631 0202 03       		.byte	3
 11632 0203 04       		.byte	4
 11633 0204 05       		.byte	5
 11634 0205 06       		.byte	6
 11635 0206 07       		.byte	7
 11636 0207 08       		.byte	8
 11637 0208 09       		.byte	9
 11638 0209 0A       		.byte	10
 11639 020a 0B       		.byte	11
 11640 020b 0C       		.byte	12
 11641 020c 0D       		.byte	13
 11642 020d 0E       		.byte	14
 11643 020e 0F       		.byte	15
 11644 020f 10       		.byte	16
 11645 0210 11       		.byte	17
 11646 0211 12       		.byte	18
 11647 0212 13       		.byte	19
 11648 0213 14       		.byte	20
 11649 0214 15       		.byte	21
 11650 0215 16       		.byte	22
 11651 0216 17       		.byte	23
 11652 0217 18       		.byte	24
 11653 0218 19       		.byte	25
 11654 0219 1A       		.byte	26
 11655 021a 1B       		.byte	27
 11656 021b 1C       		.byte	28
 11657 021c 1D       		.byte	29
 11658 021d 1E       		.byte	30
 11659 021e 1F       		.byte	31
 11660 021f 20       		.byte	32
 11661 0220 21       		.byte	33
 11662 0221 22       		.byte	34
 11663 0222 23       		.byte	35
 11664 0223 24       		.byte	36
 11665 0224 25       		.byte	37
 11666 0225 26       		.byte	38
 11667 0226 27       		.byte	39
 11668 0227 28       		.byte	40
 11669 0228 29       		.byte	41
 11670 0229 2A       		.byte	42
 11671 022a 2B       		.byte	43
 11672 022b 2C       		.byte	44
 11673 022c 2D       		.byte	45
 11674 022d 2E       		.byte	46
 11675 022e 2F       		.byte	47
 11676 022f 30       		.byte	48
 11677 0230 31       		.byte	49
 11678 0231 32       		.byte	50
 11679 0232 33       		.byte	51
 11680 0233 34       		.byte	52
 11681 0234 35       		.byte	53
 11682 0235 36       		.byte	54
 11683 0236 37       		.byte	55
 11684 0237 38       		.byte	56
 11685 0238 39       		.byte	57
 11686 0239 3A       		.byte	58
 11687 023a 3B       		.byte	59
 11688 023b 3C       		.byte	60
 11689 023c 3D       		.byte	61
 11690 023d 3E       		.byte	62
 11691 023e 3F       		.byte	63
 11692 023f 40       		.byte	64
 11693 0240 41       		.byte	65
 11694 0241 42       		.byte	66
 11695 0242 43       		.byte	67
 11696 0243 44       		.byte	68
 11697 0244 45       		.byte	69
 11698 0245 46       		.byte	70
 11699 0246 47       		.byte	71
 11700 0247 48       		.byte	72
 11701 0248 49       		.byte	73
 11702 0249 4A       		.byte	74
 11703 024a 4B       		.byte	75
 11704 024b 4C       		.byte	76
 11705 024c 4D       		.byte	77
 11706 024d 4E       		.byte	78
 11707 024e 4F       		.byte	79
 11708 024f 50       		.byte	80
 11709 0250 51       		.byte	81
 11710 0251 52       		.byte	82
 11711 0252 53       		.byte	83
 11712 0253 54       		.byte	84
 11713 0254 55       		.byte	85
 11714 0255 56       		.byte	86
 11715 0256 57       		.byte	87
 11716 0257 58       		.byte	88
 11717 0258 59       		.byte	89
 11718 0259 5A       		.byte	90
 11719 025a 5B       		.byte	91
 11720 025b 5C       		.byte	92
 11721 025c 5D       		.byte	93
 11722 025d 5E       		.byte	94
 11723 025e 5F       		.byte	95
 11724 025f 60       		.byte	96
 11725 0260 61       		.byte	97
 11726 0261 62       		.byte	98
 11727 0262 63       		.byte	99
 11728 0263 64       		.byte	100
 11729 0264 65       		.byte	101
 11730 0265 66       		.byte	102
 11731 0266 67       		.byte	103
 11732 0267 68       		.byte	104
 11733 0268 69       		.byte	105
 11734 0269 6A       		.byte	106
 11735 026a 6B       		.byte	107
 11736 026b 6C       		.byte	108
 11737 026c 6D       		.byte	109
 11738 026d 6E       		.byte	110
 11739 026e 6F       		.byte	111
 11740 026f 70       		.byte	112
 11741 0270 71       		.byte	113
 11742 0271 72       		.byte	114
 11743 0272 73       		.byte	115
 11744 0273 74       		.byte	116
 11745 0274 75       		.byte	117
 11746 0275 76       		.byte	118
 11747 0276 77       		.byte	119
 11748 0277 78       		.byte	120
 11749 0278 79       		.byte	121
 11750 0279 7A       		.byte	122
 11751 027a 7B       		.byte	123
 11752 027b 7C       		.byte	124
 11753 027c 7D       		.byte	125
 11754 027d 7E       		.byte	126
 11755 027e 7F       		.byte	127
 11756 027f 80       		.byte	-128
 11757 0280 81       		.byte	-127
 11758 0281 82       		.byte	-126
 11759 0282 83       		.byte	-125
 11760 0283 84       		.byte	-124
 11761 0284 85       		.byte	-123
 11762 0285 86       		.byte	-122
 11763 0286 87       		.byte	-121
 11764 0287 88       		.byte	-120
 11765 0288 89       		.byte	-119
 11766 0289 8A       		.byte	-118
 11767 028a 8B       		.byte	-117
 11768 028b 8C       		.byte	-116
 11769 028c 8D       		.byte	-115
 11770 028d 8E       		.byte	-114
 11771 028e 8F       		.byte	-113
 11772 028f 90       		.byte	-112
 11773 0290 91       		.byte	-111
 11774 0291 92       		.byte	-110
 11775 0292 93       		.byte	-109
 11776 0293 94       		.byte	-108
 11777 0294 95       		.byte	-107
 11778 0295 96       		.byte	-106
 11779 0296 97       		.byte	-105
 11780 0297 98       		.byte	-104
 11781 0298 99       		.byte	-103
 11782 0299 9A       		.byte	-102
 11783 029a 9B       		.byte	-101
 11784 029b 9C       		.byte	-100
 11785 029c 9D       		.byte	-99
 11786 029d 9E       		.byte	-98
 11787 029e 9F       		.byte	-97
 11788 029f A0       		.byte	-96
 11789 02a0 A1       		.byte	-95
 11790 02a1 A2       		.byte	-94
 11791 02a2 A3       		.byte	-93
 11792 02a3 A4       		.byte	-92
 11793 02a4 A5       		.byte	-91
 11794 02a5 A6       		.byte	-90
 11795 02a6 A7       		.byte	-89
 11796 02a7 A8       		.byte	-88
 11797 02a8 A9       		.byte	-87
 11798 02a9 AA       		.byte	-86
 11799 02aa AB       		.byte	-85
 11800 02ab AC       		.byte	-84
 11801 02ac AD       		.byte	-83
 11802 02ad AE       		.byte	-82
 11803 02ae AF       		.byte	-81
 11804 02af B0       		.byte	-80
 11805 02b0 B1       		.byte	-79
 11806 02b1 B2       		.byte	-78
 11807 02b2 B3       		.byte	-77
 11808 02b3 B4       		.byte	-76
 11809 02b4 B5       		.byte	-75
 11810 02b5 B6       		.byte	-74
 11811 02b6 B7       		.byte	-73
 11812 02b7 B8       		.byte	-72
 11813 02b8 B9       		.byte	-71
 11814 02b9 BA       		.byte	-70
 11815 02ba BB       		.byte	-69
 11816 02bb BC       		.byte	-68
 11817 02bc BD       		.byte	-67
 11818 02bd BE       		.byte	-66
 11819 02be BF       		.byte	-65
 11820 02bf C0       		.byte	-64
 11821 02c0 C1       		.byte	-63
 11822 02c1 C2       		.byte	-62
 11823 02c2 C3       		.byte	-61
 11824 02c3 C4       		.byte	-60
 11825 02c4 C5       		.byte	-59
 11826 02c5 C6       		.byte	-58
 11827 02c6 C7       		.byte	-57
 11828 02c7 C8       		.byte	-56
 11829 02c8 C9       		.byte	-55
 11830 02c9 CA       		.byte	-54
 11831 02ca CB       		.byte	-53
 11832 02cb CC       		.byte	-52
 11833 02cc CD       		.byte	-51
 11834 02cd CE       		.byte	-50
 11835 02ce CF       		.byte	-49
 11836 02cf D0       		.byte	-48
 11837 02d0 D1       		.byte	-47
 11838 02d1 D2       		.byte	-46
 11839 02d2 D3       		.byte	-45
 11840 02d3 D4       		.byte	-44
 11841 02d4 D5       		.byte	-43
 11842 02d5 D6       		.byte	-42
 11843 02d6 D7       		.byte	-41
 11844 02d7 D8       		.byte	-40
 11845 02d8 D9       		.byte	-39
 11846 02d9 DA       		.byte	-38
 11847 02da DB       		.byte	-37
 11848 02db DC       		.byte	-36
 11849 02dc DD       		.byte	-35
 11850 02dd DE       		.byte	-34
 11851 02de DF       		.byte	-33
 11852 02df E0       		.byte	-32
 11853 02e0 E1       		.byte	-31
 11854 02e1 E2       		.byte	-30
 11855 02e2 E3       		.byte	-29
 11856 02e3 E4       		.byte	-28
 11857 02e4 E5       		.byte	-27
 11858 02e5 E6       		.byte	-26
 11859 02e6 E7       		.byte	-25
 11860 02e7 E8       		.byte	-24
 11861 02e8 E9       		.byte	-23
 11862 02e9 EA       		.byte	-22
 11863 02ea EB       		.byte	-21
 11864 02eb EC       		.byte	-20
 11865 02ec ED       		.byte	-19
 11866 02ed EE       		.byte	-18
 11867 02ee EF       		.byte	-17
 11868 02ef F0       		.byte	-16
 11869 02f0 F1       		.byte	-15
 11870 02f1 F2       		.byte	-14
 11871 02f2 F3       		.byte	-13
 11872 02f3 F4       		.byte	-12
 11873 02f4 F5       		.byte	-11
 11874 02f5 F6       		.byte	-10
 11875 02f6 F7       		.byte	-9
 11876 02f7 F8       		.byte	-8
 11877 02f8 F9       		.byte	-7
 11878 02f9 FA       		.byte	-6
 11879 02fa FB       		.byte	-5
 11880 02fb FC       		.byte	-4
 11881 02fc FD       		.byte	-3
 11882 02fd FE       		.byte	-2
 11883 02fe FF       		.byte	-1
 11884 02ff 00       		.byte	0
 11885 0300 01       		.byte	1
 11886 0301 02       		.byte	2
 11887 0302 03       		.byte	3
 11888 0303 04       		.byte	4
 11889 0304 05       		.byte	5
 11890 0305 06       		.byte	6
 11891 0306 07       		.byte	7
 11892 0307 08       		.byte	8
 11893 0308 09       		.byte	9
 11894 0309 0A       		.byte	10
 11895 030a 0B       		.byte	11
 11896 030b 0C       		.byte	12
 11897 030c 0D       		.byte	13
 11898 030d 0E       		.byte	14
 11899 030e 0F       		.byte	15
 11900 030f 10       		.byte	16
 11901 0310 11       		.byte	17
 11902 0311 12       		.byte	18
 11903 0312 13       		.byte	19
 11904 0313 14       		.byte	20
 11905 0314 15       		.byte	21
 11906 0315 16       		.byte	22
 11907 0316 17       		.byte	23
 11908 0317 18       		.byte	24
 11909 0318 19       		.byte	25
 11910 0319 1A       		.byte	26
 11911 031a 1B       		.byte	27
 11912 031b 1C       		.byte	28
 11913 031c 1D       		.byte	29
 11914 031d 1E       		.byte	30
 11915 031e 1F       		.byte	31
 11916 031f 20       		.byte	32
 11917 0320 21       		.byte	33
 11918 0321 22       		.byte	34
 11919 0322 23       		.byte	35
 11920 0323 24       		.byte	36
 11921 0324 25       		.byte	37
 11922 0325 26       		.byte	38
 11923 0326 27       		.byte	39
 11924 0327 28       		.byte	40
 11925 0328 29       		.byte	41
 11926 0329 2A       		.byte	42
 11927 032a 2B       		.byte	43
 11928 032b 2C       		.byte	44
 11929 032c 2D       		.byte	45
 11930 032d 2E       		.byte	46
 11931 032e 2F       		.byte	47
 11932 032f 30       		.byte	48
 11933 0330 31       		.byte	49
 11934 0331 32       		.byte	50
 11935 0332 33       		.byte	51
 11936 0333 34       		.byte	52
 11937 0334 35       		.byte	53
 11938 0335 36       		.byte	54
 11939 0336 37       		.byte	55
 11940 0337 38       		.byte	56
 11941 0338 39       		.byte	57
 11942 0339 3A       		.byte	58
 11943 033a 3B       		.byte	59
 11944 033b 3C       		.byte	60
 11945 033c 3D       		.byte	61
 11946 033d 3E       		.byte	62
 11947 033e 3F       		.byte	63
 11948 033f 40       		.byte	64
 11949 0340 41       		.byte	65
 11950 0341 42       		.byte	66
 11951 0342 43       		.byte	67
 11952 0343 44       		.byte	68
 11953 0344 45       		.byte	69
 11954 0345 46       		.byte	70
 11955 0346 47       		.byte	71
 11956 0347 48       		.byte	72
 11957 0348 49       		.byte	73
 11958 0349 4A       		.byte	74
 11959 034a 4B       		.byte	75
 11960 034b 4C       		.byte	76
 11961 034c 4D       		.byte	77
 11962 034d 4E       		.byte	78
 11963 034e 4F       		.byte	79
 11964 034f 50       		.byte	80
 11965 0350 51       		.byte	81
 11966 0351 52       		.byte	82
 11967 0352 53       		.byte	83
 11968 0353 54       		.byte	84
 11969 0354 55       		.byte	85
 11970 0355 56       		.byte	86
 11971 0356 57       		.byte	87
 11972 0357 58       		.byte	88
 11973 0358 59       		.byte	89
 11974 0359 5A       		.byte	90
 11975 035a 5B       		.byte	91
 11976 035b 5C       		.byte	92
 11977 035c 5D       		.byte	93
 11978 035d 5E       		.byte	94
 11979 035e 5F       		.byte	95
 11980 035f 60       		.byte	96
 11981 0360 61       		.byte	97
 11982 0361 62       		.byte	98
 11983 0362 63       		.byte	99
 11984 0363 64       		.byte	100
 11985 0364 65       		.byte	101
 11986 0365 66       		.byte	102
 11987 0366 67       		.byte	103
 11988 0367 68       		.byte	104
 11989 0368 69       		.byte	105
 11990 0369 6A       		.byte	106
 11991 036a 6B       		.byte	107
 11992 036b 6C       		.byte	108
 11993 036c 6D       		.byte	109
 11994 036d 6E       		.byte	110
 11995 036e 6F       		.byte	111
 11996 036f 70       		.byte	112
 11997 0370 71       		.byte	113
 11998 0371 72       		.byte	114
 11999 0372 73       		.byte	115
 12000 0373 74       		.byte	116
 12001 0374 75       		.byte	117
 12002 0375 76       		.byte	118
 12003 0376 77       		.byte	119
 12004 0377 78       		.byte	120
 12005 0378 79       		.byte	121
 12006 0379 7A       		.byte	122
 12007 037a 7B       		.byte	123
 12008 037b 7C       		.byte	124
 12009 037c 7D       		.byte	125
 12010 037d 7E       		.byte	126
 12011 037e 7F       		.byte	127
 12012 037f 80       		.byte	-128
 12013 0380 81       		.byte	-127
 12014 0381 82       		.byte	-126
 12015 0382 83       		.byte	-125
 12016 0383 84       		.byte	-124
 12017 0384 85       		.byte	-123
 12018 0385 86       		.byte	-122
 12019 0386 87       		.byte	-121
 12020 0387 88       		.byte	-120
 12021 0388 89       		.byte	-119
 12022 0389 8A       		.byte	-118
 12023 038a 8B       		.byte	-117
 12024 038b 8C       		.byte	-116
 12025 038c 8D       		.byte	-115
 12026 038d 8E       		.byte	-114
 12027 038e 8F       		.byte	-113
 12028 038f 90       		.byte	-112
 12029 0390 91       		.byte	-111
 12030 0391 92       		.byte	-110
 12031 0392 93       		.byte	-109
 12032 0393 94       		.byte	-108
 12033 0394 95       		.byte	-107
 12034 0395 96       		.byte	-106
 12035 0396 97       		.byte	-105
 12036 0397 98       		.byte	-104
 12037 0398 99       		.byte	-103
 12038 0399 9A       		.byte	-102
 12039 039a 9B       		.byte	-101
 12040 039b 9C       		.byte	-100
 12041 039c 9D       		.byte	-99
 12042 039d 9E       		.byte	-98
 12043 039e 9F       		.byte	-97
 12044 039f A0       		.byte	-96
 12045 03a0 A1       		.byte	-95
 12046 03a1 A2       		.byte	-94
 12047 03a2 A3       		.byte	-93
 12048 03a3 A4       		.byte	-92
 12049 03a4 A5       		.byte	-91
 12050 03a5 A6       		.byte	-90
 12051 03a6 A7       		.byte	-89
 12052 03a7 A8       		.byte	-88
 12053 03a8 A9       		.byte	-87
 12054 03a9 AA       		.byte	-86
 12055 03aa AB       		.byte	-85
 12056 03ab AC       		.byte	-84
 12057 03ac AD       		.byte	-83
 12058 03ad AE       		.byte	-82
 12059 03ae AF       		.byte	-81
 12060 03af B0       		.byte	-80
 12061 03b0 B1       		.byte	-79
 12062 03b1 B2       		.byte	-78
 12063 03b2 B3       		.byte	-77
 12064 03b3 B4       		.byte	-76
 12065 03b4 B5       		.byte	-75
 12066 03b5 B6       		.byte	-74
 12067 03b6 B7       		.byte	-73
 12068 03b7 B8       		.byte	-72
 12069 03b8 B9       		.byte	-71
 12070 03b9 BA       		.byte	-70
 12071 03ba BB       		.byte	-69
 12072 03bb BC       		.byte	-68
 12073 03bc BD       		.byte	-67
 12074 03bd BE       		.byte	-66
 12075 03be BF       		.byte	-65
 12076 03bf C0       		.byte	-64
 12077 03c0 C1       		.byte	-63
 12078 03c1 C2       		.byte	-62
 12079 03c2 C3       		.byte	-61
 12080 03c3 C4       		.byte	-60
 12081 03c4 C5       		.byte	-59
 12082 03c5 C6       		.byte	-58
 12083 03c6 C7       		.byte	-57
 12084 03c7 C8       		.byte	-56
 12085 03c8 C9       		.byte	-55
 12086 03c9 CA       		.byte	-54
 12087 03ca CB       		.byte	-53
 12088 03cb CC       		.byte	-52
 12089 03cc CD       		.byte	-51
 12090 03cd CE       		.byte	-50
 12091 03ce CF       		.byte	-49
 12092 03cf D0       		.byte	-48
 12093 03d0 D1       		.byte	-47
 12094 03d1 D2       		.byte	-46
 12095 03d2 D3       		.byte	-45
 12096 03d3 D4       		.byte	-44
 12097 03d4 D5       		.byte	-43
 12098 03d5 D6       		.byte	-42
 12099 03d6 D7       		.byte	-41
 12100 03d7 D8       		.byte	-40
 12101 03d8 D9       		.byte	-39
 12102 03d9 DA       		.byte	-38
 12103 03da DB       		.byte	-37
 12104 03db DC       		.byte	-36
 12105 03dc DD       		.byte	-35
 12106 03dd DE       		.byte	-34
 12107 03de DF       		.byte	-33
 12108 03df E0       		.byte	-32
 12109 03e0 E1       		.byte	-31
 12110 03e1 E2       		.byte	-30
 12111 03e2 E3       		.byte	-29
 12112 03e3 E4       		.byte	-28
 12113 03e4 E5       		.byte	-27
 12114 03e5 E6       		.byte	-26
 12115 03e6 E7       		.byte	-25
 12116 03e7 E8       		.byte	-24
 12117 03e8 E9       		.byte	-23
 12118 03e9 EA       		.byte	-22
 12119 03ea EB       		.byte	-21
 12120 03eb EC       		.byte	-20
 12121 03ec ED       		.byte	-19
 12122 03ed EE       		.byte	-18
 12123 03ee EF       		.byte	-17
 12124 03ef F0       		.byte	-16
 12125 03f0 F1       		.byte	-15
 12126 03f1 F2       		.byte	-14
 12127 03f2 F3       		.byte	-13
 12128 03f3 F4       		.byte	-12
 12129 03f4 F5       		.byte	-11
 12130 03f5 F6       		.byte	-10
 12131 03f6 F7       		.byte	-9
 12132 03f7 F8       		.byte	-8
 12133 03f8 F9       		.byte	-7
 12134 03f9 FA       		.byte	-6
 12135 03fa FB       		.byte	-5
 12136 03fb FC       		.byte	-4
 12137 03fc FD       		.byte	-3
 12138 03fd FE       		.byte	-2
 12139 03fe FF       		.byte	-1
 12140 03ff 00       		.byte	0
 12141 0400 01       		.byte	1
 12142 0401 02       		.byte	2
 12143 0402 03       		.byte	3
 12144 0403 04       		.byte	4
 12145 0404 05       		.byte	5
 12146 0405 06       		.byte	6
 12147 0406 07       		.byte	7
 12148 0407 08       		.byte	8
 12149 0408 09       		.byte	9
 12150 0409 0A       		.byte	10
 12151 040a 0B       		.byte	11
 12152 040b 0C       		.byte	12
 12153 040c 0D       		.byte	13
 12154 040d 0E       		.byte	14
 12155 040e 0F       		.byte	15
 12156 040f 10       		.byte	16
 12157 0410 11       		.byte	17
 12158 0411 12       		.byte	18
 12159 0412 13       		.byte	19
 12160 0413 14       		.byte	20
 12161 0414 15       		.byte	21
 12162 0415 16       		.byte	22
 12163 0416 17       		.byte	23
 12164 0417 18       		.byte	24
 12165 0418 19       		.byte	25
 12166 0419 1A       		.byte	26
 12167 041a 1B       		.byte	27
 12168 041b 1C       		.byte	28
 12169 041c 1D       		.byte	29
 12170 041d 1E       		.byte	30
 12171 041e 1F       		.byte	31
 12172 041f 20       		.byte	32
 12173 0420 21       		.byte	33
 12174 0421 22       		.byte	34
 12175 0422 23       		.byte	35
 12176 0423 24       		.byte	36
 12177 0424 25       		.byte	37
 12178 0425 26       		.byte	38
 12179 0426 27       		.byte	39
 12180 0427 28       		.byte	40
 12181 0428 29       		.byte	41
 12182 0429 2A       		.byte	42
 12183 042a 2B       		.byte	43
 12184 042b 2C       		.byte	44
 12185 042c 2D       		.byte	45
 12186 042d 2E       		.byte	46
 12187 042e 2F       		.byte	47
 12188 042f 30       		.byte	48
 12189 0430 31       		.byte	49
 12190 0431 32       		.byte	50
 12191 0432 33       		.byte	51
 12192 0433 34       		.byte	52
 12193 0434 35       		.byte	53
 12194 0435 36       		.byte	54
 12195 0436 37       		.byte	55
 12196 0437 38       		.byte	56
 12197 0438 39       		.byte	57
 12198 0439 3A       		.byte	58
 12199 043a 3B       		.byte	59
 12200 043b 3C       		.byte	60
 12201 043c 3D       		.byte	61
 12202 043d 3E       		.byte	62
 12203 043e 3F       		.byte	63
 12204 043f 40       		.byte	64
 12205 0440 41       		.byte	65
 12206 0441 42       		.byte	66
 12207 0442 43       		.byte	67
 12208 0443 44       		.byte	68
 12209 0444 45       		.byte	69
 12210 0445 46       		.byte	70
 12211 0446 47       		.byte	71
 12212 0447 48       		.byte	72
 12213 0448 49       		.byte	73
 12214 0449 4A       		.byte	74
 12215 044a 4B       		.byte	75
 12216 044b 4C       		.byte	76
 12217 044c 4D       		.byte	77
 12218 044d 4E       		.byte	78
 12219 044e 4F       		.byte	79
 12220 044f 50       		.byte	80
 12221 0450 51       		.byte	81
 12222 0451 52       		.byte	82
 12223 0452 53       		.byte	83
 12224 0453 54       		.byte	84
 12225 0454 55       		.byte	85
 12226 0455 56       		.byte	86
 12227 0456 57       		.byte	87
 12228 0457 58       		.byte	88
 12229 0458 59       		.byte	89
 12230 0459 5A       		.byte	90
 12231 045a 5B       		.byte	91
 12232 045b 5C       		.byte	92
 12233 045c 5D       		.byte	93
 12234 045d 5E       		.byte	94
 12235 045e 5F       		.byte	95
 12236 045f 60       		.byte	96
 12237 0460 61       		.byte	97
 12238 0461 62       		.byte	98
 12239 0462 63       		.byte	99
 12240 0463 64       		.byte	100
 12241 0464 65       		.byte	101
 12242 0465 66       		.byte	102
 12243 0466 67       		.byte	103
 12244 0467 68       		.byte	104
 12245 0468 69       		.byte	105
 12246 0469 6A       		.byte	106
 12247 046a 6B       		.byte	107
 12248 046b 6C       		.byte	108
 12249 046c 6D       		.byte	109
 12250 046d 6E       		.byte	110
 12251 046e 6F       		.byte	111
 12252 046f 70       		.byte	112
 12253 0470 71       		.byte	113
 12254 0471 72       		.byte	114
 12255 0472 73       		.byte	115
 12256 0473 74       		.byte	116
 12257 0474 75       		.byte	117
 12258 0475 76       		.byte	118
 12259 0476 77       		.byte	119
 12260 0477 78       		.byte	120
 12261 0478 79       		.byte	121
 12262 0479 7A       		.byte	122
 12263 047a 7B       		.byte	123
 12264 047b 7C       		.byte	124
 12265 047c 7D       		.byte	125
 12266 047d 7E       		.byte	126
 12267 047e 7F       		.byte	127
 12268 047f 80       		.byte	-128
 12269 0480 81       		.byte	-127
 12270 0481 82       		.byte	-126
 12271 0482 83       		.byte	-125
 12272 0483 84       		.byte	-124
 12273 0484 85       		.byte	-123
 12274 0485 86       		.byte	-122
 12275 0486 87       		.byte	-121
 12276 0487 88       		.byte	-120
 12277 0488 89       		.byte	-119
 12278 0489 8A       		.byte	-118
 12279 048a 8B       		.byte	-117
 12280 048b 8C       		.byte	-116
 12281 048c 8D       		.byte	-115
 12282 048d 8E       		.byte	-114
 12283 048e 8F       		.byte	-113
 12284 048f 90       		.byte	-112
 12285 0490 91       		.byte	-111
 12286 0491 92       		.byte	-110
 12287 0492 93       		.byte	-109
 12288 0493 94       		.byte	-108
 12289 0494 95       		.byte	-107
 12290 0495 96       		.byte	-106
 12291 0496 97       		.byte	-105
 12292 0497 98       		.byte	-104
 12293 0498 99       		.byte	-103
 12294 0499 9A       		.byte	-102
 12295 049a 9B       		.byte	-101
 12296 049b 9C       		.byte	-100
 12297 049c 9D       		.byte	-99
 12298 049d 9E       		.byte	-98
 12299 049e 9F       		.byte	-97
 12300 049f A0       		.byte	-96
 12301 04a0 A1       		.byte	-95
 12302 04a1 A2       		.byte	-94
 12303 04a2 A3       		.byte	-93
 12304 04a3 A4       		.byte	-92
 12305 04a4 A5       		.byte	-91
 12306 04a5 A6       		.byte	-90
 12307 04a6 A7       		.byte	-89
 12308 04a7 A8       		.byte	-88
 12309 04a8 A9       		.byte	-87
 12310 04a9 AA       		.byte	-86
 12311 04aa AB       		.byte	-85
 12312 04ab AC       		.byte	-84
 12313 04ac AD       		.byte	-83
 12314 04ad AE       		.byte	-82
 12315 04ae AF       		.byte	-81
 12316 04af B0       		.byte	-80
 12317 04b0 B1       		.byte	-79
 12318 04b1 B2       		.byte	-78
 12319 04b2 B3       		.byte	-77
 12320 04b3 B4       		.byte	-76
 12321 04b4 B5       		.byte	-75
 12322 04b5 B6       		.byte	-74
 12323 04b6 B7       		.byte	-73
 12324 04b7 B8       		.byte	-72
 12325 04b8 B9       		.byte	-71
 12326 04b9 BA       		.byte	-70
 12327 04ba BB       		.byte	-69
 12328 04bb BC       		.byte	-68
 12329 04bc BD       		.byte	-67
 12330 04bd BE       		.byte	-66
 12331 04be BF       		.byte	-65
 12332 04bf C0       		.byte	-64
 12333 04c0 C1       		.byte	-63
 12334 04c1 C2       		.byte	-62
 12335 04c2 C3       		.byte	-61
 12336 04c3 C4       		.byte	-60
 12337 04c4 C5       		.byte	-59
 12338 04c5 C6       		.byte	-58
 12339 04c6 C7       		.byte	-57
 12340 04c7 C8       		.byte	-56
 12341 04c8 C9       		.byte	-55
 12342 04c9 CA       		.byte	-54
 12343 04ca CB       		.byte	-53
 12344 04cb CC       		.byte	-52
 12345 04cc CD       		.byte	-51
 12346 04cd CE       		.byte	-50
 12347 04ce CF       		.byte	-49
 12348 04cf D0       		.byte	-48
 12349 04d0 D1       		.byte	-47
 12350 04d1 D2       		.byte	-46
 12351 04d2 D3       		.byte	-45
 12352 04d3 D4       		.byte	-44
 12353 04d4 D5       		.byte	-43
 12354 04d5 D6       		.byte	-42
 12355 04d6 D7       		.byte	-41
 12356 04d7 D8       		.byte	-40
 12357 04d8 D9       		.byte	-39
 12358 04d9 DA       		.byte	-38
 12359 04da DB       		.byte	-37
 12360 04db DC       		.byte	-36
 12361 04dc DD       		.byte	-35
 12362 04dd DE       		.byte	-34
 12363 04de DF       		.byte	-33
 12364 04df E0       		.byte	-32
 12365 04e0 E1       		.byte	-31
 12366 04e1 E2       		.byte	-30
 12367 04e2 E3       		.byte	-29
 12368 04e3 E4       		.byte	-28
 12369 04e4 E5       		.byte	-27
 12370 04e5 E6       		.byte	-26
 12371 04e6 E7       		.byte	-25
 12372 04e7 E8       		.byte	-24
 12373 04e8 E9       		.byte	-23
 12374 04e9 EA       		.byte	-22
 12375 04ea EB       		.byte	-21
 12376 04eb EC       		.byte	-20
 12377 04ec ED       		.byte	-19
 12378 04ed EE       		.byte	-18
 12379 04ee EF       		.byte	-17
 12380 04ef F0       		.byte	-16
 12381 04f0 F1       		.byte	-15
 12382 04f1 F2       		.byte	-14
 12383 04f2 F3       		.byte	-13
 12384 04f3 F4       		.byte	-12
 12385 04f4 F5       		.byte	-11
 12386 04f5 F6       		.byte	-10
 12387 04f6 F7       		.byte	-9
 12388 04f7 F8       		.byte	-8
 12389 04f8 F9       		.byte	-7
 12390 04f9 FA       		.byte	-6
 12391 04fa FB       		.byte	-5
 12392 04fb FC       		.byte	-4
 12393 04fc FD       		.byte	-3
 12394 04fd FE       		.byte	-2
 12395 04fe FF       		.byte	-1
 12396 04ff 00       		.byte	0
 12397 0500 01       		.byte	1
 12398 0501 02       		.byte	2
 12399 0502 03       		.byte	3
 12400 0503 04       		.byte	4
 12401 0504 05       		.byte	5
 12402 0505 06       		.byte	6
 12403 0506 07       		.byte	7
 12404 0507 08       		.byte	8
 12405 0508 09       		.byte	9
 12406 0509 0A       		.byte	10
 12407 050a 0B       		.byte	11
 12408 050b 0C       		.byte	12
 12409 050c 0D       		.byte	13
 12410 050d 0E       		.byte	14
 12411 050e 0F       		.byte	15
 12412 050f 10       		.byte	16
 12413 0510 11       		.byte	17
 12414 0511 12       		.byte	18
 12415 0512 13       		.byte	19
 12416 0513 14       		.byte	20
 12417 0514 15       		.byte	21
 12418 0515 16       		.byte	22
 12419 0516 17       		.byte	23
 12420 0517 18       		.byte	24
 12421 0518 19       		.byte	25
 12422 0519 1A       		.byte	26
 12423 051a 1B       		.byte	27
 12424 051b 1C       		.byte	28
 12425 051c 1D       		.byte	29
 12426 051d 1E       		.byte	30
 12427 051e 1F       		.byte	31
 12428 051f 20       		.byte	32
 12429 0520 21       		.byte	33
 12430 0521 22       		.byte	34
 12431 0522 23       		.byte	35
 12432 0523 24       		.byte	36
 12433 0524 25       		.byte	37
 12434 0525 26       		.byte	38
 12435 0526 27       		.byte	39
 12436 0527 28       		.byte	40
 12437 0528 29       		.byte	41
 12438 0529 2A       		.byte	42
 12439 052a 2B       		.byte	43
 12440 052b 2C       		.byte	44
 12441 052c 2D       		.byte	45
 12442 052d 2E       		.byte	46
 12443 052e 2F       		.byte	47
 12444 052f 30       		.byte	48
 12445 0530 31       		.byte	49
 12446 0531 32       		.byte	50
 12447 0532 33       		.byte	51
 12448 0533 34       		.byte	52
 12449 0534 35       		.byte	53
 12450 0535 36       		.byte	54
 12451 0536 37       		.byte	55
 12452 0537 38       		.byte	56
 12453 0538 39       		.byte	57
 12454 0539 3A       		.byte	58
 12455 053a 3B       		.byte	59
 12456 053b 3C       		.byte	60
 12457 053c 3D       		.byte	61
 12458 053d 3E       		.byte	62
 12459 053e 3F       		.byte	63
 12460 053f 40       		.byte	64
 12461 0540 41       		.byte	65
 12462 0541 42       		.byte	66
 12463 0542 43       		.byte	67
 12464 0543 44       		.byte	68
 12465 0544 45       		.byte	69
 12466 0545 46       		.byte	70
 12467 0546 47       		.byte	71
 12468 0547 48       		.byte	72
 12469 0548 49       		.byte	73
 12470 0549 4A       		.byte	74
 12471 054a 4B       		.byte	75
 12472 054b 4C       		.byte	76
 12473 054c 4D       		.byte	77
 12474 054d 4E       		.byte	78
 12475 054e 4F       		.byte	79
 12476 054f 50       		.byte	80
 12477 0550 51       		.byte	81
 12478 0551 52       		.byte	82
 12479 0552 53       		.byte	83
 12480 0553 54       		.byte	84
 12481 0554 55       		.byte	85
 12482 0555 56       		.byte	86
 12483 0556 57       		.byte	87
 12484 0557 58       		.byte	88
 12485 0558 59       		.byte	89
 12486 0559 5A       		.byte	90
 12487 055a 5B       		.byte	91
 12488 055b 5C       		.byte	92
 12489 055c 5D       		.byte	93
 12490 055d 5E       		.byte	94
 12491 055e 5F       		.byte	95
 12492 055f 60       		.byte	96
 12493 0560 61       		.byte	97
 12494 0561 62       		.byte	98
 12495 0562 63       		.byte	99
 12496 0563 64       		.byte	100
 12497 0564 65       		.byte	101
 12498 0565 66       		.byte	102
 12499 0566 67       		.byte	103
 12500 0567 68       		.byte	104
 12501 0568 69       		.byte	105
 12502 0569 6A       		.byte	106
 12503 056a 6B       		.byte	107
 12504 056b 6C       		.byte	108
 12505 056c 6D       		.byte	109
 12506 056d 6E       		.byte	110
 12507 056e 6F       		.byte	111
 12508 056f 70       		.byte	112
 12509 0570 71       		.byte	113
 12510 0571 72       		.byte	114
 12511 0572 73       		.byte	115
 12512 0573 74       		.byte	116
 12513 0574 75       		.byte	117
 12514 0575 76       		.byte	118
 12515 0576 77       		.byte	119
 12516 0577 78       		.byte	120
 12517 0578 79       		.byte	121
 12518 0579 7A       		.byte	122
 12519 057a 7B       		.byte	123
 12520 057b 7C       		.byte	124
 12521 057c 7D       		.byte	125
 12522 057d 7E       		.byte	126
 12523 057e 7F       		.byte	127
 12524 057f 80       		.byte	-128
 12525 0580 81       		.byte	-127
 12526 0581 82       		.byte	-126
 12527 0582 83       		.byte	-125
 12528 0583 84       		.byte	-124
 12529 0584 85       		.byte	-123
 12530 0585 86       		.byte	-122
 12531 0586 87       		.byte	-121
 12532 0587 88       		.byte	-120
 12533 0588 89       		.byte	-119
 12534 0589 8A       		.byte	-118
 12535 058a 8B       		.byte	-117
 12536 058b 8C       		.byte	-116
 12537 058c 8D       		.byte	-115
 12538 058d 8E       		.byte	-114
 12539 058e 8F       		.byte	-113
 12540 058f 90       		.byte	-112
 12541 0590 91       		.byte	-111
 12542 0591 92       		.byte	-110
 12543 0592 93       		.byte	-109
 12544 0593 94       		.byte	-108
 12545 0594 95       		.byte	-107
 12546 0595 96       		.byte	-106
 12547 0596 97       		.byte	-105
 12548 0597 98       		.byte	-104
 12549 0598 99       		.byte	-103
 12550 0599 9A       		.byte	-102
 12551 059a 9B       		.byte	-101
 12552 059b 9C       		.byte	-100
 12553 059c 9D       		.byte	-99
 12554 059d 9E       		.byte	-98
 12555 059e 9F       		.byte	-97
 12556 059f A0       		.byte	-96
 12557 05a0 A1       		.byte	-95
 12558 05a1 A2       		.byte	-94
 12559 05a2 A3       		.byte	-93
 12560 05a3 A4       		.byte	-92
 12561 05a4 A5       		.byte	-91
 12562 05a5 A6       		.byte	-90
 12563 05a6 A7       		.byte	-89
 12564 05a7 A8       		.byte	-88
 12565 05a8 A9       		.byte	-87
 12566 05a9 AA       		.byte	-86
 12567 05aa AB       		.byte	-85
 12568 05ab AC       		.byte	-84
 12569 05ac AD       		.byte	-83
 12570 05ad AE       		.byte	-82
 12571 05ae AF       		.byte	-81
 12572 05af B0       		.byte	-80
 12573 05b0 B1       		.byte	-79
 12574 05b1 B2       		.byte	-78
 12575 05b2 B3       		.byte	-77
 12576 05b3 B4       		.byte	-76
 12577 05b4 B5       		.byte	-75
 12578 05b5 B6       		.byte	-74
 12579 05b6 B7       		.byte	-73
 12580 05b7 B8       		.byte	-72
 12581 05b8 B9       		.byte	-71
 12582 05b9 BA       		.byte	-70
 12583 05ba BB       		.byte	-69
 12584 05bb BC       		.byte	-68
 12585 05bc BD       		.byte	-67
 12586 05bd BE       		.byte	-66
 12587 05be BF       		.byte	-65
 12588 05bf C0       		.byte	-64
 12589 05c0 C1       		.byte	-63
 12590 05c1 C2       		.byte	-62
 12591 05c2 C3       		.byte	-61
 12592 05c3 C4       		.byte	-60
 12593 05c4 C5       		.byte	-59
 12594 05c5 C6       		.byte	-58
 12595 05c6 C7       		.byte	-57
 12596 05c7 C8       		.byte	-56
 12597 05c8 C9       		.byte	-55
 12598 05c9 CA       		.byte	-54
 12599 05ca CB       		.byte	-53
 12600 05cb CC       		.byte	-52
 12601 05cc CD       		.byte	-51
 12602 05cd CE       		.byte	-50
 12603 05ce CF       		.byte	-49
 12604 05cf D0       		.byte	-48
 12605 05d0 D1       		.byte	-47
 12606 05d1 D2       		.byte	-46
 12607 05d2 D3       		.byte	-45
 12608 05d3 D4       		.byte	-44
 12609 05d4 D5       		.byte	-43
 12610 05d5 D6       		.byte	-42
 12611 05d6 D7       		.byte	-41
 12612 05d7 D8       		.byte	-40
 12613 05d8 D9       		.byte	-39
 12614 05d9 DA       		.byte	-38
 12615 05da DB       		.byte	-37
 12616 05db DC       		.byte	-36
 12617 05dc DD       		.byte	-35
 12618 05dd DE       		.byte	-34
 12619 05de DF       		.byte	-33
 12620 05df E0       		.byte	-32
 12621 05e0 E1       		.byte	-31
 12622 05e1 E2       		.byte	-30
 12623 05e2 E3       		.byte	-29
 12624 05e3 E4       		.byte	-28
 12625 05e4 E5       		.byte	-27
 12626 05e5 E6       		.byte	-26
 12627 05e6 E7       		.byte	-25
 12628 05e7 E8       		.byte	-24
 12629 05e8 E9       		.byte	-23
 12630 05e9 EA       		.byte	-22
 12631 05ea EB       		.byte	-21
 12632 05eb EC       		.byte	-20
 12633 05ec ED       		.byte	-19
 12634 05ed EE       		.byte	-18
 12635 05ee EF       		.byte	-17
 12636 05ef F0       		.byte	-16
 12637 05f0 F1       		.byte	-15
 12638 05f1 F2       		.byte	-14
 12639 05f2 F3       		.byte	-13
 12640 05f3 F4       		.byte	-12
 12641 05f4 F5       		.byte	-11
 12642 05f5 F6       		.byte	-10
 12643 05f6 F7       		.byte	-9
 12644 05f7 F8       		.byte	-8
 12645 05f8 F9       		.byte	-7
 12646 05f9 FA       		.byte	-6
 12647 05fa FB       		.byte	-5
 12648 05fb FC       		.byte	-4
 12649 05fc FD       		.byte	-3
 12650 05fd FE       		.byte	-2
 12651 05fe FF       		.byte	-1
 12652 05ff 00       		.byte	0
 12653 0600 01       		.byte	1
 12654 0601 02       		.byte	2
 12655 0602 03       		.byte	3
 12656 0603 04       		.byte	4
 12657 0604 05       		.byte	5
 12658 0605 06       		.byte	6
 12659 0606 07       		.byte	7
 12660 0607 08       		.byte	8
 12661 0608 09       		.byte	9
 12662 0609 0A       		.byte	10
 12663 060a 0B       		.byte	11
 12664 060b 0C       		.byte	12
 12665 060c 0D       		.byte	13
 12666 060d 0E       		.byte	14
 12667 060e 0F       		.byte	15
 12668 060f 10       		.byte	16
 12669 0610 11       		.byte	17
 12670 0611 12       		.byte	18
 12671 0612 13       		.byte	19
 12672 0613 14       		.byte	20
 12673 0614 15       		.byte	21
 12674 0615 16       		.byte	22
 12675 0616 17       		.byte	23
 12676 0617 18       		.byte	24
 12677 0618 19       		.byte	25
 12678 0619 1A       		.byte	26
 12679 061a 1B       		.byte	27
 12680 061b 1C       		.byte	28
 12681 061c 1D       		.byte	29
 12682 061d 1E       		.byte	30
 12683 061e 1F       		.byte	31
 12684 061f 20       		.byte	32
 12685 0620 21       		.byte	33
 12686 0621 22       		.byte	34
 12687 0622 23       		.byte	35
 12688 0623 24       		.byte	36
 12689 0624 25       		.byte	37
 12690 0625 26       		.byte	38
 12691 0626 27       		.byte	39
 12692 0627 28       		.byte	40
 12693 0628 29       		.byte	41
 12694 0629 2A       		.byte	42
 12695 062a 2B       		.byte	43
 12696 062b 2C       		.byte	44
 12697 062c 2D       		.byte	45
 12698 062d 2E       		.byte	46
 12699 062e 2F       		.byte	47
 12700 062f 30       		.byte	48
 12701 0630 31       		.byte	49
 12702 0631 32       		.byte	50
 12703 0632 33       		.byte	51
 12704 0633 34       		.byte	52
 12705 0634 35       		.byte	53
 12706 0635 36       		.byte	54
 12707 0636 37       		.byte	55
 12708 0637 38       		.byte	56
 12709 0638 39       		.byte	57
 12710 0639 3A       		.byte	58
 12711 063a 3B       		.byte	59
 12712 063b 3C       		.byte	60
 12713 063c 3D       		.byte	61
 12714 063d 3E       		.byte	62
 12715 063e 3F       		.byte	63
 12716 063f 40       		.byte	64
 12717 0640 41       		.byte	65
 12718 0641 42       		.byte	66
 12719 0642 43       		.byte	67
 12720 0643 44       		.byte	68
 12721 0644 45       		.byte	69
 12722 0645 46       		.byte	70
 12723 0646 47       		.byte	71
 12724 0647 48       		.byte	72
 12725 0648 49       		.byte	73
 12726 0649 4A       		.byte	74
 12727 064a 4B       		.byte	75
 12728 064b 4C       		.byte	76
 12729 064c 4D       		.byte	77
 12730 064d 4E       		.byte	78
 12731 064e 4F       		.byte	79
 12732 064f 50       		.byte	80
 12733 0650 51       		.byte	81
 12734 0651 52       		.byte	82
 12735 0652 53       		.byte	83
 12736 0653 54       		.byte	84
 12737 0654 55       		.byte	85
 12738 0655 56       		.byte	86
 12739 0656 57       		.byte	87
 12740 0657 58       		.byte	88
 12741 0658 59       		.byte	89
 12742 0659 5A       		.byte	90
 12743 065a 5B       		.byte	91
 12744 065b 5C       		.byte	92
 12745 065c 5D       		.byte	93
 12746 065d 5E       		.byte	94
 12747 065e 5F       		.byte	95
 12748 065f 60       		.byte	96
 12749 0660 61       		.byte	97
 12750 0661 62       		.byte	98
 12751 0662 63       		.byte	99
 12752 0663 64       		.byte	100
 12753 0664 65       		.byte	101
 12754 0665 66       		.byte	102
 12755 0666 67       		.byte	103
 12756 0667 68       		.byte	104
 12757 0668 69       		.byte	105
 12758 0669 6A       		.byte	106
 12759 066a 6B       		.byte	107
 12760 066b 6C       		.byte	108
 12761 066c 6D       		.byte	109
 12762 066d 6E       		.byte	110
 12763 066e 6F       		.byte	111
 12764 066f 70       		.byte	112
 12765 0670 71       		.byte	113
 12766 0671 72       		.byte	114
 12767 0672 73       		.byte	115
 12768 0673 74       		.byte	116
 12769 0674 75       		.byte	117
 12770 0675 76       		.byte	118
 12771 0676 77       		.byte	119
 12772 0677 78       		.byte	120
 12773 0678 79       		.byte	121
 12774 0679 7A       		.byte	122
 12775 067a 7B       		.byte	123
 12776 067b 7C       		.byte	124
 12777 067c 7D       		.byte	125
 12778 067d 7E       		.byte	126
 12779 067e 7F       		.byte	127
 12780 067f 80       		.byte	-128
 12781 0680 81       		.byte	-127
 12782 0681 82       		.byte	-126
 12783 0682 83       		.byte	-125
 12784 0683 84       		.byte	-124
 12785 0684 85       		.byte	-123
 12786 0685 86       		.byte	-122
 12787 0686 87       		.byte	-121
 12788 0687 88       		.byte	-120
 12789 0688 89       		.byte	-119
 12790 0689 8A       		.byte	-118
 12791 068a 8B       		.byte	-117
 12792 068b 8C       		.byte	-116
 12793 068c 8D       		.byte	-115
 12794 068d 8E       		.byte	-114
 12795 068e 8F       		.byte	-113
 12796 068f 90       		.byte	-112
 12797 0690 91       		.byte	-111
 12798 0691 92       		.byte	-110
 12799 0692 93       		.byte	-109
 12800 0693 94       		.byte	-108
 12801 0694 95       		.byte	-107
 12802 0695 96       		.byte	-106
 12803 0696 97       		.byte	-105
 12804 0697 98       		.byte	-104
 12805 0698 99       		.byte	-103
 12806 0699 9A       		.byte	-102
 12807 069a 9B       		.byte	-101
 12808 069b 9C       		.byte	-100
 12809 069c 9D       		.byte	-99
 12810 069d 9E       		.byte	-98
 12811 069e 9F       		.byte	-97
 12812 069f A0       		.byte	-96
 12813 06a0 A1       		.byte	-95
 12814 06a1 A2       		.byte	-94
 12815 06a2 A3       		.byte	-93
 12816 06a3 A4       		.byte	-92
 12817 06a4 A5       		.byte	-91
 12818 06a5 A6       		.byte	-90
 12819 06a6 A7       		.byte	-89
 12820 06a7 A8       		.byte	-88
 12821 06a8 A9       		.byte	-87
 12822 06a9 AA       		.byte	-86
 12823 06aa AB       		.byte	-85
 12824 06ab AC       		.byte	-84
 12825 06ac AD       		.byte	-83
 12826 06ad AE       		.byte	-82
 12827 06ae AF       		.byte	-81
 12828 06af B0       		.byte	-80
 12829 06b0 B1       		.byte	-79
 12830 06b1 B2       		.byte	-78
 12831 06b2 B3       		.byte	-77
 12832 06b3 B4       		.byte	-76
 12833 06b4 B5       		.byte	-75
 12834 06b5 B6       		.byte	-74
 12835 06b6 B7       		.byte	-73
 12836 06b7 B8       		.byte	-72
 12837 06b8 B9       		.byte	-71
 12838 06b9 BA       		.byte	-70
 12839 06ba BB       		.byte	-69
 12840 06bb BC       		.byte	-68
 12841 06bc BD       		.byte	-67
 12842 06bd BE       		.byte	-66
 12843 06be BF       		.byte	-65
 12844 06bf C0       		.byte	-64
 12845 06c0 C1       		.byte	-63
 12846 06c1 C2       		.byte	-62
 12847 06c2 C3       		.byte	-61
 12848 06c3 C4       		.byte	-60
 12849 06c4 C5       		.byte	-59
 12850 06c5 C6       		.byte	-58
 12851 06c6 C7       		.byte	-57
 12852 06c7 C8       		.byte	-56
 12853 06c8 C9       		.byte	-55
 12854 06c9 CA       		.byte	-54
 12855 06ca CB       		.byte	-53
 12856 06cb CC       		.byte	-52
 12857 06cc CD       		.byte	-51
 12858 06cd CE       		.byte	-50
 12859 06ce CF       		.byte	-49
 12860 06cf D0       		.byte	-48
 12861 06d0 D1       		.byte	-47
 12862 06d1 D2       		.byte	-46
 12863 06d2 D3       		.byte	-45
 12864 06d3 D4       		.byte	-44
 12865 06d4 D5       		.byte	-43
 12866 06d5 D6       		.byte	-42
 12867 06d6 D7       		.byte	-41
 12868 06d7 D8       		.byte	-40
 12869 06d8 D9       		.byte	-39
 12870 06d9 DA       		.byte	-38
 12871 06da DB       		.byte	-37
 12872 06db DC       		.byte	-36
 12873 06dc DD       		.byte	-35
 12874 06dd DE       		.byte	-34
 12875 06de DF       		.byte	-33
 12876 06df E0       		.byte	-32
 12877 06e0 E1       		.byte	-31
 12878 06e1 E2       		.byte	-30
 12879 06e2 E3       		.byte	-29
 12880 06e3 E4       		.byte	-28
 12881 06e4 E5       		.byte	-27
 12882 06e5 E6       		.byte	-26
 12883 06e6 E7       		.byte	-25
 12884 06e7 E8       		.byte	-24
 12885 06e8 E9       		.byte	-23
 12886 06e9 EA       		.byte	-22
 12887 06ea EB       		.byte	-21
 12888 06eb EC       		.byte	-20
 12889 06ec ED       		.byte	-19
 12890 06ed EE       		.byte	-18
 12891 06ee EF       		.byte	-17
 12892 06ef F0       		.byte	-16
 12893 06f0 F1       		.byte	-15
 12894 06f1 F2       		.byte	-14
 12895 06f2 F3       		.byte	-13
 12896 06f3 F4       		.byte	-12
 12897 06f4 F5       		.byte	-11
 12898 06f5 F6       		.byte	-10
 12899 06f6 F7       		.byte	-9
 12900 06f7 F8       		.byte	-8
 12901 06f8 F9       		.byte	-7
 12902 06f9 FA       		.byte	-6
 12903 06fa FB       		.byte	-5
 12904 06fb FC       		.byte	-4
 12905 06fc FD       		.byte	-3
 12906 06fd FE       		.byte	-2
 12907 06fe FF       		.byte	-1
 12908 06ff 00       		.byte	0
 12909 0700 01       		.byte	1
 12910 0701 02       		.byte	2
 12911 0702 03       		.byte	3
 12912 0703 04       		.byte	4
 12913 0704 05       		.byte	5
 12914 0705 06       		.byte	6
 12915 0706 07       		.byte	7
 12916 0707 08       		.byte	8
 12917 0708 09       		.byte	9
 12918 0709 0A       		.byte	10
 12919 070a 0B       		.byte	11
 12920 070b 0C       		.byte	12
 12921 070c 0D       		.byte	13
 12922 070d 0E       		.byte	14
 12923 070e 0F       		.byte	15
 12924 070f 10       		.byte	16
 12925 0710 11       		.byte	17
 12926 0711 12       		.byte	18
 12927 0712 13       		.byte	19
 12928 0713 14       		.byte	20
 12929 0714 15       		.byte	21
 12930 0715 16       		.byte	22
 12931 0716 17       		.byte	23
 12932 0717 18       		.byte	24
 12933 0718 19       		.byte	25
 12934 0719 1A       		.byte	26
 12935 071a 1B       		.byte	27
 12936 071b 1C       		.byte	28
 12937 071c 1D       		.byte	29
 12938 071d 1E       		.byte	30
 12939 071e 1F       		.byte	31
 12940 071f 20       		.byte	32
 12941 0720 21       		.byte	33
 12942 0721 22       		.byte	34
 12943 0722 23       		.byte	35
 12944 0723 24       		.byte	36
 12945 0724 25       		.byte	37
 12946 0725 26       		.byte	38
 12947 0726 27       		.byte	39
 12948 0727 28       		.byte	40
 12949 0728 29       		.byte	41
 12950 0729 2A       		.byte	42
 12951 072a 2B       		.byte	43
 12952 072b 2C       		.byte	44
 12953 072c 2D       		.byte	45
 12954 072d 2E       		.byte	46
 12955 072e 2F       		.byte	47
 12956 072f 30       		.byte	48
 12957 0730 31       		.byte	49
 12958 0731 32       		.byte	50
 12959 0732 33       		.byte	51
 12960 0733 34       		.byte	52
 12961 0734 35       		.byte	53
 12962 0735 36       		.byte	54
 12963 0736 37       		.byte	55
 12964 0737 38       		.byte	56
 12965 0738 39       		.byte	57
 12966 0739 3A       		.byte	58
 12967 073a 3B       		.byte	59
 12968 073b 3C       		.byte	60
 12969 073c 3D       		.byte	61
 12970 073d 3E       		.byte	62
 12971 073e 3F       		.byte	63
 12972 073f 40       		.byte	64
 12973 0740 41       		.byte	65
 12974 0741 42       		.byte	66
 12975 0742 43       		.byte	67
 12976 0743 44       		.byte	68
 12977 0744 45       		.byte	69
 12978 0745 46       		.byte	70
 12979 0746 47       		.byte	71
 12980 0747 48       		.byte	72
 12981 0748 49       		.byte	73
 12982 0749 4A       		.byte	74
 12983 074a 4B       		.byte	75
 12984 074b 4C       		.byte	76
 12985 074c 4D       		.byte	77
 12986 074d 4E       		.byte	78
 12987 074e 4F       		.byte	79
 12988 074f 50       		.byte	80
 12989 0750 51       		.byte	81
 12990 0751 52       		.byte	82
 12991 0752 53       		.byte	83
 12992 0753 54       		.byte	84
 12993 0754 55       		.byte	85
 12994 0755 56       		.byte	86
 12995 0756 57       		.byte	87
 12996 0757 58       		.byte	88
 12997 0758 59       		.byte	89
 12998 0759 5A       		.byte	90
 12999 075a 5B       		.byte	91
 13000 075b 5C       		.byte	92
 13001 075c 5D       		.byte	93
 13002 075d 5E       		.byte	94
 13003 075e 5F       		.byte	95
 13004 075f 60       		.byte	96
 13005 0760 61       		.byte	97
 13006 0761 62       		.byte	98
 13007 0762 63       		.byte	99
 13008 0763 64       		.byte	100
 13009 0764 65       		.byte	101
 13010 0765 66       		.byte	102
 13011 0766 67       		.byte	103
 13012 0767 68       		.byte	104
 13013 0768 69       		.byte	105
 13014 0769 6A       		.byte	106
 13015 076a 6B       		.byte	107
 13016 076b 6C       		.byte	108
 13017 076c 6D       		.byte	109
 13018 076d 6E       		.byte	110
 13019 076e 6F       		.byte	111
 13020 076f 70       		.byte	112
 13021 0770 71       		.byte	113
 13022 0771 72       		.byte	114
 13023 0772 73       		.byte	115
 13024 0773 74       		.byte	116
 13025 0774 75       		.byte	117
 13026 0775 76       		.byte	118
 13027 0776 77       		.byte	119
 13028 0777 78       		.byte	120
 13029 0778 79       		.byte	121
 13030 0779 7A       		.byte	122
 13031 077a 7B       		.byte	123
 13032 077b 7C       		.byte	124
 13033 077c 7D       		.byte	125
 13034 077d 7E       		.byte	126
 13035 077e 7F       		.byte	127
 13036 077f 80       		.byte	-128
 13037 0780 81       		.byte	-127
 13038 0781 82       		.byte	-126
 13039 0782 83       		.byte	-125
 13040 0783 84       		.byte	-124
 13041 0784 85       		.byte	-123
 13042 0785 86       		.byte	-122
 13043 0786 87       		.byte	-121
 13044 0787 88       		.byte	-120
 13045 0788 89       		.byte	-119
 13046 0789 8A       		.byte	-118
 13047 078a 8B       		.byte	-117
 13048 078b 8C       		.byte	-116
 13049 078c 8D       		.byte	-115
 13050 078d 8E       		.byte	-114
 13051 078e 8F       		.byte	-113
 13052 078f 90       		.byte	-112
 13053 0790 91       		.byte	-111
 13054 0791 92       		.byte	-110
 13055 0792 93       		.byte	-109
 13056 0793 94       		.byte	-108
 13057 0794 95       		.byte	-107
 13058 0795 96       		.byte	-106
 13059 0796 97       		.byte	-105
 13060 0797 98       		.byte	-104
 13061 0798 99       		.byte	-103
 13062 0799 9A       		.byte	-102
 13063 079a 9B       		.byte	-101
 13064 079b 9C       		.byte	-100
 13065 079c 9D       		.byte	-99
 13066 079d 9E       		.byte	-98
 13067 079e 9F       		.byte	-97
 13068 079f A0       		.byte	-96
 13069 07a0 A1       		.byte	-95
 13070 07a1 A2       		.byte	-94
 13071 07a2 A3       		.byte	-93
 13072 07a3 A4       		.byte	-92
 13073 07a4 A5       		.byte	-91
 13074 07a5 A6       		.byte	-90
 13075 07a6 A7       		.byte	-89
 13076 07a7 A8       		.byte	-88
 13077 07a8 A9       		.byte	-87
 13078 07a9 AA       		.byte	-86
 13079 07aa AB       		.byte	-85
 13080 07ab AC       		.byte	-84
 13081 07ac AD       		.byte	-83
 13082 07ad AE       		.byte	-82
 13083 07ae AF       		.byte	-81
 13084 07af B0       		.byte	-80
 13085 07b0 B1       		.byte	-79
 13086 07b1 B2       		.byte	-78
 13087 07b2 B3       		.byte	-77
 13088 07b3 B4       		.byte	-76
 13089 07b4 B5       		.byte	-75
 13090 07b5 B6       		.byte	-74
 13091 07b6 B7       		.byte	-73
 13092 07b7 B8       		.byte	-72
 13093 07b8 B9       		.byte	-71
 13094 07b9 BA       		.byte	-70
 13095 07ba BB       		.byte	-69
 13096 07bb BC       		.byte	-68
 13097 07bc BD       		.byte	-67
 13098 07bd BE       		.byte	-66
 13099 07be BF       		.byte	-65
 13100 07bf C0       		.byte	-64
 13101 07c0 C1       		.byte	-63
 13102 07c1 C2       		.byte	-62
 13103 07c2 C3       		.byte	-61
 13104 07c3 C4       		.byte	-60
 13105 07c4 C5       		.byte	-59
 13106 07c5 C6       		.byte	-58
 13107 07c6 C7       		.byte	-57
 13108 07c7 C8       		.byte	-56
 13109 07c8 C9       		.byte	-55
 13110 07c9 CA       		.byte	-54
 13111 07ca CB       		.byte	-53
 13112 07cb CC       		.byte	-52
 13113 07cc CD       		.byte	-51
 13114 07cd CE       		.byte	-50
 13115 07ce CF       		.byte	-49
 13116 07cf D0       		.byte	-48
 13117 07d0 D1       		.byte	-47
 13118 07d1 D2       		.byte	-46
 13119 07d2 D3       		.byte	-45
 13120 07d3 D4       		.byte	-44
 13121 07d4 D5       		.byte	-43
 13122 07d5 D6       		.byte	-42
 13123 07d6 D7       		.byte	-41
 13124 07d7 D8       		.byte	-40
 13125 07d8 D9       		.byte	-39
 13126 07d9 DA       		.byte	-38
 13127 07da DB       		.byte	-37
 13128 07db DC       		.byte	-36
 13129 07dc DD       		.byte	-35
 13130 07dd DE       		.byte	-34
 13131 07de DF       		.byte	-33
 13132 07df E0       		.byte	-32
 13133 07e0 E1       		.byte	-31
 13134 07e1 E2       		.byte	-30
 13135 07e2 E3       		.byte	-29
 13136 07e3 E4       		.byte	-28
 13137 07e4 E5       		.byte	-27
 13138 07e5 E6       		.byte	-26
 13139 07e6 E7       		.byte	-25
 13140 07e7 E8       		.byte	-24
 13141 07e8 E9       		.byte	-23
 13142 07e9 EA       		.byte	-22
 13143 07ea EB       		.byte	-21
 13144 07eb EC       		.byte	-20
 13145 07ec ED       		.byte	-19
 13146 07ed EE       		.byte	-18
 13147 07ee EF       		.byte	-17
 13148 07ef F0       		.byte	-16
 13149 07f0 F1       		.byte	-15
 13150 07f1 F2       		.byte	-14
 13151 07f2 F3       		.byte	-13
 13152 07f3 F4       		.byte	-12
 13153 07f4 F5       		.byte	-11
 13154 07f5 F6       		.byte	-10
 13155 07f6 F7       		.byte	-9
 13156 07f7 F8       		.byte	-8
 13157 07f8 F9       		.byte	-7
 13158 07f9 FA       		.byte	-6
 13159 07fa FB       		.byte	-5
 13160 07fb FC       		.byte	-4
 13161 07fc FD       		.byte	-3
 13162 07fd FE       		.byte	-2
 13163 07fe FF       		.byte	-1
 13164 07ff 00       		.byte	0
 13165 0800 01       		.byte	1
 13166 0801 02       		.byte	2
 13167 0802 03       		.byte	3
 13168 0803 04       		.byte	4
 13169 0804 05       		.byte	5
 13170 0805 06       		.byte	6
 13171 0806 07       		.byte	7
 13172 0807 08       		.byte	8
 13173 0808 09       		.byte	9
 13174 0809 0A       		.byte	10
 13175 080a 0B       		.byte	11
 13176 080b 0C       		.byte	12
 13177 080c 0D       		.byte	13
 13178 080d 0E       		.byte	14
 13179 080e 0F       		.byte	15
 13180 080f 10       		.byte	16
 13181 0810 11       		.byte	17
 13182 0811 12       		.byte	18
 13183 0812 13       		.byte	19
 13184 0813 14       		.byte	20
 13185 0814 15       		.byte	21
 13186 0815 16       		.byte	22
 13187 0816 17       		.byte	23
 13188 0817 18       		.byte	24
 13189 0818 19       		.byte	25
 13190 0819 1A       		.byte	26
 13191 081a 1B       		.byte	27
 13192 081b 1C       		.byte	28
 13193 081c 1D       		.byte	29
 13194 081d 1E       		.byte	30
 13195 081e 1F       		.byte	31
 13196 081f 20       		.byte	32
 13197 0820 21       		.byte	33
 13198 0821 22       		.byte	34
 13199 0822 23       		.byte	35
 13200 0823 24       		.byte	36
 13201 0824 25       		.byte	37
 13202 0825 26       		.byte	38
 13203 0826 27       		.byte	39
 13204 0827 28       		.byte	40
 13205 0828 29       		.byte	41
 13206 0829 2A       		.byte	42
 13207 082a 2B       		.byte	43
 13208 082b 2C       		.byte	44
 13209 082c 2D       		.byte	45
 13210 082d 2E       		.byte	46
 13211 082e 2F       		.byte	47
 13212 082f 30       		.byte	48
 13213 0830 31       		.byte	49
 13214 0831 32       		.byte	50
 13215 0832 33       		.byte	51
 13216 0833 34       		.byte	52
 13217 0834 35       		.byte	53
 13218 0835 36       		.byte	54
 13219 0836 37       		.byte	55
 13220 0837 38       		.byte	56
 13221 0838 39       		.byte	57
 13222 0839 3A       		.byte	58
 13223 083a 3B       		.byte	59
 13224 083b 3C       		.byte	60
 13225 083c 3D       		.byte	61
 13226 083d 3E       		.byte	62
 13227 083e 3F       		.byte	63
 13228 083f 40       		.byte	64
 13229 0840 41       		.byte	65
 13230 0841 42       		.byte	66
 13231 0842 43       		.byte	67
 13232 0843 44       		.byte	68
 13233 0844 45       		.byte	69
 13234 0845 46       		.byte	70
 13235 0846 47       		.byte	71
 13236 0847 48       		.byte	72
 13237 0848 49       		.byte	73
 13238 0849 4A       		.byte	74
 13239 084a 4B       		.byte	75
 13240 084b 4C       		.byte	76
 13241 084c 4D       		.byte	77
 13242 084d 4E       		.byte	78
 13243 084e 4F       		.byte	79
 13244 084f 50       		.byte	80
 13245 0850 51       		.byte	81
 13246 0851 52       		.byte	82
 13247 0852 53       		.byte	83
 13248 0853 54       		.byte	84
 13249 0854 55       		.byte	85
 13250 0855 56       		.byte	86
 13251 0856 57       		.byte	87
 13252 0857 58       		.byte	88
 13253 0858 59       		.byte	89
 13254 0859 5A       		.byte	90
 13255 085a 5B       		.byte	91
 13256 085b 5C       		.byte	92
 13257 085c 5D       		.byte	93
 13258 085d 5E       		.byte	94
 13259 085e 5F       		.byte	95
 13260 085f 60       		.byte	96
 13261 0860 61       		.byte	97
 13262 0861 62       		.byte	98
 13263 0862 63       		.byte	99
 13264 0863 64       		.byte	100
 13265 0864 65       		.byte	101
 13266 0865 66       		.byte	102
 13267 0866 67       		.byte	103
 13268 0867 68       		.byte	104
 13269 0868 69       		.byte	105
 13270 0869 6A       		.byte	106
 13271 086a 6B       		.byte	107
 13272 086b 6C       		.byte	108
 13273 086c 6D       		.byte	109
 13274 086d 6E       		.byte	110
 13275 086e 6F       		.byte	111
 13276 086f 70       		.byte	112
 13277 0870 71       		.byte	113
 13278 0871 72       		.byte	114
 13279 0872 73       		.byte	115
 13280 0873 74       		.byte	116
 13281 0874 75       		.byte	117
 13282 0875 76       		.byte	118
 13283 0876 77       		.byte	119
 13284 0877 78       		.byte	120
 13285 0878 79       		.byte	121
 13286 0879 7A       		.byte	122
 13287 087a 7B       		.byte	123
 13288 087b 7C       		.byte	124
 13289 087c 7D       		.byte	125
 13290 087d 7E       		.byte	126
 13291 087e 7F       		.byte	127
 13292 087f 80       		.byte	-128
 13293 0880 81       		.byte	-127
 13294 0881 82       		.byte	-126
 13295 0882 83       		.byte	-125
 13296 0883 84       		.byte	-124
 13297 0884 85       		.byte	-123
 13298 0885 86       		.byte	-122
 13299 0886 87       		.byte	-121
 13300 0887 88       		.byte	-120
 13301 0888 89       		.byte	-119
 13302 0889 8A       		.byte	-118
 13303 088a 8B       		.byte	-117
 13304 088b 8C       		.byte	-116
 13305 088c 8D       		.byte	-115
 13306 088d 8E       		.byte	-114
 13307 088e 8F       		.byte	-113
 13308 088f 90       		.byte	-112
 13309 0890 91       		.byte	-111
 13310 0891 92       		.byte	-110
 13311 0892 93       		.byte	-109
 13312 0893 94       		.byte	-108
 13313 0894 95       		.byte	-107
 13314 0895 96       		.byte	-106
 13315 0896 97       		.byte	-105
 13316 0897 98       		.byte	-104
 13317 0898 99       		.byte	-103
 13318 0899 9A       		.byte	-102
 13319 089a 9B       		.byte	-101
 13320 089b 9C       		.byte	-100
 13321 089c 9D       		.byte	-99
 13322 089d 9E       		.byte	-98
 13323 089e 9F       		.byte	-97
 13324 089f A0       		.byte	-96
 13325 08a0 A1       		.byte	-95
 13326 08a1 A2       		.byte	-94
 13327 08a2 A3       		.byte	-93
 13328 08a3 A4       		.byte	-92
 13329 08a4 A5       		.byte	-91
 13330 08a5 A6       		.byte	-90
 13331 08a6 A7       		.byte	-89
 13332 08a7 A8       		.byte	-88
 13333 08a8 A9       		.byte	-87
 13334 08a9 AA       		.byte	-86
 13335 08aa AB       		.byte	-85
 13336 08ab AC       		.byte	-84
 13337 08ac AD       		.byte	-83
 13338 08ad AE       		.byte	-82
 13339 08ae AF       		.byte	-81
 13340 08af B0       		.byte	-80
 13341 08b0 B1       		.byte	-79
 13342 08b1 B2       		.byte	-78
 13343 08b2 B3       		.byte	-77
 13344 08b3 B4       		.byte	-76
 13345 08b4 B5       		.byte	-75
 13346 08b5 B6       		.byte	-74
 13347 08b6 B7       		.byte	-73
 13348 08b7 B8       		.byte	-72
 13349 08b8 B9       		.byte	-71
 13350 08b9 BA       		.byte	-70
 13351 08ba BB       		.byte	-69
 13352 08bb BC       		.byte	-68
 13353 08bc BD       		.byte	-67
 13354 08bd BE       		.byte	-66
 13355 08be BF       		.byte	-65
 13356 08bf C0       		.byte	-64
 13357 08c0 C1       		.byte	-63
 13358 08c1 C2       		.byte	-62
 13359 08c2 C3       		.byte	-61
 13360 08c3 C4       		.byte	-60
 13361 08c4 C5       		.byte	-59
 13362 08c5 C6       		.byte	-58
 13363 08c6 C7       		.byte	-57
 13364 08c7 C8       		.byte	-56
 13365 08c8 C9       		.byte	-55
 13366 08c9 CA       		.byte	-54
 13367 08ca CB       		.byte	-53
 13368 08cb CC       		.byte	-52
 13369 08cc CD       		.byte	-51
 13370 08cd CE       		.byte	-50
 13371 08ce CF       		.byte	-49
 13372 08cf D0       		.byte	-48
 13373 08d0 D1       		.byte	-47
 13374 08d1 D2       		.byte	-46
 13375 08d2 D3       		.byte	-45
 13376 08d3 D4       		.byte	-44
 13377 08d4 D5       		.byte	-43
 13378 08d5 D6       		.byte	-42
 13379 08d6 D7       		.byte	-41
 13380 08d7 D8       		.byte	-40
 13381 08d8 D9       		.byte	-39
 13382 08d9 DA       		.byte	-38
 13383 08da DB       		.byte	-37
 13384 08db DC       		.byte	-36
 13385 08dc DD       		.byte	-35
 13386 08dd DE       		.byte	-34
 13387 08de DF       		.byte	-33
 13388 08df E0       		.byte	-32
 13389 08e0 E1       		.byte	-31
 13390 08e1 E2       		.byte	-30
 13391 08e2 E3       		.byte	-29
 13392 08e3 E4       		.byte	-28
 13393 08e4 E5       		.byte	-27
 13394 08e5 E6       		.byte	-26
 13395 08e6 E7       		.byte	-25
 13396 08e7 E8       		.byte	-24
 13397 08e8 E9       		.byte	-23
 13398 08e9 EA       		.byte	-22
 13399 08ea EB       		.byte	-21
 13400 08eb EC       		.byte	-20
 13401 08ec ED       		.byte	-19
 13402 08ed EE       		.byte	-18
 13403 08ee EF       		.byte	-17
 13404 08ef F0       		.byte	-16
 13405 08f0 F1       		.byte	-15
 13406 08f1 F2       		.byte	-14
 13407 08f2 F3       		.byte	-13
 13408 08f3 F4       		.byte	-12
 13409 08f4 F5       		.byte	-11
 13410 08f5 F6       		.byte	-10
 13411 08f6 F7       		.byte	-9
 13412 08f7 F8       		.byte	-8
 13413 08f8 F9       		.byte	-7
 13414 08f9 FA       		.byte	-6
 13415 08fa FB       		.byte	-5
 13416 08fb FC       		.byte	-4
 13417 08fc FD       		.byte	-3
 13418 08fd FE       		.byte	-2
 13419 08fe FF       		.byte	-1
 13420 08ff 00       		.byte	0
 13421 0900 01       		.byte	1
 13422 0901 02       		.byte	2
 13423 0902 03       		.byte	3
 13424 0903 04       		.byte	4
 13425 0904 05       		.byte	5
 13426 0905 06       		.byte	6
 13427 0906 07       		.byte	7
 13428 0907 08       		.byte	8
 13429 0908 09       		.byte	9
 13430 0909 0A       		.byte	10
 13431 090a 0B       		.byte	11
 13432 090b 0C       		.byte	12
 13433 090c 0D       		.byte	13
 13434 090d 0E       		.byte	14
 13435 090e 0F       		.byte	15
 13436 090f 10       		.byte	16
 13437 0910 11       		.byte	17
 13438 0911 12       		.byte	18
 13439 0912 13       		.byte	19
 13440 0913 14       		.byte	20
 13441 0914 15       		.byte	21
 13442 0915 16       		.byte	22
 13443 0916 17       		.byte	23
 13444 0917 18       		.byte	24
 13445 0918 19       		.byte	25
 13446 0919 1A       		.byte	26
 13447 091a 1B       		.byte	27
 13448 091b 1C       		.byte	28
 13449 091c 1D       		.byte	29
 13450 091d 1E       		.byte	30
 13451 091e 1F       		.byte	31
 13452 091f 20       		.byte	32
 13453 0920 21       		.byte	33
 13454 0921 22       		.byte	34
 13455 0922 23       		.byte	35
 13456 0923 24       		.byte	36
 13457 0924 25       		.byte	37
 13458 0925 26       		.byte	38
 13459 0926 27       		.byte	39
 13460 0927 28       		.byte	40
 13461 0928 29       		.byte	41
 13462 0929 2A       		.byte	42
 13463 092a 2B       		.byte	43
 13464 092b 2C       		.byte	44
 13465 092c 2D       		.byte	45
 13466 092d 2E       		.byte	46
 13467 092e 2F       		.byte	47
 13468 092f 30       		.byte	48
 13469 0930 31       		.byte	49
 13470 0931 32       		.byte	50
 13471 0932 33       		.byte	51
 13472 0933 34       		.byte	52
 13473 0934 35       		.byte	53
 13474 0935 36       		.byte	54
 13475 0936 37       		.byte	55
 13476 0937 38       		.byte	56
 13477 0938 39       		.byte	57
 13478 0939 3A       		.byte	58
 13479 093a 3B       		.byte	59
 13480 093b 3C       		.byte	60
 13481 093c 3D       		.byte	61
 13482 093d 3E       		.byte	62
 13483 093e 3F       		.byte	63
 13484 093f 40       		.byte	64
 13485 0940 41       		.byte	65
 13486 0941 42       		.byte	66
 13487 0942 43       		.byte	67
 13488 0943 44       		.byte	68
 13489 0944 45       		.byte	69
 13490 0945 46       		.byte	70
 13491 0946 47       		.byte	71
 13492 0947 48       		.byte	72
 13493 0948 49       		.byte	73
 13494 0949 4A       		.byte	74
 13495 094a 4B       		.byte	75
 13496 094b 4C       		.byte	76
 13497 094c 4D       		.byte	77
 13498 094d 4E       		.byte	78
 13499 094e 4F       		.byte	79
 13500 094f 50       		.byte	80
 13501 0950 51       		.byte	81
 13502 0951 52       		.byte	82
 13503 0952 53       		.byte	83
 13504 0953 54       		.byte	84
 13505 0954 55       		.byte	85
 13506 0955 56       		.byte	86
 13507 0956 57       		.byte	87
 13508 0957 58       		.byte	88
 13509 0958 59       		.byte	89
 13510 0959 5A       		.byte	90
 13511 095a 5B       		.byte	91
 13512 095b 5C       		.byte	92
 13513 095c 5D       		.byte	93
 13514 095d 5E       		.byte	94
 13515 095e 5F       		.byte	95
 13516 095f 60       		.byte	96
 13517 0960 61       		.byte	97
 13518 0961 62       		.byte	98
 13519 0962 63       		.byte	99
 13520 0963 64       		.byte	100
 13521 0964 65       		.byte	101
 13522 0965 66       		.byte	102
 13523 0966 67       		.byte	103
 13524 0967 68       		.byte	104
 13525 0968 69       		.byte	105
 13526 0969 6A       		.byte	106
 13527 096a 6B       		.byte	107
 13528 096b 6C       		.byte	108
 13529 096c 6D       		.byte	109
 13530 096d 6E       		.byte	110
 13531 096e 6F       		.byte	111
 13532 096f 70       		.byte	112
 13533 0970 71       		.byte	113
 13534 0971 72       		.byte	114
 13535 0972 73       		.byte	115
 13536 0973 74       		.byte	116
 13537 0974 75       		.byte	117
 13538 0975 76       		.byte	118
 13539 0976 77       		.byte	119
 13540 0977 78       		.byte	120
 13541 0978 79       		.byte	121
 13542 0979 7A       		.byte	122
 13543 097a 7B       		.byte	123
 13544 097b 7C       		.byte	124
 13545 097c 7D       		.byte	125
 13546 097d 7E       		.byte	126
 13547 097e 7F       		.byte	127
 13548 097f 80       		.byte	-128
 13549 0980 81       		.byte	-127
 13550 0981 82       		.byte	-126
 13551 0982 83       		.byte	-125
 13552 0983 84       		.byte	-124
 13553 0984 85       		.byte	-123
 13554 0985 86       		.byte	-122
 13555 0986 87       		.byte	-121
 13556 0987 88       		.byte	-120
 13557 0988 89       		.byte	-119
 13558 0989 8A       		.byte	-118
 13559 098a 8B       		.byte	-117
 13560 098b 8C       		.byte	-116
 13561 098c 8D       		.byte	-115
 13562 098d 8E       		.byte	-114
 13563 098e 8F       		.byte	-113
 13564 098f 90       		.byte	-112
 13565 0990 91       		.byte	-111
 13566 0991 92       		.byte	-110
 13567 0992 93       		.byte	-109
 13568 0993 94       		.byte	-108
 13569 0994 95       		.byte	-107
 13570 0995 96       		.byte	-106
 13571 0996 97       		.byte	-105
 13572 0997 98       		.byte	-104
 13573 0998 99       		.byte	-103
 13574 0999 9A       		.byte	-102
 13575 099a 9B       		.byte	-101
 13576 099b 9C       		.byte	-100
 13577 099c 9D       		.byte	-99
 13578 099d 9E       		.byte	-98
 13579 099e 9F       		.byte	-97
 13580 099f A0       		.byte	-96
 13581 09a0 A1       		.byte	-95
 13582 09a1 A2       		.byte	-94
 13583 09a2 A3       		.byte	-93
 13584 09a3 A4       		.byte	-92
 13585 09a4 A5       		.byte	-91
 13586 09a5 A6       		.byte	-90
 13587 09a6 A7       		.byte	-89
 13588 09a7 A8       		.byte	-88
 13589 09a8 A9       		.byte	-87
 13590 09a9 AA       		.byte	-86
 13591 09aa AB       		.byte	-85
 13592 09ab AC       		.byte	-84
 13593 09ac AD       		.byte	-83
 13594 09ad AE       		.byte	-82
 13595 09ae AF       		.byte	-81
 13596 09af B0       		.byte	-80
 13597 09b0 B1       		.byte	-79
 13598 09b1 B2       		.byte	-78
 13599 09b2 B3       		.byte	-77
 13600 09b3 B4       		.byte	-76
 13601 09b4 B5       		.byte	-75
 13602 09b5 B6       		.byte	-74
 13603 09b6 B7       		.byte	-73
 13604 09b7 B8       		.byte	-72
 13605 09b8 B9       		.byte	-71
 13606 09b9 BA       		.byte	-70
 13607 09ba BB       		.byte	-69
 13608 09bb BC       		.byte	-68
 13609 09bc BD       		.byte	-67
 13610 09bd BE       		.byte	-66
 13611 09be BF       		.byte	-65
 13612 09bf C0       		.byte	-64
 13613 09c0 C1       		.byte	-63
 13614 09c1 C2       		.byte	-62
 13615 09c2 C3       		.byte	-61
 13616 09c3 C4       		.byte	-60
 13617 09c4 C5       		.byte	-59
 13618 09c5 C6       		.byte	-58
 13619 09c6 C7       		.byte	-57
 13620 09c7 C8       		.byte	-56
 13621 09c8 C9       		.byte	-55
 13622 09c9 CA       		.byte	-54
 13623 09ca CB       		.byte	-53
 13624 09cb CC       		.byte	-52
 13625 09cc CD       		.byte	-51
 13626 09cd CE       		.byte	-50
 13627 09ce CF       		.byte	-49
 13628 09cf D0       		.byte	-48
 13629 09d0 D1       		.byte	-47
 13630 09d1 D2       		.byte	-46
 13631 09d2 D3       		.byte	-45
 13632 09d3 D4       		.byte	-44
 13633 09d4 D5       		.byte	-43
 13634 09d5 D6       		.byte	-42
 13635 09d6 D7       		.byte	-41
 13636 09d7 D8       		.byte	-40
 13637 09d8 D9       		.byte	-39
 13638 09d9 DA       		.byte	-38
 13639 09da DB       		.byte	-37
 13640 09db DC       		.byte	-36
 13641 09dc DD       		.byte	-35
 13642 09dd DE       		.byte	-34
 13643 09de DF       		.byte	-33
 13644 09df E0       		.byte	-32
 13645 09e0 E1       		.byte	-31
 13646 09e1 E2       		.byte	-30
 13647 09e2 E3       		.byte	-29
 13648 09e3 E4       		.byte	-28
 13649 09e4 E5       		.byte	-27
 13650 09e5 E6       		.byte	-26
 13651 09e6 E7       		.byte	-25
 13652 09e7 E8       		.byte	-24
 13653 09e8 E9       		.byte	-23
 13654 09e9 EA       		.byte	-22
 13655 09ea EB       		.byte	-21
 13656 09eb EC       		.byte	-20
 13657 09ec ED       		.byte	-19
 13658 09ed EE       		.byte	-18
 13659 09ee EF       		.byte	-17
 13660 09ef F0       		.byte	-16
 13661 09f0 F1       		.byte	-15
 13662 09f1 F2       		.byte	-14
 13663 09f2 F3       		.byte	-13
 13664 09f3 F4       		.byte	-12
 13665 09f4 F5       		.byte	-11
 13666 09f5 F6       		.byte	-10
 13667 09f6 F7       		.byte	-9
 13668 09f7 F8       		.byte	-8
 13669 09f8 F9       		.byte	-7
 13670 09f9 FA       		.byte	-6
 13671 09fa FB       		.byte	-5
 13672 09fb FC       		.byte	-4
 13673 09fc FD       		.byte	-3
 13674 09fd FE       		.byte	-2
 13675 09fe FF       		.byte	-1
 13676 09ff 00       		.byte	0
 13677 0a00 01       		.byte	1
 13678 0a01 02       		.byte	2
 13679 0a02 03       		.byte	3
 13680 0a03 04       		.byte	4
 13681 0a04 05       		.byte	5
 13682 0a05 06       		.byte	6
 13683 0a06 07       		.byte	7
 13684 0a07 08       		.byte	8
 13685 0a08 09       		.byte	9
 13686 0a09 0A       		.byte	10
 13687 0a0a 0B       		.byte	11
 13688 0a0b 0C       		.byte	12
 13689 0a0c 0D       		.byte	13
 13690 0a0d 0E       		.byte	14
 13691 0a0e 0F       		.byte	15
 13692 0a0f 10       		.byte	16
 13693 0a10 11       		.byte	17
 13694 0a11 12       		.byte	18
 13695 0a12 13       		.byte	19
 13696 0a13 14       		.byte	20
 13697 0a14 15       		.byte	21
 13698 0a15 16       		.byte	22
 13699 0a16 17       		.byte	23
 13700 0a17 18       		.byte	24
 13701 0a18 19       		.byte	25
 13702 0a19 1A       		.byte	26
 13703 0a1a 1B       		.byte	27
 13704 0a1b 1C       		.byte	28
 13705 0a1c 1D       		.byte	29
 13706 0a1d 1E       		.byte	30
 13707 0a1e 1F       		.byte	31
 13708 0a1f 20       		.byte	32
 13709 0a20 21       		.byte	33
 13710 0a21 22       		.byte	34
 13711 0a22 23       		.byte	35
 13712 0a23 24       		.byte	36
 13713 0a24 25       		.byte	37
 13714 0a25 26       		.byte	38
 13715 0a26 27       		.byte	39
 13716 0a27 28       		.byte	40
 13717 0a28 29       		.byte	41
 13718 0a29 2A       		.byte	42
 13719 0a2a 2B       		.byte	43
 13720 0a2b 2C       		.byte	44
 13721 0a2c 2D       		.byte	45
 13722 0a2d 2E       		.byte	46
 13723 0a2e 2F       		.byte	47
 13724 0a2f 30       		.byte	48
 13725 0a30 31       		.byte	49
 13726 0a31 32       		.byte	50
 13727 0a32 33       		.byte	51
 13728 0a33 34       		.byte	52
 13729 0a34 35       		.byte	53
 13730 0a35 36       		.byte	54
 13731 0a36 37       		.byte	55
 13732 0a37 38       		.byte	56
 13733 0a38 39       		.byte	57
 13734 0a39 3A       		.byte	58
 13735 0a3a 3B       		.byte	59
 13736 0a3b 3C       		.byte	60
 13737 0a3c 3D       		.byte	61
 13738 0a3d 3E       		.byte	62
 13739 0a3e 3F       		.byte	63
 13740 0a3f 40       		.byte	64
 13741 0a40 41       		.byte	65
 13742 0a41 42       		.byte	66
 13743 0a42 43       		.byte	67
 13744 0a43 44       		.byte	68
 13745 0a44 45       		.byte	69
 13746 0a45 46       		.byte	70
 13747 0a46 47       		.byte	71
 13748 0a47 48       		.byte	72
 13749 0a48 49       		.byte	73
 13750 0a49 4A       		.byte	74
 13751 0a4a 4B       		.byte	75
 13752 0a4b 4C       		.byte	76
 13753 0a4c 4D       		.byte	77
 13754 0a4d 4E       		.byte	78
 13755 0a4e 4F       		.byte	79
 13756 0a4f 50       		.byte	80
 13757 0a50 51       		.byte	81
 13758 0a51 52       		.byte	82
 13759 0a52 53       		.byte	83
 13760 0a53 54       		.byte	84
 13761 0a54 55       		.byte	85
 13762 0a55 56       		.byte	86
 13763 0a56 57       		.byte	87
 13764 0a57 58       		.byte	88
 13765 0a58 59       		.byte	89
 13766 0a59 5A       		.byte	90
 13767 0a5a 5B       		.byte	91
 13768 0a5b 5C       		.byte	92
 13769 0a5c 5D       		.byte	93
 13770 0a5d 5E       		.byte	94
 13771 0a5e 5F       		.byte	95
 13772 0a5f 60       		.byte	96
 13773 0a60 61       		.byte	97
 13774 0a61 62       		.byte	98
 13775 0a62 63       		.byte	99
 13776 0a63 64       		.byte	100
 13777 0a64 65       		.byte	101
 13778 0a65 66       		.byte	102
 13779 0a66 67       		.byte	103
 13780 0a67 68       		.byte	104
 13781 0a68 69       		.byte	105
 13782 0a69 6A       		.byte	106
 13783 0a6a 6B       		.byte	107
 13784 0a6b 6C       		.byte	108
 13785 0a6c 6D       		.byte	109
 13786 0a6d 6E       		.byte	110
 13787 0a6e 6F       		.byte	111
 13788 0a6f 70       		.byte	112
 13789 0a70 71       		.byte	113
 13790 0a71 72       		.byte	114
 13791 0a72 73       		.byte	115
 13792 0a73 74       		.byte	116
 13793 0a74 75       		.byte	117
 13794 0a75 76       		.byte	118
 13795 0a76 77       		.byte	119
 13796 0a77 78       		.byte	120
 13797 0a78 79       		.byte	121
 13798 0a79 7A       		.byte	122
 13799 0a7a 7B       		.byte	123
 13800 0a7b 7C       		.byte	124
 13801 0a7c 7D       		.byte	125
 13802 0a7d 7E       		.byte	126
 13803 0a7e 7F       		.byte	127
 13804 0a7f 80       		.byte	-128
 13805 0a80 81       		.byte	-127
 13806 0a81 82       		.byte	-126
 13807 0a82 83       		.byte	-125
 13808 0a83 84       		.byte	-124
 13809 0a84 85       		.byte	-123
 13810 0a85 86       		.byte	-122
 13811 0a86 87       		.byte	-121
 13812 0a87 88       		.byte	-120
 13813 0a88 89       		.byte	-119
 13814 0a89 8A       		.byte	-118
 13815 0a8a 8B       		.byte	-117
 13816 0a8b 8C       		.byte	-116
 13817 0a8c 8D       		.byte	-115
 13818 0a8d 8E       		.byte	-114
 13819 0a8e 8F       		.byte	-113
 13820 0a8f 90       		.byte	-112
 13821 0a90 91       		.byte	-111
 13822 0a91 92       		.byte	-110
 13823 0a92 93       		.byte	-109
 13824 0a93 94       		.byte	-108
 13825 0a94 95       		.byte	-107
 13826 0a95 96       		.byte	-106
 13827 0a96 97       		.byte	-105
 13828 0a97 98       		.byte	-104
 13829 0a98 99       		.byte	-103
 13830 0a99 9A       		.byte	-102
 13831 0a9a 9B       		.byte	-101
 13832 0a9b 9C       		.byte	-100
 13833 0a9c 9D       		.byte	-99
 13834 0a9d 9E       		.byte	-98
 13835 0a9e 9F       		.byte	-97
 13836 0a9f A0       		.byte	-96
 13837 0aa0 A1       		.byte	-95
 13838 0aa1 A2       		.byte	-94
 13839 0aa2 A3       		.byte	-93
 13840 0aa3 A4       		.byte	-92
 13841 0aa4 A5       		.byte	-91
 13842 0aa5 A6       		.byte	-90
 13843 0aa6 A7       		.byte	-89
 13844 0aa7 A8       		.byte	-88
 13845 0aa8 A9       		.byte	-87
 13846 0aa9 AA       		.byte	-86
 13847 0aaa AB       		.byte	-85
 13848 0aab AC       		.byte	-84
 13849 0aac AD       		.byte	-83
 13850 0aad AE       		.byte	-82
 13851 0aae AF       		.byte	-81
 13852 0aaf B0       		.byte	-80
 13853 0ab0 B1       		.byte	-79
 13854 0ab1 B2       		.byte	-78
 13855 0ab2 B3       		.byte	-77
 13856 0ab3 B4       		.byte	-76
 13857 0ab4 B5       		.byte	-75
 13858 0ab5 B6       		.byte	-74
 13859 0ab6 B7       		.byte	-73
 13860 0ab7 B8       		.byte	-72
 13861 0ab8 B9       		.byte	-71
 13862 0ab9 BA       		.byte	-70
 13863 0aba BB       		.byte	-69
 13864 0abb BC       		.byte	-68
 13865 0abc BD       		.byte	-67
 13866 0abd BE       		.byte	-66
 13867 0abe BF       		.byte	-65
 13868 0abf C0       		.byte	-64
 13869 0ac0 C1       		.byte	-63
 13870 0ac1 C2       		.byte	-62
 13871 0ac2 C3       		.byte	-61
 13872 0ac3 C4       		.byte	-60
 13873 0ac4 C5       		.byte	-59
 13874 0ac5 C6       		.byte	-58
 13875 0ac6 C7       		.byte	-57
 13876 0ac7 C8       		.byte	-56
 13877 0ac8 C9       		.byte	-55
 13878 0ac9 CA       		.byte	-54
 13879 0aca CB       		.byte	-53
 13880 0acb CC       		.byte	-52
 13881 0acc CD       		.byte	-51
 13882 0acd CE       		.byte	-50
 13883 0ace CF       		.byte	-49
 13884 0acf D0       		.byte	-48
 13885 0ad0 D1       		.byte	-47
 13886 0ad1 D2       		.byte	-46
 13887 0ad2 D3       		.byte	-45
 13888 0ad3 D4       		.byte	-44
 13889 0ad4 D5       		.byte	-43
 13890 0ad5 D6       		.byte	-42
 13891 0ad6 D7       		.byte	-41
 13892 0ad7 D8       		.byte	-40
 13893 0ad8 D9       		.byte	-39
 13894 0ad9 DA       		.byte	-38
 13895 0ada DB       		.byte	-37
 13896 0adb DC       		.byte	-36
 13897 0adc DD       		.byte	-35
 13898 0add DE       		.byte	-34
 13899 0ade DF       		.byte	-33
 13900 0adf E0       		.byte	-32
 13901 0ae0 E1       		.byte	-31
 13902 0ae1 E2       		.byte	-30
 13903 0ae2 E3       		.byte	-29
 13904 0ae3 E4       		.byte	-28
 13905 0ae4 E5       		.byte	-27
 13906 0ae5 E6       		.byte	-26
 13907 0ae6 E7       		.byte	-25
 13908 0ae7 E8       		.byte	-24
 13909 0ae8 E9       		.byte	-23
 13910 0ae9 EA       		.byte	-22
 13911 0aea EB       		.byte	-21
 13912 0aeb EC       		.byte	-20
 13913 0aec ED       		.byte	-19
 13914 0aed EE       		.byte	-18
 13915 0aee EF       		.byte	-17
 13916 0aef F0       		.byte	-16
 13917 0af0 F1       		.byte	-15
 13918 0af1 F2       		.byte	-14
 13919 0af2 F3       		.byte	-13
 13920 0af3 F4       		.byte	-12
 13921 0af4 F5       		.byte	-11
 13922 0af5 F6       		.byte	-10
 13923 0af6 F7       		.byte	-9
 13924 0af7 F8       		.byte	-8
 13925 0af8 F9       		.byte	-7
 13926 0af9 FA       		.byte	-6
 13927 0afa FB       		.byte	-5
 13928 0afb FC       		.byte	-4
 13929 0afc FD       		.byte	-3
 13930 0afd FE       		.byte	-2
 13931 0afe FF       		.byte	-1
 13932 0aff 00       		.byte	0
 13933 0b00 01       		.byte	1
 13934 0b01 02       		.byte	2
 13935 0b02 03       		.byte	3
 13936 0b03 04       		.byte	4
 13937 0b04 05       		.byte	5
 13938 0b05 06       		.byte	6
 13939 0b06 07       		.byte	7
 13940 0b07 08       		.byte	8
 13941 0b08 09       		.byte	9
 13942 0b09 0A       		.byte	10
 13943 0b0a 0B       		.byte	11
 13944 0b0b 0C       		.byte	12
 13945 0b0c 0D       		.byte	13
 13946 0b0d 0E       		.byte	14
 13947 0b0e 0F       		.byte	15
 13948 0b0f 10       		.byte	16
 13949 0b10 11       		.byte	17
 13950 0b11 12       		.byte	18
 13951 0b12 13       		.byte	19
 13952 0b13 14       		.byte	20
 13953 0b14 15       		.byte	21
 13954 0b15 16       		.byte	22
 13955 0b16 17       		.byte	23
 13956 0b17 18       		.byte	24
 13957 0b18 19       		.byte	25
 13958 0b19 1A       		.byte	26
 13959 0b1a 1B       		.byte	27
 13960 0b1b 1C       		.byte	28
 13961 0b1c 1D       		.byte	29
 13962 0b1d 1E       		.byte	30
 13963 0b1e 1F       		.byte	31
 13964 0b1f 20       		.byte	32
 13965 0b20 21       		.byte	33
 13966 0b21 22       		.byte	34
 13967 0b22 23       		.byte	35
 13968 0b23 24       		.byte	36
 13969 0b24 25       		.byte	37
 13970 0b25 26       		.byte	38
 13971 0b26 27       		.byte	39
 13972 0b27 28       		.byte	40
 13973 0b28 29       		.byte	41
 13974 0b29 2A       		.byte	42
 13975 0b2a 2B       		.byte	43
 13976 0b2b 2C       		.byte	44
 13977 0b2c 2D       		.byte	45
 13978 0b2d 2E       		.byte	46
 13979 0b2e 2F       		.byte	47
 13980 0b2f 30       		.byte	48
 13981 0b30 31       		.byte	49
 13982 0b31 32       		.byte	50
 13983 0b32 33       		.byte	51
 13984 0b33 34       		.byte	52
 13985 0b34 35       		.byte	53
 13986 0b35 36       		.byte	54
 13987 0b36 37       		.byte	55
 13988 0b37 38       		.byte	56
 13989 0b38 39       		.byte	57
 13990 0b39 3A       		.byte	58
 13991 0b3a 3B       		.byte	59
 13992 0b3b 3C       		.byte	60
 13993 0b3c 3D       		.byte	61
 13994 0b3d 3E       		.byte	62
 13995 0b3e 3F       		.byte	63
 13996 0b3f 40       		.byte	64
 13997 0b40 41       		.byte	65
 13998 0b41 42       		.byte	66
 13999 0b42 43       		.byte	67
 14000 0b43 44       		.byte	68
 14001 0b44 45       		.byte	69
 14002 0b45 46       		.byte	70
 14003 0b46 47       		.byte	71
 14004 0b47 48       		.byte	72
 14005 0b48 49       		.byte	73
 14006 0b49 4A       		.byte	74
 14007 0b4a 4B       		.byte	75
 14008 0b4b 4C       		.byte	76
 14009 0b4c 4D       		.byte	77
 14010 0b4d 4E       		.byte	78
 14011 0b4e 4F       		.byte	79
 14012 0b4f 50       		.byte	80
 14013 0b50 51       		.byte	81
 14014 0b51 52       		.byte	82
 14015 0b52 53       		.byte	83
 14016 0b53 54       		.byte	84
 14017 0b54 55       		.byte	85
 14018 0b55 56       		.byte	86
 14019 0b56 57       		.byte	87
 14020 0b57 58       		.byte	88
 14021 0b58 59       		.byte	89
 14022 0b59 5A       		.byte	90
 14023 0b5a 5B       		.byte	91
 14024 0b5b 5C       		.byte	92
 14025 0b5c 5D       		.byte	93
 14026 0b5d 5E       		.byte	94
 14027 0b5e 5F       		.byte	95
 14028 0b5f 60       		.byte	96
 14029 0b60 61       		.byte	97
 14030 0b61 62       		.byte	98
 14031 0b62 63       		.byte	99
 14032 0b63 64       		.byte	100
 14033 0b64 65       		.byte	101
 14034 0b65 66       		.byte	102
 14035 0b66 67       		.byte	103
 14036 0b67 68       		.byte	104
 14037 0b68 69       		.byte	105
 14038 0b69 6A       		.byte	106
 14039 0b6a 6B       		.byte	107
 14040 0b6b 6C       		.byte	108
 14041 0b6c 6D       		.byte	109
 14042 0b6d 6E       		.byte	110
 14043 0b6e 6F       		.byte	111
 14044 0b6f 70       		.byte	112
 14045 0b70 71       		.byte	113
 14046 0b71 72       		.byte	114
 14047 0b72 73       		.byte	115
 14048 0b73 74       		.byte	116
 14049 0b74 75       		.byte	117
 14050 0b75 76       		.byte	118
 14051 0b76 77       		.byte	119
 14052 0b77 78       		.byte	120
 14053 0b78 79       		.byte	121
 14054 0b79 7A       		.byte	122
 14055 0b7a 7B       		.byte	123
 14056 0b7b 7C       		.byte	124
 14057 0b7c 7D       		.byte	125
 14058 0b7d 7E       		.byte	126
 14059 0b7e 7F       		.byte	127
 14060 0b7f 80       		.byte	-128
 14061 0b80 81       		.byte	-127
 14062 0b81 82       		.byte	-126
 14063 0b82 83       		.byte	-125
 14064 0b83 84       		.byte	-124
 14065 0b84 85       		.byte	-123
 14066 0b85 86       		.byte	-122
 14067 0b86 87       		.byte	-121
 14068 0b87 88       		.byte	-120
 14069 0b88 89       		.byte	-119
 14070 0b89 8A       		.byte	-118
 14071 0b8a 8B       		.byte	-117
 14072 0b8b 8C       		.byte	-116
 14073 0b8c 8D       		.byte	-115
 14074 0b8d 8E       		.byte	-114
 14075 0b8e 8F       		.byte	-113
 14076 0b8f 90       		.byte	-112
 14077 0b90 91       		.byte	-111
 14078 0b91 92       		.byte	-110
 14079 0b92 93       		.byte	-109
 14080 0b93 94       		.byte	-108
 14081 0b94 95       		.byte	-107
 14082 0b95 96       		.byte	-106
 14083 0b96 97       		.byte	-105
 14084 0b97 98       		.byte	-104
 14085 0b98 99       		.byte	-103
 14086 0b99 9A       		.byte	-102
 14087 0b9a 9B       		.byte	-101
 14088 0b9b 9C       		.byte	-100
 14089 0b9c 9D       		.byte	-99
 14090 0b9d 9E       		.byte	-98
 14091 0b9e 9F       		.byte	-97
 14092 0b9f A0       		.byte	-96
 14093 0ba0 A1       		.byte	-95
 14094 0ba1 A2       		.byte	-94
 14095 0ba2 A3       		.byte	-93
 14096 0ba3 A4       		.byte	-92
 14097 0ba4 A5       		.byte	-91
 14098 0ba5 A6       		.byte	-90
 14099 0ba6 A7       		.byte	-89
 14100 0ba7 A8       		.byte	-88
 14101 0ba8 A9       		.byte	-87
 14102 0ba9 AA       		.byte	-86
 14103 0baa AB       		.byte	-85
 14104 0bab AC       		.byte	-84
 14105 0bac AD       		.byte	-83
 14106 0bad AE       		.byte	-82
 14107 0bae AF       		.byte	-81
 14108 0baf B0       		.byte	-80
 14109 0bb0 B1       		.byte	-79
 14110 0bb1 B2       		.byte	-78
 14111 0bb2 B3       		.byte	-77
 14112 0bb3 B4       		.byte	-76
 14113 0bb4 B5       		.byte	-75
 14114 0bb5 B6       		.byte	-74
 14115 0bb6 B7       		.byte	-73
 14116 0bb7 B8       		.byte	-72
 14117 0bb8 B9       		.byte	-71
 14118 0bb9 BA       		.byte	-70
 14119 0bba BB       		.byte	-69
 14120 0bbb BC       		.byte	-68
 14121 0bbc BD       		.byte	-67
 14122 0bbd BE       		.byte	-66
 14123 0bbe BF       		.byte	-65
 14124 0bbf C0       		.byte	-64
 14125 0bc0 C1       		.byte	-63
 14126 0bc1 C2       		.byte	-62
 14127 0bc2 C3       		.byte	-61
 14128 0bc3 C4       		.byte	-60
 14129 0bc4 C5       		.byte	-59
 14130 0bc5 C6       		.byte	-58
 14131 0bc6 C7       		.byte	-57
 14132 0bc7 C8       		.byte	-56
 14133 0bc8 C9       		.byte	-55
 14134 0bc9 CA       		.byte	-54
 14135 0bca CB       		.byte	-53
 14136 0bcb CC       		.byte	-52
 14137 0bcc CD       		.byte	-51
 14138 0bcd CE       		.byte	-50
 14139 0bce CF       		.byte	-49
 14140 0bcf D0       		.byte	-48
 14141 0bd0 D1       		.byte	-47
 14142 0bd1 D2       		.byte	-46
 14143 0bd2 D3       		.byte	-45
 14144 0bd3 D4       		.byte	-44
 14145 0bd4 D5       		.byte	-43
 14146 0bd5 D6       		.byte	-42
 14147 0bd6 D7       		.byte	-41
 14148 0bd7 D8       		.byte	-40
 14149 0bd8 D9       		.byte	-39
 14150 0bd9 DA       		.byte	-38
 14151 0bda DB       		.byte	-37
 14152 0bdb DC       		.byte	-36
 14153 0bdc DD       		.byte	-35
 14154 0bdd DE       		.byte	-34
 14155 0bde DF       		.byte	-33
 14156 0bdf E0       		.byte	-32
 14157 0be0 E1       		.byte	-31
 14158 0be1 E2       		.byte	-30
 14159 0be2 E3       		.byte	-29
 14160 0be3 E4       		.byte	-28
 14161 0be4 E5       		.byte	-27
 14162 0be5 E6       		.byte	-26
 14163 0be6 E7       		.byte	-25
 14164 0be7 E8       		.byte	-24
 14165 0be8 E9       		.byte	-23
 14166 0be9 EA       		.byte	-22
 14167 0bea EB       		.byte	-21
 14168 0beb EC       		.byte	-20
 14169 0bec ED       		.byte	-19
 14170 0bed EE       		.byte	-18
 14171 0bee EF       		.byte	-17
 14172 0bef F0       		.byte	-16
 14173 0bf0 F1       		.byte	-15
 14174 0bf1 F2       		.byte	-14
 14175 0bf2 F3       		.byte	-13
 14176 0bf3 F4       		.byte	-12
 14177 0bf4 F5       		.byte	-11
 14178 0bf5 F6       		.byte	-10
 14179 0bf6 F7       		.byte	-9
 14180 0bf7 F8       		.byte	-8
 14181 0bf8 F9       		.byte	-7
 14182 0bf9 FA       		.byte	-6
 14183 0bfa FB       		.byte	-5
 14184 0bfb FC       		.byte	-4
 14185 0bfc FD       		.byte	-3
 14186 0bfd FE       		.byte	-2
 14187 0bfe FF       		.byte	-1
 14188 0bff 00       		.byte	0
 14189 0c00 01       		.byte	1
 14190 0c01 02       		.byte	2
 14191 0c02 03       		.byte	3
 14192 0c03 04       		.byte	4
 14193 0c04 05       		.byte	5
 14194 0c05 06       		.byte	6
 14195 0c06 07       		.byte	7
 14196 0c07 08       		.byte	8
 14197 0c08 09       		.byte	9
 14198 0c09 0A       		.byte	10
 14199 0c0a 0B       		.byte	11
 14200 0c0b 0C       		.byte	12
 14201 0c0c 0D       		.byte	13
 14202 0c0d 0E       		.byte	14
 14203 0c0e 0F       		.byte	15
 14204 0c0f 10       		.byte	16
 14205 0c10 11       		.byte	17
 14206 0c11 12       		.byte	18
 14207 0c12 13       		.byte	19
 14208 0c13 14       		.byte	20
 14209 0c14 15       		.byte	21
 14210 0c15 16       		.byte	22
 14211 0c16 17       		.byte	23
 14212 0c17 18       		.byte	24
 14213 0c18 19       		.byte	25
 14214 0c19 1A       		.byte	26
 14215 0c1a 1B       		.byte	27
 14216 0c1b 1C       		.byte	28
 14217 0c1c 1D       		.byte	29
 14218 0c1d 1E       		.byte	30
 14219 0c1e 1F       		.byte	31
 14220 0c1f 20       		.byte	32
 14221 0c20 21       		.byte	33
 14222 0c21 22       		.byte	34
 14223 0c22 23       		.byte	35
 14224 0c23 24       		.byte	36
 14225 0c24 25       		.byte	37
 14226 0c25 26       		.byte	38
 14227 0c26 27       		.byte	39
 14228 0c27 28       		.byte	40
 14229 0c28 29       		.byte	41
 14230 0c29 2A       		.byte	42
 14231 0c2a 2B       		.byte	43
 14232 0c2b 2C       		.byte	44
 14233 0c2c 2D       		.byte	45
 14234 0c2d 2E       		.byte	46
 14235 0c2e 2F       		.byte	47
 14236 0c2f 30       		.byte	48
 14237 0c30 31       		.byte	49
 14238 0c31 32       		.byte	50
 14239 0c32 33       		.byte	51
 14240 0c33 34       		.byte	52
 14241 0c34 35       		.byte	53
 14242 0c35 36       		.byte	54
 14243 0c36 37       		.byte	55
 14244 0c37 38       		.byte	56
 14245 0c38 39       		.byte	57
 14246 0c39 3A       		.byte	58
 14247 0c3a 3B       		.byte	59
 14248 0c3b 3C       		.byte	60
 14249 0c3c 3D       		.byte	61
 14250 0c3d 3E       		.byte	62
 14251 0c3e 3F       		.byte	63
 14252 0c3f 40       		.byte	64
 14253 0c40 41       		.byte	65
 14254 0c41 42       		.byte	66
 14255 0c42 43       		.byte	67
 14256 0c43 44       		.byte	68
 14257 0c44 45       		.byte	69
 14258 0c45 46       		.byte	70
 14259 0c46 47       		.byte	71
 14260 0c47 48       		.byte	72
 14261 0c48 49       		.byte	73
 14262 0c49 4A       		.byte	74
 14263 0c4a 4B       		.byte	75
 14264 0c4b 4C       		.byte	76
 14265 0c4c 4D       		.byte	77
 14266 0c4d 4E       		.byte	78
 14267 0c4e 4F       		.byte	79
 14268 0c4f 50       		.byte	80
 14269 0c50 51       		.byte	81
 14270 0c51 52       		.byte	82
 14271 0c52 53       		.byte	83
 14272 0c53 54       		.byte	84
 14273 0c54 55       		.byte	85
 14274 0c55 56       		.byte	86
 14275 0c56 57       		.byte	87
 14276 0c57 58       		.byte	88
 14277 0c58 59       		.byte	89
 14278 0c59 5A       		.byte	90
 14279 0c5a 5B       		.byte	91
 14280 0c5b 5C       		.byte	92
 14281 0c5c 5D       		.byte	93
 14282 0c5d 5E       		.byte	94
 14283 0c5e 5F       		.byte	95
 14284 0c5f 60       		.byte	96
 14285 0c60 61       		.byte	97
 14286 0c61 62       		.byte	98
 14287 0c62 63       		.byte	99
 14288 0c63 64       		.byte	100
 14289 0c64 65       		.byte	101
 14290 0c65 66       		.byte	102
 14291 0c66 67       		.byte	103
 14292 0c67 68       		.byte	104
 14293 0c68 69       		.byte	105
 14294 0c69 6A       		.byte	106
 14295 0c6a 6B       		.byte	107
 14296 0c6b 6C       		.byte	108
 14297 0c6c 6D       		.byte	109
 14298 0c6d 6E       		.byte	110
 14299 0c6e 6F       		.byte	111
 14300 0c6f 70       		.byte	112
 14301 0c70 71       		.byte	113
 14302 0c71 72       		.byte	114
 14303 0c72 73       		.byte	115
 14304 0c73 74       		.byte	116
 14305 0c74 75       		.byte	117
 14306 0c75 76       		.byte	118
 14307 0c76 77       		.byte	119
 14308 0c77 78       		.byte	120
 14309 0c78 79       		.byte	121
 14310 0c79 7A       		.byte	122
 14311 0c7a 7B       		.byte	123
 14312 0c7b 7C       		.byte	124
 14313 0c7c 7D       		.byte	125
 14314 0c7d 7E       		.byte	126
 14315 0c7e 7F       		.byte	127
 14316 0c7f 80       		.byte	-128
 14317 0c80 81       		.byte	-127
 14318 0c81 82       		.byte	-126
 14319 0c82 83       		.byte	-125
 14320 0c83 84       		.byte	-124
 14321 0c84 85       		.byte	-123
 14322 0c85 86       		.byte	-122
 14323 0c86 87       		.byte	-121
 14324 0c87 88       		.byte	-120
 14325 0c88 89       		.byte	-119
 14326 0c89 8A       		.byte	-118
 14327 0c8a 8B       		.byte	-117
 14328 0c8b 8C       		.byte	-116
 14329 0c8c 8D       		.byte	-115
 14330 0c8d 8E       		.byte	-114
 14331 0c8e 8F       		.byte	-113
 14332 0c8f 90       		.byte	-112
 14333 0c90 91       		.byte	-111
 14334 0c91 92       		.byte	-110
 14335 0c92 93       		.byte	-109
 14336 0c93 94       		.byte	-108
 14337 0c94 95       		.byte	-107
 14338 0c95 96       		.byte	-106
 14339 0c96 97       		.byte	-105
 14340 0c97 98       		.byte	-104
 14341 0c98 99       		.byte	-103
 14342 0c99 9A       		.byte	-102
 14343 0c9a 9B       		.byte	-101
 14344 0c9b 9C       		.byte	-100
 14345 0c9c 9D       		.byte	-99
 14346 0c9d 9E       		.byte	-98
 14347 0c9e 9F       		.byte	-97
 14348 0c9f A0       		.byte	-96
 14349 0ca0 A1       		.byte	-95
 14350 0ca1 A2       		.byte	-94
 14351 0ca2 A3       		.byte	-93
 14352 0ca3 A4       		.byte	-92
 14353 0ca4 A5       		.byte	-91
 14354 0ca5 A6       		.byte	-90
 14355 0ca6 A7       		.byte	-89
 14356 0ca7 A8       		.byte	-88
 14357 0ca8 A9       		.byte	-87
 14358 0ca9 AA       		.byte	-86
 14359 0caa AB       		.byte	-85
 14360 0cab AC       		.byte	-84
 14361 0cac AD       		.byte	-83
 14362 0cad AE       		.byte	-82
 14363 0cae AF       		.byte	-81
 14364 0caf B0       		.byte	-80
 14365 0cb0 B1       		.byte	-79
 14366 0cb1 B2       		.byte	-78
 14367 0cb2 B3       		.byte	-77
 14368 0cb3 B4       		.byte	-76
 14369 0cb4 B5       		.byte	-75
 14370 0cb5 B6       		.byte	-74
 14371 0cb6 B7       		.byte	-73
 14372 0cb7 B8       		.byte	-72
 14373 0cb8 B9       		.byte	-71
 14374 0cb9 BA       		.byte	-70
 14375 0cba BB       		.byte	-69
 14376 0cbb BC       		.byte	-68
 14377 0cbc BD       		.byte	-67
 14378 0cbd BE       		.byte	-66
 14379 0cbe BF       		.byte	-65
 14380 0cbf C0       		.byte	-64
 14381 0cc0 C1       		.byte	-63
 14382 0cc1 C2       		.byte	-62
 14383 0cc2 C3       		.byte	-61
 14384 0cc3 C4       		.byte	-60
 14385 0cc4 C5       		.byte	-59
 14386 0cc5 C6       		.byte	-58
 14387 0cc6 C7       		.byte	-57
 14388 0cc7 C8       		.byte	-56
 14389 0cc8 C9       		.byte	-55
 14390 0cc9 CA       		.byte	-54
 14391 0cca CB       		.byte	-53
 14392 0ccb CC       		.byte	-52
 14393 0ccc CD       		.byte	-51
 14394 0ccd CE       		.byte	-50
 14395 0cce CF       		.byte	-49
 14396 0ccf D0       		.byte	-48
 14397 0cd0 D1       		.byte	-47
 14398 0cd1 D2       		.byte	-46
 14399 0cd2 D3       		.byte	-45
 14400 0cd3 D4       		.byte	-44
 14401 0cd4 D5       		.byte	-43
 14402 0cd5 D6       		.byte	-42
 14403 0cd6 D7       		.byte	-41
 14404 0cd7 D8       		.byte	-40
 14405 0cd8 D9       		.byte	-39
 14406 0cd9 DA       		.byte	-38
 14407 0cda DB       		.byte	-37
 14408 0cdb DC       		.byte	-36
 14409 0cdc DD       		.byte	-35
 14410 0cdd DE       		.byte	-34
 14411 0cde DF       		.byte	-33
 14412 0cdf E0       		.byte	-32
 14413 0ce0 E1       		.byte	-31
 14414 0ce1 E2       		.byte	-30
 14415 0ce2 E3       		.byte	-29
 14416 0ce3 E4       		.byte	-28
 14417 0ce4 E5       		.byte	-27
 14418 0ce5 E6       		.byte	-26
 14419 0ce6 E7       		.byte	-25
 14420 0ce7 E8       		.byte	-24
 14421 0ce8 E9       		.byte	-23
 14422 0ce9 EA       		.byte	-22
 14423 0cea EB       		.byte	-21
 14424 0ceb EC       		.byte	-20
 14425 0cec ED       		.byte	-19
 14426 0ced EE       		.byte	-18
 14427 0cee EF       		.byte	-17
 14428 0cef F0       		.byte	-16
 14429 0cf0 F1       		.byte	-15
 14430 0cf1 F2       		.byte	-14
 14431 0cf2 F3       		.byte	-13
 14432 0cf3 F4       		.byte	-12
 14433 0cf4 F5       		.byte	-11
 14434 0cf5 F6       		.byte	-10
 14435 0cf6 F7       		.byte	-9
 14436 0cf7 F8       		.byte	-8
 14437 0cf8 F9       		.byte	-7
 14438 0cf9 FA       		.byte	-6
 14439 0cfa FB       		.byte	-5
 14440 0cfb FC       		.byte	-4
 14441 0cfc FD       		.byte	-3
 14442 0cfd FE       		.byte	-2
 14443 0cfe FF       		.byte	-1
 14444 0cff 00       		.byte	0
 14445 0d00 01       		.byte	1
 14446 0d01 02       		.byte	2
 14447 0d02 03       		.byte	3
 14448 0d03 04       		.byte	4
 14449 0d04 05       		.byte	5
 14450 0d05 06       		.byte	6
 14451 0d06 07       		.byte	7
 14452 0d07 08       		.byte	8
 14453 0d08 09       		.byte	9
 14454 0d09 0A       		.byte	10
 14455 0d0a 0B       		.byte	11
 14456 0d0b 0C       		.byte	12
 14457 0d0c 0D       		.byte	13
 14458 0d0d 0E       		.byte	14
 14459 0d0e 0F       		.byte	15
 14460 0d0f 10       		.byte	16
 14461 0d10 11       		.byte	17
 14462 0d11 12       		.byte	18
 14463 0d12 13       		.byte	19
 14464 0d13 14       		.byte	20
 14465 0d14 15       		.byte	21
 14466 0d15 16       		.byte	22
 14467 0d16 17       		.byte	23
 14468 0d17 18       		.byte	24
 14469 0d18 19       		.byte	25
 14470 0d19 1A       		.byte	26
 14471 0d1a 1B       		.byte	27
 14472 0d1b 1C       		.byte	28
 14473 0d1c 1D       		.byte	29
 14474 0d1d 1E       		.byte	30
 14475 0d1e 1F       		.byte	31
 14476 0d1f 20       		.byte	32
 14477 0d20 21       		.byte	33
 14478 0d21 22       		.byte	34
 14479 0d22 23       		.byte	35
 14480 0d23 24       		.byte	36
 14481 0d24 25       		.byte	37
 14482 0d25 26       		.byte	38
 14483 0d26 27       		.byte	39
 14484 0d27 28       		.byte	40
 14485 0d28 29       		.byte	41
 14486 0d29 2A       		.byte	42
 14487 0d2a 2B       		.byte	43
 14488 0d2b 2C       		.byte	44
 14489 0d2c 2D       		.byte	45
 14490 0d2d 2E       		.byte	46
 14491 0d2e 2F       		.byte	47
 14492 0d2f 30       		.byte	48
 14493 0d30 31       		.byte	49
 14494 0d31 32       		.byte	50
 14495 0d32 33       		.byte	51
 14496 0d33 34       		.byte	52
 14497 0d34 35       		.byte	53
 14498 0d35 36       		.byte	54
 14499 0d36 37       		.byte	55
 14500 0d37 38       		.byte	56
 14501 0d38 39       		.byte	57
 14502 0d39 3A       		.byte	58
 14503 0d3a 3B       		.byte	59
 14504 0d3b 3C       		.byte	60
 14505 0d3c 3D       		.byte	61
 14506 0d3d 3E       		.byte	62
 14507 0d3e 3F       		.byte	63
 14508 0d3f 40       		.byte	64
 14509 0d40 41       		.byte	65
 14510 0d41 42       		.byte	66
 14511 0d42 43       		.byte	67
 14512 0d43 44       		.byte	68
 14513 0d44 45       		.byte	69
 14514 0d45 46       		.byte	70
 14515 0d46 47       		.byte	71
 14516 0d47 48       		.byte	72
 14517 0d48 49       		.byte	73
 14518 0d49 4A       		.byte	74
 14519 0d4a 4B       		.byte	75
 14520 0d4b 4C       		.byte	76
 14521 0d4c 4D       		.byte	77
 14522 0d4d 4E       		.byte	78
 14523 0d4e 4F       		.byte	79
 14524 0d4f 50       		.byte	80
 14525 0d50 51       		.byte	81
 14526 0d51 52       		.byte	82
 14527 0d52 53       		.byte	83
 14528 0d53 54       		.byte	84
 14529 0d54 55       		.byte	85
 14530 0d55 56       		.byte	86
 14531 0d56 57       		.byte	87
 14532 0d57 58       		.byte	88
 14533 0d58 59       		.byte	89
 14534 0d59 5A       		.byte	90
 14535 0d5a 5B       		.byte	91
 14536 0d5b 5C       		.byte	92
 14537 0d5c 5D       		.byte	93
 14538 0d5d 5E       		.byte	94
 14539 0d5e 5F       		.byte	95
 14540 0d5f 60       		.byte	96
 14541 0d60 61       		.byte	97
 14542 0d61 62       		.byte	98
 14543 0d62 63       		.byte	99
 14544 0d63 64       		.byte	100
 14545 0d64 65       		.byte	101
 14546 0d65 66       		.byte	102
 14547 0d66 67       		.byte	103
 14548 0d67 68       		.byte	104
 14549 0d68 69       		.byte	105
 14550 0d69 6A       		.byte	106
 14551 0d6a 6B       		.byte	107
 14552 0d6b 6C       		.byte	108
 14553 0d6c 6D       		.byte	109
 14554 0d6d 6E       		.byte	110
 14555 0d6e 6F       		.byte	111
 14556 0d6f 70       		.byte	112
 14557 0d70 71       		.byte	113
 14558 0d71 72       		.byte	114
 14559 0d72 73       		.byte	115
 14560 0d73 74       		.byte	116
 14561 0d74 75       		.byte	117
 14562 0d75 76       		.byte	118
 14563 0d76 77       		.byte	119
 14564 0d77 78       		.byte	120
 14565 0d78 79       		.byte	121
 14566 0d79 7A       		.byte	122
 14567 0d7a 7B       		.byte	123
 14568 0d7b 7C       		.byte	124
 14569 0d7c 7D       		.byte	125
 14570 0d7d 7E       		.byte	126
 14571 0d7e 7F       		.byte	127
 14572 0d7f 80       		.byte	-128
 14573 0d80 81       		.byte	-127
 14574 0d81 82       		.byte	-126
 14575 0d82 83       		.byte	-125
 14576 0d83 84       		.byte	-124
 14577 0d84 85       		.byte	-123
 14578 0d85 86       		.byte	-122
 14579 0d86 87       		.byte	-121
 14580 0d87 88       		.byte	-120
 14581 0d88 89       		.byte	-119
 14582 0d89 8A       		.byte	-118
 14583 0d8a 8B       		.byte	-117
 14584 0d8b 8C       		.byte	-116
 14585 0d8c 8D       		.byte	-115
 14586 0d8d 8E       		.byte	-114
 14587 0d8e 8F       		.byte	-113
 14588 0d8f 90       		.byte	-112
 14589 0d90 91       		.byte	-111
 14590 0d91 92       		.byte	-110
 14591 0d92 93       		.byte	-109
 14592 0d93 94       		.byte	-108
 14593 0d94 95       		.byte	-107
 14594 0d95 96       		.byte	-106
 14595 0d96 97       		.byte	-105
 14596 0d97 98       		.byte	-104
 14597 0d98 99       		.byte	-103
 14598 0d99 9A       		.byte	-102
 14599 0d9a 9B       		.byte	-101
 14600 0d9b 9C       		.byte	-100
 14601 0d9c 9D       		.byte	-99
 14602 0d9d 9E       		.byte	-98
 14603 0d9e 9F       		.byte	-97
 14604 0d9f A0       		.byte	-96
 14605 0da0 A1       		.byte	-95
 14606 0da1 A2       		.byte	-94
 14607 0da2 A3       		.byte	-93
 14608 0da3 A4       		.byte	-92
 14609 0da4 A5       		.byte	-91
 14610 0da5 A6       		.byte	-90
 14611 0da6 A7       		.byte	-89
 14612 0da7 A8       		.byte	-88
 14613 0da8 A9       		.byte	-87
 14614 0da9 AA       		.byte	-86
 14615 0daa AB       		.byte	-85
 14616 0dab AC       		.byte	-84
 14617 0dac AD       		.byte	-83
 14618 0dad AE       		.byte	-82
 14619 0dae AF       		.byte	-81
 14620 0daf B0       		.byte	-80
 14621 0db0 B1       		.byte	-79
 14622 0db1 B2       		.byte	-78
 14623 0db2 B3       		.byte	-77
 14624 0db3 B4       		.byte	-76
 14625 0db4 B5       		.byte	-75
 14626 0db5 B6       		.byte	-74
 14627 0db6 B7       		.byte	-73
 14628 0db7 B8       		.byte	-72
 14629 0db8 B9       		.byte	-71
 14630 0db9 BA       		.byte	-70
 14631 0dba BB       		.byte	-69
 14632 0dbb BC       		.byte	-68
 14633 0dbc BD       		.byte	-67
 14634 0dbd BE       		.byte	-66
 14635 0dbe BF       		.byte	-65
 14636 0dbf C0       		.byte	-64
 14637 0dc0 C1       		.byte	-63
 14638 0dc1 C2       		.byte	-62
 14639 0dc2 C3       		.byte	-61
 14640 0dc3 C4       		.byte	-60
 14641 0dc4 C5       		.byte	-59
 14642 0dc5 C6       		.byte	-58
 14643 0dc6 C7       		.byte	-57
 14644 0dc7 C8       		.byte	-56
 14645 0dc8 C9       		.byte	-55
 14646 0dc9 CA       		.byte	-54
 14647 0dca CB       		.byte	-53
 14648 0dcb CC       		.byte	-52
 14649 0dcc CD       		.byte	-51
 14650 0dcd CE       		.byte	-50
 14651 0dce CF       		.byte	-49
 14652 0dcf D0       		.byte	-48
 14653 0dd0 D1       		.byte	-47
 14654 0dd1 D2       		.byte	-46
 14655 0dd2 D3       		.byte	-45
 14656 0dd3 D4       		.byte	-44
 14657 0dd4 D5       		.byte	-43
 14658 0dd5 D6       		.byte	-42
 14659 0dd6 D7       		.byte	-41
 14660 0dd7 D8       		.byte	-40
 14661 0dd8 D9       		.byte	-39
 14662 0dd9 DA       		.byte	-38
 14663 0dda DB       		.byte	-37
 14664 0ddb DC       		.byte	-36
 14665 0ddc DD       		.byte	-35
 14666 0ddd DE       		.byte	-34
 14667 0dde DF       		.byte	-33
 14668 0ddf E0       		.byte	-32
 14669 0de0 E1       		.byte	-31
 14670 0de1 E2       		.byte	-30
 14671 0de2 E3       		.byte	-29
 14672 0de3 E4       		.byte	-28
 14673 0de4 E5       		.byte	-27
 14674 0de5 E6       		.byte	-26
 14675 0de6 E7       		.byte	-25
 14676 0de7 E8       		.byte	-24
 14677 0de8 E9       		.byte	-23
 14678 0de9 EA       		.byte	-22
 14679 0dea EB       		.byte	-21
 14680 0deb EC       		.byte	-20
 14681 0dec ED       		.byte	-19
 14682 0ded EE       		.byte	-18
 14683 0dee EF       		.byte	-17
 14684 0def F0       		.byte	-16
 14685 0df0 F1       		.byte	-15
 14686 0df1 F2       		.byte	-14
 14687 0df2 F3       		.byte	-13
 14688 0df3 F4       		.byte	-12
 14689 0df4 F5       		.byte	-11
 14690 0df5 F6       		.byte	-10
 14691 0df6 F7       		.byte	-9
 14692 0df7 F8       		.byte	-8
 14693 0df8 F9       		.byte	-7
 14694 0df9 FA       		.byte	-6
 14695 0dfa FB       		.byte	-5
 14696 0dfb FC       		.byte	-4
 14697 0dfc FD       		.byte	-3
 14698 0dfd FE       		.byte	-2
 14699 0dfe FF       		.byte	-1
 14700 0dff 00       		.byte	0
 14701 0e00 01       		.byte	1
 14702 0e01 02       		.byte	2
 14703 0e02 03       		.byte	3
 14704 0e03 04       		.byte	4
 14705 0e04 05       		.byte	5
 14706 0e05 06       		.byte	6
 14707 0e06 07       		.byte	7
 14708 0e07 08       		.byte	8
 14709 0e08 09       		.byte	9
 14710 0e09 0A       		.byte	10
 14711 0e0a 0B       		.byte	11
 14712 0e0b 0C       		.byte	12
 14713 0e0c 0D       		.byte	13
 14714 0e0d 0E       		.byte	14
 14715 0e0e 0F       		.byte	15
 14716 0e0f 10       		.byte	16
 14717 0e10 11       		.byte	17
 14718 0e11 12       		.byte	18
 14719 0e12 13       		.byte	19
 14720 0e13 14       		.byte	20
 14721 0e14 15       		.byte	21
 14722 0e15 16       		.byte	22
 14723 0e16 17       		.byte	23
 14724 0e17 18       		.byte	24
 14725 0e18 19       		.byte	25
 14726 0e19 1A       		.byte	26
 14727 0e1a 1B       		.byte	27
 14728 0e1b 1C       		.byte	28
 14729 0e1c 1D       		.byte	29
 14730 0e1d 1E       		.byte	30
 14731 0e1e 1F       		.byte	31
 14732 0e1f 20       		.byte	32
 14733 0e20 21       		.byte	33
 14734 0e21 22       		.byte	34
 14735 0e22 23       		.byte	35
 14736 0e23 24       		.byte	36
 14737 0e24 25       		.byte	37
 14738 0e25 26       		.byte	38
 14739 0e26 27       		.byte	39
 14740 0e27 28       		.byte	40
 14741 0e28 29       		.byte	41
 14742 0e29 2A       		.byte	42
 14743 0e2a 2B       		.byte	43
 14744 0e2b 2C       		.byte	44
 14745 0e2c 2D       		.byte	45
 14746 0e2d 2E       		.byte	46
 14747 0e2e 2F       		.byte	47
 14748 0e2f 30       		.byte	48
 14749 0e30 31       		.byte	49
 14750 0e31 32       		.byte	50
 14751 0e32 33       		.byte	51
 14752 0e33 34       		.byte	52
 14753 0e34 35       		.byte	53
 14754 0e35 36       		.byte	54
 14755 0e36 37       		.byte	55
 14756 0e37 38       		.byte	56
 14757 0e38 39       		.byte	57
 14758 0e39 3A       		.byte	58
 14759 0e3a 3B       		.byte	59
 14760 0e3b 3C       		.byte	60
 14761 0e3c 3D       		.byte	61
 14762 0e3d 3E       		.byte	62
 14763 0e3e 3F       		.byte	63
 14764 0e3f 40       		.byte	64
 14765 0e40 41       		.byte	65
 14766 0e41 42       		.byte	66
 14767 0e42 43       		.byte	67
 14768 0e43 44       		.byte	68
 14769 0e44 45       		.byte	69
 14770 0e45 46       		.byte	70
 14771 0e46 47       		.byte	71
 14772 0e47 48       		.byte	72
 14773 0e48 49       		.byte	73
 14774 0e49 4A       		.byte	74
 14775 0e4a 4B       		.byte	75
 14776 0e4b 4C       		.byte	76
 14777 0e4c 4D       		.byte	77
 14778 0e4d 4E       		.byte	78
 14779 0e4e 4F       		.byte	79
 14780 0e4f 50       		.byte	80
 14781 0e50 51       		.byte	81
 14782 0e51 52       		.byte	82
 14783 0e52 53       		.byte	83
 14784 0e53 54       		.byte	84
 14785 0e54 55       		.byte	85
 14786 0e55 56       		.byte	86
 14787 0e56 57       		.byte	87
 14788 0e57 58       		.byte	88
 14789 0e58 59       		.byte	89
 14790 0e59 5A       		.byte	90
 14791 0e5a 5B       		.byte	91
 14792 0e5b 5C       		.byte	92
 14793 0e5c 5D       		.byte	93
 14794 0e5d 5E       		.byte	94
 14795 0e5e 5F       		.byte	95
 14796 0e5f 60       		.byte	96
 14797 0e60 61       		.byte	97
 14798 0e61 62       		.byte	98
 14799 0e62 63       		.byte	99
 14800 0e63 64       		.byte	100
 14801 0e64 65       		.byte	101
 14802 0e65 66       		.byte	102
 14803 0e66 67       		.byte	103
 14804 0e67 68       		.byte	104
 14805 0e68 69       		.byte	105
 14806 0e69 6A       		.byte	106
 14807 0e6a 6B       		.byte	107
 14808 0e6b 6C       		.byte	108
 14809 0e6c 6D       		.byte	109
 14810 0e6d 6E       		.byte	110
 14811 0e6e 6F       		.byte	111
 14812 0e6f 70       		.byte	112
 14813 0e70 71       		.byte	113
 14814 0e71 72       		.byte	114
 14815 0e72 73       		.byte	115
 14816 0e73 74       		.byte	116
 14817 0e74 75       		.byte	117
 14818 0e75 76       		.byte	118
 14819 0e76 77       		.byte	119
 14820 0e77 78       		.byte	120
 14821 0e78 79       		.byte	121
 14822 0e79 7A       		.byte	122
 14823 0e7a 7B       		.byte	123
 14824 0e7b 7C       		.byte	124
 14825 0e7c 7D       		.byte	125
 14826 0e7d 7E       		.byte	126
 14827 0e7e 7F       		.byte	127
 14828 0e7f 80       		.byte	-128
 14829 0e80 81       		.byte	-127
 14830 0e81 82       		.byte	-126
 14831 0e82 83       		.byte	-125
 14832 0e83 84       		.byte	-124
 14833 0e84 85       		.byte	-123
 14834 0e85 86       		.byte	-122
 14835 0e86 87       		.byte	-121
 14836 0e87 88       		.byte	-120
 14837 0e88 89       		.byte	-119
 14838 0e89 8A       		.byte	-118
 14839 0e8a 8B       		.byte	-117
 14840 0e8b 8C       		.byte	-116
 14841 0e8c 8D       		.byte	-115
 14842 0e8d 8E       		.byte	-114
 14843 0e8e 8F       		.byte	-113
 14844 0e8f 90       		.byte	-112
 14845 0e90 91       		.byte	-111
 14846 0e91 92       		.byte	-110
 14847 0e92 93       		.byte	-109
 14848 0e93 94       		.byte	-108
 14849 0e94 95       		.byte	-107
 14850 0e95 96       		.byte	-106
 14851 0e96 97       		.byte	-105
 14852 0e97 98       		.byte	-104
 14853 0e98 99       		.byte	-103
 14854 0e99 9A       		.byte	-102
 14855 0e9a 9B       		.byte	-101
 14856 0e9b 9C       		.byte	-100
 14857 0e9c 9D       		.byte	-99
 14858 0e9d 9E       		.byte	-98
 14859 0e9e 9F       		.byte	-97
 14860 0e9f A0       		.byte	-96
 14861 0ea0 A1       		.byte	-95
 14862 0ea1 A2       		.byte	-94
 14863 0ea2 A3       		.byte	-93
 14864 0ea3 A4       		.byte	-92
 14865 0ea4 A5       		.byte	-91
 14866 0ea5 A6       		.byte	-90
 14867 0ea6 A7       		.byte	-89
 14868 0ea7 A8       		.byte	-88
 14869 0ea8 A9       		.byte	-87
 14870 0ea9 AA       		.byte	-86
 14871 0eaa AB       		.byte	-85
 14872 0eab AC       		.byte	-84
 14873 0eac AD       		.byte	-83
 14874 0ead AE       		.byte	-82
 14875 0eae AF       		.byte	-81
 14876 0eaf B0       		.byte	-80
 14877 0eb0 B1       		.byte	-79
 14878 0eb1 B2       		.byte	-78
 14879 0eb2 B3       		.byte	-77
 14880 0eb3 B4       		.byte	-76
 14881 0eb4 B5       		.byte	-75
 14882 0eb5 B6       		.byte	-74
 14883 0eb6 B7       		.byte	-73
 14884 0eb7 B8       		.byte	-72
 14885 0eb8 B9       		.byte	-71
 14886 0eb9 BA       		.byte	-70
 14887 0eba BB       		.byte	-69
 14888 0ebb BC       		.byte	-68
 14889 0ebc BD       		.byte	-67
 14890 0ebd BE       		.byte	-66
 14891 0ebe BF       		.byte	-65
 14892 0ebf C0       		.byte	-64
 14893 0ec0 C1       		.byte	-63
 14894 0ec1 C2       		.byte	-62
 14895 0ec2 C3       		.byte	-61
 14896 0ec3 C4       		.byte	-60
 14897 0ec4 C5       		.byte	-59
 14898 0ec5 C6       		.byte	-58
 14899 0ec6 C7       		.byte	-57
 14900 0ec7 C8       		.byte	-56
 14901 0ec8 C9       		.byte	-55
 14902 0ec9 CA       		.byte	-54
 14903 0eca CB       		.byte	-53
 14904 0ecb CC       		.byte	-52
 14905 0ecc CD       		.byte	-51
 14906 0ecd CE       		.byte	-50
 14907 0ece CF       		.byte	-49
 14908 0ecf D0       		.byte	-48
 14909 0ed0 D1       		.byte	-47
 14910 0ed1 D2       		.byte	-46
 14911 0ed2 D3       		.byte	-45
 14912 0ed3 D4       		.byte	-44
 14913 0ed4 D5       		.byte	-43
 14914 0ed5 D6       		.byte	-42
 14915 0ed6 D7       		.byte	-41
 14916 0ed7 D8       		.byte	-40
 14917 0ed8 D9       		.byte	-39
 14918 0ed9 DA       		.byte	-38
 14919 0eda DB       		.byte	-37
 14920 0edb DC       		.byte	-36
 14921 0edc DD       		.byte	-35
 14922 0edd DE       		.byte	-34
 14923 0ede DF       		.byte	-33
 14924 0edf E0       		.byte	-32
 14925 0ee0 E1       		.byte	-31
 14926 0ee1 E2       		.byte	-30
 14927 0ee2 E3       		.byte	-29
 14928 0ee3 E4       		.byte	-28
 14929 0ee4 E5       		.byte	-27
 14930 0ee5 E6       		.byte	-26
 14931 0ee6 E7       		.byte	-25
 14932 0ee7 E8       		.byte	-24
 14933 0ee8 E9       		.byte	-23
 14934 0ee9 EA       		.byte	-22
 14935 0eea EB       		.byte	-21
 14936 0eeb EC       		.byte	-20
 14937 0eec ED       		.byte	-19
 14938 0eed EE       		.byte	-18
 14939 0eee EF       		.byte	-17
 14940 0eef F0       		.byte	-16
 14941 0ef0 F1       		.byte	-15
 14942 0ef1 F2       		.byte	-14
 14943 0ef2 F3       		.byte	-13
 14944 0ef3 F4       		.byte	-12
 14945 0ef4 F5       		.byte	-11
 14946 0ef5 F6       		.byte	-10
 14947 0ef6 F7       		.byte	-9
 14948 0ef7 F8       		.byte	-8
 14949 0ef8 F9       		.byte	-7
 14950 0ef9 FA       		.byte	-6
 14951 0efa FB       		.byte	-5
 14952 0efb FC       		.byte	-4
 14953 0efc FD       		.byte	-3
 14954 0efd FE       		.byte	-2
 14955 0efe FF       		.byte	-1
 14956 0eff 00       		.byte	0
 14957 0f00 01       		.byte	1
 14958 0f01 02       		.byte	2
 14959 0f02 03       		.byte	3
 14960 0f03 04       		.byte	4
 14961 0f04 05       		.byte	5
 14962 0f05 06       		.byte	6
 14963 0f06 07       		.byte	7
 14964 0f07 08       		.byte	8
 14965 0f08 09       		.byte	9
 14966 0f09 0A       		.byte	10
 14967 0f0a 0B       		.byte	11
 14968 0f0b 0C       		.byte	12
 14969 0f0c 0D       		.byte	13
 14970 0f0d 0E       		.byte	14
 14971 0f0e 0F       		.byte	15
 14972 0f0f 10       		.byte	16
 14973 0f10 11       		.byte	17
 14974 0f11 12       		.byte	18
 14975 0f12 13       		.byte	19
 14976 0f13 14       		.byte	20
 14977 0f14 15       		.byte	21
 14978 0f15 16       		.byte	22
 14979 0f16 17       		.byte	23
 14980 0f17 18       		.byte	24
 14981 0f18 19       		.byte	25
 14982 0f19 1A       		.byte	26
 14983 0f1a 1B       		.byte	27
 14984 0f1b 1C       		.byte	28
 14985 0f1c 1D       		.byte	29
 14986 0f1d 1E       		.byte	30
 14987 0f1e 1F       		.byte	31
 14988 0f1f 20       		.byte	32
 14989 0f20 21       		.byte	33
 14990 0f21 22       		.byte	34
 14991 0f22 23       		.byte	35
 14992 0f23 24       		.byte	36
 14993 0f24 25       		.byte	37
 14994 0f25 26       		.byte	38
 14995 0f26 27       		.byte	39
 14996 0f27 28       		.byte	40
 14997 0f28 29       		.byte	41
 14998 0f29 2A       		.byte	42
 14999 0f2a 2B       		.byte	43
 15000 0f2b 2C       		.byte	44
 15001 0f2c 2D       		.byte	45
 15002 0f2d 2E       		.byte	46
 15003 0f2e 2F       		.byte	47
 15004 0f2f 30       		.byte	48
 15005 0f30 31       		.byte	49
 15006 0f31 32       		.byte	50
 15007 0f32 33       		.byte	51
 15008 0f33 34       		.byte	52
 15009 0f34 35       		.byte	53
 15010 0f35 36       		.byte	54
 15011 0f36 37       		.byte	55
 15012 0f37 38       		.byte	56
 15013 0f38 39       		.byte	57
 15014 0f39 3A       		.byte	58
 15015 0f3a 3B       		.byte	59
 15016 0f3b 3C       		.byte	60
 15017 0f3c 3D       		.byte	61
 15018 0f3d 3E       		.byte	62
 15019 0f3e 3F       		.byte	63
 15020 0f3f 40       		.byte	64
 15021 0f40 41       		.byte	65
 15022 0f41 42       		.byte	66
 15023 0f42 43       		.byte	67
 15024 0f43 44       		.byte	68
 15025 0f44 45       		.byte	69
 15026 0f45 46       		.byte	70
 15027 0f46 47       		.byte	71
 15028 0f47 48       		.byte	72
 15029 0f48 49       		.byte	73
 15030 0f49 4A       		.byte	74
 15031 0f4a 4B       		.byte	75
 15032 0f4b 4C       		.byte	76
 15033 0f4c 4D       		.byte	77
 15034 0f4d 4E       		.byte	78
 15035 0f4e 4F       		.byte	79
 15036 0f4f 50       		.byte	80
 15037 0f50 51       		.byte	81
 15038 0f51 52       		.byte	82
 15039 0f52 53       		.byte	83
 15040 0f53 54       		.byte	84
 15041 0f54 55       		.byte	85
 15042 0f55 56       		.byte	86
 15043 0f56 57       		.byte	87
 15044 0f57 58       		.byte	88
 15045 0f58 59       		.byte	89
 15046 0f59 5A       		.byte	90
 15047 0f5a 5B       		.byte	91
 15048 0f5b 5C       		.byte	92
 15049 0f5c 5D       		.byte	93
 15050 0f5d 5E       		.byte	94
 15051 0f5e 5F       		.byte	95
 15052 0f5f 60       		.byte	96
 15053 0f60 61       		.byte	97
 15054 0f61 62       		.byte	98
 15055 0f62 63       		.byte	99
 15056 0f63 64       		.byte	100
 15057 0f64 65       		.byte	101
 15058 0f65 66       		.byte	102
 15059 0f66 67       		.byte	103
 15060 0f67 68       		.byte	104
 15061 0f68 69       		.byte	105
 15062 0f69 6A       		.byte	106
 15063 0f6a 6B       		.byte	107
 15064 0f6b 6C       		.byte	108
 15065 0f6c 6D       		.byte	109
 15066 0f6d 6E       		.byte	110
 15067 0f6e 6F       		.byte	111
 15068 0f6f 70       		.byte	112
 15069 0f70 71       		.byte	113
 15070 0f71 72       		.byte	114
 15071 0f72 73       		.byte	115
 15072 0f73 74       		.byte	116
 15073 0f74 75       		.byte	117
 15074 0f75 76       		.byte	118
 15075 0f76 77       		.byte	119
 15076 0f77 78       		.byte	120
 15077 0f78 79       		.byte	121
 15078 0f79 7A       		.byte	122
 15079 0f7a 7B       		.byte	123
 15080 0f7b 7C       		.byte	124
 15081 0f7c 7D       		.byte	125
 15082 0f7d 7E       		.byte	126
 15083 0f7e 7F       		.byte	127
 15084 0f7f 80       		.byte	-128
 15085 0f80 81       		.byte	-127
 15086 0f81 82       		.byte	-126
 15087 0f82 83       		.byte	-125
 15088 0f83 84       		.byte	-124
 15089 0f84 85       		.byte	-123
 15090 0f85 86       		.byte	-122
 15091 0f86 87       		.byte	-121
 15092 0f87 88       		.byte	-120
 15093 0f88 89       		.byte	-119
 15094 0f89 8A       		.byte	-118
 15095 0f8a 8B       		.byte	-117
 15096 0f8b 8C       		.byte	-116
 15097 0f8c 8D       		.byte	-115
 15098 0f8d 8E       		.byte	-114
 15099 0f8e 8F       		.byte	-113
 15100 0f8f 90       		.byte	-112
 15101 0f90 91       		.byte	-111
 15102 0f91 92       		.byte	-110
 15103 0f92 93       		.byte	-109
 15104 0f93 94       		.byte	-108
 15105 0f94 95       		.byte	-107
 15106 0f95 96       		.byte	-106
 15107 0f96 97       		.byte	-105
 15108 0f97 98       		.byte	-104
 15109 0f98 99       		.byte	-103
 15110 0f99 9A       		.byte	-102
 15111 0f9a 9B       		.byte	-101
 15112 0f9b 9C       		.byte	-100
 15113 0f9c 9D       		.byte	-99
 15114 0f9d 9E       		.byte	-98
 15115 0f9e 9F       		.byte	-97
 15116 0f9f A0       		.byte	-96
 15117 0fa0 A1       		.byte	-95
 15118 0fa1 A2       		.byte	-94
 15119 0fa2 A3       		.byte	-93
 15120 0fa3 A4       		.byte	-92
 15121 0fa4 A5       		.byte	-91
 15122 0fa5 A6       		.byte	-90
 15123 0fa6 A7       		.byte	-89
 15124 0fa7 A8       		.byte	-88
 15125 0fa8 A9       		.byte	-87
 15126 0fa9 AA       		.byte	-86
 15127 0faa AB       		.byte	-85
 15128 0fab AC       		.byte	-84
 15129 0fac AD       		.byte	-83
 15130 0fad AE       		.byte	-82
 15131 0fae AF       		.byte	-81
 15132 0faf B0       		.byte	-80
 15133 0fb0 B1       		.byte	-79
 15134 0fb1 B2       		.byte	-78
 15135 0fb2 B3       		.byte	-77
 15136 0fb3 B4       		.byte	-76
 15137 0fb4 B5       		.byte	-75
 15138 0fb5 B6       		.byte	-74
 15139 0fb6 B7       		.byte	-73
 15140 0fb7 B8       		.byte	-72
 15141 0fb8 B9       		.byte	-71
 15142 0fb9 BA       		.byte	-70
 15143 0fba BB       		.byte	-69
 15144 0fbb BC       		.byte	-68
 15145 0fbc BD       		.byte	-67
 15146 0fbd BE       		.byte	-66
 15147 0fbe BF       		.byte	-65
 15148 0fbf C0       		.byte	-64
 15149 0fc0 C1       		.byte	-63
 15150 0fc1 C2       		.byte	-62
 15151 0fc2 C3       		.byte	-61
 15152 0fc3 C4       		.byte	-60
 15153 0fc4 C5       		.byte	-59
 15154 0fc5 C6       		.byte	-58
 15155 0fc6 C7       		.byte	-57
 15156 0fc7 C8       		.byte	-56
 15157 0fc8 C9       		.byte	-55
 15158 0fc9 CA       		.byte	-54
 15159 0fca CB       		.byte	-53
 15160 0fcb CC       		.byte	-52
 15161 0fcc CD       		.byte	-51
 15162 0fcd CE       		.byte	-50
 15163 0fce CF       		.byte	-49
 15164 0fcf D0       		.byte	-48
 15165 0fd0 D1       		.byte	-47
 15166 0fd1 D2       		.byte	-46
 15167 0fd2 D3       		.byte	-45
 15168 0fd3 D4       		.byte	-44
 15169 0fd4 D5       		.byte	-43
 15170 0fd5 D6       		.byte	-42
 15171 0fd6 D7       		.byte	-41
 15172 0fd7 D8       		.byte	-40
 15173 0fd8 D9       		.byte	-39
 15174 0fd9 DA       		.byte	-38
 15175 0fda DB       		.byte	-37
 15176 0fdb DC       		.byte	-36
 15177 0fdc DD       		.byte	-35
 15178 0fdd DE       		.byte	-34
 15179 0fde DF       		.byte	-33
 15180 0fdf E0       		.byte	-32
 15181 0fe0 E1       		.byte	-31
 15182 0fe1 E2       		.byte	-30
 15183 0fe2 E3       		.byte	-29
 15184 0fe3 E4       		.byte	-28
 15185 0fe4 E5       		.byte	-27
 15186 0fe5 E6       		.byte	-26
 15187 0fe6 E7       		.byte	-25
 15188 0fe7 E8       		.byte	-24
 15189 0fe8 E9       		.byte	-23
 15190 0fe9 EA       		.byte	-22
 15191 0fea EB       		.byte	-21
 15192 0feb EC       		.byte	-20
 15193 0fec ED       		.byte	-19
 15194 0fed EE       		.byte	-18
 15195 0fee EF       		.byte	-17
 15196 0fef F0       		.byte	-16
 15197 0ff0 F1       		.byte	-15
 15198 0ff1 F2       		.byte	-14
 15199 0ff2 F3       		.byte	-13
 15200 0ff3 F4       		.byte	-12
 15201 0ff4 F5       		.byte	-11
 15202 0ff5 F6       		.byte	-10
 15203 0ff6 F7       		.byte	-9
 15204 0ff7 F8       		.byte	-8
 15205 0ff8 F9       		.byte	-7
 15206 0ff9 FA       		.byte	-6
 15207 0ffa FB       		.byte	-5
 15208 0ffb FC       		.byte	-4
 15209 0ffc FD       		.byte	-3
 15210 0ffd FE       		.byte	-2
 15211 0ffe FF       		.byte	-1
 15212 0fff 00       		.byte	0
 15213 1000 01       		.byte	1
 15214 1001 02       		.byte	2
 15215 1002 03       		.byte	3
 15216 1003 04       		.byte	4
 15217 1004 05       		.byte	5
 15218 1005 06       		.byte	6
 15219 1006 07       		.byte	7
 15220 1007 08       		.byte	8
 15221 1008 09       		.byte	9
 15222 1009 0A       		.byte	10
 15223 100a 0B       		.byte	11
 15224 100b 0C       		.byte	12
 15225 100c 0D       		.byte	13
 15226 100d 0E       		.byte	14
 15227 100e 0F       		.byte	15
 15228 100f 10       		.byte	16
 15229 1010 11       		.byte	17
 15230 1011 12       		.byte	18
 15231 1012 13       		.byte	19
 15232 1013 14       		.byte	20
 15233 1014 15       		.byte	21
 15234 1015 16       		.byte	22
 15235 1016 17       		.byte	23
 15236 1017 18       		.byte	24
 15237 1018 19       		.byte	25
 15238 1019 1A       		.byte	26
 15239 101a 1B       		.byte	27
 15240 101b 1C       		.byte	28
 15241 101c 1D       		.byte	29
 15242 101d 1E       		.byte	30
 15243 101e 1F       		.byte	31
 15244 101f 20       		.byte	32
 15245 1020 21       		.byte	33
 15246 1021 22       		.byte	34
 15247 1022 23       		.byte	35
 15248 1023 24       		.byte	36
 15249 1024 25       		.byte	37
 15250 1025 26       		.byte	38
 15251 1026 27       		.byte	39
 15252 1027 28       		.byte	40
 15253 1028 29       		.byte	41
 15254 1029 2A       		.byte	42
 15255 102a 2B       		.byte	43
 15256 102b 2C       		.byte	44
 15257 102c 2D       		.byte	45
 15258 102d 2E       		.byte	46
 15259 102e 2F       		.byte	47
 15260 102f 30       		.byte	48
 15261 1030 31       		.byte	49
 15262 1031 32       		.byte	50
 15263 1032 33       		.byte	51
 15264 1033 34       		.byte	52
 15265 1034 35       		.byte	53
 15266 1035 36       		.byte	54
 15267 1036 37       		.byte	55
 15268 1037 38       		.byte	56
 15269 1038 39       		.byte	57
 15270 1039 3A       		.byte	58
 15271 103a 3B       		.byte	59
 15272 103b 3C       		.byte	60
 15273 103c 3D       		.byte	61
 15274 103d 3E       		.byte	62
 15275 103e 3F       		.byte	63
 15276 103f 40       		.byte	64
 15277 1040 41       		.byte	65
 15278 1041 42       		.byte	66
 15279 1042 43       		.byte	67
 15280 1043 44       		.byte	68
 15281 1044 45       		.byte	69
 15282 1045 46       		.byte	70
 15283 1046 47       		.byte	71
 15284 1047 48       		.byte	72
 15285 1048 49       		.byte	73
 15286 1049 4A       		.byte	74
 15287 104a 4B       		.byte	75
 15288 104b 4C       		.byte	76
 15289 104c 4D       		.byte	77
 15290 104d 4E       		.byte	78
 15291 104e 4F       		.byte	79
 15292 104f 50       		.byte	80
 15293 1050 51       		.byte	81
 15294 1051 52       		.byte	82
 15295 1052 53       		.byte	83
 15296 1053 54       		.byte	84
 15297 1054 55       		.byte	85
 15298 1055 56       		.byte	86
 15299 1056 57       		.byte	87
 15300 1057 58       		.byte	88
 15301 1058 59       		.byte	89
 15302 1059 5A       		.byte	90
 15303 105a 5B       		.byte	91
 15304 105b 5C       		.byte	92
 15305 105c 5D       		.byte	93
 15306 105d 5E       		.byte	94
 15307 105e 5F       		.byte	95
 15308 105f 60       		.byte	96
 15309 1060 61       		.byte	97
 15310 1061 62       		.byte	98
 15311 1062 63       		.byte	99
 15312 1063 64       		.byte	100
 15313 1064 65       		.byte	101
 15314 1065 66       		.byte	102
 15315 1066 67       		.byte	103
 15316 1067 68       		.byte	104
 15317 1068 69       		.byte	105
 15318 1069 6A       		.byte	106
 15319 106a 6B       		.byte	107
 15320 106b 6C       		.byte	108
 15321 106c 6D       		.byte	109
 15322 106d 6E       		.byte	110
 15323 106e 6F       		.byte	111
 15324 106f 70       		.byte	112
 15325 1070 71       		.byte	113
 15326 1071 72       		.byte	114
 15327 1072 73       		.byte	115
 15328 1073 74       		.byte	116
 15329 1074 75       		.byte	117
 15330 1075 76       		.byte	118
 15331 1076 77       		.byte	119
 15332 1077 78       		.byte	120
 15333 1078 79       		.byte	121
 15334 1079 7A       		.byte	122
 15335 107a 7B       		.byte	123
 15336 107b 7C       		.byte	124
 15337 107c 7D       		.byte	125
 15338 107d 7E       		.byte	126
 15339 107e 7F       		.byte	127
 15340 107f 80       		.byte	-128
 15341 1080 81       		.byte	-127
 15342 1081 82       		.byte	-126
 15343 1082 83       		.byte	-125
 15344 1083 84       		.byte	-124
 15345 1084 85       		.byte	-123
 15346 1085 86       		.byte	-122
 15347 1086 87       		.byte	-121
 15348 1087 88       		.byte	-120
 15349 1088 89       		.byte	-119
 15350 1089 8A       		.byte	-118
 15351 108a 8B       		.byte	-117
 15352 108b 8C       		.byte	-116
 15353 108c 8D       		.byte	-115
 15354 108d 8E       		.byte	-114
 15355 108e 8F       		.byte	-113
 15356 108f 90       		.byte	-112
 15357 1090 91       		.byte	-111
 15358 1091 92       		.byte	-110
 15359 1092 93       		.byte	-109
 15360 1093 94       		.byte	-108
 15361 1094 95       		.byte	-107
 15362 1095 96       		.byte	-106
 15363 1096 97       		.byte	-105
 15364 1097 98       		.byte	-104
 15365 1098 99       		.byte	-103
 15366 1099 9A       		.byte	-102
 15367 109a 9B       		.byte	-101
 15368 109b 9C       		.byte	-100
 15369 109c 9D       		.byte	-99
 15370 109d 9E       		.byte	-98
 15371 109e 9F       		.byte	-97
 15372 109f A0       		.byte	-96
 15373 10a0 A1       		.byte	-95
 15374 10a1 A2       		.byte	-94
 15375 10a2 A3       		.byte	-93
 15376 10a3 A4       		.byte	-92
 15377 10a4 A5       		.byte	-91
 15378 10a5 A6       		.byte	-90
 15379 10a6 A7       		.byte	-89
 15380 10a7 A8       		.byte	-88
 15381 10a8 A9       		.byte	-87
 15382 10a9 AA       		.byte	-86
 15383 10aa AB       		.byte	-85
 15384 10ab AC       		.byte	-84
 15385 10ac AD       		.byte	-83
 15386 10ad AE       		.byte	-82
 15387 10ae AF       		.byte	-81
 15388 10af B0       		.byte	-80
 15389 10b0 B1       		.byte	-79
 15390 10b1 B2       		.byte	-78
 15391 10b2 B3       		.byte	-77
 15392 10b3 B4       		.byte	-76
 15393 10b4 B5       		.byte	-75
 15394 10b5 B6       		.byte	-74
 15395 10b6 B7       		.byte	-73
 15396 10b7 B8       		.byte	-72
 15397 10b8 B9       		.byte	-71
 15398 10b9 BA       		.byte	-70
 15399 10ba BB       		.byte	-69
 15400 10bb BC       		.byte	-68
 15401 10bc BD       		.byte	-67
 15402 10bd BE       		.byte	-66
 15403 10be BF       		.byte	-65
 15404 10bf C0       		.byte	-64
 15405 10c0 C1       		.byte	-63
 15406 10c1 C2       		.byte	-62
 15407 10c2 C3       		.byte	-61
 15408 10c3 C4       		.byte	-60
 15409 10c4 C5       		.byte	-59
 15410 10c5 C6       		.byte	-58
 15411 10c6 C7       		.byte	-57
 15412 10c7 C8       		.byte	-56
 15413 10c8 C9       		.byte	-55
 15414 10c9 CA       		.byte	-54
 15415 10ca CB       		.byte	-53
 15416 10cb CC       		.byte	-52
 15417 10cc CD       		.byte	-51
 15418 10cd CE       		.byte	-50
 15419 10ce CF       		.byte	-49
 15420 10cf D0       		.byte	-48
 15421 10d0 D1       		.byte	-47
 15422 10d1 D2       		.byte	-46
 15423 10d2 D3       		.byte	-45
 15424 10d3 D4       		.byte	-44
 15425 10d4 D5       		.byte	-43
 15426 10d5 D6       		.byte	-42
 15427 10d6 D7       		.byte	-41
 15428 10d7 D8       		.byte	-40
 15429 10d8 D9       		.byte	-39
 15430 10d9 DA       		.byte	-38
 15431 10da DB       		.byte	-37
 15432 10db DC       		.byte	-36
 15433 10dc DD       		.byte	-35
 15434 10dd DE       		.byte	-34
 15435 10de DF       		.byte	-33
 15436 10df E0       		.byte	-32
 15437 10e0 E1       		.byte	-31
 15438 10e1 E2       		.byte	-30
 15439 10e2 E3       		.byte	-29
 15440 10e3 E4       		.byte	-28
 15441 10e4 E5       		.byte	-27
 15442 10e5 E6       		.byte	-26
 15443 10e6 E7       		.byte	-25
 15444 10e7 E8       		.byte	-24
 15445 10e8 E9       		.byte	-23
 15446 10e9 EA       		.byte	-22
 15447 10ea EB       		.byte	-21
 15448 10eb EC       		.byte	-20
 15449 10ec ED       		.byte	-19
 15450 10ed EE       		.byte	-18
 15451 10ee EF       		.byte	-17
 15452 10ef F0       		.byte	-16
 15453 10f0 F1       		.byte	-15
 15454 10f1 F2       		.byte	-14
 15455 10f2 F3       		.byte	-13
 15456 10f3 F4       		.byte	-12
 15457 10f4 F5       		.byte	-11
 15458 10f5 F6       		.byte	-10
 15459 10f6 F7       		.byte	-9
 15460 10f7 F8       		.byte	-8
 15461 10f8 F9       		.byte	-7
 15462 10f9 FA       		.byte	-6
 15463 10fa FB       		.byte	-5
 15464 10fb FC       		.byte	-4
 15465 10fc FD       		.byte	-3
 15466 10fd FE       		.byte	-2
 15467 10fe FF       		.byte	-1
 15468 10ff 00       		.byte	0
 15469 1100 01       		.byte	1
 15470 1101 02       		.byte	2
 15471 1102 03       		.byte	3
 15472 1103 04       		.byte	4
 15473 1104 05       		.byte	5
 15474 1105 06       		.byte	6
 15475 1106 07       		.byte	7
 15476 1107 08       		.byte	8
 15477 1108 09       		.byte	9
 15478 1109 0A       		.byte	10
 15479 110a 0B       		.byte	11
 15480 110b 0C       		.byte	12
 15481 110c 0D       		.byte	13
 15482 110d 0E       		.byte	14
 15483 110e 0F       		.byte	15
 15484 110f 10       		.byte	16
 15485 1110 11       		.byte	17
 15486 1111 12       		.byte	18
 15487 1112 13       		.byte	19
 15488 1113 14       		.byte	20
 15489 1114 15       		.byte	21
 15490 1115 16       		.byte	22
 15491 1116 17       		.byte	23
 15492 1117 18       		.byte	24
 15493 1118 19       		.byte	25
 15494 1119 1A       		.byte	26
 15495 111a 1B       		.byte	27
 15496 111b 1C       		.byte	28
 15497 111c 1D       		.byte	29
 15498 111d 1E       		.byte	30
 15499 111e 1F       		.byte	31
 15500 111f 20       		.byte	32
 15501 1120 21       		.byte	33
 15502 1121 22       		.byte	34
 15503 1122 23       		.byte	35
 15504 1123 24       		.byte	36
 15505 1124 25       		.byte	37
 15506 1125 26       		.byte	38
 15507 1126 27       		.byte	39
 15508 1127 28       		.byte	40
 15509 1128 29       		.byte	41
 15510 1129 2A       		.byte	42
 15511 112a 2B       		.byte	43
 15512 112b 2C       		.byte	44
 15513 112c 2D       		.byte	45
 15514 112d 2E       		.byte	46
 15515 112e 2F       		.byte	47
 15516 112f 30       		.byte	48
 15517 1130 31       		.byte	49
 15518 1131 32       		.byte	50
 15519 1132 33       		.byte	51
 15520 1133 34       		.byte	52
 15521 1134 35       		.byte	53
 15522 1135 36       		.byte	54
 15523 1136 37       		.byte	55
 15524 1137 38       		.byte	56
 15525 1138 39       		.byte	57
 15526 1139 3A       		.byte	58
 15527 113a 3B       		.byte	59
 15528 113b 3C       		.byte	60
 15529 113c 3D       		.byte	61
 15530 113d 3E       		.byte	62
 15531 113e 3F       		.byte	63
 15532 113f 40       		.byte	64
 15533 1140 41       		.byte	65
 15534 1141 42       		.byte	66
 15535 1142 43       		.byte	67
 15536 1143 44       		.byte	68
 15537 1144 45       		.byte	69
 15538 1145 46       		.byte	70
 15539 1146 47       		.byte	71
 15540 1147 48       		.byte	72
 15541 1148 49       		.byte	73
 15542 1149 4A       		.byte	74
 15543 114a 4B       		.byte	75
 15544 114b 4C       		.byte	76
 15545 114c 4D       		.byte	77
 15546 114d 4E       		.byte	78
 15547 114e 4F       		.byte	79
 15548 114f 50       		.byte	80
 15549 1150 51       		.byte	81
 15550 1151 52       		.byte	82
 15551 1152 53       		.byte	83
 15552 1153 54       		.byte	84
 15553 1154 55       		.byte	85
 15554 1155 56       		.byte	86
 15555 1156 57       		.byte	87
 15556 1157 58       		.byte	88
 15557 1158 59       		.byte	89
 15558 1159 5A       		.byte	90
 15559 115a 5B       		.byte	91
 15560 115b 5C       		.byte	92
 15561 115c 5D       		.byte	93
 15562 115d 5E       		.byte	94
 15563 115e 5F       		.byte	95
 15564 115f 60       		.byte	96
 15565 1160 61       		.byte	97
 15566 1161 62       		.byte	98
 15567 1162 63       		.byte	99
 15568 1163 64       		.byte	100
 15569 1164 65       		.byte	101
 15570 1165 66       		.byte	102
 15571 1166 67       		.byte	103
 15572 1167 68       		.byte	104
 15573 1168 69       		.byte	105
 15574 1169 6A       		.byte	106
 15575 116a 6B       		.byte	107
 15576 116b 6C       		.byte	108
 15577 116c 6D       		.byte	109
 15578 116d 6E       		.byte	110
 15579 116e 6F       		.byte	111
 15580 116f 70       		.byte	112
 15581 1170 71       		.byte	113
 15582 1171 72       		.byte	114
 15583 1172 73       		.byte	115
 15584 1173 74       		.byte	116
 15585 1174 75       		.byte	117
 15586 1175 76       		.byte	118
 15587 1176 77       		.byte	119
 15588 1177 78       		.byte	120
 15589 1178 79       		.byte	121
 15590 1179 7A       		.byte	122
 15591 117a 7B       		.byte	123
 15592 117b 7C       		.byte	124
 15593 117c 7D       		.byte	125
 15594 117d 7E       		.byte	126
 15595 117e 7F       		.byte	127
 15596 117f 80       		.byte	-128
 15597 1180 81       		.byte	-127
 15598 1181 82       		.byte	-126
 15599 1182 83       		.byte	-125
 15600 1183 84       		.byte	-124
 15601 1184 85       		.byte	-123
 15602 1185 86       		.byte	-122
 15603 1186 87       		.byte	-121
 15604 1187 88       		.byte	-120
 15605 1188 89       		.byte	-119
 15606 1189 8A       		.byte	-118
 15607 118a 8B       		.byte	-117
 15608 118b 8C       		.byte	-116
 15609 118c 8D       		.byte	-115
 15610 118d 8E       		.byte	-114
 15611 118e 8F       		.byte	-113
 15612 118f 90       		.byte	-112
 15613 1190 91       		.byte	-111
 15614 1191 92       		.byte	-110
 15615 1192 93       		.byte	-109
 15616 1193 94       		.byte	-108
 15617 1194 95       		.byte	-107
 15618 1195 96       		.byte	-106
 15619 1196 97       		.byte	-105
 15620 1197 98       		.byte	-104
 15621 1198 99       		.byte	-103
 15622 1199 9A       		.byte	-102
 15623 119a 9B       		.byte	-101
 15624 119b 9C       		.byte	-100
 15625 119c 9D       		.byte	-99
 15626 119d 9E       		.byte	-98
 15627 119e 9F       		.byte	-97
 15628 119f A0       		.byte	-96
 15629 11a0 A1       		.byte	-95
 15630 11a1 A2       		.byte	-94
 15631 11a2 A3       		.byte	-93
 15632 11a3 A4       		.byte	-92
 15633 11a4 A5       		.byte	-91
 15634 11a5 A6       		.byte	-90
 15635 11a6 A7       		.byte	-89
 15636 11a7 A8       		.byte	-88
 15637 11a8 A9       		.byte	-87
 15638 11a9 AA       		.byte	-86
 15639 11aa AB       		.byte	-85
 15640 11ab AC       		.byte	-84
 15641 11ac AD       		.byte	-83
 15642 11ad AE       		.byte	-82
 15643 11ae AF       		.byte	-81
 15644 11af B0       		.byte	-80
 15645 11b0 B1       		.byte	-79
 15646 11b1 B2       		.byte	-78
 15647 11b2 B3       		.byte	-77
 15648 11b3 B4       		.byte	-76
 15649 11b4 B5       		.byte	-75
 15650 11b5 B6       		.byte	-74
 15651 11b6 B7       		.byte	-73
 15652 11b7 B8       		.byte	-72
 15653 11b8 B9       		.byte	-71
 15654 11b9 BA       		.byte	-70
 15655 11ba BB       		.byte	-69
 15656 11bb BC       		.byte	-68
 15657 11bc BD       		.byte	-67
 15658 11bd BE       		.byte	-66
 15659 11be BF       		.byte	-65
 15660 11bf C0       		.byte	-64
 15661 11c0 C1       		.byte	-63
 15662 11c1 C2       		.byte	-62
 15663 11c2 C3       		.byte	-61
 15664 11c3 C4       		.byte	-60
 15665 11c4 C5       		.byte	-59
 15666 11c5 C6       		.byte	-58
 15667 11c6 C7       		.byte	-57
 15668 11c7 C8       		.byte	-56
 15669 11c8 C9       		.byte	-55
 15670 11c9 CA       		.byte	-54
 15671 11ca CB       		.byte	-53
 15672 11cb CC       		.byte	-52
 15673 11cc CD       		.byte	-51
 15674 11cd CE       		.byte	-50
 15675 11ce CF       		.byte	-49
 15676 11cf D0       		.byte	-48
 15677 11d0 D1       		.byte	-47
 15678 11d1 D2       		.byte	-46
 15679 11d2 D3       		.byte	-45
 15680 11d3 D4       		.byte	-44
 15681 11d4 D5       		.byte	-43
 15682 11d5 D6       		.byte	-42
 15683 11d6 D7       		.byte	-41
 15684 11d7 D8       		.byte	-40
 15685 11d8 D9       		.byte	-39
 15686 11d9 DA       		.byte	-38
 15687 11da DB       		.byte	-37
 15688 11db DC       		.byte	-36
 15689 11dc DD       		.byte	-35
 15690 11dd DE       		.byte	-34
 15691 11de DF       		.byte	-33
 15692 11df E0       		.byte	-32
 15693 11e0 E1       		.byte	-31
 15694 11e1 E2       		.byte	-30
 15695 11e2 E3       		.byte	-29
 15696 11e3 E4       		.byte	-28
 15697 11e4 E5       		.byte	-27
 15698 11e5 E6       		.byte	-26
 15699 11e6 E7       		.byte	-25
 15700 11e7 E8       		.byte	-24
 15701 11e8 E9       		.byte	-23
 15702 11e9 EA       		.byte	-22
 15703 11ea EB       		.byte	-21
 15704 11eb EC       		.byte	-20
 15705 11ec ED       		.byte	-19
 15706 11ed EE       		.byte	-18
 15707 11ee EF       		.byte	-17
 15708 11ef F0       		.byte	-16
 15709 11f0 F1       		.byte	-15
 15710 11f1 F2       		.byte	-14
 15711 11f2 F3       		.byte	-13
 15712 11f3 F4       		.byte	-12
 15713 11f4 F5       		.byte	-11
 15714 11f5 F6       		.byte	-10
 15715 11f6 F7       		.byte	-9
 15716 11f7 F8       		.byte	-8
 15717 11f8 F9       		.byte	-7
 15718 11f9 FA       		.byte	-6
 15719 11fa FB       		.byte	-5
 15720 11fb FC       		.byte	-4
 15721 11fc FD       		.byte	-3
 15722 11fd FE       		.byte	-2
 15723 11fe FF       		.byte	-1
 15724 11ff 01       		.byte	1
 15725              		.section	.rodata.clientcredentialMQTT_BROKER_ENDPOINT,"a",%progbits
 15726              		.set	.LANCHOR3,. + 0
 15729              	clientcredentialMQTT_BROKER_ENDPOINT:
 15730 0000 61333369 		.ascii	"a33i4lqfcxqo2.iot.ap-northeast-1.amazonaws.com\000"
 15730      346C7166 
 15730      6378716F 
 15730      322E696F 
 15730      742E6170 
 15731              		.section	.rodata.prvAwsIotBrokerConnectHelper.str1.1,"aMS",%progbits,1
 15732              	.LC10:
 15733 0000 25733A20 		.ascii	"%s: Failed to setSockOpt SOCKETS_SO_REQUIRE_TLS \015"
 15733      4661696C 
 15733      65642074 
 15733      6F207365 
 15733      74536F63 
 15734 0031 0A00     		.ascii	"\012\000"
 15735              		.section	.rodata.prvCheckRxTxBuffers.str1.1,"aMS",%progbits,1
 15736              	.LC21:
 15737 0000 4D657373 		.ascii	"Message bytes received different than those sent. M"
 15737      61676520 
 15737      62797465 
 15737      73207265 
 15737      63656976 
 15738 0033 65737361 		.ascii	"essage Length %d, Byte Index %d \015\012\000"
 15738      6765204C 
 15738      656E6774 
 15738      68202564 
 15738      2C204279 
 15739              	.LC22:
 15740 0056 52782062 		.ascii	"Rx buffer padding modified byte. Message Length %d,"
 15740      75666665 
 15740      72207061 
 15740      6464696E 
 15740      67206D6F 
 15741 0089 20427974 		.ascii	" Byte Index %d \015\012\000"
 15741      6520496E 
 15741      64657820 
 15741      2564200D 
 15741      0A00
 15742              	.LC23:
 15743 009b 54782062 		.ascii	"Tx buffer padding modified. Message Length %d, Byte"
 15743      75666665 
 15743      72207061 
 15743      6464696E 
 15743      67206D6F 
 15744 00ce 20496E64 		.ascii	" Index %d \015\012\000"
 15744      65782025 
 15744      64200D0A 
 15744      00
 15745              		.section	.rodata.prvCheckTimeout.str1.1,"aMS",%progbits,1
 15746              	.LC6:
 15747 0000 53746172 		.ascii	"Start Time: %d, End Time: %d, Timeout: %d \012\000"
 15747      74205469 
 15747      6D653A20 
 15747      25642C20 
 15747      456E6420 
 15748              		.section	.rodata.prvConnectHelperWithRetry.str1.1,"aMS",%progbits,1
 15749              	.LC27:
 15750 0000 25733A20 		.ascii	"%s: Failed to setSockOpt SOCKETS_SO_TRUSTED_SERVER_"
 15750      4661696C 
 15750      65642074 
 15750      6F207365 
 15750      74536F63 
 15751 0033 43455254 		.ascii	"CERTIFICATE \015\012\000"
 15751      49464943 
 15751      41544520 
 15751      0D0A00
 15752              	.LC28:
 15753 0042 253A2046 		.ascii	"%: Failed to setSockOpt SOCKETS_SO_REQUIRE_TLS \015"
 15753      61696C65 
 15753      6420746F 
 15753      20736574 
 15753      536F636B 
 15754 0072 0A00     		.ascii	"\012\000"
 15755              		.section	.rodata.prvConnect_InvalidAddressLength.str1.1,"aMS",%progbits,1
 15756              	.LC24:
 15757 0000 536F636B 		.ascii	"Socket creation failed.\000"
 15757      65742063 
 15757      72656174 
 15757      696F6E20 
 15757      6661696C 
 15758              	.LC25:
 15759 0018 536F636B 		.ascii	"Socket connect failed.\000"
 15759      65742063 
 15759      6F6E6E65 
 15759      63742066 
 15759      61696C65 
 15760              	.LC26:
 15761 002f 534F434B 		.ascii	"SOCKETS_Close failed. \015\012\000"
 15761      4554535F 
 15761      436C6F73 
 15761      65206661 
 15761      696C6564 
 15762              		.section	.rodata.prvCreateTxData.str1.1,"aMS",%progbits,1
 15763              	.LC20:
 15764 0000 25752054 		.ascii	"%u TxRx with of length %u\000"
 15764      78527820 
 15764      77697468 
 15764      206F6620 
 15764      6C656E67 
 15765              		.section	.rodata.prvRecvHelper.str1.1,"aMS",%progbits,1
 15766              	.LC11:
 15767 0000 54696D65 		.ascii	"Timed out receiving from echo server \015\012\000"
 15767      64206F75 
 15767      74207265 
 15767      63656976 
 15767      696E6720 
 15768              	.LC12:
 15769 0028 4572726F 		.ascii	"Error %d while receiving from echo server\015\012\000"
 15769      72202564 
 15769      20776869 
 15769      6C652072 
 15769      65636569 
 15770              		.section	.rodata.prvRecv_Invalid.str1.1,"aMS",%progbits,1
 15771              	.LC41:
 15772 0000 536F636B 		.ascii	"Socket receive with NULL receive buffer should have"
 15772      65742072 
 15772      65636569 
 15772      76652077 
 15772      69746820 
 15773 0033 20747269 		.ascii	" triggered error\000"
 15773      67676572 
 15773      65642065 
 15773      72726F72 
 15773      00
 15774              	.LC42:
 15775 0044 536F636B 		.ascii	"Socket receive with invalid socket should have trig"
 15775      65742072 
 15775      65636569 
 15775      76652077 
 15775      69746820 
 15776 0077 67657265 		.ascii	"gered error\000"
 15776      64206572 
 15776      726F7200 
 15777              		.section	.rodata.prvSOCKETS_CloseWithoutReceiving.str1.1,"aMS",%progbits,1
 15778              	.LC29:
 15779 0000 4661696C 		.ascii	"Failed to connect\000"
 15779      65642074 
 15779      6F20636F 
 15779      6E6E6563 
 15779      7400
 15780              	.LC30:
 15781 0012 536F636B 		.ascii	"Socket was not able to send\000"
 15781      65742077 
 15781      6173206E 
 15781      6F742061 
 15781      626C6520 
 15782              		.section	.rodata.prvSOCKETS_Connect_InvalidParams.isra.9.str1.1,"aMS",%progbits,1
 15783              	.LC70:
 15784 0000 436F6E6E 		.ascii	"Connect on an invalid socket failed\000"
 15784      65637420 
 15784      6F6E2061 
 15784      6E20696E 
 15784      76616C69 
 15785              	.LC71:
 15786 0024 436F6E6E 		.ascii	"Connect to IP Address 0.0.0.0 worked\000"
 15786      65637420 
 15786      746F2049 
 15786      50204164 
 15786      64726573 
 15787              	.LC72:
 15788 0049 436F6E6E 		.ascii	"Connect to Port 0 worked\000"
 15788      65637420 
 15788      746F2050 
 15788      6F727420 
 15788      3020776F 
 15789              	.LC73:
 15790 0062 436F6E6E 		.ascii	"Connect to NULL Address worked.\000"
 15790      65637420 
 15790      746F204E 
 15790      554C4C20 
 15790      41646472 
 15791              		.section	.rodata.prvSOCKETS_NonBlocking_Test.str1.1,"aMS",%progbits,1
 15792              	.LC64:
 15793 0000 44617461 		.ascii	"Data failed to send\015\012\000"
 15793      20666169 
 15793      6C656420 
 15793      746F2073 
 15793      656E640D 
 15794              	.LC65:
 15795 0016 44617461 		.ascii	"Data was not received \015\012\000"
 15795      20776173 
 15795      206E6F74 
 15795      20726563 
 15795      65697665 
 15796              		.section	.rodata.prvSOCKETS_Recv_On_Unconnected_Socket.str1.1,"aMS",%progbits,1
 15797              	.LC53:
 15798 0000 53657453 		.ascii	"SetSockOpt Failed\000"
 15798      6F636B4F 
 15798      70742046 
 15798      61696C65 
 15798      6400
 15799              	.LC54:
 15800 0012 536F636B 		.ascii	"Socket was able to receive from unconnected socket\000"
 15800      65742077 
 15800      61732061 
 15800      626C6520 
 15800      746F2072 
 15801              	.LC55:
 15802 0045 536F636B 		.ascii	"Socket failed to close.\000"
 15802      65742066 
 15802      61696C65 
 15802      6420746F 
 15802      20636C6F 
 15803              		.section	.rodata.prvSOCKETS_SetSockOpt_RCVTIMEO.str1.1,"aMS",%progbits,1
 15804              	.LC61:
 15805 0000 4661696C 		.ascii	"Failed to set receive timeout\000"
 15805      65642074 
 15805      6F207365 
 15805      74207265 
 15805      63656976 
 15806              	.LC62:
 15807 001e 52656365 		.ascii	"Receive call failed in receive timeout test\000"
 15807      69766520 
 15807      63616C6C 
 15807      20666169 
 15807      6C656420 
 15808              	.LC63:
 15809 004a 52656365 		.ascii	"Receive timeout was outside of acceptable range\000"
 15809      69766520 
 15809      74696D65 
 15809      6F757420 
 15809      77617320 
 15810              		.section	.rodata.prvSOCKETS_ShutdownInvalidParams.isra.7.str1.1,"aMS",%progbits,1
 15811              	.LC44:
 15812 0000 536F636B 		.ascii	"Socket could shutdown with an invalid param\000"
 15812      65742063 
 15812      6F756C64 
 15812      20736875 
 15812      74646F77 
 15813              		.section	.rodata.prvSOCKETS_ShutdownWithoutReceiving.str1.1,"aMS",%progbits,1
 15814              	.LC31:
 15815 0000 536F636B 		.ascii	"Socket failed to shutdown\000"
 15815      65742066 
 15815      61696C65 
 15815      6420746F 
 15815      20736875 
 15816              		.section	.rodata.prvSOCKETS_Socket_InvalidInputParams.isra.6.str1.1,"aMS",%progbits,1
 15817              	.LC89:
 15818 0000 496E7661 		.ascii	"Invalid socket domain accepted\000"
 15818      6C696420 
 15818      736F636B 
 15818      65742064 
 15818      6F6D6169 
 15819              	.LC90:
 15820 001f 496E7661 		.ascii	"Invalid socket type accepted\000"
 15820      6C696420 
 15820      736F636B 
 15820      65742074 
 15820      79706520 
 15821              	.LC91:
 15822 003c 496E7661 		.ascii	"Invalid socket protocol accepted\000"
 15822      6C696420 
 15822      736F636B 
 15822      65742070 
 15822      726F746F 
 15823              	.LC92:
 15824 005d 496E7661 		.ascii	"Invalid socket created - UDP is not supported. \000"
 15824      6C696420 
 15824      736F636B 
 15824      65742063 
 15824      72656174 
 15825              	.LC93:
 15826 008d 496E7661 		.ascii	"Invalid socket created - mixed TCP with DGRAM \000"
 15826      6C696420 
 15826      736F636B 
 15826      65742063 
 15826      72656174 
 15827              	.LC94:
 15828 00bc 496E7661 		.ascii	"Invalid socket created - mixed UDP with STREAM\000"
 15828      6C696420 
 15828      736F636B 
 15828      65742063 
 15828      72656174 
 15829              		.section	.rodata.prvSOCKETS_Threadsafe_SameSocketDifferentTasks.str1.1,"aMS",%progbits,1
 15830              	.LC66:
 15831 0000 4563686F 		.ascii	"EchoMultiTx\000"
 15831      4D756C74 
 15831      69547800 
 15832              	.LC67:
 15833 000c 5461736B 		.ascii	"Task creation failed\000"
 15833      20637265 
 15833      6174696F 
 15833      6E206661 
 15833      696C6564 
 15834              	.LC68:
 15835 0021 4572726F 		.ascii	"Error occured receiving large message\000"
 15835      72206F63 
 15835      63757265 
 15835      64207265 
 15835      63656976 
 15836              	.LC69:
 15837 0047 54696D65 		.ascii	"Timeout occurred\000"
 15837      6F757420 
 15837      6F636375 
 15837      72726564 
 15837      00
 15838              		.section	.rodata.prvSendHelper.str1.1,"aMS",%progbits,1
 15839              	.LC7:
 15840 0000 4572726F 		.ascii	"Error in SOCKETS_Send.  Return value: %d \015\012\000"
 15840      7220696E 
 15840      20534F43 
 15840      4B455453 
 15840      5F53656E 
 15841              		.section	.rodata.prvSend_Invalid.str1.1,"aMS",%progbits,1
 15842              	.LC34:
 15843 0000 536F636B 		.ascii	"Socket send fails with invalid socket\000"
 15843      65742073 
 15843      656E6420 
 15843      6661696C 
 15843      73207769 
 15844              	.LC35:
 15845 0026 536F636B 		.ascii	"Socket send should return error for NULL input buff"
 15845      65742073 
 15845      656E6420 
 15845      73686F75 
 15845      6C642072 
 15846 0059 657200   		.ascii	"er\000"
 15847              	.LC36:
 15848 005c 53656E64 		.ascii	"Sending on an TCP socket with NULL buffer triggered"
 15848      696E6720 
 15848      6F6E2061 
 15848      6E205443 
 15848      5020736F 
 15849 008f 20616E20 		.ascii	" an assert \000"
 15849      61737365 
 15849      72742000 
 15850              	.LC37:
 15851 009b 53657420 		.ascii	"Set sockopt failed\000"
 15851      736F636B 
 15851      6F707420 
 15851      6661696C 
 15851      656400
 15852              	.LC38:
 15853 00ae 536F636B 		.ascii	"Socket send worked with an unconnected socket\000"
 15853      65742073 
 15853      656E6420 
 15853      776F726B 
 15853      65642077 
 15854              	.LC39:
 15855 00dc 536F636B 		.ascii	"Socket close failed\000"
 15855      65742063 
 15855      6C6F7365 
 15855      20666169 
 15855      6C656400 
 15856              	.LC40:
 15857 00f0 53656E64 		.ascii	"Sending on an unconnected TCP socket triggered an a"
 15857      696E6720 
 15857      6F6E2061 
 15857      6E20756E 
 15857      636F6E6E 
 15858 0123 73736572 		.ascii	"ssert \000"
 15858      742000
 15859              		.section	.rodata.prvSetSockOptHelper.str1.1,"aMS",%progbits,1
 15860              	.LC8:
 15861 0000 25733A20 		.ascii	"%s: Socket set sock opt send timeout failed \015\012"
 15861      536F636B 
 15861      65742073 
 15861      65742073 
 15861      6F636B20 
 15862 002e 00       		.ascii	"\000"
 15863              	.LC9:
 15864 002f 25733A20 		.ascii	"%s: Socket set sock opt receive timeout failed \015"
 15864      536F636B 
 15864      65742073 
 15864      65742073 
 15864      6F636B20 
 15865 005f 0A00     		.ascii	"\012\000"
 15866              		.section	.rodata.prvSetSockOpt_InvalidParams.str1.1,"aMS",%progbits,1
 15867              	.LC32:
 15868 0000 534F434B 		.ascii	"SOCKETS_SetSockOpt with invalid option succeeded.\000"
 15868      4554535F 
 15868      53657453 
 15868      6F636B4F 
 15868      70742077 
 15869              	.LC33:
 15870 0032 534F434B 		.ascii	"SOCKETS_SetSockOpt with invalid socket succeeded.\000"
 15870      4554535F 
 15870      53657453 
 15870      6F636B4F 
 15870      70742077 
 15871              		.section	.rodata.prvStartTCPEchoClientTasks_DifferentSockets.str1.1,"aMS",%progbits,1
 15872              	.LC183:
 15873 0000 436C6965 		.ascii	"ClientTask\000"
 15873      6E745461 
 15873      736B00
 15874              	.LC184:
 15875 000b 43686563 		.ascii	"Check aws_secure_sockets.h for error code\000"
 15875      6B206177 
 15875      735F7365 
 15875      63757265 
 15875      5F736F63 
 15876              		.section	.rodata.prvTestSOCKETS_Recv_ByteByByte.str1.1,"aMS",%progbits,1
 15877              	.LC74:
 15878 0000 42756666 		.ascii	"Buffer modified at byte %d \015\012\000"
 15878      6572206D 
 15878      6F646966 
 15878      69656420 
 15878      61742062 
 15879              	.LC75:
 15880 001e 4661696C 		.ascii	"Failed received\015\012\000"
 15880      65642072 
 15880      65636569 
 15880      7665640D 
 15880      0A00
 15881              		.section	.rodata.prvThreadSafeDifferentSocketsDifferentTasks.str1.1,"aMS",%progbits,1
 15882              	.LC84:
 15883 0000 25733A20 		.ascii	"%s: Task %d failed to alloc memory \015\012\000"
 15883      5461736B 
 15883      20256420 
 15883      6661696C 
 15883      65642074 
 15884              	.LC85:
 15885 0026 25733A20 		.ascii	"%s: Task %d failed to connect with error code %d on"
 15885      5461736B 
 15885      20256420 
 15885      6661696C 
 15885      65642074 
 15886 0059 206C6F6F 		.ascii	" loop %d \015\012\000"
 15886      70202564 
 15886      200D0A00 
 15887              	.LC86:
 15888 0065 25733A20 		.ascii	"%s: Task %d error  %ld while transmitting data\015\012"
 15888      5461736B 
 15888      20256420 
 15888      6572726F 
 15888      72202025 
 15889 0095 00       		.ascii	"\000"
 15890              	.LC87:
 15891 0096 25733A20 		.ascii	"%s: Task %d error while receiving data \015\012\000"
 15891      5461736B 
 15891      20256420 
 15891      6572726F 
 15891      72207768 
 15892              	.LC88:
 15893 00c0 25733A20 		.ascii	"%s: Task %d error not enough bytes received \015\012"
 15893      5461736B 
 15893      20256420 
 15893      6572726F 
 15893      72206E6F 
 15894 00ee 00       		.ascii	"\000"
 15895              		.section	.rodata.prvTwoSecureConnections.str1.1,"aMS",%progbits,1
 15896              	.LC45:
 15897 0000 4661696C 		.ascii	"Failed to connect to AWS Broker\000"
 15897      65642074 
 15897      6F20636F 
 15897      6E6E6563 
 15897      7420746F 
 15898              	.LC46:
 15899 0020 4661696C 		.ascii	"Failed to connect to secure server\000"
 15899      65642074 
 15899      6F20636F 
 15899      6E6E6563 
 15899      7420746F 
 15900              	.LC47:
 15901 0043 53656E64 		.ascii	"Send to secure server failed.\000"
 15901      20746F20 
 15901      73656375 
 15901      72652073 
 15901      65727665 
 15902              	.LC48:
 15903 0061 53656E64 		.ascii	"Send to AWS failed.\000"
 15903      20746F20 
 15903      41575320 
 15903      6661696C 
 15903      65642E00 
 15904              	.LC49:
 15905 0075 52656365 		.ascii	"Received incorrect number of bytes from sec server."
 15905      69766564 
 15905      20696E63 
 15905      6F727265 
 15905      6374206E 
 15906 00a8 00       		.ascii	"\000"
 15907              	.LC50:
 15908 00a9 52656365 		.ascii	"Received incorrect message from secure server. \000"
 15908      69766564 
 15908      20696E63 
 15908      6F727265 
 15908      6374206D 
 15909              	.LC51:
 15910 00d9 52656365 		.ascii	"Received bytes when there should be none to receive"
 15910      69766564 
 15910      20627974 
 15910      65732077 
 15910      68656E20 
 15911 010c 2E00     		.ascii	".\000"
 15912              	.LC52:
 15913 010e 4661696C 		.ascii	"Failed to shutdown socket.\000"
 15913      65642074 
 15913      6F207368 
 15913      7574646F 
 15913      776E2073 
 15914              		.section	.rodata.tcptestECHO_HOST_ROOT_CA,"a",%progbits
 15915              		.set	.LANCHOR5,. + 0
 15918              	tcptestECHO_HOST_ROOT_CA:
 15919 0000 50617374 		.ascii	"Paste root certificate here\000"
 15919      6520726F 
 15919      6F742063 
 15919      65727469 
 15919      66696361 
 15920              		.section	.rodata.xReceiveTimeOut,"a",%progbits
 15921              		.align	2
 15922              		.set	.LANCHOR10,. + 0
 15925              	xReceiveTimeOut:
 15926 0000 204E0000 		.word	20000
 15927              		.text
 15928              	.Letext0:
 15929              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15930              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15931              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 15932              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15933              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15934              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15935              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15936              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 15937              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 15938              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 15939              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 15940              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 15941              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/queue.h"
 15942              		.file 15 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/event_groups.h"
 15943              		.file 16 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/aws_secure_sockets.h"
 15944              		.file 17 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\extras\\fixture\\src/u
 15945              		.file 18 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\common\\include/aws_test_runner.h"
 15946              		.file 19 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\common\\include/aws_clientcredential_key
 15947              		.file 20 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\common\\include/aws_test_tcp.h"
 15948              		.file 21 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\common\\include/aws_clientcredential.h"
 15949              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 15950              		.file 23 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/portable.h"
 15951              		.file 24 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\renesas\\rza2m-gr-mango\\common\\config_
 15952              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 15953              		.file 26 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 aws_test_tcp.c
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:17     .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:23     .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:36     .text.TEST_Full_TCP_TEAR_DOWN:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:42     .text.TEST_Full_TCP_TEAR_DOWN:00000000 TEST_Full_TCP_TEAR_DOWN
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:92     .text.TEST_Full_TCP_TEAR_DOWN:00000058 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:100    .text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:106    .text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_:00000000 TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:133    .text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_:00000028 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:138    .text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:144    .text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_:00000000 TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:171    .text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_:00000028 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:177    .text.prvCheckTimeout:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:182    .text.prvCheckTimeout:00000000 prvCheckTimeout
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:242    .text.prvCheckTimeout:00000060 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:247    .text.prvSendHelper:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:252    .text.prvSendHelper:00000000 prvSendHelper
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:314    .text.prvSendHelper:0000005c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:319    .text.prvTcpSocketHelper:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:324    .text.prvTcpSocketHelper:00000000 prvTcpSocketHelper
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:356    .text.prvSetSockOptHelper:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:361    .text.prvSetSockOptHelper:00000000 prvSetSockOptHelper
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:433    .text.prvSetSockOptHelper:00000074 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:440    .text.prvAwsIotBrokerConnectHelper:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:445    .text.prvAwsIotBrokerConnectHelper:00000000 prvAwsIotBrokerConnectHelper
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:514    .text.prvAwsIotBrokerConnectHelper:00000070 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:522    .text.prvRecvHelper:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:527    .text.prvRecvHelper:00000000 prvRecvHelper
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:601    .text.prvRecvHelper:0000006c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:607    .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:613    .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:767    .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_:00000130 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:782    .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:788    .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:851    .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_:00000078 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:859    .text.prvCreateTxData:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:864    .text.prvCreateTxData:00000000 prvCreateTxData
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:933    .text.prvCreateTxData:00000070 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:938    .text.prvCheckRxTxBuffers:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:943    .text.prvCheckRxTxBuffers:00000000 prvCheckRxTxBuffers
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1051   .text.prvCheckRxTxBuffers:000000b8 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1059   .text.prvConnect_InvalidAddressLength:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1064   .text.prvConnect_InvalidAddressLength:00000000 prvConnect_InvalidAddressLength
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1212   .text.prvConnect_InvalidAddressLength:00000124 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1225   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1231   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1261   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1267   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1299   .text.prvEchoClientTxTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1304   .text.prvEchoClientTxTask:00000000 prvEchoClientTxTask
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1451   .text.prvEchoClientTxTask:000000f0 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1459   .text.prvSOCKETS_CloseInvalidParams.isra.2:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1464   .text.prvSOCKETS_CloseInvalidParams.isra.2:00000000 prvSOCKETS_CloseInvalidParams.isra.2
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1496   .text.prvSOCKETS_CloseInvalidParams.isra.2:00000030 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1501   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1507   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1521   .text.prvConnectHelperWithRetry:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1526   .text.prvConnectHelperWithRetry:00000000 prvConnectHelperWithRetry
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1767   .text.prvConnectHelperWithRetry:00000190 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1780   .text.prvSOCKETS_CloseWithoutReceiving:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1785   .text.prvSOCKETS_CloseWithoutReceiving:00000000 prvSOCKETS_CloseWithoutReceiving
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1874   .text.prvSOCKETS_CloseWithoutReceiving:0000009c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1884   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1890   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_:00000000 TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1905   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1911   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1926   .text.prvSOCKETS_ShutdownWithoutReceiving:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:1931   .text.prvSOCKETS_ShutdownWithoutReceiving:00000000 prvSOCKETS_ShutdownWithoutReceiving
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2034   .text.prvSOCKETS_ShutdownWithoutReceiving:000000c0 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2045   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2051   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_:00000000 TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2066   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2072   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2087   .text.prvSetSockOpt_InvalidParams:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2092   .text.prvSetSockOpt_InvalidParams:00000000 prvSetSockOpt_InvalidParams
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2214   .text.prvSetSockOpt_InvalidParams:000000f0 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2226   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2232   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_:00000000 TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2247   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2253   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2268   .text.prvSOCKETS_Shutdown:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2273   .text.prvSOCKETS_Shutdown:00000000 prvSOCKETS_Shutdown
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2531   .text.prvSOCKETS_Shutdown:000001fc $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2539   .text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2545   .text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Shutdown_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2560   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2566   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2581   .text.prvSend_Invalid:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2586   .text.prvSend_Invalid:00000000 prvSend_Invalid
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2817   .text.prvSend_Invalid:000001d8 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2835   .text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2841   .text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2856   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2862   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2877   .text.prvRecv_Invalid:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2882   .text.prvRecv_Invalid:00000000 prvRecv_Invalid
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2988   .text.prvRecv_Invalid:000000cc $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:2999   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3005   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3020   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3026   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3041   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3047   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3235   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_:00000158 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3249   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3255   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3327   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_:00000070 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3335   .text.prvSOCKETS_ShutdownInvalidParams.isra.7:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3340   .text.prvSOCKETS_ShutdownInvalidParams.isra.7:00000000 prvSOCKETS_ShutdownInvalidParams.isra.7
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3470   .text.prvSOCKETS_ShutdownInvalidParams.isra.7:000000fc $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3480   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3486   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3500   .text.prvShutdownHelper:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3505   .text.prvShutdownHelper:00000000 prvShutdownHelper
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3553   .text.prvShutdownHelper:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3558   .text.prvTwoSecureConnections:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3563   .text.prvTwoSecureConnections:00000000 prvTwoSecureConnections
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3936   .text.prvTwoSecureConnections:0000030c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3953   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3959   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3973   .text.prvSOCKETS_Recv_On_Unconnected_Socket:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:3978   .text.prvSOCKETS_Recv_On_Unconnected_Socket:00000000 prvSOCKETS_Recv_On_Unconnected_Socket
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4220   .text.prvSOCKETS_Recv_On_Unconnected_Socket:000001cc $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4235   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4241   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4256   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4262   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4277   .text.prvTestSOCKETS_Close:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4282   .text.prvTestSOCKETS_Close:00000000 prvTestSOCKETS_Close
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4569   .text.prvTestSOCKETS_Close:0000024c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4579   .text.TEST_Full_TCP_AFQP_SOCKETS_Close_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4585   .text.TEST_Full_TCP_AFQP_SOCKETS_Close_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Close_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4600   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4606   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4621   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4627   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4803   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_:00000180 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4820   .text.prvSOCKETS_SetSockOpt_RCVTIMEO:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:4825   .text.prvSOCKETS_SetSockOpt_RCVTIMEO:00000000 prvSOCKETS_SetSockOpt_RCVTIMEO
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5042   .text.prvSOCKETS_SetSockOpt_RCVTIMEO:000001a0 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5056   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5062   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_:00000000 TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5077   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5083   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5098   .text.prvSOCKETS_NonBlocking_Test:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5103   .text.prvSOCKETS_NonBlocking_Test:00000000 prvSOCKETS_NonBlocking_Test
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5387   .text.prvSOCKETS_NonBlocking_Test:0000025c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5404   .text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5410   .text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_:00000000 TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5425   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5431   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5446   .text.prvSOCKETS_SendRecv_VaryLength:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5451   .text.prvSOCKETS_SendRecv_VaryLength:00000000 prvSOCKETS_SendRecv_VaryLength
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5654   .text.prvSOCKETS_SendRecv_VaryLength:0000019c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5668   .text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5674   .text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_:00000000 TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5689   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5695   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5710   .text.prvSOCKETS_Threadsafe_SameSocketDifferentTasks:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:5715   .text.prvSOCKETS_Threadsafe_SameSocketDifferentTasks:00000000 prvSOCKETS_Threadsafe_SameSocketDifferentTasks
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6062   .text.prvSOCKETS_Threadsafe_SameSocketDifferentTasks:000002dc $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6081   .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6087   .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6102   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6108   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6123   .text.prvSOCKETS_Connect_InvalidParams.isra.9:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6128   .text.prvSOCKETS_Connect_InvalidParams.isra.9:00000000 prvSOCKETS_Connect_InvalidParams.isra.9
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6278   .text.prvSOCKETS_Connect_InvalidParams.isra.9:00000124 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6292   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6298   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6312   .text.prvTestSOCKETS_Recv_ByteByByte:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6317   .text.prvTestSOCKETS_Recv_ByteByByte:00000000 prvTestSOCKETS_Recv_ByteByByte
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6550   .text.prvTestSOCKETS_Recv_ByteByByte:000001c4 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6566   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6572   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6587   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6593   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6608   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6614   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6958   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_:000002ac $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6984   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:6990   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7001   .text.TEST_Full_TCP_SETUP:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7007   .text.TEST_Full_TCP_SETUP:00000000 TEST_Full_TCP_SETUP
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7018   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7024   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7035   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7041   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_:00000000 TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7052   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7058   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_:00000000 TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7069   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7075   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_:00000000 TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7087   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7092   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7098   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7116   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7123   .text.prvThreadSafeDifferentSocketsDifferentTasks:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7128   .text.prvThreadSafeDifferentSocketsDifferentTasks:00000000 prvThreadSafeDifferentSocketsDifferentTasks
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7366   .text.prvThreadSafeDifferentSocketsDifferentTasks:000001a8 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7379   .text.prvSOCKETS_Socket_InvalidInputParams.isra.6:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7384   .text.prvSOCKETS_Socket_InvalidInputParams.isra.6:00000000 prvSOCKETS_Socket_InvalidInputParams.isra.6
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7700   .text.prvSOCKETS_Socket_InvalidInputParams.isra.6:00000230 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7714   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7720   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7734   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7740   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7771   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseInvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7782   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7788   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7819   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseInvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7830   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7836   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7867   .text.TEST_Full_TCP_AFQP_SOCKETS_CloseWithoutReceiving_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7878   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7884   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7915   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_CloseWithoutReceiving_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7926   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7932   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7963   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownInvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7974   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:7980   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8011   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownInvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8022   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8028   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8059   .text.TEST_Full_TCP_AFQP_SOCKETS_ShutdownWithoutReceiving_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8070   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8076   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8107   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_ShutdownWithoutReceiving_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8118   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8124   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8155   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_On_Unconnected_Socket_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8166   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8172   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8203   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_On_Unconnected_Socket_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8214   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8220   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8251   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_TCP_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8262   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8268   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8299   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_RCVTIMEO_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8310   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8316   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8347   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_RCVTIMEO_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8358   .text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8364   .text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8395   .text.TEST_Full_TCP_AFQP_SOCKETS_NonBlocking_Test_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8406   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8412   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8443   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlocking_Test_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8454   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8460   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8491   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_InvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8502   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8508   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8539   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_InvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8550   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8556   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8587   .text.TEST_Full_TCP_AFQP_SOCKETS_SetSockOpt_SNDTIMEO_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8598   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8604   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8635   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SNDTIMEO_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8646   .text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8652   .text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8683   .text.TEST_Full_TCP_AFQP_SOCKETS_Shutdown_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8694   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8700   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8731   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Shutdown_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8742   .text.TEST_Full_TCP_AFQP_SOCKETS_Close_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8748   .text.TEST_Full_TCP_AFQP_SOCKETS_Close_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Close_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8779   .text.TEST_Full_TCP_AFQP_SOCKETS_Close_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8790   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8796   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8827   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Close_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8838   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8844   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8875   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_ByteByByte_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8886   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8892   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8923   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_ByteByByte_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8934   .text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8940   .text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8971   .text.TEST_Full_TCP_AFQP_SOCKETS_SendRecv_VaryLength_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8982   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:8988   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9019   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SendRecv_VaryLength_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9030   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9036   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9067   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidInputParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9078   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9084   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9115   .text.TEST_Full_TCP_AFQP_SOCKETS_Socket_InvalidTooManySockets_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9126   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9132   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9163   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Socket_InvalidTooManySockets_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9174   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9180   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9211   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9222   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9228   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9259   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidParams_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9270   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9276   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9307   .text.TEST_Full_TCP_AFQP_SOCKETS_Connect_InvalidAddressLength_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9318   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9324   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9355   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Connect_InvalidAddressLength_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9366   .text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9372   .text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9403   .text.TEST_Full_TCP_AFQP_SOCKETS_Send_Invalid_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9414   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9420   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9451   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Send_Invalid_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9462   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9468   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9499   .text.TEST_Full_TCP_AFQP_SOCKETS_Recv_Invalid_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9510   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9516   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9547   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Recv_Invalid_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9558   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9564   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9595   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_SERVER_NAME_INDICATION_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9606   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9612   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9643   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSockOpt_TRUSTED_SERVER_CERTIFICATE_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9654   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9660   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9691   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SockEventHandler_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9702   .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9708   .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9739   .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9750   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9756   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9787   .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_SameSocketDifferentTasks_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9798   .text.prvStartTCPEchoClientTasks_DifferentSockets:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9804   .text.prvStartTCPEchoClientTasks_DifferentSockets:00000000 prvStartTCPEchoClientTasks_DifferentSockets
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:9994   .text.prvStartTCPEchoClientTasks_DifferentSockets:0000018c $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10005  .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10011  .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_:00000000 TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10026  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10032  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10047  .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10053  .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10084  .text.TEST_Full_TCP_AFQP_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10095  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10101  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10132  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_Threadsafe_DifferentSocketsDifferentTasks_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10143  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10149  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10180  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_NonBlockingConnect_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10191  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10197  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10228  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_TwoSecureConnections_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10239  .text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10245  .text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10276  .text.TEST_Full_TCP_AFQP_SOCKETS_htons_HappyCase_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10287  .text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10293  .text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run:00000000 TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10324  .text.TEST_Full_TCP_AFQP_SOCKETS_inet_addr_quick_HappyCase_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10335  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10341  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run:00000000 TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10372  .text.TEST_Full_TCP_AFQP_SECURE_SOCKETS_SetSecureOptionsAfterConnect_run:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10383  .text.TEST_Full_TCP_GROUP_RUNNER:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10389  .text.TEST_Full_TCP_GROUP_RUNNER:00000000 TEST_Full_TCP_GROUP_RUNNER
                            *COM*:00000004 xHeapA
                            *COM*:00000004 xHeapB
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10675  .bss.xSocketOpen:00000000 xSocketOpen
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10710  .data.xSocket:00000000 xSocket
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10696  .data.pcRxBuffer:00000000 pcRxBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10703  .data.pcTxBuffer:00000000 pcTxBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10649  .rodata:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10671  .bss.xSocketOpen:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10678  .bss.xSocketPassingQueue:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10682  .bss.xSocketPassingQueue:00000000 xSocketPassingQueue
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10685  .bss.xSyncEventGroup:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10689  .bss.xSyncEventGroup:00000000 xSyncEventGroup
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10692  .data.pcRxBuffer:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10699  .data.pcTxBuffer:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:10706  .data.xSocket:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11072  .rodata.__FUNCTION__.8350:00000000 __FUNCTION__.8350
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11078  .rodata.__FUNCTION__.8360:00000000 __FUNCTION__.8360
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11084  .rodata.__FUNCTION__.8382:00000000 __FUNCTION__.8382
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11090  .rodata.__FUNCTION__.8395:00000000 __FUNCTION__.8395
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11096  .rodata.__FUNCTION__.9286:00000000 __FUNCTION__.9286
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11102  .rodata.cMessageAWS.9318:00000000 cMessageAWS.9318
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11109  .rodata.cMessageSecServer.9319:00000000 cMessageSecServer.9319
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:11116  .rodata.cTransmittedString:00000000 cTransmittedString
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:15729  .rodata.clientcredentialMQTT_BROKER_ENDPOINT:00000000 clientcredentialMQTT_BROKER_ENDPOINT
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:15918  .rodata.tcptestECHO_HOST_ROOT_CA:00000000 tcptestECHO_HOST_ROOT_CA
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:15921  .rodata.xReceiveTimeOut:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccIp2YxK.s:15925  .rodata.xReceiveTimeOut:00000000 xReceiveTimeOut
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
setjmp
SOCKETS_Close
UnityAssertEqualNumber
Unity
vLoggingPrintf
SOCKETS_Send
SOCKETS_Socket
SOCKETS_SetSockOpt
SOCKETS_GetHostByName
SOCKETS_Recv
UnityFail
SOCKETS_Connect
UnityAssertSmallerNumber
memset
snprintf
longjmp
vTaskPrioritySet
xEventGroupSync
vTaskSuspend
vTaskDelay
UnityAssertGreaterNumber
SOCKETS_Shutdown
uxTaskPriorityGet
xTaskGetTickCount
pvPortMalloc
xQueueGenericCreate
xEventGroupCreate
xTaskCreate
UnityAssertEqualMemory
vQueueDelete
vEventGroupDelete
vTaskDelete
vPortFree
memcpy
strncmp
UnityTestRunner
cBuffer
