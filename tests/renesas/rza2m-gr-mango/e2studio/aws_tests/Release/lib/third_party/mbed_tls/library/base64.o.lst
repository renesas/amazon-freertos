   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"base64.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.mbedtls_base64_encode.part.0,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	mbedtls_base64_encode.part.0:
  23              	.LFB4:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library/base64.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  RFC 1521 base64 encoding/decoding
   3:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *
   4:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
   5:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  SPDX-License-Identifier: Apache-2.0
   6:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *
   7:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
   8:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  not use this file except in compliance with the License.
   9:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  You may obtain a copy of the License at
  10:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *
  11:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  http://www.apache.org/licenses/LICENSE-2.0
  12:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *
  13:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  Unless required by applicable law or agreed to in writing, software
  14:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  15:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  16:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  See the License for the specific language governing permissions and
  17:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  limitations under the License.
  18:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *
  19:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  *  This file is part of mbed TLS (https://tls.mbed.org)
  20:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  */
  21:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  22:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #if !defined(MBEDTLS_CONFIG_FILE)
  23:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include "mbedtls/config.h"
  24:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #else
  25:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include MBEDTLS_CONFIG_FILE
  26:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #endif
  27:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  28:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #if defined(MBEDTLS_BASE64_C)
  29:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  30:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include "mbedtls/base64.h"
  31:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  32:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include <stdint.h>
  33:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  34:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #if defined(MBEDTLS_SELF_TEST)
  35:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include <string.h>
  36:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #if defined(MBEDTLS_PLATFORM_C)
  37:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include "mbedtls/platform.h"
  38:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #else
  39:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #include <stdio.h>
  40:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #define mbedtls_printf printf
  41:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #endif /* MBEDTLS_PLATFORM_C */
  42:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #endif /* MBEDTLS_SELF_TEST */
  43:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  44:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** static const unsigned char base64_enc_map[64] =
  45:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** {
  46:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J',
  47:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',
  48:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd',
  49:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
  50:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',
  51:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7',
  52:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     '8', '9', '+', '/'
  53:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** };
  54:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  55:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** static const unsigned char base64_dec_map[128] =
  56:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** {
  57:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
  58:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
  59:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
  60:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
  61:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     127, 127, 127,  62, 127, 127, 127,  63,  52,  53,
  62:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      54,  55,  56,  57,  58,  59,  60,  61, 127, 127,
  63:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     127,  64, 127, 127, 127,   0,   1,   2,   3,   4,
  64:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****       5,   6,   7,   8,   9,  10,  11,  12,  13,  14,
  65:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      15,  16,  17,  18,  19,  20,  21,  22,  23,  24,
  66:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      25, 127, 127, 127, 127, 127, 127,  26,  27,  28,
  67:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
  68:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      39,  40,  41,  42,  43,  44,  45,  46,  47,  48,
  69:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      49,  50,  51, 127, 127, 127, 127, 127
  70:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** };
  71:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  72:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #define BASE64_SIZE_T_MAX   ( (size_t) -1 ) /* SIZE_T_MAX is not standard */
  73:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  74:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** /*
  75:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  * Encode a buffer into base64 format
  76:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  */
  77:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** int mbedtls_base64_encode( unsigned char *dst, size_t dlen, size_t *olen,
  25              		.loc 1 77 0
  26              		.cfi_startproc
  27              		@ args = 4, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
  31              		.cfi_def_cfa_offset 28
  32              		.cfi_offset 4, -28
  33              		.cfi_offset 5, -24
  34              		.cfi_offset 6, -20
  35              		.cfi_offset 7, -16
  36              		.cfi_offset 8, -12
  37              		.cfi_offset 9, -8
  38              		.cfi_offset 14, -4
  39              		.loc 1 77 0
  40 0004 1CE09DE5 		ldr	lr, [sp, #28]
  78:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****                    const unsigned char *src, size_t slen )
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** {
  80:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t i, n;
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     int C1, C2, C3;
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     unsigned char *p;
  83:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  84:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( slen == 0 )
  85:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
  86:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *olen = 0;
  87:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( 0 );
  88:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
  89:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  90:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     n = slen / 3 + ( slen % 3 != 0 );
  41              		.loc 1 90 0
  42 0008 34419FE5 		ldr	r4, .L15
  43 000c 9E4485E0 		umull	r4, r5, lr, r4
  44 0010 A5C0A0E1 		lsr	ip, r5, #1
  45 0014 8C408CE0 		add	r4, ip, ip, lsl #1
  46 0018 04005EE1 		cmp	lr, r4
  47 001c 01C08C12 		addne	ip, ip, #1
  48              	.LVL1:
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  92:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( n > ( BASE64_SIZE_T_MAX - 1 ) / 4 )
  49              		.loc 1 92 0
  50 0020 07017CE3 		cmn	ip, #-1073741823
  93:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
  94:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *olen = BASE64_SIZE_T_MAX;
  51              		.loc 1 94 0
  52 0024 0030E083 		mvnhi	r3, #0
  53              	.LVL2:
  54 0028 00308285 		strhi	r3, [r2]
  92:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
  55              		.loc 1 92 0
  56 002c 0B00008A 		bhi	.L14
  57              	.LVL3:
  95:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL );
  96:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
  97:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  98:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     n *= 4;
  58              		.loc 1 98 0
  59 0030 0CC1A0E1 		lsl	ip, ip, #2
  60              	.LVL4:
  99:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( ( dlen < n + 1 ) || ( NULL == dst ) )
  61              		.loc 1 100 0
  62 0034 01C08CE2 		add	ip, ip, #1
  63              	.LVL5:
  64 0038 01005CE1 		cmp	ip, r1
  65 003c 0010A093 		movls	r1, #0
  66              	.LVL6:
  67 0040 0110A083 		movhi	r1, #1
  68 0044 000050E3 		cmp	r0, #0
  69 0048 01108103 		orreq	r1, r1, #1
  70 004c 000051E3 		cmp	r1, #0
  71 0050 0060A001 		moveq	r6, r0
 101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *olen = n + 1;
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL );
 104:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 106:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     n = ( slen / 3 ) * 3;
 107:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     for( i = 0, p = dst; i < n; i += 3 )
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 110:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C1 = *src++;
 111:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C2 = *src++;
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C3 = *src++;
 113:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 114:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(C1 >> 2) & 0x3F];
  72              		.loc 1 114 0
  73 0054 EC709F05 		ldreq	r7, .L15+4
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
  74              		.loc 1 100 0
  75 0058 1500000A 		beq	.L5
 102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL );
  76              		.loc 1 102 0
  77 005c 00C082E5 		str	ip, [r2]
  78              	.LVL7:
  79              	.L14:
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
  80              		.loc 1 103 0
  81 0060 2900E0E3 		mvn	r0, #41
  82              	.LVL8:
  83 0064 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
  84              	.LVL9:
  85              	.L6:
 110:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C2 = *src++;
  86              		.loc 1 110 0
  87 0068 035053E5 		ldrb	r5, [r3, #-3]	@ zero_extendqisi2
  88              	.LVL10:
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
  89              		.loc 1 108 0
  90 006c 031081E2 		add	r1, r1, #3
  91              	.LVL11:
 111:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C3 = *src++;
  92              		.loc 1 111 0
  93 0070 02C053E5 		ldrb	ip, [r3, #-2]	@ zero_extendqisi2
  94              	.LVL12:
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
  95              		.loc 1 112 0
  96 0074 018053E5 		ldrb	r8, [r3, #-1]	@ zero_extendqisi2
  97              	.LVL13:
  98              		.loc 1 114 0
  99 0078 2591D7E7 		ldrb	r9, [r7, r5, lsr #2]	@ zero_extendqisi2
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 &  3) << 4) + (C2 >> 4)) & 0x3F];
 100              		.loc 1 115 0
 101 007c 0552A0E1 		lsl	r5, r5, #4
 102              	.LVL14:
 103 0080 305005E2 		and	r5, r5, #48
 114:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 &  3) << 4) + (C2 >> 4)) & 0x3F];
 104              		.loc 1 114 0
 105 0084 049046E5 		strb	r9, [r6, #-4]
 106              	.LVL15:
 107              		.loc 1 115 0
 108 0088 055087E0 		add	r5, r7, r5
 109 008c 4C52D5E7 		ldrb	r5, [r5, ip, asr #4]	@ zero_extendqisi2
 116:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C2 & 15) << 2) + (C3 >> 6)) & 0x3F];
 110              		.loc 1 116 0
 111 0090 0CC1A0E1 		lsl	ip, ip, #2
 112              	.LVL16:
 113 0094 3CC00CE2 		and	ip, ip, #60
 114 0098 0CC087E0 		add	ip, r7, ip
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 &  3) << 4) + (C2 >> 4)) & 0x3F];
 115              		.loc 1 115 0
 116 009c 035046E5 		strb	r5, [r6, #-3]
 117              	.LVL17:
 118              		.loc 1 116 0
 119 00a0 48C3DCE7 		ldrb	ip, [ip, r8, asr #6]	@ zero_extendqisi2
 117:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[C3 & 0x3F];
 120              		.loc 1 117 0
 121 00a4 3F8008E2 		and	r8, r8, #63
 122              	.LVL18:
 116:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C2 & 15) << 2) + (C3 >> 6)) & 0x3F];
 123              		.loc 1 116 0
 124 00a8 02C046E5 		strb	ip, [r6, #-2]
 125              	.LVL19:
 126              		.loc 1 117 0
 127 00ac 08C0D7E7 		ldrb	ip, [r7, r8]	@ zero_extendqisi2
 128 00b0 01C046E5 		strb	ip, [r6, #-1]
 129              	.LVL20:
 130              	.L5:
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 131              		.loc 1 108 0
 132 00b4 010054E1 		cmp	r4, r1
 133 00b8 06C0A0E1 		mov	ip, r6
 134 00bc 0350A0E1 		mov	r5, r3
 135              	.LVL21:
 136 00c0 046086E2 		add	r6, r6, #4
 137              	.LVL22:
 138 00c4 033083E2 		add	r3, r3, #3
 139              	.LVL23:
 140 00c8 E6FFFF8A 		bhi	.L6
 118:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 119:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 120:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( i < slen )
 141              		.loc 1 120 0
 142 00cc 01005EE1 		cmp	lr, r1
 143 00d0 1600009A 		bls	.L7
 144              	.LVL24:
 121:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 122:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C1 = *src++;
 123:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C2 = ( ( i + 1 ) < slen ) ? *src++ : 0;
 145              		.loc 1 123 0
 146 00d4 011081E2 		add	r1, r1, #1
 147              	.LVL25:
 122:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         C2 = ( ( i + 1 ) < slen ) ? *src++ : 0;
 148              		.loc 1 122 0
 149 00d8 0030D5E5 		ldrb	r3, [r5]	@ zero_extendqisi2
 150              	.LVL26:
 151              		.loc 1 123 0
 152 00dc 01005EE1 		cmp	lr, r1
 153              	.LVL27:
 154 00e0 0140D585 		ldrbhi	r4, [r5, #1]	@ zero_extendqisi2
 155 00e4 0040A093 		movls	r4, #0
 156              	.LVL28:
 124:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 125:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(C1 >> 2) & 0x3F];
 157              		.loc 1 125 0
 158 00e8 58509FE5 		ldr	r5, .L15+4
 159              	.LVL29:
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 & 3) << 4) + (C2 >> 4)) & 0x3F];
 127:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 128:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( ( i + 1 ) < slen )
 160              		.loc 1 128 0
 161 00ec 01005EE1 		cmp	lr, r1
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****              *p++ = base64_enc_map[((C2 & 15) << 2) & 0x3F];
 130:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         else *p++ = '=';
 162              		.loc 1 130 0
 163 00f0 3D10A093 		movls	r1, #61
 164              	.LVL30:
 125:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 & 3) << 4) + (C2 >> 4)) & 0x3F];
 165              		.loc 1 125 0
 166 00f4 2361D5E7 		ldrb	r6, [r5, r3, lsr #2]	@ zero_extendqisi2
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 & 3) << 4) + (C2 >> 4)) & 0x3F];
 167              		.loc 1 126 0
 168 00f8 0332A0E1 		lsl	r3, r3, #4
 169              	.LVL31:
 170 00fc 303003E2 		and	r3, r3, #48
 171 0100 033085E0 		add	r3, r5, r3
 125:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 & 3) << 4) + (C2 >> 4)) & 0x3F];
 172              		.loc 1 125 0
 173 0104 0060CCE5 		strb	r6, [ip]
 174              	.LVL32:
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 & 3) << 4) + (C2 >> 4)) & 0x3F];
 175              		.loc 1 126 0
 176 0108 4432D3E7 		ldrb	r3, [r3, r4, asr #4]	@ zero_extendqisi2
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****              *p++ = base64_enc_map[((C2 & 15) << 2) & 0x3F];
 177              		.loc 1 129 0
 178 010c 0441A081 		lslhi	r4, r4, #2
 179              	.LVL33:
 180 0110 3C400482 		andhi	r4, r4, #60
 181 0114 0410D587 		ldrbhi	r1, [r5, r4]	@ zero_extendqisi2
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = base64_enc_map[(((C1 & 3) << 4) + (C2 >> 4)) & 0x3F];
 182              		.loc 1 126 0
 183 0118 0130CCE5 		strb	r3, [ip, #1]
 184 011c 03308CE2 		add	r3, ip, #3
 185              	.LVL34:
 186              		.loc 1 130 0
 187 0120 0210CCE5 		strb	r1, [ip, #2]
 131:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 132:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *p++ = '=';
 188              		.loc 1 132 0
 189 0124 01C083E2 		add	ip, r3, #1
 190              	.LVL35:
 191 0128 3D10A0E3 		mov	r1, #61
 192 012c 0010C3E5 		strb	r1, [r3]
 193              	.L7:
 133:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 134:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 135:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     *olen = p - dst;
 194              		.loc 1 135 0
 195 0130 00004CE0 		sub	r0, ip, r0
 196              	.LVL36:
 197 0134 000082E5 		str	r0, [r2]
 136:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     *p = 0;
 198              		.loc 1 136 0
 199 0138 0000A0E3 		mov	r0, #0
 200 013c 0000CCE5 		strb	r0, [ip]
 137:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 138:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     return( 0 );
 139:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** }
 201              		.loc 1 139 0
 202 0140 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 203              	.L16:
 204              		.align	2
 205              	.L15:
 206 0144 ABAAAAAA 		.word	-1431655765
 207 0148 00000000 		.word	.LANCHOR0
 208              		.cfi_endproc
 209              	.LFE4:
 211              		.section	.text.mbedtls_base64_encode,"ax",%progbits
 212              		.align	2
 213              		.global	mbedtls_base64_encode
 214              		.syntax unified
 215              		.arm
 216              		.fpu neon
 218              	mbedtls_base64_encode:
 219              	.LFB1:
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t i, n;
 220              		.loc 1 79 0
 221              		.cfi_startproc
 222              		@ args = 4, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL37:
 225 0000 04E02DE5 		str	lr, [sp, #-4]!
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 14, -4
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t i, n;
 228              		.loc 1 79 0
 229 0004 04C09DE5 		ldr	ip, [sp, #4]
  84:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 230              		.loc 1 84 0
 231 0008 00005CE3 		cmp	ip, #0
 232 000c 0100000A 		beq	.L21
 233              		.loc 1 139 0
 234 0010 04E09DE4 		ldr	lr, [sp], #4
 235              		.cfi_remember_state
 236              		.cfi_restore 14
 237              		.cfi_def_cfa_offset 0
 238 0014 FEFFFFEA 		b	mbedtls_base64_encode.part.0
 239              	.LVL38:
 240              	.L21:
 241              		.cfi_restore_state
 242 0018 02E0A0E1 		mov	lr, r2
  86:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( 0 );
 243              		.loc 1 86 0
 244 001c 00C082E5 		str	ip, [r2]
 245              		.loc 1 139 0
 246 0020 0C00A0E1 		mov	r0, ip
 247              	.LVL39:
 248 0024 04F09DE4 		ldr	pc, [sp], #4
 249              		.cfi_endproc
 250              	.LFE1:
 252              		.section	.text.mbedtls_base64_decode,"ax",%progbits
 253              		.align	2
 254              		.global	mbedtls_base64_decode
 255              		.syntax unified
 256              		.arm
 257              		.fpu neon
 259              	mbedtls_base64_decode:
 260              	.LFB2:
 140:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 141:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** /*
 142:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  * Decode a base64-formatted buffer
 143:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  */
 144:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** int mbedtls_base64_decode( unsigned char *dst, size_t dlen, size_t *olen,
 145:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****                    const unsigned char *src, size_t slen )
 146:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** {
 261              		.loc 1 146 0
 262              		.cfi_startproc
 263              		@ args = 4, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL40:
 266 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 267              		.cfi_def_cfa_offset 28
 268              		.cfi_offset 4, -28
 269              		.cfi_offset 5, -24
 270              		.cfi_offset 6, -20
 271              		.cfi_offset 7, -16
 272              		.cfi_offset 8, -12
 273              		.cfi_offset 9, -8
 274              		.cfi_offset 14, -4
 147:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t i, n;
 148:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     uint32_t j, x;
 149:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     unsigned char *p;
 150:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 151:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     /* First pass: check for validity and get output length */
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     for( i = n = j = 0; i < slen; i++ )
 275              		.loc 1 152 0
 276 0004 0050A0E3 		mov	r5, #0
 146:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t i, n;
 277              		.loc 1 146 0
 278 0008 1C609DE5 		ldr	r6, [sp, #28]
 279              		.loc 1 152 0
 280 000c 05C0A0E1 		mov	ip, r5
 281 0010 05E0A0E1 		mov	lr, r5
 153:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 154:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         /* Skip spaces before checking for EOL */
 155:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         x = 0;
 156:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         while( i < slen && src[i] == ' ' )
 157:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 158:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             ++i;
 159:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             ++x;
 160:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         }
 161:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 162:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         /* Spaces at end of buffer are OK */
 163:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( i == slen )
 164:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             break;
 165:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 166:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( ( slen - i ) >= 2 &&
 167:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             src[i] == '\r' && src[i + 1] == '\n' )
 168:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 169:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 170:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( src[i] == '\n' )
 171:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 172:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 173:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         /* Space inside a line is an error */
 174:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( x != 0 )
 175:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 176:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( src[i] == '=' && ++j > 2 )
 178:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 179:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 180:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( src[i] > 127 || base64_dec_map[src[i]] == 127 )
 282              		.loc 1 180 0
 283 0014 B4819FE5 		ldr	r8, .L60
 284              	.LVL41:
 285              	.L24:
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 286              		.loc 1 152 0 discriminator 1
 287 0018 06005EE1 		cmp	lr, r6
 288 001c 2800002A 		bcs	.L26
 289 0020 0070A0E3 		mov	r7, #0
 290              	.L25:
 291              	.LVL42:
 156:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 292              		.loc 1 156 0 discriminator 1
 293 0024 0E40D3E7 		ldrb	r4, [r3, lr]	@ zero_extendqisi2
 294 0028 200054E3 		cmp	r4, #32
 295 002c 2000000A 		beq	.L27
 166:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             src[i] == '\r' && src[i + 1] == '\n' )
 296              		.loc 1 166 0
 297 0030 0E9046E0 		sub	r9, r6, lr
 298 0034 010059E3 		cmp	r9, #1
 299 0038 0500009A 		bls	.L28
 166:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             src[i] == '\r' && src[i + 1] == '\n' )
 300              		.loc 1 166 0 is_stmt 0 discriminator 1
 301 003c 0D0054E3 		cmp	r4, #13
 302 0040 0300001A 		bne	.L28
 167:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 303              		.loc 1 167 0 is_stmt 1
 304 0044 0E4083E0 		add	r4, r3, lr
 305 0048 0140D4E5 		ldrb	r4, [r4, #1]	@ zero_extendqisi2
 306 004c 0A0054E3 		cmp	r4, #10
 307 0050 1500000A 		beq	.L29
 308              	.L28:
 170:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 309              		.loc 1 170 0
 310 0054 0E40D3E7 		ldrb	r4, [r3, lr]	@ zero_extendqisi2
 311 0058 0A0054E3 		cmp	r4, #10
 312 005c 1200000A 		beq	.L29
 174:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 313              		.loc 1 174 0
 314 0060 000057E3 		cmp	r7, #0
 315 0064 5700001A 		bne	.L45
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 316              		.loc 1 177 0
 317 0068 3D0054E3 		cmp	r4, #61
 318 006c 0200001A 		bne	.L31
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 319              		.loc 1 177 0 is_stmt 0 discriminator 1
 320 0070 015085E2 		add	r5, r5, #1
 321              	.LVL43:
 322 0074 020055E3 		cmp	r5, #2
 323 0078 5200008A 		bhi	.L45
 324              	.L31:
 325              		.loc 1 180 0 is_stmt 1
 326 007c 800014E3 		tst	r4, #128
 327 0080 5000001A 		bne	.L45
 328              		.loc 1 180 0 is_stmt 0 discriminator 1
 329 0084 0440D8E7 		ldrb	r4, [r8, r4]	@ zero_extendqisi2
 330 0088 7F0054E3 		cmp	r4, #127
 331 008c 4D00000A 		beq	.L45
 181:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 182:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 183:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( base64_dec_map[src[i]] < 64 && j != 0 )
 332              		.loc 1 183 0 is_stmt 1 discriminator 1
 333 0090 007095E2 		adds	r7, r5, #0
 334              	.LVL44:
 335 0094 0170A013 		movne	r7, #1
 336 0098 3F0054E3 		cmp	r4, #63
 337 009c 0070A083 		movhi	r7, #0
 338 00a0 000057E3 		cmp	r7, #0
 339 00a4 4700001A 		bne	.L45
 184:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             return( MBEDTLS_ERR_BASE64_INVALID_CHARACTER );
 185:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 186:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         n++;
 340              		.loc 1 186 0
 341 00a8 01C08CE2 		add	ip, ip, #1
 342              	.LVL45:
 343              	.L29:
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 344              		.loc 1 152 0 discriminator 2
 345 00ac 01E08EE2 		add	lr, lr, #1
 346              	.LVL46:
 347 00b0 D8FFFFEA 		b	.L24
 348              	.LVL47:
 349              	.L27:
 158:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             ++x;
 350              		.loc 1 158 0
 351 00b4 01E08EE2 		add	lr, lr, #1
 352              	.LVL48:
 159:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         }
 353              		.loc 1 159 0
 354 00b8 017087E2 		add	r7, r7, #1
 355              	.LVL49:
 156:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 356              		.loc 1 156 0
 357 00bc 0E0056E1 		cmp	r6, lr
 358 00c0 D7FFFF1A 		bne	.L25
 359              	.LVL50:
 360              	.L26:
 187:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 188:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 189:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( n == 0 )
 361              		.loc 1 189 0
 362 00c4 00005CE3 		cmp	ip, #0
 190:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 191:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *olen = 0;
 363              		.loc 1 191 0
 364 00c8 00C08205 		streq	ip, [r2]
 189:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 365              		.loc 1 189 0
 366 00cc 1800000A 		beq	.L59
 192:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( 0 );
 193:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 194:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 195:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     /* The following expression is to calculate the following formula without
 196:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      * risk of integer overflow in n:
 197:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      *     n = ( ( n * 6 ) + 7 ) >> 3;
 198:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****      */
 199:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     n = ( 6 * ( n >> 3 ) ) + ( ( 6 * ( n & 0x7 ) + 7 ) >> 3 );
 367              		.loc 1 199 0
 368 00d0 07600CE2 		and	r6, ip, #7
 369 00d4 ACC1A0E1 		lsr	ip, ip, #3
 370              	.LVL51:
 371 00d8 0640A0E3 		mov	r4, #6
 372 00dc 940606E0 		mul	r6, r4, r6
 373 00e0 940C0CE0 		mul	ip, r4, ip
 374 00e4 076086E2 		add	r6, r6, #7
 375 00e8 05C04CE0 		sub	ip, ip, r5
 200:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     n -= j;
 376              		.loc 1 200 0
 377 00ec A6C18CE0 		add	ip, ip, r6, lsr #3
 378              	.LVL52:
 201:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 202:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( dst == NULL || dlen < n )
 379              		.loc 1 202 0
 380 00f0 01005CE1 		cmp	ip, r1
 381 00f4 0010A093 		movls	r1, #0
 382              	.LVL53:
 383 00f8 0110A083 		movhi	r1, #1
 384 00fc 000050E3 		cmp	r0, #0
 385 0100 01108103 		orreq	r1, r1, #1
 386 0104 000051E3 		cmp	r1, #0
 387 0108 0B00001A 		bne	.L34
 203:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         *olen = n;
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL );
 206:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 207:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 208:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****    for( j = 3, n = x = 0, p = dst; i > 0; i--, src++ )
 209:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****    {
 210:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( *src == '\r' || *src == '\n' || *src == ' ' )
 211:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 212:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 213:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         j -= ( base64_dec_map[*src] == 64 );
 388              		.loc 1 213 0 discriminator 1
 389 010c BC709FE5 		ldr	r7, .L60
 390 0110 0EE083E0 		add	lr, r3, lr
 210:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 391              		.loc 1 210 0 discriminator 1
 392 0114 B8809FE5 		ldr	r8, .L60+4
 202:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 393              		.loc 1 202 0 discriminator 1
 394 0118 0060A0E1 		mov	r6, r0
 395 011c 0340A0E3 		mov	r4, #3
 396 0120 01C0A0E1 		mov	ip, r1
 397              	.LVL54:
 398              	.L35:
 208:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****    {
 399              		.loc 1 208 0 discriminator 1
 400 0124 0E0053E1 		cmp	r3, lr
 401 0128 0600001A 		bne	.L40
 214:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         x  = ( x << 6 ) | ( base64_dec_map[*src] & 0x3F );
 215:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 216:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( ++n == 4 )
 217:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 218:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             n = 0;
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 0 ) *p++ = (unsigned char)( x >> 16 );
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 1 ) *p++ = (unsigned char)( x >>  8 );
 221:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 2 ) *p++ = (unsigned char)( x       );
 222:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         }
 223:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 224:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 225:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     *olen = p - dst;
 402              		.loc 1 225 0
 403 012c 000046E0 		sub	r0, r6, r0
 404              	.LVL55:
 405 0130 000082E5 		str	r0, [r2]
 406              	.LVL56:
 407              	.L59:
 226:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 227:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     return( 0 );
 408              		.loc 1 227 0
 409 0134 0000A0E3 		mov	r0, #0
 410 0138 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 411              	.LVL57:
 412              	.L34:
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( MBEDTLS_ERR_BASE64_BUFFER_TOO_SMALL );
 413              		.loc 1 204 0
 414 013c 00C082E5 		str	ip, [r2]
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 415              		.loc 1 205 0
 416 0140 2900E0E3 		mvn	r0, #41
 417              	.LVL58:
 418 0144 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 419              	.LVL59:
 420              	.L40:
 210:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             continue;
 421              		.loc 1 210 0
 422 0148 0190D3E4 		ldrb	r9, [r3], #1	@ zero_extendqisi2
 423              	.LVL60:
 424 014c 0A5049E2 		sub	r5, r9, #10
 425 0150 7550EFE6 		uxtb	r5, r5
 426 0154 160055E3 		cmp	r5, #22
 427 0158 0200008A 		bhi	.L36
 428 015c 3855E0E1 		mvn	r5, r8, lsr r5
 429 0160 010015E3 		tst	r5, #1
 430 0164 EEFFFF0A 		beq	.L35
 431              	.L36:
 213:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         x  = ( x << 6 ) | ( base64_dec_map[*src] & 0x3F );
 432              		.loc 1 213 0
 433 0168 0950D7E7 		ldrb	r5, [r7, r9]	@ zero_extendqisi2
 216:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 434              		.loc 1 216 0
 435 016c 01C08CE2 		add	ip, ip, #1
 436              	.LVL61:
 213:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         x  = ( x << 6 ) | ( base64_dec_map[*src] & 0x3F );
 437              		.loc 1 213 0
 438 0170 400055E3 		cmp	r5, #64
 439 0174 01404402 		subeq	r4, r4, #1
 440              	.LVL62:
 216:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 441              		.loc 1 216 0
 442 0178 04005CE3 		cmp	ip, #4
 214:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 443              		.loc 1 214 0
 444 017c 3F5005E2 		and	r5, r5, #63
 445 0180 011385E1 		orr	r1, r5, r1, lsl #6
 446              	.LVL63:
 216:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         {
 447              		.loc 1 216 0
 448 0184 E6FFFF1A 		bne	.L35
 449              	.LVL64:
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 1 ) *p++ = (unsigned char)( x >>  8 );
 450              		.loc 1 219 0
 451 0188 000054E3 		cmp	r4, #0
 218:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 0 ) *p++ = (unsigned char)( x >> 16 );
 452              		.loc 1 218 0
 453 018c 04C0A001 		moveq	ip, r4
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 1 ) *p++ = (unsigned char)( x >>  8 );
 454              		.loc 1 219 0
 455 0190 E3FFFF0A 		beq	.L35
 456              	.LVL65:
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 1 ) *p++ = (unsigned char)( x >>  8 );
 457              		.loc 1 219 0 is_stmt 0 discriminator 1
 458 0194 21C8A0E1 		lsr	ip, r1, #16
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 2 ) *p++ = (unsigned char)( x       );
 459              		.loc 1 220 0 is_stmt 1 discriminator 1
 460 0198 010054E3 		cmp	r4, #1
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 1 ) *p++ = (unsigned char)( x >>  8 );
 461              		.loc 1 219 0 discriminator 1
 462 019c 00C0C6E5 		strb	ip, [r6]
 463 01a0 01608602 		addeq	r6, r6, #1
 464              	.LVL66:
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 2 ) *p++ = (unsigned char)( x       );
 465              		.loc 1 220 0 discriminator 1
 466 01a4 0500000A 		beq	.L58
 467              	.LVL67:
 468 01a8 21C4A0E1 		lsr	ip, r1, #8
 221:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         }
 469              		.loc 1 221 0 discriminator 1
 470 01ac 020054E3 		cmp	r4, #2
 471 01b0 0210C615 		strbne	r1, [r6, #2]
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 2 ) *p++ = (unsigned char)( x       );
 472              		.loc 1 220 0 discriminator 1
 473 01b4 01C0C6E5 		strb	ip, [r6, #1]
 474 01b8 02608602 		addeq	r6, r6, #2
 475              	.LVL68:
 221:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         }
 476              		.loc 1 221 0 discriminator 1
 477 01bc 03608612 		addne	r6, r6, #3
 478              	.LVL69:
 479              	.L58:
 218:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             if( j > 0 ) *p++ = (unsigned char)( x >> 16 );
 480              		.loc 1 218 0 discriminator 1
 481 01c0 00C0A0E3 		mov	ip, #0
 482 01c4 D6FFFFEA 		b	.L35
 483              	.LVL70:
 484              	.L45:
 175:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 485              		.loc 1 175 0
 486 01c8 2B00E0E3 		mvn	r0, #43
 487              	.LVL71:
 228:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** }
 488              		.loc 1 228 0
 489 01cc F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 490              	.L61:
 491              		.align	2
 492              	.L60:
 493 01d0 00000000 		.word	.LANCHOR1
 494 01d4 09004000 		.word	4194313
 495              		.cfi_endproc
 496              	.LFE2:
 498              		.section	.text.mbedtls_base64_self_test,"ax",%progbits
 499              		.align	2
 500              		.global	mbedtls_base64_self_test
 501              		.syntax unified
 502              		.arm
 503              		.fpu neon
 505              	mbedtls_base64_self_test:
 506              	.LFB3:
 229:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** #if defined(MBEDTLS_SELF_TEST)
 231:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 232:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** static const unsigned char base64_test_dec[64] =
 233:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** {
 234:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0x24, 0x48, 0x6E, 0x56, 0x87, 0x62, 0x5A, 0xBD,
 235:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0xBF, 0x17, 0xD9, 0xA2, 0xC4, 0x17, 0x1A, 0x01,
 236:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0x94, 0xED, 0x8F, 0x1E, 0x11, 0xB3, 0xD7, 0x09,
 237:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0x0C, 0xB6, 0xE9, 0x10, 0x6F, 0x22, 0xEE, 0x13,
 238:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0xCA, 0xB3, 0x07, 0x05, 0x76, 0xC9, 0xFA, 0x31,
 239:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0x6C, 0x08, 0x34, 0xFF, 0x8D, 0xC2, 0x6C, 0x38,
 240:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0x00, 0x43, 0xE9, 0x54, 0x97, 0xAF, 0x50, 0x4B,
 241:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     0xD1, 0x41, 0xBA, 0x95, 0x31, 0x5A, 0x0B, 0x97
 242:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** };
 243:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 244:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** static const unsigned char base64_test_enc[] =
 245:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     "JEhuVodiWr2/F9mixBcaAZTtjx4Rs9cJDLbpEG8i7hPK"
 246:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     "swcFdsn6MWwINP+Nwmw4AEPpVJevUEvRQbqVMVoLlw==";
 247:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 248:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** /*
 249:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  * Checkup routine
 250:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****  */
 251:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** int mbedtls_base64_self_test( int verbose )
 252:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** {
 507              		.loc 1 252 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 136
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL72:
 512 0000 30402DE9 		push	{r4, r5, lr}
 513              		.cfi_def_cfa_offset 12
 514              		.cfi_offset 4, -12
 515              		.cfi_offset 5, -8
 516              		.cfi_offset 14, -4
 253:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t len;
 254:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     const unsigned char *src;
 255:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     unsigned char buffer[128];
 256:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 257:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( verbose != 0 )
 517              		.loc 1 257 0
 518 0004 004050E2 		subs	r4, r0, #0
 252:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     size_t len;
 519              		.loc 1 252 0
 520 0008 94D04DE2 		sub	sp, sp, #148
 521              		.cfi_def_cfa_offset 160
 522              		.loc 1 257 0
 523 000c 0100000A 		beq	.L63
 258:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         mbedtls_printf( "  Base64 encoding test: " );
 524              		.loc 1 258 0
 525 0010 C0009FE5 		ldr	r0, .L79
 526              	.LVL73:
 527 0014 FEFFFFEB 		bl	printf
 528              	.LVL74:
 529              	.L63:
 530              	.LBB4:
 531              	.LBB5:
 532 0018 4030A0E3 		mov	r3, #64
 533 001c 0C208DE2 		add	r2, sp, #12
 534              	.LVL75:
 535 0020 00308DE5 		str	r3, [sp]
 536 0024 8010A0E3 		mov	r1, #128
 537 0028 AC309FE5 		ldr	r3, .L79+4
 538 002c 10008DE2 		add	r0, sp, #16
 539              	.LVL76:
 540 0030 FEFFFFEB 		bl	mbedtls_base64_encode.part.0
 541              	.LVL77:
 542              	.LBE5:
 543              	.LBE4:
 259:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 260:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     src = base64_test_dec;
 261:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 262:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( mbedtls_base64_encode( buffer, sizeof( buffer ), &len, src, 64 ) != 0 ||
 544              		.loc 1 262 0
 545 0034 000050E3 		cmp	r0, #0
 546 0038 0500001A 		bne	.L64
 263:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****          memcmp( base64_test_enc, buffer, 88 ) != 0 )
 547              		.loc 1 263 0 discriminator 1
 548 003c 5820A0E3 		mov	r2, #88
 549 0040 10108DE2 		add	r1, sp, #16
 550 0044 94009FE5 		ldr	r0, .L79+8
 551 0048 FEFFFFEB 		bl	memcmp
 552              	.LVL78:
 262:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****          memcmp( base64_test_enc, buffer, 88 ) != 0 )
 553              		.loc 1 262 0 discriminator 1
 554 004c 000050E3 		cmp	r0, #0
 555 0050 0500000A 		beq	.L65
 556              	.LVL79:
 557              	.L64:
 264:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 265:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( verbose != 0 )
 558              		.loc 1 265 0
 559 0054 000054E3 		cmp	r4, #0
 560 0058 0100000A 		beq	.L68
 266:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             mbedtls_printf( "failed\n" );
 561              		.loc 1 266 0
 562 005c 80009FE5 		ldr	r0, .L79+12
 563 0060 FEFFFFEB 		bl	puts
 564              	.LVL80:
 565              	.L68:
 267:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 268:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( 1 );
 566              		.loc 1 268 0
 567 0064 0140A0E3 		mov	r4, #1
 568              	.LVL81:
 569 0068 170000EA 		b	.L66
 570              	.LVL82:
 571              	.L65:
 269:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 270:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 271:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( verbose != 0 )
 572              		.loc 1 271 0
 573 006c 000054E3 		cmp	r4, #0
 574 0070 0100000A 		beq	.L67
 272:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         mbedtls_printf( "passed\n  Base64 decoding test: " );
 575              		.loc 1 272 0
 576 0074 6C009FE5 		ldr	r0, .L79+16
 577 0078 FEFFFFEB 		bl	printf
 578              	.LVL83:
 579              	.L67:
 273:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 274:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     src = base64_test_enc;
 275:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 276:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( mbedtls_base64_decode( buffer, sizeof( buffer ), &len, src, 88 ) != 0 ||
 580              		.loc 1 276 0
 581 007c 5830A0E3 		mov	r3, #88
 582 0080 0C208DE2 		add	r2, sp, #12
 583 0084 00308DE5 		str	r3, [sp]
 584 0088 8010A0E3 		mov	r1, #128
 585 008c 4C309FE5 		ldr	r3, .L79+8
 586 0090 10008DE2 		add	r0, sp, #16
 587 0094 FEFFFFEB 		bl	mbedtls_base64_decode
 588              	.LVL84:
 589 0098 000050E3 		cmp	r0, #0
 590 009c ECFFFF1A 		bne	.L64
 277:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****          memcmp( base64_test_dec, buffer, 64 ) != 0 )
 591              		.loc 1 277 0 discriminator 1
 592 00a0 4020A0E3 		mov	r2, #64
 593 00a4 10108DE2 		add	r1, sp, #16
 594 00a8 2C009FE5 		ldr	r0, .L79+4
 595 00ac FEFFFFEB 		bl	memcmp
 596              	.LVL85:
 276:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****          memcmp( base64_test_dec, buffer, 64 ) != 0 )
 597              		.loc 1 276 0 discriminator 1
 598 00b0 005050E2 		subs	r5, r0, #0
 599 00b4 E6FFFF1A 		bne	.L64
 278:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     {
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         if( verbose != 0 )
 280:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****             mbedtls_printf( "failed\n" );
 281:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 282:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         return( 1 );
 283:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     }
 284:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 285:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     if( verbose != 0 )
 600              		.loc 1 285 0
 601 00b8 000054E3 		cmp	r4, #0
 602 00bc 0200000A 		beq	.L66
 286:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         mbedtls_printf( "passed\n\n" );
 287:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** 
 288:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****     return( 0 );
 603              		.loc 1 288 0
 604 00c0 0540A0E1 		mov	r4, r5
 605              	.LVL86:
 286:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c ****         mbedtls_printf( "passed\n\n" );
 606              		.loc 1 286 0
 607 00c4 20009FE5 		ldr	r0, .L79+20
 608 00c8 FEFFFFEB 		bl	puts
 609              	.LVL87:
 610              	.L66:
 289:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\base64.c **** }
 611              		.loc 1 289 0
 612 00cc 0400A0E1 		mov	r0, r4
 613 00d0 94D08DE2 		add	sp, sp, #148
 614              		.cfi_def_cfa_offset 12
 615              		@ sp needed
 616 00d4 3080BDE8 		pop	{r4, r5, pc}
 617              	.L80:
 618              		.align	2
 619              	.L79:
 620 00d8 00000000 		.word	.LC0
 621 00dc 00000000 		.word	.LANCHOR2
 622 00e0 00000000 		.word	.LANCHOR3
 623 00e4 19000000 		.word	.LC1
 624 00e8 20000000 		.word	.LC2
 625 00ec 40000000 		.word	.LC3
 626              		.cfi_endproc
 627              	.LFE3:
 629              		.section	.rodata.base64_dec_map,"a",%progbits
 630              		.set	.LANCHOR1,. + 0
 633              	base64_dec_map:
 634 0000 7F       		.byte	127
 635 0001 7F       		.byte	127
 636 0002 7F       		.byte	127
 637 0003 7F       		.byte	127
 638 0004 7F       		.byte	127
 639 0005 7F       		.byte	127
 640 0006 7F       		.byte	127
 641 0007 7F       		.byte	127
 642 0008 7F       		.byte	127
 643 0009 7F       		.byte	127
 644 000a 7F       		.byte	127
 645 000b 7F       		.byte	127
 646 000c 7F       		.byte	127
 647 000d 7F       		.byte	127
 648 000e 7F       		.byte	127
 649 000f 7F       		.byte	127
 650 0010 7F       		.byte	127
 651 0011 7F       		.byte	127
 652 0012 7F       		.byte	127
 653 0013 7F       		.byte	127
 654 0014 7F       		.byte	127
 655 0015 7F       		.byte	127
 656 0016 7F       		.byte	127
 657 0017 7F       		.byte	127
 658 0018 7F       		.byte	127
 659 0019 7F       		.byte	127
 660 001a 7F       		.byte	127
 661 001b 7F       		.byte	127
 662 001c 7F       		.byte	127
 663 001d 7F       		.byte	127
 664 001e 7F       		.byte	127
 665 001f 7F       		.byte	127
 666 0020 7F       		.byte	127
 667 0021 7F       		.byte	127
 668 0022 7F       		.byte	127
 669 0023 7F       		.byte	127
 670 0024 7F       		.byte	127
 671 0025 7F       		.byte	127
 672 0026 7F       		.byte	127
 673 0027 7F       		.byte	127
 674 0028 7F       		.byte	127
 675 0029 7F       		.byte	127
 676 002a 7F       		.byte	127
 677 002b 3E       		.byte	62
 678 002c 7F       		.byte	127
 679 002d 7F       		.byte	127
 680 002e 7F       		.byte	127
 681 002f 3F       		.byte	63
 682 0030 34       		.byte	52
 683 0031 35       		.byte	53
 684 0032 36       		.byte	54
 685 0033 37       		.byte	55
 686 0034 38       		.byte	56
 687 0035 39       		.byte	57
 688 0036 3A       		.byte	58
 689 0037 3B       		.byte	59
 690 0038 3C       		.byte	60
 691 0039 3D       		.byte	61
 692 003a 7F       		.byte	127
 693 003b 7F       		.byte	127
 694 003c 7F       		.byte	127
 695 003d 40       		.byte	64
 696 003e 7F       		.byte	127
 697 003f 7F       		.byte	127
 698 0040 7F       		.byte	127
 699 0041 00       		.byte	0
 700 0042 01       		.byte	1
 701 0043 02       		.byte	2
 702 0044 03       		.byte	3
 703 0045 04       		.byte	4
 704 0046 05       		.byte	5
 705 0047 06       		.byte	6
 706 0048 07       		.byte	7
 707 0049 08       		.byte	8
 708 004a 09       		.byte	9
 709 004b 0A       		.byte	10
 710 004c 0B       		.byte	11
 711 004d 0C       		.byte	12
 712 004e 0D       		.byte	13
 713 004f 0E       		.byte	14
 714 0050 0F       		.byte	15
 715 0051 10       		.byte	16
 716 0052 11       		.byte	17
 717 0053 12       		.byte	18
 718 0054 13       		.byte	19
 719 0055 14       		.byte	20
 720 0056 15       		.byte	21
 721 0057 16       		.byte	22
 722 0058 17       		.byte	23
 723 0059 18       		.byte	24
 724 005a 19       		.byte	25
 725 005b 7F       		.byte	127
 726 005c 7F       		.byte	127
 727 005d 7F       		.byte	127
 728 005e 7F       		.byte	127
 729 005f 7F       		.byte	127
 730 0060 7F       		.byte	127
 731 0061 1A       		.byte	26
 732 0062 1B       		.byte	27
 733 0063 1C       		.byte	28
 734 0064 1D       		.byte	29
 735 0065 1E       		.byte	30
 736 0066 1F       		.byte	31
 737 0067 20       		.byte	32
 738 0068 21       		.byte	33
 739 0069 22       		.byte	34
 740 006a 23       		.byte	35
 741 006b 24       		.byte	36
 742 006c 25       		.byte	37
 743 006d 26       		.byte	38
 744 006e 27       		.byte	39
 745 006f 28       		.byte	40
 746 0070 29       		.byte	41
 747 0071 2A       		.byte	42
 748 0072 2B       		.byte	43
 749 0073 2C       		.byte	44
 750 0074 2D       		.byte	45
 751 0075 2E       		.byte	46
 752 0076 2F       		.byte	47
 753 0077 30       		.byte	48
 754 0078 31       		.byte	49
 755 0079 32       		.byte	50
 756 007a 33       		.byte	51
 757 007b 7F       		.byte	127
 758 007c 7F       		.byte	127
 759 007d 7F       		.byte	127
 760 007e 7F       		.byte	127
 761 007f 7F       		.byte	127
 762              		.section	.rodata.base64_enc_map,"a",%progbits
 763              		.set	.LANCHOR0,. + 0
 766              	base64_enc_map:
 767 0000 41       		.byte	65
 768 0001 42       		.byte	66
 769 0002 43       		.byte	67
 770 0003 44       		.byte	68
 771 0004 45       		.byte	69
 772 0005 46       		.byte	70
 773 0006 47       		.byte	71
 774 0007 48       		.byte	72
 775 0008 49       		.byte	73
 776 0009 4A       		.byte	74
 777 000a 4B       		.byte	75
 778 000b 4C       		.byte	76
 779 000c 4D       		.byte	77
 780 000d 4E       		.byte	78
 781 000e 4F       		.byte	79
 782 000f 50       		.byte	80
 783 0010 51       		.byte	81
 784 0011 52       		.byte	82
 785 0012 53       		.byte	83
 786 0013 54       		.byte	84
 787 0014 55       		.byte	85
 788 0015 56       		.byte	86
 789 0016 57       		.byte	87
 790 0017 58       		.byte	88
 791 0018 59       		.byte	89
 792 0019 5A       		.byte	90
 793 001a 61       		.byte	97
 794 001b 62       		.byte	98
 795 001c 63       		.byte	99
 796 001d 64       		.byte	100
 797 001e 65       		.byte	101
 798 001f 66       		.byte	102
 799 0020 67       		.byte	103
 800 0021 68       		.byte	104
 801 0022 69       		.byte	105
 802 0023 6A       		.byte	106
 803 0024 6B       		.byte	107
 804 0025 6C       		.byte	108
 805 0026 6D       		.byte	109
 806 0027 6E       		.byte	110
 807 0028 6F       		.byte	111
 808 0029 70       		.byte	112
 809 002a 71       		.byte	113
 810 002b 72       		.byte	114
 811 002c 73       		.byte	115
 812 002d 74       		.byte	116
 813 002e 75       		.byte	117
 814 002f 76       		.byte	118
 815 0030 77       		.byte	119
 816 0031 78       		.byte	120
 817 0032 79       		.byte	121
 818 0033 7A       		.byte	122
 819 0034 30       		.byte	48
 820 0035 31       		.byte	49
 821 0036 32       		.byte	50
 822 0037 33       		.byte	51
 823 0038 34       		.byte	52
 824 0039 35       		.byte	53
 825 003a 36       		.byte	54
 826 003b 37       		.byte	55
 827 003c 38       		.byte	56
 828 003d 39       		.byte	57
 829 003e 2B       		.byte	43
 830 003f 2F       		.byte	47
 831              		.section	.rodata.base64_test_dec,"a",%progbits
 832              		.set	.LANCHOR2,. + 0
 835              	base64_test_dec:
 836 0000 24       		.byte	36
 837 0001 48       		.byte	72
 838 0002 6E       		.byte	110
 839 0003 56       		.byte	86
 840 0004 87       		.byte	-121
 841 0005 62       		.byte	98
 842 0006 5A       		.byte	90
 843 0007 BD       		.byte	-67
 844 0008 BF       		.byte	-65
 845 0009 17       		.byte	23
 846 000a D9       		.byte	-39
 847 000b A2       		.byte	-94
 848 000c C4       		.byte	-60
 849 000d 17       		.byte	23
 850 000e 1A       		.byte	26
 851 000f 01       		.byte	1
 852 0010 94       		.byte	-108
 853 0011 ED       		.byte	-19
 854 0012 8F       		.byte	-113
 855 0013 1E       		.byte	30
 856 0014 11       		.byte	17
 857 0015 B3       		.byte	-77
 858 0016 D7       		.byte	-41
 859 0017 09       		.byte	9
 860 0018 0C       		.byte	12
 861 0019 B6       		.byte	-74
 862 001a E9       		.byte	-23
 863 001b 10       		.byte	16
 864 001c 6F       		.byte	111
 865 001d 22       		.byte	34
 866 001e EE       		.byte	-18
 867 001f 13       		.byte	19
 868 0020 CA       		.byte	-54
 869 0021 B3       		.byte	-77
 870 0022 07       		.byte	7
 871 0023 05       		.byte	5
 872 0024 76       		.byte	118
 873 0025 C9       		.byte	-55
 874 0026 FA       		.byte	-6
 875 0027 31       		.byte	49
 876 0028 6C       		.byte	108
 877 0029 08       		.byte	8
 878 002a 34       		.byte	52
 879 002b FF       		.byte	-1
 880 002c 8D       		.byte	-115
 881 002d C2       		.byte	-62
 882 002e 6C       		.byte	108
 883 002f 38       		.byte	56
 884 0030 00       		.byte	0
 885 0031 43       		.byte	67
 886 0032 E9       		.byte	-23
 887 0033 54       		.byte	84
 888 0034 97       		.byte	-105
 889 0035 AF       		.byte	-81
 890 0036 50       		.byte	80
 891 0037 4B       		.byte	75
 892 0038 D1       		.byte	-47
 893 0039 41       		.byte	65
 894 003a BA       		.byte	-70
 895 003b 95       		.byte	-107
 896 003c 31       		.byte	49
 897 003d 5A       		.byte	90
 898 003e 0B       		.byte	11
 899 003f 97       		.byte	-105
 900              		.section	.rodata.base64_test_enc,"a",%progbits
 901              		.set	.LANCHOR3,. + 0
 904              	base64_test_enc:
 905 0000 4A456875 		.ascii	"JEhuVodiWr2/F9mixBcaAZTtjx4Rs9cJDLbpEG8i7hPKswcFdsn"
 905      566F6469 
 905      5772322F 
 905      46396D69 
 905      78426361 
 906 0033 364D5777 		.ascii	"6MWwINP+Nwmw4AEPpVJevUEvRQbqVMVoLlw==\000"
 906      494E502B 
 906      4E776D77 
 906      34414550 
 906      70564A65 
 907              		.section	.rodata.mbedtls_base64_self_test.str1.1,"aMS",%progbits,1
 908              	.LC0:
 909 0000 20204261 		.ascii	"  Base64 encoding test: \000"
 909      73653634 
 909      20656E63 
 909      6F64696E 
 909      67207465 
 910              	.LC1:
 911 0019 6661696C 		.ascii	"failed\000"
 911      656400
 912              	.LC2:
 913 0020 70617373 		.ascii	"passed\012  Base64 decoding test: \000"
 913      65640A20 
 913      20426173 
 913      65363420 
 913      6465636F 
 914              	.LC3:
 915 0040 70617373 		.ascii	"passed\012\000"
 915      65640A00 
 916              		.text
 917              	.Letext0:
 918              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 919              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 920              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 921              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 922              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 923              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 924              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 925              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 926              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 927              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 928              		.file 12 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 base64.c
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:17     .text.mbedtls_base64_encode.part.0:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:22     .text.mbedtls_base64_encode.part.0:00000000 mbedtls_base64_encode.part.0
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:206    .text.mbedtls_base64_encode.part.0:00000144 $d
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:212    .text.mbedtls_base64_encode:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:218    .text.mbedtls_base64_encode:00000000 mbedtls_base64_encode
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:253    .text.mbedtls_base64_decode:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:259    .text.mbedtls_base64_decode:00000000 mbedtls_base64_decode
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:493    .text.mbedtls_base64_decode:000001d0 $d
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:499    .text.mbedtls_base64_self_test:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:505    .text.mbedtls_base64_self_test:00000000 mbedtls_base64_self_test
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:620    .text.mbedtls_base64_self_test:000000d8 $d
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:633    .rodata.base64_dec_map:00000000 base64_dec_map
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:766    .rodata.base64_enc_map:00000000 base64_enc_map
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:835    .rodata.base64_test_dec:00000000 base64_test_dec
C:\Users\a5089698\AppData\Local\Temp\ccHYd1Pe.s:904    .rodata.base64_test_enc:00000000 base64_test_enc
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
printf
memcmp
puts
