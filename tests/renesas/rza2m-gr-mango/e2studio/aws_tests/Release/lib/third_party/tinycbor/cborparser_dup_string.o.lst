   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"cborparser_dup_string.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._cbor_value_dup_string,"ax",%progbits
  17              		.align	2
  18              		.global	_cbor_value_dup_string
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	_cbor_value_dup_string:
  24              	.LFB49:
  25              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor/cborparser_dup_string.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** /****************************************************************************
   2:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** **
   3:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** Copyright (C) 2016 Intel Corporation
   4:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** **
   5:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** Permission is hereby granted, free of charge, to any person obtaining a copy
   6:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** of this software and associated documentation files (the "Software"), to deal
   7:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** in the Software without restriction, including without limitation the rights
   8:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** copies of the Software, and to permit persons to whom the Software is
  10:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** furnished to do so, subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** **
  12:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** The above copyright notice and this permission notice shall be included in
  13:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** all copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** **
  15:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ** THE SOFTWARE.
  22:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** **
  23:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** ****************************************************************************/
  24:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** 
  25:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #define _BSD_SOURCE 1
  26:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #define _DEFAULT_SOURCE 1
  27:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #ifndef __STDC_LIMIT_MACROS
  28:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #  define __STDC_LIMIT_MACROS 1
  29:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #endif
  30:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** 
  31:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #if !defined(__RX)
  32:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** 
  33:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #include "cbor.h"
  34:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** #include <stdlib.h>
  35:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** 
  36:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** /**
  37:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * \fn CborError cbor_value_dup_text_string(const CborValue *value, char **buffer, size_t *buflen, 
  38:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  39:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * Allocates memory for the string pointed by \a value and copies it into this
  40:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * buffer. The pointer to the buffer is stored in \a buffer and the number of
  41:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * bytes copied is stored in \a len (those variables must not be NULL).
  42:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  43:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * If the iterator \a value does not point to a text string, the behaviour is
  44:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * undefined, so checking with \ref cbor_value_get_type or \ref
  45:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * cbor_value_is_text_string is recommended.
  46:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  47:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * If \c malloc returns a NULL pointer, this function will return error
  48:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * condition \ref CborErrorOutOfMemory.
  49:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  50:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * On success, \c{*buffer} will contain a valid pointer that must be freed by
  51:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * calling \c{free()}. This is the case even for zero-length strings.
  52:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  53:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * The \a next pointer, if not null, will be updated to point to the next item
  54:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * after this string. If \a value points to the last item, then \a next will be
  55:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * invalid.
  56:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  57:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * This function may not run in constant time (it will run in O(n) time on the
  58:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * number of chunks). It requires constant memory (O(1)) in addition to the
  59:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * malloc'ed block.
  60:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  61:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * \note This function does not perform UTF-8 validation on the incoming text
  62:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * string.
  63:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  64:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * \sa cbor_value_copy_text_string(), cbor_value_dup_byte_string()
  65:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  */
  66:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** 
  67:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** /**
  68:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * \fn CborError cbor_value_dup_byte_string(const CborValue *value, uint8_t **buffer, size_t *bufle
  69:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  70:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * Allocates memory for the string pointed by \a value and copies it into this
  71:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * buffer. The pointer to the buffer is stored in \a buffer and the number of
  72:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * bytes copied is stored in \a len (those variables must not be NULL).
  73:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  74:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * If the iterator \a value does not point to a byte string, the behaviour is
  75:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * undefined, so checking with \ref cbor_value_get_type or \ref
  76:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * cbor_value_is_byte_string is recommended.
  77:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  78:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * If \c malloc returns a NULL pointer, this function will return error
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * condition \ref CborErrorOutOfMemory.
  80:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * On success, \c{*buffer} will contain a valid pointer that must be freed by
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * calling \c{free()}. This is the case even for zero-length strings.
  83:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  84:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * The \a next pointer, if not null, will be updated to point to the next item
  85:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * after this string. If \a value points to the last item, then \a next will be
  86:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * invalid.
  87:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  88:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * This function may not run in constant time (it will run in O(n) time on the
  89:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * number of chunks). It requires constant memory (O(1)) in addition to the
  90:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * malloc'ed block.
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  *
  92:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  * \sa cbor_value_copy_byte_string(), cbor_value_dup_text_string()
  93:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****  */
  94:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** CborError _cbor_value_dup_string(const CborValue *value, void **buffer, size_t *buflen, CborValue *
  95:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  96:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     assert(buffer);
  39              		.loc 1 96 0
  40 0004 006051E2 		subs	r6, r1, #0
  41 0008 0400001A 		bne	.L2
  42              		.loc 1 96 0 is_stmt 0 discriminator 1
  43 000c 94309FE5 		ldr	r3, .L11
  44              	.LVL1:
  45 0010 6010A0E3 		mov	r1, #96
  46              	.LVL2:
  47 0014 90209FE5 		ldr	r2, .L11+4
  48              	.LVL3:
  49              	.L10:
  97:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     assert(buflen);
  50              		.loc 1 97 0 is_stmt 1 discriminator 1
  51 0018 90009FE5 		ldr	r0, .L11+8
  52              	.LVL4:
  53 001c FEFFFFEB 		bl	__assert_func
  54              	.LVL5:
  55              	.L2:
  56              		.loc 1 97 0 is_stmt 0
  57 0020 000052E3 		cmp	r2, #0
  58 0024 0240A0E1 		mov	r4, r2
  59              		.loc 1 97 0 discriminator 1
  60 0028 84309F05 		ldreq	r3, .L11+12
  61              	.LVL6:
  62 002c 6110A003 		moveq	r1, #97
  63              	.LVL7:
  64 0030 74209F05 		ldreq	r2, .L11+4
  65              	.LVL8:
  66 0034 F7FFFF0A 		beq	.L10
  67              	.LVL9:
  68              	.L3:
  69 0038 0380A0E1 		mov	r8, r3
  98:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     *buflen = SIZE_MAX;
  70              		.loc 1 98 0 is_stmt 1
  71 003c 0030E0E3 		mvn	r3, #0
  72              	.LVL10:
  73 0040 003082E5 		str	r3, [r2]
  99:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     CborError err = _cbor_value_copy_string(value, NULL, buflen, NULL);
  74              		.loc 1 99 0
  75 0044 0030A0E3 		mov	r3, #0
  76 0048 0310A0E1 		mov	r1, r3
  77              	.LVL11:
  78 004c 0070A0E1 		mov	r7, r0
  79 0050 FEFFFFEB 		bl	_cbor_value_copy_string
  80              	.LVL12:
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     if (err)
  81              		.loc 1 100 0
  82 0054 005050E2 		subs	r5, r0, #0
  83 0058 1000001A 		bne	.L1
 101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****         return err;
 102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** 
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     ++*buflen;
  84              		.loc 1 103 0
  85 005c 000094E5 		ldr	r0, [r4]
  86              	.LVL13:
  87 0060 010080E2 		add	r0, r0, #1
  88 0064 000084E5 		str	r0, [r4]
 104:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     *buffer = malloc(*buflen);
  89              		.loc 1 104 0
  90 0068 FEFFFFEB 		bl	malloc
  91              	.LVL14:
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     if (!*buffer) {
  92              		.loc 1 105 0
  93 006c 000050E3 		cmp	r0, #0
 104:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     *buffer = malloc(*buflen);
  94              		.loc 1 104 0
  95 0070 0010A0E1 		mov	r1, r0
  96 0074 000086E5 		str	r0, [r6]
 106:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****         /* out of memory */
 107:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****         return CborErrorOutOfMemory;
  97              		.loc 1 107 0
  98 0078 0251A003 		moveq	r5, #-2147483648
  99              	.LVL15:
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     if (!*buffer) {
 100              		.loc 1 105 0
 101 007c 0700000A 		beq	.L1
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     }
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     err = _cbor_value_copy_string(value, *buffer, buflen, next);
 102              		.loc 1 109 0
 103 0080 0830A0E1 		mov	r3, r8
 104 0084 0420A0E1 		mov	r2, r4
 105 0088 0700A0E1 		mov	r0, r7
 106 008c FEFFFFEB 		bl	_cbor_value_copy_string
 107              	.LVL16:
 110:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     if (err) {
 108              		.loc 1 110 0
 109 0090 005050E2 		subs	r5, r0, #0
 110 0094 0100000A 		beq	.L1
 111:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****         free(*buffer);
 111              		.loc 1 111 0
 112 0098 000096E5 		ldr	r0, [r6]
 113              	.LVL17:
 114 009c FEFFFFEB 		bl	free
 115              	.LVL18:
 116              	.L1:
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****         return err;
 113:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     }
 114:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c ****     return CborNoError;
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborparser_dup_string.c **** }
 117              		.loc 1 115 0
 118 00a0 0500A0E1 		mov	r0, r5
 119 00a4 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 120              	.L12:
 121              		.align	2
 122              	.L11:
 123 00a8 00000000 		.word	.LC0
 124 00ac 00000000 		.word	.LANCHOR0
 125 00b0 07000000 		.word	.LC1
 126 00b4 5D000000 		.word	.LC2
 127              		.cfi_endproc
 128              	.LFE49:
 130              		.section	.rodata.__func__.7274,"a",%progbits
 131              		.set	.LANCHOR0,. + 0
 134              	__func__.7274:
 135 0000 5F63626F 		.ascii	"_cbor_value_dup_string\000"
 135      725F7661 
 135      6C75655F 
 135      6475705F 
 135      73747269 
 136              		.section	.rodata._cbor_value_dup_string.str1.1,"aMS",%progbits,1
 137              	.LC0:
 138 0000 62756666 		.ascii	"buffer\000"
 138      657200
 139              	.LC1:
 140 0007 443A2F57 		.ascii	"D:/Work/DeviceTester/amazon-freertos/lib/third_part"
 140      6F726B2F 
 140      44657669 
 140      63655465 
 140      73746572 
 141 003a 792F7469 		.ascii	"y/tinycbor/cborparser_dup_string.c\000"
 141      6E796362 
 141      6F722F63 
 141      626F7270 
 141      61727365 
 142              	.LC2:
 143 005d 6275666C 		.ascii	"buflen\000"
 143      656E00
 144              		.text
 145              	.Letext0:
 146              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 147              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 148              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 149              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 150              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 151              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 152              		.file 8 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor/cbor.h"
 153              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 154              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 cborparser_dup_string.c
C:\Users\a5089698\AppData\Local\Temp\cclkn7hb.s:17     .text._cbor_value_dup_string:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cclkn7hb.s:23     .text._cbor_value_dup_string:00000000 _cbor_value_dup_string
C:\Users\a5089698\AppData\Local\Temp\cclkn7hb.s:123    .text._cbor_value_dup_string:000000a8 $d
C:\Users\a5089698\AppData\Local\Temp\cclkn7hb.s:134    .rodata.__func__.7274:00000000 __func__.7274
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__assert_func
_cbor_value_copy_string
malloc
free
