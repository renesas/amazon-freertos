   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"cborencoder.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.append_to_buffer,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	append_to_buffer:
  23              	.LFB58:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor/cborencoder.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /****************************************************************************
   2:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** **
   3:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** Copyright (C) 2016 Intel Corporation
   4:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** **
   5:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** Permission is hereby granted, free of charge, to any person obtaining a copy
   6:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** of this software and associated documentation files (the "Software"), to deal
   7:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** in the Software without restriction, including without limitation the rights
   8:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** copies of the Software, and to permit persons to whom the Software is
  10:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** furnished to do so, subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** **
  12:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** The above copyright notice and this permission notice shall be included in
  13:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** all copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** **
  15:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ** THE SOFTWARE.
  22:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** **
  23:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** ****************************************************************************/
  24:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
  25:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #define _BSD_SOURCE 1
  26:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #define _DEFAULT_SOURCE 1
  27:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #ifndef __STDC_LIMIT_MACROS
  28:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #  define __STDC_LIMIT_MACROS 1
  29:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #endif
  30:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
  31:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include "cbor.h"
  32:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include "cborconstants_p.h"
  33:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include "compilersupport_p.h"
  34:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
  35:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include <assert.h>
  36:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include <stdlib.h>
  37:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include <string.h>
  38:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
  39:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #include "assert_p.h"       /* Always include last */
  40:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
  41:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
  42:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \defgroup CborEncoding Encoding to CBOR
  43:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \brief Group of functions used to encode data to CBOR.
  44:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  45:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * CborEncoder is used to encode data into a CBOR stream. The outermost
  46:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * CborEncoder is initialized by calling cbor_encoder_init(), with the buffer
  47:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * where the CBOR stream will be stored. The outermost CborEncoder is usually
  48:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * used to encode exactly one item, most often an array or map. It is possible
  49:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * to encode more than one item, but care must then be taken on the decoder
  50:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * side to ensure the state is reset after each item was decoded.
  51:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  52:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Nested CborEncoder objects are created using cbor_encoder_create_array() and
  53:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_create_map(), later closed with cbor_encoder_close_container()
  54:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * or cbor_encoder_close_container_checked(). The pairs of creation and closing
  55:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * must be exactly matched and their parameters are always the same.
  56:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  57:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * CborEncoder writes directly to the user-supplied buffer, without extra
  58:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * buffering. CborEncoder does not allocate memory and CborEncoder objects are
  59:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * usually created on the stack of the encoding functions.
  60:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  61:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * The example below initializes a CborEncoder object with a buffer and encodes
  62:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * a single integer.
  63:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  64:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \code
  65:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      uint8_t buf[16];
  66:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      CborEncoder encoder;
  67:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encoder_init(&encoder, &buf, sizeof(buf), 0);
  68:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encode_int(&encoder, some_value);
  69:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \endcode
  70:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  71:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * As explained before, usually the outermost CborEncoder object is used to add
  72:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * one array or map, which in turn contains multiple elements. The example
  73:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * below creates a CBOR map with one element: a key "foo" and a boolean value.
  74:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  75:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \code
  76:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      uint8_t buf[16];
  77:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      CborEncoder encoder, mapEncoder;
  78:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encoder_init(&encoder, &buf, sizeof(buf), 0);
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encoder_create_map(&encoder, &mapEncoder, 1);
  80:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encode_text_stringz(&mapEncoder, "foo");
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encode_boolean(&mapEncoder, some_value);
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encoder_close_container(&encoder, &mapEncoder);
  83:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \endcode
  84:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  85:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * <h3 class="groupheader">Error checking and buffer size</h2>
  86:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  87:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * All functions operating on CborEncoder return a condition of type CborError.
  88:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * If the encoding was successful, they return CborNoError. Some functions do
  89:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * extra checking on the input provided and may return some other error
  90:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * conditions (for example, cbor_encode_simple_value() checks that the type is
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * of the correct type).
  92:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  93:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * In addition, all functions check whether the buffer has enough bytes to
  94:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * encode the item being appended. If that is not possible, they return
  95:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * CborErrorOutOfMemory.
  96:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
  97:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * It is possible to continue with the encoding of data past the first function
  98:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * that returns CborErrorOutOfMemory. CborEncoder functions will not overrun
  99:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * the buffer, but will instead count how many more bytes are needed to
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * complete the encoding. At the end, you can obtain that count by calling
 101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_get_extra_bytes_needed().
 102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \section1 Finalizing the encoding
 104:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Once all items have been appended and the containers have all been properly
 106:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * closed, the user-supplied buffer will contain the CBOR stream and may be
 107:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * immediately used. To obtain the size of the buffer, call
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_get_buffer_size() with the original buffer pointer.
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 110:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * The example below illustrates how one can encode an item with error checking
 111:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * and then pass on the buffer for network sending.
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 113:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \code
 114:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      uint8_t buf[16];
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      CborError err;
 116:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      CborEncoder encoder, mapEncoder;
 117:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      cbor_encoder_init(&encoder, &buf, sizeof(buf), 0);
 118:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      err = cbor_encoder_create_map(&encoder, &mapEncoder, 1);
 119:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      if (!err)
 120:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *          return err;
 121:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      err = cbor_encode_text_stringz(&mapEncoder, "foo");
 122:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      if (!err)
 123:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *          return err;
 124:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      err = cbor_encode_boolean(&mapEncoder, some_value);
 125:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      if (!err)
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *          return err;
 127:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      err = cbor_encoder_close_container_checked(&encoder, &mapEncoder);
 128:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      if (!err)
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *          return err;
 130:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 131:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      size_t len = cbor_encoder_get_buffer_size(&encoder, buf);
 132:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      send_payload(buf, len);
 133:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *      return CborNoError;
 134:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \endcode
 135:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 136:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Finally, the example below illustrates expands on the one above and also
 137:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * deals with dynamically growing the buffer if the initial allocation wasn't
 138:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * big enough. Note the two places where the error checking was replaced with
 139:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * an assertion, showing where the author assumes no error can occur.
 140:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 141:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \code
 142:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * uint8_t *encode_string_array(const char **strings, int n, size_t *bufsize)
 143:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * {
 144:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     CborError err;
 145:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     CborEncoder encoder, arrayEncoder;
 146:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     size_t size = 256;
 147:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     uint8_t *buf = NULL;
 148:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 149:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     while (1) {
 150:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         int i;
 151:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         size_t more_bytes;
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         uint8_t *nbuf = realloc(buf, size);
 153:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         if (nbuf == NULL)
 154:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *             goto error;
 155:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         buf = nbuf;
 156:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 157:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         cbor_encoder_init(&encoder, &buf, size, 0);
 158:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         err = cbor_encoder_create_array(&encoder, &arrayEncoder, n);
 159:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         assert(err);         // can't fail, the buffer is always big enough
 160:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 161:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         for (i = 0; i < n; ++i) {
 162:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *             err = cbor_encode_text_stringz(&arrayEncoder, strings[i]);
 163:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *             if (err && err != CborErrorOutOfMemory)
 164:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *                 goto error;
 165:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         }
 166:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 167:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         err = cbor_encoder_close_container_checked(&encoder, &arrayEncoder);
 168:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         assert(err);         // shouldn't fail!
 169:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 170:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         more_bytes = cbor_encoder_get_extra_bytes_needed(encoder);
 171:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         if (more_size) {
 172:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *             // buffer wasn't big enough, try again
 173:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *             size += more_bytes;
 174:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *             continue;
 175:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         }
 176:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         *bufsize = cbor_encoder_get_buffer_size(encoder, buf);
 178:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *         return buf;
 179:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     }
 180:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *  error:
 181:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     free(buf);
 182:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *     return NULL;
 183:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *  }
 184:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \endcode
 185:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 186:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 187:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 188:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \addtogroup CborEncoding
 189:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * @{
 190:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 191:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 192:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 193:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \struct CborEncoder
 194:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Structure used to encode to CBOR.
 195:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 196:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 197:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 198:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Initializes a CborEncoder structure \a encoder by pointing it to buffer \a
 199:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * buffer of size \a size. The \a flags field is currently unused and must be
 200:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * zero.
 201:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 202:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** void cbor_encoder_init(CborEncoder *encoder, uint8_t *buffer, size_t size, int flags)
 203:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->data.ptr = buffer;
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->end = buffer + size;
 206:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->added = 0;
 207:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->flags = flags;
 208:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 209:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 210:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline void put16(void *where, uint16_t v)
 211:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 212:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     v = cbor_htons(v);
 213:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 214:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 215:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 216:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /* Note: Since this is currently only used in situations where OOM is the only
 217:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * valid error, we KNOW this to be true.  Thus, this function now returns just 'true',
 218:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * but if in the future, any function starts returning a non-OOM error, this will need
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * to be changed to the test.  At the moment, this is done to prevent more branches
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * being created in the tinycbor output */
 221:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline bool isOomError(CborError err)
 222:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 223:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     (void) err;
 224:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return true;
 225:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 226:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 227:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline void put32(void *where, uint32_t v)
 228:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 229:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     v = cbor_htonl(v);
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 231:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 232:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 233:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline void put64(void *where, uint64_t v)
 234:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 235:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     v = cbor_htonll(v);
 236:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 237:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 238:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 239:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline bool would_overflow(CborEncoder *encoder, size_t len)
 240:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 241:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     ptrdiff_t remaining = (ptrdiff_t)encoder->end;
 242:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     remaining -= remaining ? (ptrdiff_t)encoder->data.ptr : encoder->data.bytes_needed;
 243:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     remaining -= (ptrdiff_t)len;
 244:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return unlikely(remaining < 0);
 245:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 246:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 247:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline void advance_ptr(CborEncoder *encoder, size_t n)
 248:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 249:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (encoder->end)
 250:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         encoder->data.ptr += n;
 251:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     else
 252:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         encoder->data.bytes_needed += n;
 253:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 254:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 255:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline CborError append_to_buffer(CborEncoder *encoder, const void *data, size_t len)
 256:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
  25              		.loc 1 256 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 70402DE9 		push	{r4, r5, r6, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36              		.loc 1 256 0
  37 0004 0250A0E1 		mov	r5, r2
  38              	.LBB10:
  39              	.LBB11:
 242:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     remaining -= (ptrdiff_t)len;
  40              		.loc 1 242 0
  41 0008 003090E5 		ldr	r3, [r0]
  42              	.LBE11:
  43              	.LBE10:
  44              		.loc 1 256 0
  45 000c 0040A0E1 		mov	r4, r0
  46              	.LVL1:
  47              	.LBB13:
  48              	.LBB12:
 241:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     remaining -= remaining ? (ptrdiff_t)encoder->data.ptr : encoder->data.bytes_needed;
  49              		.loc 1 241 0
  50 0010 042090E5 		ldr	r2, [r0, #4]
  51              	.LVL2:
 242:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     remaining -= (ptrdiff_t)len;
  52              		.loc 1 242 0
  53 0014 033042E0 		sub	r3, r2, r3
  54              	.LVL3:
 243:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return unlikely(remaining < 0);
  55              		.loc 1 243 0
  56 0018 050043E0 		sub	r0, r3, r5
  57              	.LVL4:
  58              	.LBE12:
  59              	.LBE13:
 257:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (would_overflow(encoder, len)) {
  60              		.loc 1 257 0
  61 001c 000050E3 		cmp	r0, #0
  62 0020 090000AA 		bge	.L4
  63              	.LVL5:
  64              	.LBB14:
  65              	.LBB15:
 258:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         if (encoder->end != NULL) {
  66              		.loc 1 258 0
  67 0024 000052E3 		cmp	r2, #0
  68              	.LBB16:
  69              	.LBB17:
 250:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     else
  70              		.loc 1 250 0
  71 0028 0201A0E3 		mov	r0, #-2147483648
  72              	.LBE17:
  73              	.LBE16:
 259:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             len -= encoder->end - encoder->data.ptr;
  74              		.loc 1 259 0
  75 002c 03504510 		subne	r5, r5, r3
  76              	.LVL6:
 260:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             encoder->end = NULL;
  77              		.loc 1 260 0
  78 0030 0030A013 		movne	r3, #0
 261:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             encoder->data.bytes_needed = 0;
  79              		.loc 1 261 0
  80 0034 00308415 		strne	r3, [r4]
  81              	.LVL7:
 260:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             encoder->end = NULL;
  82              		.loc 1 260 0
  83 0038 04308415 		strne	r3, [r4, #4]
  84              	.LBB19:
  85              	.LBB18:
 250:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     else
  86              		.loc 1 250 0
  87 003c 003094E5 		ldr	r3, [r4]
  88 0040 055083E0 		add	r5, r3, r5
  89              	.LVL8:
  90 0044 005084E5 		str	r5, [r4]
  91              	.LVL9:
  92 0048 7080BDE8 		pop	{r4, r5, r6, pc}
  93              	.LVL10:
  94              	.L4:
  95              	.LBE18:
  96              	.LBE19:
  97              	.LBE15:
  98              	.LBE14:
 262:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         }
 263:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 264:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         advance_ptr(encoder, len);
 265:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return CborErrorOutOfMemory;
 266:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     }
 267:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 268:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(encoder->data.ptr, data, len);
  99              		.loc 1 268 0
 100 004c 0520A0E1 		mov	r2, r5
 101 0050 000094E5 		ldr	r0, [r4]
 102 0054 FEFFFFEB 		bl	memcpy
 103              	.LVL11:
 269:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->data.ptr += len;
 104              		.loc 1 269 0
 105 0058 003094E5 		ldr	r3, [r4]
 270:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return CborNoError;
 106              		.loc 1 270 0
 107 005c 0000A0E3 		mov	r0, #0
 269:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->data.ptr += len;
 108              		.loc 1 269 0
 109 0060 055083E0 		add	r5, r3, r5
 110              	.LVL12:
 111 0064 005084E5 		str	r5, [r4]
 271:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 112              		.loc 1 271 0
 113 0068 7080BDE8 		pop	{r4, r5, r6, pc}
 114              		.cfi_endproc
 115              	.LFE58:
 117              		.section	.text.encode_number_no_update,"ax",%progbits
 118              		.align	2
 119              		.syntax unified
 120              		.arm
 121              		.fpu neon
 123              	encode_number_no_update:
 124              	.LFB60:
 272:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 273:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline CborError append_byte_to_buffer(CborEncoder *encoder, uint8_t byte)
 274:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 275:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return append_to_buffer(encoder, &byte, 1);
 276:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 277:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 278:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline CborError encode_number_no_update(CborEncoder *encoder, uint64_t ui, uint8_t shiftedM
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 125              		.loc 1 279 0
 126              		.cfi_startproc
 127              		@ args = 4, pretend = 0, frame = 16
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL13:
 280:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* Little-endian would have been so much more convenient here:
 281:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****      * We could just write at the beginning of buf but append_to_buffer
 282:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****      * only the necessary bytes.
 283:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****      * Since it has to be big endian, do it the other way around:
 284:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****      * write from the end. */
 285:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint64_t buf[2];
 286:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t *const bufend = (uint8_t *)buf + sizeof(buf);
 287:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t *bufstart = bufend - 1;
 288:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     put64(buf + 1, ui);     /* we probably have a bunch of zeros in the beginning */
 289:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 290:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (ui < Value8Bit) {
 130              		.loc 1 290 0
 131 0000 000053E3 		cmp	r3, #0
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* Little-endian would have been so much more convenient here:
 132              		.loc 1 279 0
 133 0004 30402DE9 		push	{r4, r5, lr}
 134              		.cfi_def_cfa_offset 12
 135              		.cfi_offset 4, -12
 136              		.cfi_offset 5, -8
 137              		.cfi_offset 14, -4
 138              		.loc 1 290 0
 139 0008 17005203 		cmpeq	r2, #23
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* Little-endian would have been so much more convenient here:
 140              		.loc 1 279 0
 141 000c 14D04DE2 		sub	sp, sp, #20
 142              		.cfi_def_cfa_offset 32
 143              	.LVL14:
 144              	.LBB23:
 145              	.LBB24:
 235:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 146              		.loc 1 235 0
 147 0010 321FBFE6 		rev	r1, r2
 148 0014 33EFBFE6 		rev	lr, r3
 149              	.LVL15:
 236:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 150              		.loc 1 236 0
 151 0018 0C108DE5 		str	r1, [sp, #12]
 152              	.LVL16:
 153 001c 0F108DE2 		add	r1, sp, #15
 154              	.LVL17:
 155              	.LBE24:
 156              	.LBE23:
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* Little-endian would have been so much more convenient here:
 157              		.loc 1 279 0
 158 0020 20C0DDE5 		ldrb	ip, [sp, #32]	@ zero_extendqisi2
 291:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         *bufstart += shiftedMajorType;
 159              		.loc 1 291 0
 160 0024 0F30DD95 		ldrbls	r3, [sp, #15]	@ zero_extendqisi2
 161              	.LBB26:
 162              	.LBB25:
 236:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 163              		.loc 1 236 0
 164 0028 08E08DE5 		str	lr, [sp, #8]
 165              	.LBE25:
 166              	.LBE26:
 167              		.loc 1 291 0
 168 002c 03C08C90 		addls	ip, ip, r3
 169 0030 0FC0CD95 		strbls	ip, [sp, #15]
 290:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         *bufstart += shiftedMajorType;
 170              		.loc 1 290 0
 171 0034 1400009A 		bls	.L14
 172              	.LVL18:
 173              	.LBB27:
 292:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     } else {
 293:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         uint8_t more = 0;
 294:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         if (ui > 0xffU)
 174              		.loc 1 294 0
 175 0038 000053E3 		cmp	r3, #0
 176 003c FF005203 		cmpeq	r2, #255
 293:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         if (ui > 0xffU)
 177              		.loc 1 293 0
 178 0040 0030A093 		movls	r3, #0
 179              		.loc 1 294 0
 180 0044 0B00009A 		bls	.L15
 181              	.LVL19:
 295:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             ++more;
 296:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         if (ui > 0xffffU)
 182              		.loc 1 296 0
 183 0048 0050A0E3 		mov	r5, #0
 184 004c FF4F0FE3 		movw	r4, #65535
 185 0050 050053E1 		cmp	r3, r5
 186 0054 04005201 		cmpeq	r2, r4
 295:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             ++more;
 187              		.loc 1 295 0
 188 0058 0130A093 		movls	r3, #1
 189              		.loc 1 296 0
 190 005c 0500009A 		bls	.L15
 191              	.LVL20:
 297:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             ++more;
 298:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         if (ui > 0xffffffffU)
 192              		.loc 1 298 0
 193 0060 0050A0E3 		mov	r5, #0
 194 0064 0040E0E3 		mvn	r4, #0
 195 0068 050053E1 		cmp	r3, r5
 196 006c 04005201 		cmpeq	r2, r4
 299:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****             ++more;
 197              		.loc 1 299 0
 198 0070 0230A093 		movls	r3, #2
 199 0074 0330A083 		movhi	r3, #3
 200              	.LVL21:
 201              	.L15:
 300:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         bufstart -= (size_t)1 << more;
 202              		.loc 1 300 0
 203 0078 0120A0E3 		mov	r2, #1
 204              	.LVL22:
 301:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         *bufstart = shiftedMajorType + Value8Bit + more;
 205              		.loc 1 301 0
 206 007c 18C08CE2 		add	ip, ip, #24
 300:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         bufstart -= (size_t)1 << more;
 207              		.loc 1 300 0
 208 0080 121341E0 		sub	r1, r1, r2, lsl r3
 209              	.LVL23:
 210              		.loc 1 301 0
 211 0084 0C3083E0 		add	r3, r3, ip
 212              	.LVL24:
 213 0088 0030C1E5 		strb	r3, [r1]
 214              	.L14:
 215              	.LBE27:
 302:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     }
 303:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 304:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return append_to_buffer(encoder, bufstart, bufend - bufstart);
 216              		.loc 1 304 0
 217 008c 10308DE2 		add	r3, sp, #16
 218              	.LVL25:
 219 0090 012043E0 		sub	r2, r3, r1
 220 0094 FEFFFFEB 		bl	append_to_buffer
 221              	.LVL26:
 305:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 222              		.loc 1 305 0
 223 0098 14D08DE2 		add	sp, sp, #20
 224              		.cfi_def_cfa_offset 12
 225              		@ sp needed
 226 009c 3080BDE8 		pop	{r4, r5, pc}
 227              		.cfi_endproc
 228              	.LFE60:
 230              		.section	.text.create_container,"ax",%progbits
 231              		.align	2
 232              		.syntax unified
 233              		.arm
 234              		.fpu neon
 236              	create_container:
 237              	.LFB71:
 306:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 307:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static inline CborError encode_number(CborEncoder *encoder, uint64_t ui, uint8_t shiftedMajorType)
 308:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     ++encoder->added;
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 311:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 312:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 313:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 314:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the unsigned 64-bit integer \a value to the CBOR stream provided by
 315:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \a encoder.
 316:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 317:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encode_negative_int, cbor_encode_int
 318:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 319:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_uint(CborEncoder *encoder, uint64_t value)
 320:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 321:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number(encoder, value, UnsignedIntegerType << MajorTypeShift);
 322:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 323:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 324:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 325:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the negative 64-bit integer whose absolute value is \a
 326:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * absolute_value to the CBOR stream provided by \a encoder.
 327:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 328:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encode_uint, cbor_encode_int
 329:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 330:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_negative_int(CborEncoder *encoder, uint64_t absolute_value)
 331:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 332:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number(encoder, absolute_value, NegativeIntegerType << MajorTypeShift);
 333:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 334:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 335:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 336:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the signed 64-bit integer \a value to the CBOR stream provided by
 337:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \a encoder.
 338:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 339:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encode_negative_int, cbor_encode_uint
 340:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 341:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_int(CborEncoder *encoder, int64_t value)
 342:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 343:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* adapted from code in RFC 7049 appendix C (pseudocode) */
 344:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint64_t ui = value >> 63;              /* extend sign to whole length */
 345:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t majorType = ui & 0x20;          /* extract major type */
 346:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     ui ^= value;                            /* complement negatives */
 347:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number(encoder, ui, majorType);
 348:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 349:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 350:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 351:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the CBOR Simple Type of value \a value to the CBOR stream provided by
 352:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \a encoder.
 353:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 354:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * This function may return error CborErrorIllegalSimpleType if the \a value
 355:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * variable contains a number that is not a valid simple type.
 356:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 357:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_simple_value(CborEncoder *encoder, uint8_t value)
 358:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 359:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #ifndef CBOR_ENCODER_NO_CHECK_USER
 360:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* check if this is a valid simple type */
 361:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (value >= HalfPrecisionFloat && value <= Break)
 362:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return CborErrorIllegalSimpleType;
 363:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #endif
 364:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number(encoder, value, SimpleTypesType << MajorTypeShift);
 365:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 366:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 367:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 368:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the floating-point value of type \a fpType and pointed to by \a
 369:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * value to the CBOR stream provided by \a encoder. The value of \a fpType must
 370:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * be one of CborHalfFloatType, CborFloatType or CborDoubleType, otherwise the
 371:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * behavior of this function is undefined.
 372:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 373:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * This function is useful for code that needs to pass through floating point
 374:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * values but does not wish to have the actual floating-point code.
 375:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 376:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encode_half_float, cbor_encode_float, cbor_encode_double
 377:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 378:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_floating_point(CborEncoder *encoder, CborType fpType, const void *value)
 379:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 380:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t buf[1 + sizeof(uint64_t)];
 381:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     assert(fpType == CborHalfFloatType || fpType == CborFloatType || fpType == CborDoubleType);
 382:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     buf[0] = fpType;
 383:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 384:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     unsigned size = 2U << (fpType - CborHalfFloatType);
 385:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (size == 8)
 386:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         put64(buf + 1, *(const uint64_t*)value);
 387:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     else if (size == 4)
 388:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         put32(buf + 1, *(const uint32_t*)value);
 389:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     else
 390:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         put16(buf + 1, *(const uint16_t*)value);
 391:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     ++encoder->added;
 392:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return append_to_buffer(encoder, buf, size + 1);
 393:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 394:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 395:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 396:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the CBOR tag \a tag to the CBOR stream provided by \a encoder.
 397:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 398:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa CborTag
 399:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 400:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_tag(CborEncoder *encoder, CborTag tag)
 401:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 402:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* tags don't count towards the number of elements in an array or map */
 403:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, tag, TagType << MajorTypeShift);
 404:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 405:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 406:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static CborError encode_string(CborEncoder *encoder, size_t length, uint8_t shiftedMajorType, const
 407:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 408:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     CborError err = encode_number(encoder, length, shiftedMajorType);
 409:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (err && !isOomError(err))
 410:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return err;
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return append_to_buffer(encoder, string, length);
 412:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 413:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 414:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 415:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \fn CborError cbor_encode_text_stringz(CborEncoder *encoder, const char *string)
 416:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 417:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the null-terminated text string \a string to the CBOR stream
 418:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * provided by \a encoder. CBOR requires that \a string be valid UTF-8, but
 419:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * TinyCBOR makes no verification of correctness. The terminating null is not
 420:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * included in the stream.
 421:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 422:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encode_text_string, cbor_encode_byte_string
 423:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 424:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 425:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 426:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the text string \a string of length \a length to the CBOR stream
 427:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * provided by \a encoder. CBOR requires that \a string be valid UTF-8, but
 428:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * TinyCBOR makes no verification of correctness.
 429:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 430:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa CborError cbor_encode_text_stringz, cbor_encode_byte_string
 431:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 432:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_byte_string(CborEncoder *encoder, const uint8_t *string, size_t length)
 433:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 434:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, ByteStringType << MajorTypeShift, string);
 435:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 436:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 437:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 438:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Appends the byte string \a string of length \a length to the CBOR stream
 439:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * provided by \a encoder. CBOR byte strings are arbitrary raw data.
 440:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 441:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encode_text_stringz, cbor_encode_text_string
 442:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 443:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encode_text_string(CborEncoder *encoder, const char *string, size_t length)
 444:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 445:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, TextStringType << MajorTypeShift, string);
 446:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 447:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 448:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #ifdef __GNUC__
 449:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** __attribute__((noinline))
 450:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #endif
 451:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** static CborError create_container(CborEncoder *encoder, CborEncoder *container, size_t length, uint
 452:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 238              		.loc 1 452 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              	.LVL27:
 243 0000 00C0A0E1 		mov	ip, r0
 244 0004 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 245              		.cfi_def_cfa_offset 24
 246              		.cfi_offset 14, -4
 247              		.loc 1 452 0
 248 0008 0100A0E1 		mov	r0, r1
 249              	.LVL28:
 453:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     CborError err;
 454:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->data.ptr = encoder->data.ptr;
 250              		.loc 1 454 0
 251 000c 00109CE5 		ldr	r1, [ip]
 252              	.LVL29:
 455:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->end = encoder->end;
 456:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     ++encoder->added;
 457:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->added = 0;
 458:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 459:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     cbor_static_assert(((MapType << MajorTypeShift) & CborIteratorFlag_ContainerIsMap) == CborItera
 460:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     cbor_static_assert(((ArrayType << MajorTypeShift) & CborIteratorFlag_ContainerIsMap) == 0);
 461:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->flags = shiftedMajorType & CborIteratorFlag_ContainerIsMap;
 462:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 463:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (length == CborIndefiniteLength) {
 253              		.loc 1 463 0
 254 0010 010072E3 		cmn	r2, #1
 454:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->end = encoder->end;
 255              		.loc 1 454 0
 256 0014 001080E5 		str	r1, [r0]
 455:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->end = encoder->end;
 257              		.loc 1 455 0
 258 0018 04109CE5 		ldr	r1, [ip, #4]
 259 001c 041080E5 		str	r1, [r0, #4]
 456:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     container->added = 0;
 260              		.loc 1 456 0
 261 0020 08109CE5 		ldr	r1, [ip, #8]
 262 0024 011081E2 		add	r1, r1, #1
 263 0028 08108CE5 		str	r1, [ip, #8]
 457:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 264              		.loc 1 457 0
 265 002c 00C0A0E3 		mov	ip, #0
 266              	.LVL30:
 267 0030 201003E2 		and	r1, r3, #32
 268 0034 08C080E5 		str	ip, [r0, #8]
 461:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 269              		.loc 1 461 0
 270 0038 0C1080E5 		str	r1, [r0, #12]
 271              		.loc 1 463 0
 272 003c 0800001A 		bne	.L21
 464:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         container->flags |= CborIteratorFlag_UnknownLength;
 273              		.loc 1 464 0
 274 0040 041081E3 		orr	r1, r1, #4
 465:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         err = append_byte_to_buffer(container, shiftedMajorType + IndefiniteLength);
 275              		.loc 1 465 0
 276 0044 1F3083E2 		add	r3, r3, #31
 277              	.LVL31:
 464:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         container->flags |= CborIteratorFlag_UnknownLength;
 278              		.loc 1 464 0
 279 0048 0C1080E5 		str	r1, [r0, #12]
 280              	.LVL32:
 281 004c 10108DE2 		add	r1, sp, #16
 282 0050 013061E5 		strb	r3, [r1, #-1]!
 283              	.LVL33:
 284              	.LBB30:
 285              	.LBB31:
 275:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 286              		.loc 1 275 0
 287 0054 0120A0E3 		mov	r2, #1
 288              	.LVL34:
 289 0058 FEFFFFEB 		bl	append_to_buffer
 290              	.LVL35:
 291              	.L20:
 292              	.LBE31:
 293              	.LBE30:
 466:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     } else {
 467:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         err = encode_number_no_update(container, length, shiftedMajorType);
 468:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     }
 469:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return err;
 470:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 294              		.loc 1 470 0
 295 005c 14D08DE2 		add	sp, sp, #20
 296              		.cfi_remember_state
 297              		.cfi_def_cfa_offset 4
 298              		@ sp needed
 299 0060 04F09DE4 		ldr	pc, [sp], #4
 300              	.LVL36:
 301              	.L21:
 302              		.cfi_restore_state
 467:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     }
 303              		.loc 1 467 0
 304 0064 00308DE5 		str	r3, [sp]
 305 0068 0C30A0E1 		mov	r3, ip
 306              	.LVL37:
 307 006c FEFFFFEB 		bl	encode_number_no_update
 308              	.LVL38:
 469:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 309              		.loc 1 469 0
 310 0070 F9FFFFEA 		b	.L20
 311              		.cfi_endproc
 312              	.LFE71:
 314              		.section	.text.cbor_encoder_init,"ax",%progbits
 315              		.align	2
 316              		.global	cbor_encoder_init
 317              		.syntax unified
 318              		.arm
 319              		.fpu neon
 321              	cbor_encoder_init:
 322              	.LFB51:
 203:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->data.ptr = buffer;
 323              		.loc 1 203 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL39:
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->added = 0;
 329              		.loc 1 205 0
 330 0000 022081E0 		add	r2, r1, r2
 331              	.LVL40:
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->end = buffer + size;
 332              		.loc 1 204 0
 333 0004 001080E5 		str	r1, [r0]
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->added = 0;
 334              		.loc 1 205 0
 335 0008 042080E5 		str	r2, [r0, #4]
 206:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->flags = flags;
 336              		.loc 1 206 0
 337 000c 0020A0E3 		mov	r2, #0
 338 0010 082080E5 		str	r2, [r0, #8]
 207:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 339              		.loc 1 207 0
 340 0014 0C3080E5 		str	r3, [r0, #12]
 341 0018 1EFF2FE1 		bx	lr
 342              		.cfi_endproc
 343              	.LFE51:
 345              		.section	.text.cbor_encode_uint,"ax",%progbits
 346              		.align	2
 347              		.global	cbor_encode_uint
 348              		.syntax unified
 349              		.arm
 350              		.fpu neon
 352              	cbor_encode_uint:
 353              	.LFB62:
 320:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number(encoder, value, UnsignedIntegerType << MajorTypeShift);
 354              		.loc 1 320 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              	.LVL41:
 359 0000 07402DE9 		push	{r0, r1, r2, lr}
 360              		.cfi_def_cfa_offset 16
 361              		.cfi_offset 14, -4
 362              	.LBB34:
 363              	.LBB35:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 364              		.loc 1 309 0
 365 0004 081090E5 		ldr	r1, [r0, #8]
 366 0008 011081E2 		add	r1, r1, #1
 367 000c 081080E5 		str	r1, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 368              		.loc 1 310 0
 369 0010 0010A0E3 		mov	r1, #0
 370 0014 00108DE5 		str	r1, [sp]
 371 0018 FEFFFFEB 		bl	encode_number_no_update
 372              	.LVL42:
 373              	.LBE35:
 374              	.LBE34:
 322:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 375              		.loc 1 322 0
 376 001c 0CD08DE2 		add	sp, sp, #12
 377              		.cfi_def_cfa_offset 4
 378              		@ sp needed
 379 0020 04F09DE4 		ldr	pc, [sp], #4
 380              		.cfi_endproc
 381              	.LFE62:
 383              		.section	.text.cbor_encode_negative_int,"ax",%progbits
 384              		.align	2
 385              		.global	cbor_encode_negative_int
 386              		.syntax unified
 387              		.arm
 388              		.fpu neon
 390              	cbor_encode_negative_int:
 391              	.LFB63:
 331:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number(encoder, absolute_value, NegativeIntegerType << MajorTypeShift);
 392              		.loc 1 331 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL43:
 397 0000 07402DE9 		push	{r0, r1, r2, lr}
 398              		.cfi_def_cfa_offset 16
 399              		.cfi_offset 14, -4
 400              	.LBB38:
 401              	.LBB39:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 402              		.loc 1 309 0
 403 0004 081090E5 		ldr	r1, [r0, #8]
 404 0008 011081E2 		add	r1, r1, #1
 405 000c 081080E5 		str	r1, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 406              		.loc 1 310 0
 407 0010 2010A0E3 		mov	r1, #32
 408 0014 00108DE5 		str	r1, [sp]
 409 0018 FEFFFFEB 		bl	encode_number_no_update
 410              	.LVL44:
 411              	.LBE39:
 412              	.LBE38:
 333:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 413              		.loc 1 333 0
 414 001c 0CD08DE2 		add	sp, sp, #12
 415              		.cfi_def_cfa_offset 4
 416              		@ sp needed
 417 0020 04F09DE4 		ldr	pc, [sp], #4
 418              		.cfi_endproc
 419              	.LFE63:
 421              		.section	.text.cbor_encode_int,"ax",%progbits
 422              		.align	2
 423              		.global	cbor_encode_int
 424              		.syntax unified
 425              		.arm
 426              		.fpu neon
 428              	cbor_encode_int:
 429              	.LFB64:
 342:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* adapted from code in RFC 7049 appendix C (pseudocode) */
 430              		.loc 1 342 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL45:
 435 0000 F7402DE9 		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 436              		.cfi_def_cfa_offset 32
 437              		.cfi_offset 4, -20
 438              		.cfi_offset 5, -16
 439              		.cfi_offset 6, -12
 440              		.cfi_offset 7, -8
 441              		.cfi_offset 14, -4
 342:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* adapted from code in RFC 7049 appendix C (pseudocode) */
 442              		.loc 1 342 0
 443 0004 0370A0E1 		mov	r7, r3
 444              	.LBB42:
 445              	.LBB43:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 446              		.loc 1 309 0
 447 0008 081090E5 		ldr	r1, [r0, #8]
 448              	.LBE43:
 449              	.LBE42:
 344:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t majorType = ui & 0x20;          /* extract major type */
 450              		.loc 1 344 0
 451 000c C33FA0E1 		asr	r3, r3, #31
 452 0010 0340A0E1 		mov	r4, r3
 453              	.LVL46:
 454              	.LBB45:
 455              	.LBB44:
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 456              		.loc 1 310 0
 457 0014 203003E2 		and	r3, r3, #32
 458              	.LVL47:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 459              		.loc 1 309 0
 460 0018 011081E2 		add	r1, r1, #1
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 461              		.loc 1 310 0
 462 001c 042022E0 		eor	r2, r2, r4
 463              	.LVL48:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 464              		.loc 1 309 0
 465 0020 081080E5 		str	r1, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 466              		.loc 1 310 0
 467 0024 00308DE5 		str	r3, [sp]
 468 0028 043027E0 		eor	r3, r7, r4
 469 002c FEFFFFEB 		bl	encode_number_no_update
 470              	.LVL49:
 471              	.LBE44:
 472              	.LBE45:
 348:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 473              		.loc 1 348 0
 474 0030 0CD08DE2 		add	sp, sp, #12
 475              		.cfi_def_cfa_offset 20
 476              		@ sp needed
 477 0034 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 478              		.cfi_endproc
 479              	.LFE64:
 481              		.section	.text.cbor_encode_simple_value,"ax",%progbits
 482              		.align	2
 483              		.global	cbor_encode_simple_value
 484              		.syntax unified
 485              		.arm
 486              		.fpu neon
 488              	cbor_encode_simple_value:
 489              	.LFB65:
 358:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #ifndef CBOR_ENCODER_NO_CHECK_USER
 490              		.loc 1 358 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL50:
 495 0000 07402DE9 		push	{r0, r1, r2, lr}
 496              		.cfi_def_cfa_offset 16
 497              		.cfi_offset 14, -4
 361:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return CborErrorIllegalSimpleType;
 498              		.loc 1 361 0
 499 0004 192041E2 		sub	r2, r1, #25
 500 0008 060052E3 		cmp	r2, #6
 362:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** #endif
 501              		.loc 1 362 0
 502 000c 06010093 		movwls	r0, #262
 503              	.LVL51:
 361:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return CborErrorIllegalSimpleType;
 504              		.loc 1 361 0
 505 0010 0700009A 		bls	.L31
 506              	.LVL52:
 507              	.LBB48:
 508              	.LBB49:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 509              		.loc 1 309 0
 510 0014 082090E5 		ldr	r2, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 511              		.loc 1 310 0
 512 0018 E030A0E3 		mov	r3, #224
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 513              		.loc 1 309 0
 514 001c 012082E2 		add	r2, r2, #1
 515 0020 082080E5 		str	r2, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 516              		.loc 1 310 0
 517 0024 0120A0E1 		mov	r2, r1
 518 0028 00308DE5 		str	r3, [sp]
 519 002c 0030A0E3 		mov	r3, #0
 520 0030 FEFFFFEB 		bl	encode_number_no_update
 521              	.LVL53:
 522              	.L31:
 523              	.LBE49:
 524              	.LBE48:
 365:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 525              		.loc 1 365 0
 526 0034 0CD08DE2 		add	sp, sp, #12
 527              		.cfi_def_cfa_offset 4
 528              		@ sp needed
 529 0038 04F09DE4 		ldr	pc, [sp], #4
 530              		.cfi_endproc
 531              	.LFE65:
 533              		.section	.text.cbor_encode_floating_point,"ax",%progbits
 534              		.align	2
 535              		.global	cbor_encode_floating_point
 536              		.syntax unified
 537              		.arm
 538              		.fpu neon
 540              	cbor_encode_floating_point:
 541              	.LFB66:
 379:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t buf[1 + sizeof(uint64_t)];
 542              		.loc 1 379 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 32
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              	.LVL54:
 547 0000 0230A0E1 		mov	r3, r2
 381:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     buf[0] = fpType;
 548              		.loc 1 381 0
 549 0004 072081E2 		add	r2, r1, #7
 550              	.LVL55:
 551 0008 7220EFE6 		uxtb	r2, r2
 379:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     uint8_t buf[1 + sizeof(uint64_t)];
 552              		.loc 1 379 0
 553 000c 30402DE9 		push	{r4, r5, lr}
 554              		.cfi_def_cfa_offset 12
 555              		.cfi_offset 4, -12
 556              		.cfi_offset 5, -8
 557              		.cfi_offset 14, -4
 558 0010 24D04DE2 		sub	sp, sp, #36
 559              		.cfi_def_cfa_offset 48
 381:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     buf[0] = fpType;
 560              		.loc 1 381 0
 561 0014 020052E3 		cmp	r2, #2
 562 0018 0400009A 		bls	.L36
 381:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     buf[0] = fpType;
 563              		.loc 1 381 0 is_stmt 0 discriminator 1
 564 001c A4309FE5 		ldr	r3, .L42
 565              	.LVL56:
 566 0020 7D1100E3 		movw	r1, #381
 567              	.LVL57:
 568 0024 A0209FE5 		ldr	r2, .L42+4
 569 0028 A0009FE5 		ldr	r0, .L42+8
 570              	.LVL58:
 571 002c FEFFFFEB 		bl	__assert_func
 572              	.LVL59:
 573              	.L36:
 384:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (size == 8)
 574              		.loc 1 384 0 is_stmt 1
 575 0030 0220A0E3 		mov	r2, #2
 382:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 576              		.loc 1 382 0
 577 0034 1410CDE5 		strb	r1, [sp, #20]
 384:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (size == 8)
 578              		.loc 1 384 0
 579 0038 F91041E2 		sub	r1, r1, #249
 580              	.LVL60:
 581 003c 0040A0E1 		mov	r4, r0
 385:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         put64(buf + 1, *(const uint64_t*)value);
 582              		.loc 1 385 0
 583 0040 020051E1 		cmp	r1, r2
 384:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (size == 8)
 584              		.loc 1 384 0
 585 0044 1251A0E1 		lsl	r5, r2, r1
 586              	.LVL61:
 385:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         put64(buf + 1, *(const uint64_t*)value);
 587              		.loc 1 385 0
 588 0048 1200001A 		bne	.L37
 589              	.LVL62:
 590              	.LBB56:
 591              	.LBB57:
 235:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 592              		.loc 1 235 0
 593 004c 002093E5 		ldr	r2, [r3]
 594 0050 043093E5 		ldr	r3, [r3, #4]
 595              	.LVL63:
 596 0054 322FBFE6 		rev	r2, r2
 597 0058 0C208DE5 		str	r2, [sp, #12]
 598              	.LVL64:
 236:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 599              		.loc 1 236 0
 600 005c 0820A0E3 		mov	r2, #8
 601 0060 02108DE0 		add	r1, sp, r2
 235:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 602              		.loc 1 235 0
 603 0064 333FBFE6 		rev	r3, r3
 604 0068 08308DE5 		str	r3, [sp, #8]
 605              	.LVL65:
 606              	.L41:
 607              	.LBE57:
 608              	.LBE56:
 609              	.LBB58:
 610              	.LBB59:
 213:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 611              		.loc 1 213 0
 612 006c 15008DE2 		add	r0, sp, #21
 613              	.LVL66:
 614 0070 FEFFFFEB 		bl	memcpy
 615              	.LVL67:
 616              	.LBE59:
 617              	.LBE58:
 391:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return append_to_buffer(encoder, buf, size + 1);
 618              		.loc 1 391 0
 619 0074 083094E5 		ldr	r3, [r4, #8]
 392:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 620              		.loc 1 392 0
 621 0078 012085E2 		add	r2, r5, #1
 622 007c 14108DE2 		add	r1, sp, #20
 623 0080 0400A0E1 		mov	r0, r4
 391:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return append_to_buffer(encoder, buf, size + 1);
 624              		.loc 1 391 0
 625 0084 013083E2 		add	r3, r3, #1
 626 0088 083084E5 		str	r3, [r4, #8]
 392:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 627              		.loc 1 392 0
 628 008c FEFFFFEB 		bl	append_to_buffer
 629              	.LVL68:
 393:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 630              		.loc 1 393 0
 631 0090 24D08DE2 		add	sp, sp, #36
 632              		.cfi_remember_state
 633              		.cfi_def_cfa_offset 12
 634              		@ sp needed
 635 0094 3080BDE8 		pop	{r4, r5, pc}
 636              	.LVL69:
 637              	.L37:
 638              		.cfi_restore_state
 387:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         put32(buf + 1, *(const uint32_t*)value);
 639              		.loc 1 387 0
 640 0098 010051E3 		cmp	r1, #1
 641              	.LVL70:
 390:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     ++encoder->added;
 642              		.loc 1 390 0
 643 009c B010D311 		ldrhne	r1, [r3]
 644              	.LVL71:
 645              	.LBB62:
 646              	.LBB63:
 229:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 647              		.loc 1 229 0
 648 00a0 20108D02 		addeq	r1, sp, #32
 649 00a4 00309305 		ldreq	r3, [r3]
 650              	.LVL72:
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 651              		.loc 1 230 0
 652 00a8 0420A003 		moveq	r2, #4
 653              	.LBE63:
 654              	.LBE62:
 655              	.LBB65:
 656              	.LBB60:
 212:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 657              		.loc 1 212 0
 658 00ac 0134A011 		lslne	r3, r1, #8
 659              	.LBE60:
 660              	.LBE65:
 661              	.LBB66:
 662              	.LBB64:
 229:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 663              		.loc 1 229 0
 664 00b0 333FBF06 		reveq	r3, r3
 665 00b4 1C302105 		streq	r3, [r1, #-28]!
 666              	.LVL73:
 667              	.LBE64:
 668              	.LBE66:
 669              	.LBB67:
 670              	.LBB61:
 212:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     memcpy(where, &v, sizeof(v));
 671              		.loc 1 212 0
 672 00b8 21348311 		orrne	r3, r3, r1, lsr #8
 673 00bc 20108D12 		addne	r1, sp, #32
 674 00c0 BE316111 		strhne	r3, [r1, #-30]!	@ movhi
 675              	.LVL74:
 676 00c4 E8FFFFEA 		b	.L41
 677              	.L43:
 678              		.align	2
 679              	.L42:
 680 00c8 00000000 		.word	.LC0
 681 00cc 00000000 		.word	.LANCHOR0
 682 00d0 53000000 		.word	.LC1
 683              	.LBE61:
 684              	.LBE67:
 685              		.cfi_endproc
 686              	.LFE66:
 688              		.section	.text.cbor_encode_tag,"ax",%progbits
 689              		.align	2
 690              		.global	cbor_encode_tag
 691              		.syntax unified
 692              		.arm
 693              		.fpu neon
 695              	cbor_encode_tag:
 696              	.LFB67:
 401:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     /* tags don't count towards the number of elements in an array or map */
 697              		.loc 1 401 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL75:
 702 0000 07402DE9 		push	{r0, r1, r2, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 14, -4
 403:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 705              		.loc 1 403 0
 706 0004 C010A0E3 		mov	r1, #192
 707 0008 00108DE5 		str	r1, [sp]
 708 000c FEFFFFEB 		bl	encode_number_no_update
 709              	.LVL76:
 404:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 710              		.loc 1 404 0
 711 0010 0CD08DE2 		add	sp, sp, #12
 712              		.cfi_def_cfa_offset 4
 713              		@ sp needed
 714 0014 04F09DE4 		ldr	pc, [sp], #4
 715              		.cfi_endproc
 716              	.LFE67:
 718              		.section	.text.cbor_encode_byte_string,"ax",%progbits
 719              		.align	2
 720              		.global	cbor_encode_byte_string
 721              		.syntax unified
 722              		.arm
 723              		.fpu neon
 725              	cbor_encode_byte_string:
 726              	.LFB69:
 433:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, ByteStringType << MajorTypeShift, string);
 727              		.loc 1 433 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL77:
 732              	.LBB72:
 733              	.LBB73:
 734              	.LBB74:
 735              	.LBB75:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 736              		.loc 1 309 0
 737 0000 083090E5 		ldr	r3, [r0, #8]
 738              	.LBE75:
 739              	.LBE74:
 740              	.LBE73:
 741              	.LBE72:
 433:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, ByteStringType << MajorTypeShift, string);
 742              		.loc 1 433 0
 743 0004 73402DE9 		push	{r0, r1, r4, r5, r6, lr}
 744              		.cfi_def_cfa_offset 24
 745              		.cfi_offset 4, -16
 746              		.cfi_offset 5, -12
 747              		.cfi_offset 6, -8
 748              		.cfi_offset 14, -4
 433:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, ByteStringType << MajorTypeShift, string);
 749              		.loc 1 433 0
 750 0008 0040A0E1 		mov	r4, r0
 751 000c 0150A0E1 		mov	r5, r1
 752 0010 0260A0E1 		mov	r6, r2
 753              	.LVL78:
 754              	.LBB80:
 755              	.LBB78:
 756              	.LBB77:
 757              	.LBB76:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 758              		.loc 1 309 0
 759 0014 013083E2 		add	r3, r3, #1
 760 0018 083080E5 		str	r3, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 761              		.loc 1 310 0
 762 001c 4030A0E3 		mov	r3, #64
 763 0020 00308DE5 		str	r3, [sp]
 764 0024 0030A0E3 		mov	r3, #0
 765 0028 FEFFFFEB 		bl	encode_number_no_update
 766              	.LVL79:
 767              	.LBE76:
 768              	.LBE77:
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 769              		.loc 1 411 0
 770 002c 0620A0E1 		mov	r2, r6
 771 0030 0510A0E1 		mov	r1, r5
 772 0034 0400A0E1 		mov	r0, r4
 773              	.LBE78:
 774              	.LBE80:
 435:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 775              		.loc 1 435 0
 776 0038 08D08DE2 		add	sp, sp, #8
 777              		.cfi_def_cfa_offset 16
 778              		@ sp needed
 779 003c 7040BDE8 		pop	{r4, r5, r6, lr}
 780              		.cfi_restore 14
 781              		.cfi_restore 6
 782              		.cfi_restore 5
 783              		.cfi_restore 4
 784              		.cfi_def_cfa_offset 0
 785              	.LVL80:
 786              	.LBB81:
 787              	.LBB79:
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 788              		.loc 1 411 0
 789 0040 FEFFFFEA 		b	append_to_buffer
 790              	.LVL81:
 791              	.LBE79:
 792              	.LBE81:
 793              		.cfi_endproc
 794              	.LFE69:
 796              		.section	.text.cbor_encode_text_string,"ax",%progbits
 797              		.align	2
 798              		.global	cbor_encode_text_string
 799              		.syntax unified
 800              		.arm
 801              		.fpu neon
 803              	cbor_encode_text_string:
 804              	.LFB70:
 444:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, TextStringType << MajorTypeShift, string);
 805              		.loc 1 444 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL82:
 810              	.LBB86:
 811              	.LBB87:
 812              	.LBB88:
 813              	.LBB89:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 814              		.loc 1 309 0
 815 0000 083090E5 		ldr	r3, [r0, #8]
 816              	.LBE89:
 817              	.LBE88:
 818              	.LBE87:
 819              	.LBE86:
 444:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, TextStringType << MajorTypeShift, string);
 820              		.loc 1 444 0
 821 0004 73402DE9 		push	{r0, r1, r4, r5, r6, lr}
 822              		.cfi_def_cfa_offset 24
 823              		.cfi_offset 4, -16
 824              		.cfi_offset 5, -12
 825              		.cfi_offset 6, -8
 826              		.cfi_offset 14, -4
 444:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_string(encoder, length, TextStringType << MajorTypeShift, string);
 827              		.loc 1 444 0
 828 0008 0040A0E1 		mov	r4, r0
 829 000c 0150A0E1 		mov	r5, r1
 830 0010 0260A0E1 		mov	r6, r2
 831              	.LVL83:
 832              	.LBB94:
 833              	.LBB92:
 834              	.LBB91:
 835              	.LBB90:
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return encode_number_no_update(encoder, ui, shiftedMajorType);
 836              		.loc 1 309 0
 837 0014 013083E2 		add	r3, r3, #1
 838 0018 083080E5 		str	r3, [r0, #8]
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 839              		.loc 1 310 0
 840 001c 6030A0E3 		mov	r3, #96
 841 0020 00308DE5 		str	r3, [sp]
 842 0024 0030A0E3 		mov	r3, #0
 843 0028 FEFFFFEB 		bl	encode_number_no_update
 844              	.LVL84:
 845              	.LBE90:
 846              	.LBE91:
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 847              		.loc 1 411 0
 848 002c 0620A0E1 		mov	r2, r6
 849 0030 0510A0E1 		mov	r1, r5
 850 0034 0400A0E1 		mov	r0, r4
 851              	.LBE92:
 852              	.LBE94:
 446:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 853              		.loc 1 446 0
 854 0038 08D08DE2 		add	sp, sp, #8
 855              		.cfi_def_cfa_offset 16
 856              		@ sp needed
 857 003c 7040BDE8 		pop	{r4, r5, r6, lr}
 858              		.cfi_restore 14
 859              		.cfi_restore 6
 860              		.cfi_restore 5
 861              		.cfi_restore 4
 862              		.cfi_def_cfa_offset 0
 863              	.LVL85:
 864              	.LBB95:
 865              	.LBB93:
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 866              		.loc 1 411 0
 867 0040 FEFFFFEA 		b	append_to_buffer
 868              	.LVL86:
 869              	.LBE93:
 870              	.LBE95:
 871              		.cfi_endproc
 872              	.LFE70:
 874              		.section	.text.cbor_encoder_create_array,"ax",%progbits
 875              		.align	2
 876              		.global	cbor_encoder_create_array
 877              		.syntax unified
 878              		.arm
 879              		.fpu neon
 881              	cbor_encoder_create_array:
 882              	.LFB72:
 471:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 472:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 473:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Creates a CBOR array in the CBOR stream provided by \a encoder and
 474:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * initializes \a arrayEncoder so that items can be added to the array using
 475:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * the CborEncoder functions. The array must be terminated by calling either
 476:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_close_container() or cbor_encoder_close_container_checked()
 477:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * with the same \a encoder and \a arrayEncoder parameters.
 478:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 479:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * The number of items inserted into the array must be exactly \a length items,
 480:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * otherwise the stream is invalid. If the number of items is not known when
 481:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * creating the array, the constant \ref CborIndefiniteLength may be passed as
 482:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * length instead.
 483:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 484:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encoder_create_map
 485:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 486:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encoder_create_array(CborEncoder *encoder, CborEncoder *arrayEncoder, size_t length)
 487:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 883              		.loc 1 487 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 888              	.LVL87:
 488:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return create_container(encoder, arrayEncoder, length, ArrayType << MajorTypeShift);
 889              		.loc 1 488 0
 890 0000 8030A0E3 		mov	r3, #128
 891 0004 FEFFFFEA 		b	create_container
 892              	.LVL88:
 893              		.cfi_endproc
 894              	.LFE72:
 896              		.section	.text.cbor_encoder_create_map,"ax",%progbits
 897              		.align	2
 898              		.global	cbor_encoder_create_map
 899              		.syntax unified
 900              		.arm
 901              		.fpu neon
 903              	cbor_encoder_create_map:
 904              	.LFB73:
 489:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 490:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 491:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 492:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Creates a CBOR map in the CBOR stream provided by \a encoder and
 493:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * initializes \a mapEncoder so that items can be added to the map using
 494:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * the CborEncoder functions. The map must be terminated by calling either
 495:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_close_container() or cbor_encoder_close_container_checked()
 496:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * with the same \a encoder and \a mapEncoder parameters.
 497:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 498:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * The number of pair of items inserted into the map must be exactly \a length
 499:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * items, otherwise the stream is invalid. If the number of items is not known
 500:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * when creating the map, the constant \ref CborIndefiniteLength may be passed as
 501:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * length instead.
 502:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 503:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \b{Implementation limitation:} TinyCBOR cannot encode more than SIZE_MAX/2
 504:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * key-value pairs in the stream. If the length \a length is larger than this
 505:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * value, this function returns error CborErrorDataTooLarge.
 506:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 507:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encoder_create_array
 508:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 509:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encoder_create_map(CborEncoder *encoder, CborEncoder *mapEncoder, size_t length)
 510:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 905              		.loc 1 510 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL89:
 511:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (length != CborIndefiniteLength && length > SIZE_MAX / 2)
 911              		.loc 1 511 0
 912 0000 023182E2 		add	r3, r2, #-2147483648
 913 0004 0A0173E3 		cmn	r3, #-2147483646
 914 0008 0100009A 		bls	.L52
 512:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return CborErrorDataTooLarge;
 513:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return create_container(encoder, mapEncoder, length, MapType << MajorTypeShift);
 915              		.loc 1 513 0
 916 000c A030A0E3 		mov	r3, #160
 917 0010 FEFFFFEA 		b	create_container
 918              	.LVL90:
 919              	.L52:
 514:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 920              		.loc 1 514 0
 921 0014 010BA0E3 		mov	r0, #1024
 922              	.LVL91:
 923 0018 1EFF2FE1 		bx	lr
 924              		.cfi_endproc
 925              	.LFE73:
 927              		.section	.text.cbor_encoder_close_container,"ax",%progbits
 928              		.align	2
 929              		.global	cbor_encoder_close_container
 930              		.syntax unified
 931              		.arm
 932              		.fpu neon
 934              	cbor_encoder_close_container:
 935              	.LFB74:
 515:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** 
 516:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** /**
 517:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * Closes the CBOR container (array or map) provided by \a containerEncoder and
 518:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * updates the CBOR stream provided by \a encoder. Both parameters must be the
 519:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * same as were passed to cbor_encoder_create_array() or
 520:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_create_map().
 521:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 522:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * This function does not verify that the number of items (or pair of items, in
 523:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * the case of a map) was correct. To execute that verification, call
 524:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * cbor_encoder_close_container_checked() instead.
 525:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  *
 526:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  * \sa cbor_encoder_create_array(), cbor_encoder_create_map()
 527:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****  */
 528:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** CborError cbor_encoder_close_container(CborEncoder *encoder, const CborEncoder *containerEncoder)
 529:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** {
 936              		.loc 1 529 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 8
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              	.LVL92:
 941 0000 07402DE9 		push	{r0, r1, r2, lr}
 942              		.cfi_def_cfa_offset 16
 943              		.cfi_offset 14, -4
 530:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (encoder->end)
 531:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         encoder->data.ptr = containerEncoder->data.ptr;
 944              		.loc 1 531 0
 945 0004 003091E5 		ldr	r3, [r1]
 946 0008 003080E5 		str	r3, [r0]
 532:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     else
 533:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         encoder->data.bytes_needed = containerEncoder->data.bytes_needed;
 534:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     encoder->end = containerEncoder->end;
 947              		.loc 1 534 0
 948 000c 043091E5 		ldr	r3, [r1, #4]
 949 0010 043080E5 		str	r3, [r0, #4]
 535:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (containerEncoder->flags & CborIteratorFlag_UnknownLength)
 950              		.loc 1 535 0
 951 0014 0C3091E5 		ldr	r3, [r1, #12]
 952 0018 043013E2 		ands	r3, r3, #4
 536:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****         return append_byte_to_buffer(encoder, BreakByte);
 537:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     return CborNoError;
 953              		.loc 1 537 0
 954 001c 0300A001 		moveq	r0, r3
 955              	.LVL93:
 535:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c ****     if (containerEncoder->flags & CborIteratorFlag_UnknownLength)
 956              		.loc 1 535 0
 957 0020 0400000A 		beq	.L53
 958              	.LVL94:
 959 0024 08108DE2 		add	r1, sp, #8
 960              	.LVL95:
 961 0028 0030E0E3 		mvn	r3, #0
 962 002c 013061E5 		strb	r3, [r1, #-1]!
 963              	.LVL96:
 964              	.LBB98:
 965              	.LBB99:
 275:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 966              		.loc 1 275 0
 967 0030 0120A0E3 		mov	r2, #1
 968 0034 FEFFFFEB 		bl	append_to_buffer
 969              	.LVL97:
 970              	.L53:
 971              	.LBE99:
 972              	.LBE98:
 538:D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor\cborencoder.c **** }
 973              		.loc 1 538 0
 974 0038 0CD08DE2 		add	sp, sp, #12
 975              		.cfi_def_cfa_offset 4
 976              		@ sp needed
 977 003c 04F09DE4 		ldr	pc, [sp], #4
 978              		.cfi_endproc
 979              	.LFE74:
 981              		.section	.rodata.__func__.7416,"a",%progbits
 982              		.set	.LANCHOR0,. + 0
 985              	__func__.7416:
 986 0000 63626F72 		.ascii	"cbor_encode_floating_point\000"
 986      5F656E63 
 986      6F64655F 
 986      666C6F61 
 986      74696E67 
 987              		.section	.rodata.cbor_encode_floating_point.str1.1,"aMS",%progbits,1
 988              	.LC0:
 989 0000 66705479 		.ascii	"fpType == CborHalfFloatType || fpType == CborFloatT"
 989      7065203D 
 989      3D204362 
 989      6F724861 
 989      6C66466C 
 990 0033 79706520 		.ascii	"ype || fpType == CborDoubleType\000"
 990      7C7C2066 
 990      70547970 
 990      65203D3D 
 990      2043626F 
 991              	.LC1:
 992 0053 443A2F57 		.ascii	"D:/Work/DeviceTester/amazon-freertos/lib/third_part"
 992      6F726B2F 
 992      44657669 
 992      63655465 
 992      73746572 
 993 0086 792F7469 		.ascii	"y/tinycbor/cborencoder.c\000"
 993      6E796362 
 993      6F722F63 
 993      626F7265 
 993      6E636F64 
 994              		.text
 995              	.Letext0:
 996              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 997              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 998              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 999              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1000              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1001              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1002              		.file 8 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor/cbor.h"
 1003              		.file 9 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/tinycbor/cborconstants_p.h"
 1004              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1005              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 cborencoder.c
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:17     .text.append_to_buffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:22     .text.append_to_buffer:00000000 append_to_buffer
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:118    .text.encode_number_no_update:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:123    .text.encode_number_no_update:00000000 encode_number_no_update
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:231    .text.create_container:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:236    .text.create_container:00000000 create_container
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:315    .text.cbor_encoder_init:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:321    .text.cbor_encoder_init:00000000 cbor_encoder_init
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:346    .text.cbor_encode_uint:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:352    .text.cbor_encode_uint:00000000 cbor_encode_uint
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:384    .text.cbor_encode_negative_int:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:390    .text.cbor_encode_negative_int:00000000 cbor_encode_negative_int
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:422    .text.cbor_encode_int:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:428    .text.cbor_encode_int:00000000 cbor_encode_int
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:482    .text.cbor_encode_simple_value:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:488    .text.cbor_encode_simple_value:00000000 cbor_encode_simple_value
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:534    .text.cbor_encode_floating_point:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:540    .text.cbor_encode_floating_point:00000000 cbor_encode_floating_point
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:680    .text.cbor_encode_floating_point:000000c8 $d
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:689    .text.cbor_encode_tag:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:695    .text.cbor_encode_tag:00000000 cbor_encode_tag
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:719    .text.cbor_encode_byte_string:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:725    .text.cbor_encode_byte_string:00000000 cbor_encode_byte_string
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:797    .text.cbor_encode_text_string:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:803    .text.cbor_encode_text_string:00000000 cbor_encode_text_string
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:875    .text.cbor_encoder_create_array:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:881    .text.cbor_encoder_create_array:00000000 cbor_encoder_create_array
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:897    .text.cbor_encoder_create_map:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:903    .text.cbor_encoder_create_map:00000000 cbor_encoder_create_map
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:928    .text.cbor_encoder_close_container:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:934    .text.cbor_encoder_close_container:00000000 cbor_encoder_close_container
C:\Users\a5089698\AppData\Local\Temp\cc9NF9Ur.s:985    .rodata.__func__.7416:00000000 __func__.7416
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
__assert_func
