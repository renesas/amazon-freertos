   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"threading.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.threading_mutex_fail,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	threading_mutex_fail:
  23              	.LFB0:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library/threading.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  Threading abstraction layer
   3:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *
   4:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
   5:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  SPDX-License-Identifier: Apache-2.0
   6:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *
   7:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
   8:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  not use this file except in compliance with the License.
   9:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  You may obtain a copy of the License at
  10:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *
  11:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  http://www.apache.org/licenses/LICENSE-2.0
  12:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *
  13:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  Unless required by applicable law or agreed to in writing, software
  14:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  15:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  16:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  See the License for the specific language governing permissions and
  17:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  limitations under the License.
  18:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *
  19:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  *  This file is part of mbed TLS (https://tls.mbed.org)
  20:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  */
  21:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  22:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** /*
  23:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * Ensure gmtime_r is available even with -std=c99; must be defined before
  24:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * config.h, which pulls in glibc's features.h. Harmless on other platforms.
  25:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  */
  26:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if !defined(_POSIX_C_SOURCE)
  27:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #define _POSIX_C_SOURCE 200112L
  28:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif
  29:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  30:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if !defined(MBEDTLS_CONFIG_FILE)
  31:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #include "mbedtls/config.h"
  32:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #else
  33:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #include MBEDTLS_CONFIG_FILE
  34:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif
  35:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  36:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if defined(MBEDTLS_THREADING_C)
  37:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  38:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #include "mbedtls/threading.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  40:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if defined(MBEDTLS_HAVE_TIME_DATE) && !defined(MBEDTLS_PLATFORM_GMTIME_R_ALT)
  41:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  42:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if !defined(_WIN32) && (defined(unix) || \
  43:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     defined(__unix) || defined(__unix__) || (defined(__APPLE__) && \
  44:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     defined(__MACH__)))
  45:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #include <unistd.h>
  46:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif /* !_WIN32 && (unix || __unix || __unix__ ||
  47:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         * (__APPLE__ && __MACH__)) */
  48:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  49:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if !( ( defined(_POSIX_VERSION) && _POSIX_VERSION >= 200809L ) ||     \
  50:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****        ( defined(_POSIX_THREAD_SAFE_FUNCTIONS ) &&                     \
  51:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****          _POSIX_THREAD_SAFE_FUNCTIONS >= 20112L ) )
  52:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** /*
  53:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * This is a convenience shorthand macro to avoid checking the long
  54:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * preprocessor conditions above. Ideally, we could expose this macro in
  55:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * platform_util.h and simply use it in platform_util.c, threading.c and
  56:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * threading.h. However, this macro is not part of the Mbed TLS public API, so
  57:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * we keep it private by only defining it in this file
  58:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  */
  59:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  60:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if ! ( defined(_WIN32) && !defined(EFIX64) && !defined(EFI32) )
  61:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #define THREADING_USE_GMTIME
  62:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif /* ! ( defined(_WIN32) && !defined(EFIX64) && !defined(EFI32) ) */
  63:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  64:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif /* !( ( defined(_POSIX_VERSION) && _POSIX_VERSION >= 200809L ) ||     \
  65:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****              ( defined(_POSIX_THREAD_SAFE_FUNCTIONS ) &&                     \
  66:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****                 _POSIX_THREAD_SAFE_FUNCTIONS >= 20112L ) ) */
  67:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  68:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif /* MBEDTLS_HAVE_TIME_DATE && !MBEDTLS_PLATFORM_GMTIME_R_ALT */
  69:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  70:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if defined(MBEDTLS_THREADING_PTHREAD)
  71:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** static void threading_mutex_init_pthread( mbedtls_threading_mutex_t *mutex )
  72:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
  73:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     if( mutex == NULL )
  74:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         return;
  75:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  76:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mutex->is_valid = pthread_mutex_init( &mutex->mutex, NULL ) == 0;
  77:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
  78:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** static void threading_mutex_free_pthread( mbedtls_threading_mutex_t *mutex )
  80:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     if( mutex == NULL || !mutex->is_valid )
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         return;
  83:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  84:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     (void) pthread_mutex_destroy( &mutex->mutex );
  85:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mutex->is_valid = 0;
  86:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
  87:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  88:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** static int threading_mutex_lock_pthread( mbedtls_threading_mutex_t *mutex )
  89:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
  90:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     if( mutex == NULL || ! mutex->is_valid )
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         return( MBEDTLS_ERR_THREADING_BAD_INPUT_DATA );
  92:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  93:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     if( pthread_mutex_lock( &mutex->mutex ) != 0 )
  94:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         return( MBEDTLS_ERR_THREADING_MUTEX_ERROR );
  95:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  96:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     return( 0 );
  97:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
  98:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
  99:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** static int threading_mutex_unlock_pthread( mbedtls_threading_mutex_t *mutex )
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
 101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     if( mutex == NULL || ! mutex->is_valid )
 102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         return( MBEDTLS_ERR_THREADING_BAD_INPUT_DATA );
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 104:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     if( pthread_mutex_unlock( &mutex->mutex ) != 0 )
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****         return( MBEDTLS_ERR_THREADING_MUTEX_ERROR );
 106:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 107:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     return( 0 );
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 110:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** void (*mbedtls_mutex_init)( mbedtls_threading_mutex_t * ) = threading_mutex_init_pthread;
 111:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** void (*mbedtls_mutex_free)( mbedtls_threading_mutex_t * ) = threading_mutex_free_pthread;
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** int (*mbedtls_mutex_lock)( mbedtls_threading_mutex_t * ) = threading_mutex_lock_pthread;
 113:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** int (*mbedtls_mutex_unlock)( mbedtls_threading_mutex_t * ) = threading_mutex_unlock_pthread;
 114:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** /*
 116:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * With phtreads we can statically initialize mutexes
 117:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  */
 118:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #define MUTEX_INIT  = { PTHREAD_MUTEX_INITIALIZER, 1 }
 119:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 120:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif /* MBEDTLS_THREADING_PTHREAD */
 121:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 122:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if defined(MBEDTLS_THREADING_ALT)
 123:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** static int threading_mutex_fail( mbedtls_threading_mutex_t *mutex )
 124:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
  25              		.loc 1 124 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 125:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     ((void) mutex );
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     return( MBEDTLS_ERR_THREADING_BAD_INPUT_DATA );
 127:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
  31              		.loc 1 127 0
  32 0000 1B00E0E3 		mvn	r0, #27
  33              	.LVL1:
  34 0004 1EFF2FE1 		bx	lr
  35              		.cfi_endproc
  36              	.LFE0:
  38              		.section	.text.threading_mutex_dummy,"ax",%progbits
  39              		.align	2
  40              		.syntax unified
  41              		.arm
  42              		.fpu neon
  44              	threading_mutex_dummy:
  45              	.LFB1:
 128:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** static void threading_mutex_dummy( mbedtls_threading_mutex_t *mutex )
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
  46              		.loc 1 129 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51              	.LVL2:
  52 0000 1EFF2FE1 		bx	lr
  53              		.cfi_endproc
  54              	.LFE1:
  56              		.section	.text.mbedtls_threading_set_alt,"ax",%progbits
  57              		.align	2
  58              		.global	mbedtls_threading_set_alt
  59              		.syntax unified
  60              		.arm
  61              		.fpu neon
  63              	mbedtls_threading_set_alt:
  64              	.LFB2:
 130:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     ((void) mutex );
 131:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     return;
 132:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
 133:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 134:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** void (*mbedtls_mutex_init)( mbedtls_threading_mutex_t * ) = threading_mutex_dummy;
 135:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** void (*mbedtls_mutex_free)( mbedtls_threading_mutex_t * ) = threading_mutex_dummy;
 136:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** int (*mbedtls_mutex_lock)( mbedtls_threading_mutex_t * ) = threading_mutex_fail;
 137:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** int (*mbedtls_mutex_unlock)( mbedtls_threading_mutex_t * ) = threading_mutex_fail;
 138:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 139:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** /*
 140:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * Set functions pointers and initialize global mutexes
 141:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  */
 142:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** void mbedtls_threading_set_alt( void (*mutex_init)( mbedtls_threading_mutex_t * ),
 143:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****                        void (*mutex_free)( mbedtls_threading_mutex_t * ),
 144:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****                        int (*mutex_lock)( mbedtls_threading_mutex_t * ),
 145:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****                        int (*mutex_unlock)( mbedtls_threading_mutex_t * ) )
 146:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
  65              		.loc 1 146 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70              	.LVL3:
 147:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mbedtls_mutex_init = mutex_init;
  71              		.loc 1 147 0
  72 0000 1CC09FE5 		ldr	ip, .L4
  73 0004 00008CE5 		str	r0, [ip]
 148:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mbedtls_mutex_free = mutex_free;
  74              		.loc 1 148 0
  75 0008 18009FE5 		ldr	r0, .L4+4
  76              	.LVL4:
  77 000c 001080E5 		str	r1, [r0]
 149:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mbedtls_mutex_lock = mutex_lock;
  78              		.loc 1 149 0
  79 0010 14109FE5 		ldr	r1, .L4+8
  80              	.LVL5:
  81 0014 002081E5 		str	r2, [r1]
 150:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mbedtls_mutex_unlock = mutex_unlock;
  82              		.loc 1 150 0
  83 0018 10209FE5 		ldr	r2, .L4+12
  84              	.LVL6:
  85 001c 003082E5 		str	r3, [r2]
  86 0020 1EFF2FE1 		bx	lr
  87              	.L5:
  88              		.align	2
  89              	.L4:
  90 0024 00000000 		.word	.LANCHOR0
  91 0028 00000000 		.word	.LANCHOR1
  92 002c 00000000 		.word	.LANCHOR2
  93 0030 00000000 		.word	.LANCHOR3
  94              		.cfi_endproc
  95              	.LFE2:
  97              		.section	.text.mbedtls_threading_free_alt,"ax",%progbits
  98              		.align	2
  99              		.global	mbedtls_threading_free_alt
 100              		.syntax unified
 101              		.arm
 102              		.fpu neon
 104              	mbedtls_threading_free_alt:
 105              	.LFB3:
 151:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if defined(MBEDTLS_FS_IO)
 153:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mbedtls_mutex_init( &mbedtls_threading_readdir_mutex );
 154:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif
 155:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #if defined(THREADING_USE_GMTIME)
 156:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****     mbedtls_mutex_init( &mbedtls_threading_gmtime_mutex );
 157:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** #endif
 158:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** }
 159:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** 
 160:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** /*
 161:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  * Free global mutexes
 162:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c ****  */
 163:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** void mbedtls_threading_free_alt( void )
 164:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\threading.c **** {
 106              		.loc 1 164 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 1EFF2FE1 		bx	lr
 112              		.cfi_endproc
 113              	.LFE3:
 115              		.global	mbedtls_mutex_unlock
 116              		.global	mbedtls_mutex_lock
 117              		.global	mbedtls_mutex_free
 118              		.global	mbedtls_mutex_init
 119              		.section	.data.mbedtls_mutex_free,"aw",%progbits
 120              		.align	2
 121              		.set	.LANCHOR1,. + 0
 124              	mbedtls_mutex_free:
 125 0000 00000000 		.word	threading_mutex_dummy
 126              		.section	.data.mbedtls_mutex_init,"aw",%progbits
 127              		.align	2
 128              		.set	.LANCHOR0,. + 0
 131              	mbedtls_mutex_init:
 132 0000 00000000 		.word	threading_mutex_dummy
 133              		.section	.data.mbedtls_mutex_lock,"aw",%progbits
 134              		.align	2
 135              		.set	.LANCHOR2,. + 0
 138              	mbedtls_mutex_lock:
 139 0000 00000000 		.word	threading_mutex_fail
 140              		.section	.data.mbedtls_mutex_unlock,"aw",%progbits
 141              		.align	2
 142              		.set	.LANCHOR3,. + 0
 145              	mbedtls_mutex_unlock:
 146 0000 00000000 		.word	threading_mutex_fail
 147              		.text
 148              	.Letext0:
 149              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 150              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 151              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 152              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 153              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 154              		.file 7 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 155              		.file 8 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/queue.h"
 156              		.file 9 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/semphr.h"
 157              		.file 10 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/threading_alt.h"
 158              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mbedtls\\include/mbedtls/thre
DEFINED SYMBOLS
                            *ABS*:00000000 threading.c
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:17     .text.threading_mutex_fail:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:22     .text.threading_mutex_fail:00000000 threading_mutex_fail
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:39     .text.threading_mutex_dummy:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:44     .text.threading_mutex_dummy:00000000 threading_mutex_dummy
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:57     .text.mbedtls_threading_set_alt:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:63     .text.mbedtls_threading_set_alt:00000000 mbedtls_threading_set_alt
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:90     .text.mbedtls_threading_set_alt:00000024 $d
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:98     .text.mbedtls_threading_free_alt:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:104    .text.mbedtls_threading_free_alt:00000000 mbedtls_threading_free_alt
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:145    .data.mbedtls_mutex_unlock:00000000 mbedtls_mutex_unlock
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:138    .data.mbedtls_mutex_lock:00000000 mbedtls_mutex_lock
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:124    .data.mbedtls_mutex_free:00000000 mbedtls_mutex_free
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:131    .data.mbedtls_mutex_init:00000000 mbedtls_mutex_init
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:120    .data.mbedtls_mutex_free:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:127    .data.mbedtls_mutex_init:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:134    .data.mbedtls_mutex_lock:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccKYGePb.s:141    .data.mbedtls_mutex_unlock:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
