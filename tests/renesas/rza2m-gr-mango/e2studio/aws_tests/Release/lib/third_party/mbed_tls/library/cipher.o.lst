   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"cipher.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.mbedtls_cipher_get_block_size,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	mbedtls_cipher_get_block_size:
  23              	.LFB0:
  24              		.file 1 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mbedtls\\include/mbedtls/ciphe
   1:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
   2:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \file cipher.h
   3:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
   4:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief This file contains an abstraction interface for use with the cipher
   5:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * primitives provided by the library. It provides a common interface to all of
   6:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * the available cipher operations.
   7:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
   8:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \author Adriaan de Jong <dejong@fox-it.com>
   9:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
  10:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /*
  11:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  Copyright (C) 2006-2018, Arm Limited (or its affiliates), All Rights Reserved
  12:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  SPDX-License-Identifier: Apache-2.0
  13:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
  14:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
  15:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  not use this file except in compliance with the License.
  16:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  You may obtain a copy of the License at
  17:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
  18:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  http://www.apache.org/licenses/LICENSE-2.0
  19:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
  20:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  Unless required by applicable law or agreed to in writing, software
  21:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  22:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  23:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  See the License for the specific language governing permissions and
  24:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  limitations under the License.
  25:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
  26:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *  This file is part of Mbed TLS (https://tls.mbed.org)
  27:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
  28:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  29:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #ifndef MBEDTLS_CIPHER_H
  30:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_H
  31:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  32:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if !defined(MBEDTLS_CONFIG_FILE)
  33:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #include "config.h"
  34:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #else
  35:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #include MBEDTLS_CONFIG_FILE
  36:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
  37:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  38:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #include <stddef.h>
  39:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  40:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
  41:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_MODE_AEAD
  42:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
  43:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  44:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if defined(MBEDTLS_CIPHER_MODE_CBC)
  45:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_MODE_WITH_PADDING
  46:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
  47:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  48:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if defined(MBEDTLS_ARC4_C) || defined(MBEDTLS_CIPHER_NULL_CIPHER) || \
  49:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     defined(MBEDTLS_CHACHA20_C)
  50:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_MODE_STREAM
  51:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
  52:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  53:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if ( defined(__ARMCC_VERSION) || defined(_MSC_VER) ) && \
  54:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     !defined(inline) && !defined(__cplusplus)
  55:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define inline __inline
  56:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
  57:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  58:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE  -0x6080  /**< The selected feature is not available
  59:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA       -0x6100  /**< Bad input parameters. */
  60:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_ALLOC_FAILED         -0x6180  /**< Failed to allocate memory. */
  61:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_INVALID_PADDING      -0x6200  /**< Input data contains invalid padding a
  62:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED  -0x6280  /**< Decryption of block requires a full b
  63:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_AUTH_FAILED          -0x6300  /**< Authentication failed (for AEAD modes
  64:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_INVALID_CONTEXT      -0x6380  /**< The context is invalid. For example, 
  65:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_ERR_CIPHER_HW_ACCEL_FAILED      -0x6400  /**< Cipher hardware accelerator failed. *
  66:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  67:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_VARIABLE_IV_LEN     0x01    /**< Cipher accepts IVs of variable length. */
  68:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_CIPHER_VARIABLE_KEY_LEN    0x02    /**< Cipher accepts keys of variable length. */
  69:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  70:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #ifdef __cplusplus
  71:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** extern "C" {
  72:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
  73:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  74:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
  75:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief     Supported cipher types.
  76:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
  77:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \warning   RC4 and DES are considered weak ciphers and their use
  78:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *            constitutes a security risk. Arm recommends considering stronger
  79:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *            ciphers instead.
  80:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
  81:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef enum {
  82:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_NONE = 0,  /**< Placeholder to mark the end of cipher ID lists. */
  83:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_NULL,      /**< The identity cipher, treated as a stream cipher. */
  84:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_AES,       /**< The AES cipher. */
  85:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_DES,       /**< The DES cipher. */
  86:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_3DES,      /**< The Triple DES cipher. */
  87:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_CAMELLIA,  /**< The Camellia cipher. */
  88:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_BLOWFISH,  /**< The Blowfish cipher. */
  89:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_ARC4,      /**< The RC4 cipher. */
  90:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_ARIA,      /**< The Aria cipher. */
  91:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ID_CHACHA20,  /**< The ChaCha20 cipher. */
  92:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_cipher_id_t;
  93:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
  94:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
  95:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief     Supported {cipher type, cipher mode} pairs.
  96:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
  97:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \warning   RC4 and DES are considered weak ciphers and their use
  98:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *            constitutes a security risk. Arm recommends considering stronger
  99:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *            ciphers instead.
 100:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 101:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef enum {
 102:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_NONE = 0,             /**< Placeholder to mark the end of cipher-pair lists. */
 103:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_NULL,                 /**< The identity stream cipher. */
 104:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_ECB,          /**< AES cipher with 128-bit ECB mode. */
 105:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_ECB,          /**< AES cipher with 192-bit ECB mode. */
 106:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_ECB,          /**< AES cipher with 256-bit ECB mode. */
 107:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CBC,          /**< AES cipher with 128-bit CBC mode. */
 108:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CBC,          /**< AES cipher with 192-bit CBC mode. */
 109:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CBC,          /**< AES cipher with 256-bit CBC mode. */
 110:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CFB128,       /**< AES cipher with 128-bit CFB128 mode. */
 111:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CFB128,       /**< AES cipher with 192-bit CFB128 mode. */
 112:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CFB128,       /**< AES cipher with 256-bit CFB128 mode. */
 113:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CTR,          /**< AES cipher with 128-bit CTR mode. */
 114:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CTR,          /**< AES cipher with 192-bit CTR mode. */
 115:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CTR,          /**< AES cipher with 256-bit CTR mode. */
 116:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_GCM,          /**< AES cipher with 128-bit GCM mode. */
 117:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_GCM,          /**< AES cipher with 192-bit GCM mode. */
 118:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_GCM,          /**< AES cipher with 256-bit GCM mode. */
 119:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_ECB,     /**< Camellia cipher with 128-bit ECB mode. */
 120:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_ECB,     /**< Camellia cipher with 192-bit ECB mode. */
 121:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_ECB,     /**< Camellia cipher with 256-bit ECB mode. */
 122:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CBC,     /**< Camellia cipher with 128-bit CBC mode. */
 123:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CBC,     /**< Camellia cipher with 192-bit CBC mode. */
 124:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CBC,     /**< Camellia cipher with 256-bit CBC mode. */
 125:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CFB128,  /**< Camellia cipher with 128-bit CFB128 mode. */
 126:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CFB128,  /**< Camellia cipher with 192-bit CFB128 mode. */
 127:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CFB128,  /**< Camellia cipher with 256-bit CFB128 mode. */
 128:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CTR,     /**< Camellia cipher with 128-bit CTR mode. */
 129:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CTR,     /**< Camellia cipher with 192-bit CTR mode. */
 130:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CTR,     /**< Camellia cipher with 256-bit CTR mode. */
 131:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_GCM,     /**< Camellia cipher with 128-bit GCM mode. */
 132:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_GCM,     /**< Camellia cipher with 192-bit GCM mode. */
 133:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_GCM,     /**< Camellia cipher with 256-bit GCM mode. */
 134:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_ECB,              /**< DES cipher with ECB mode. */
 135:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_CBC,              /**< DES cipher with CBC mode. */
 136:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE_ECB,          /**< DES cipher with EDE ECB mode. */
 137:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE_CBC,          /**< DES cipher with EDE CBC mode. */
 138:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE3_ECB,         /**< DES cipher with EDE3 ECB mode. */
 139:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_DES_EDE3_CBC,         /**< DES cipher with EDE3 CBC mode. */
 140:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_ECB,         /**< Blowfish cipher with ECB mode. */
 141:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_CBC,         /**< Blowfish cipher with CBC mode. */
 142:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_CFB64,       /**< Blowfish cipher with CFB64 mode. */
 143:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_BLOWFISH_CTR,         /**< Blowfish cipher with CTR mode. */
 144:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARC4_128,             /**< RC4 cipher with 128-bit mode. */
 145:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_CCM,          /**< AES cipher with 128-bit CCM mode. */
 146:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_CCM,          /**< AES cipher with 192-bit CCM mode. */
 147:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_CCM,          /**< AES cipher with 256-bit CCM mode. */
 148:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_128_CCM,     /**< Camellia cipher with 128-bit CCM mode. */
 149:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_192_CCM,     /**< Camellia cipher with 192-bit CCM mode. */
 150:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CAMELLIA_256_CCM,     /**< Camellia cipher with 256-bit CCM mode. */
 151:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_ECB,         /**< Aria cipher with 128-bit key and ECB mode. */
 152:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_ECB,         /**< Aria cipher with 192-bit key and ECB mode. */
 153:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_ECB,         /**< Aria cipher with 256-bit key and ECB mode. */
 154:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CBC,         /**< Aria cipher with 128-bit key and CBC mode. */
 155:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CBC,         /**< Aria cipher with 192-bit key and CBC mode. */
 156:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CBC,         /**< Aria cipher with 256-bit key and CBC mode. */
 157:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CFB128,      /**< Aria cipher with 128-bit key and CFB-128 mode. */
 158:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CFB128,      /**< Aria cipher with 192-bit key and CFB-128 mode. */
 159:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CFB128,      /**< Aria cipher with 256-bit key and CFB-128 mode. */
 160:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CTR,         /**< Aria cipher with 128-bit key and CTR mode. */
 161:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CTR,         /**< Aria cipher with 192-bit key and CTR mode. */
 162:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CTR,         /**< Aria cipher with 256-bit key and CTR mode. */
 163:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_GCM,         /**< Aria cipher with 128-bit key and GCM mode. */
 164:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_GCM,         /**< Aria cipher with 192-bit key and GCM mode. */
 165:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_GCM,         /**< Aria cipher with 256-bit key and GCM mode. */
 166:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_128_CCM,         /**< Aria cipher with 128-bit key and CCM mode. */
 167:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_192_CCM,         /**< Aria cipher with 192-bit key and CCM mode. */
 168:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_ARIA_256_CCM,         /**< Aria cipher with 256-bit key and CCM mode. */
 169:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_OFB,          /**< AES 128-bit cipher in OFB mode. */
 170:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_192_OFB,          /**< AES 192-bit cipher in OFB mode. */
 171:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_OFB,          /**< AES 256-bit cipher in OFB mode. */
 172:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_128_XTS,          /**< AES 128-bit cipher in XTS block mode. */
 173:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_AES_256_XTS,          /**< AES 256-bit cipher in XTS block mode. */
 174:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CHACHA20,             /**< ChaCha20 stream cipher. */
 175:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_CIPHER_CHACHA20_POLY1305,    /**< ChaCha20-Poly1305 AEAD cipher. */
 176:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_cipher_type_t;
 177:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 178:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /** Supported cipher modes. */
 179:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef enum {
 180:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_NONE = 0,               /**< None. */
 181:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_ECB,                    /**< The ECB cipher mode. */
 182:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_CBC,                    /**< The CBC cipher mode. */
 183:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_CFB,                    /**< The CFB cipher mode. */
 184:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_OFB,                    /**< The OFB cipher mode. */
 185:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_CTR,                    /**< The CTR cipher mode. */
 186:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_GCM,                    /**< The GCM cipher mode. */
 187:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_STREAM,                 /**< The stream cipher mode. */
 188:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_CCM,                    /**< The CCM cipher mode. */
 189:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_XTS,                    /**< The XTS cipher mode. */
 190:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_MODE_CHACHAPOLY,             /**< The ChaCha-Poly cipher mode. */
 191:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_cipher_mode_t;
 192:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 193:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /** Supported cipher padding types. */
 194:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef enum {
 195:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_PADDING_PKCS7 = 0,     /**< PKCS7 padding (default).        */
 196:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_PADDING_ONE_AND_ZEROS, /**< ISO/IEC 7816-4 padding.         */
 197:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_PADDING_ZEROS_AND_LEN, /**< ANSI X.923 padding.             */
 198:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_PADDING_ZEROS,         /**< Zero padding (not reversible). */
 199:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_PADDING_NONE,          /**< Never pad (full blocks only).   */
 200:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_cipher_padding_t;
 201:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 202:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /** Type of operation. */
 203:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef enum {
 204:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_OPERATION_NONE = -1,
 205:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_DECRYPT = 0,
 206:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_ENCRYPT,
 207:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_operation_t;
 208:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 209:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** enum {
 210:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Undefined key length. */
 211:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_NONE = 0,
 212:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Key length, in bits (including parity), for DES keys. */
 213:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_DES  = 64,
 214:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Key length in bits, including parity, for DES in two-key EDE. */
 215:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_DES_EDE = 128,
 216:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Key length in bits, including parity, for DES in three-key EDE. */
 217:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     MBEDTLS_KEY_LENGTH_DES_EDE3 = 192,
 218:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** };
 219:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 220:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /** Maximum length of any IV, in Bytes. */
 221:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_MAX_IV_LENGTH      16
 222:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /** Maximum block size of any cipher, in Bytes. */
 223:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #define MBEDTLS_MAX_BLOCK_LENGTH   16
 224:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 225:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 226:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * Base cipher information (opaque struct).
 227:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 228:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef struct mbedtls_cipher_base_t mbedtls_cipher_base_t;
 229:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 230:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 231:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * CMAC context (opaque struct).
 232:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 233:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef struct mbedtls_cmac_context_t mbedtls_cmac_context_t;
 234:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 235:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 236:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * Cipher information. Allows calling cipher functions
 237:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * in a generic way.
 238:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 239:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef struct mbedtls_cipher_info_t
 240:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** {
 241:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Full cipher identifier. For example,
 242:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * MBEDTLS_CIPHER_AES_256_CBC.
 243:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      */
 244:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     mbedtls_cipher_type_t type;
 245:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 246:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** The cipher mode. For example, MBEDTLS_MODE_CBC. */
 247:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     mbedtls_cipher_mode_t mode;
 248:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 249:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** The cipher key length, in bits. This is the
 250:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * default length for variable sized ciphers.
 251:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * Includes parity bits for ciphers like DES.
 252:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      */
 253:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     unsigned int key_bitlen;
 254:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 255:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Name of the cipher. */
 256:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     const char * name;
 257:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 258:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** IV or nonce size, in Bytes.
 259:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * For ciphers that accept variable IV sizes,
 260:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * this is the recommended size.
 261:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      */
 262:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     unsigned int iv_size;
 263:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 264:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Bitflag comprised of MBEDTLS_CIPHER_VARIABLE_IV_LEN and
 265:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      *  MBEDTLS_CIPHER_VARIABLE_KEY_LEN indicating whether the
 266:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      *  cipher supports variable IV or variable key sizes, respectively.
 267:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      */
 268:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     int flags;
 269:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 270:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** The block size, in Bytes. */
 271:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     unsigned int block_size;
 272:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 273:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Struct for base cipher information and functions. */
 274:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     const mbedtls_cipher_base_t *base;
 275:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 276:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_cipher_info_t;
 277:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 278:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 279:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * Generic cipher context.
 280:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 281:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** typedef struct mbedtls_cipher_context_t
 282:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** {
 283:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Information about the associated cipher. */
 284:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     const mbedtls_cipher_info_t *cipher_info;
 285:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 286:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Key length to use. */
 287:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     int key_bitlen;
 288:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 289:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Operation that the key of the context has been
 290:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * initialized for.
 291:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      */
 292:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     mbedtls_operation_t operation;
 293:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 294:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 295:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Padding functions to use, if relevant for
 296:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * the specific cipher mode.
 297:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      */
 298:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     void (*add_padding)( unsigned char *output, size_t olen, size_t data_len );
 299:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     int (*get_padding)( unsigned char *input, size_t ilen, size_t *data_len );
 300:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
 301:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 302:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Buffer for input that has not been processed yet. */
 303:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     unsigned char unprocessed_data[MBEDTLS_MAX_BLOCK_LENGTH];
 304:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 305:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Number of Bytes that have not been processed yet. */
 306:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     size_t unprocessed_len;
 307:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 308:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** Current IV or NONCE_COUNTER for CTR-mode, data unit (or sector) number
 309:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****      * for XTS-mode. */
 310:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     unsigned char iv[MBEDTLS_MAX_IV_LENGTH];
 311:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 312:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** IV size in Bytes, for ciphers with variable-length IVs. */
 313:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     size_t iv_size;
 314:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 315:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** The cipher-specific context. */
 316:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     void *cipher_ctx;
 317:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 318:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #if defined(MBEDTLS_CMAC_C)
 319:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     /** CMAC-specific context. */
 320:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     mbedtls_cmac_context_t *cmac_ctx;
 321:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** #endif
 322:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** } mbedtls_cipher_context_t;
 323:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 324:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 325:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief This function retrieves the list of ciphers supported by the generic
 326:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * cipher module.
 327:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 328:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return      A statically-allocated array of ciphers. The last entry
 329:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *              is zero.
 330:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 331:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** const int *mbedtls_cipher_list( void );
 332:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 333:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 334:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief               This function retrieves the cipher-information
 335:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      structure associated with the given cipher name.
 336:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 337:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param cipher_name   Name of the cipher to search for.
 338:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 339:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              The cipher information structure associated with the
 340:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      given \p cipher_name.
 341:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              NULL if the associated cipher information is not found.
 342:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 343:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_string( const char *cipher_name );
 344:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 345:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 346:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief               This function retrieves the cipher-information
 347:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      structure associated with the given cipher type.
 348:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 349:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param cipher_type   Type of the cipher to search for.
 350:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 351:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              The cipher information structure associated with the
 352:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      given \p cipher_type.
 353:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              NULL if the associated cipher information is not found.
 354:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 355:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_type( const mbedtls_cipher_type_t cipher_type
 356:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 357:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 358:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief               This function retrieves the cipher-information
 359:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      structure associated with the given cipher ID,
 360:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      key size and mode.
 361:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 362:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param cipher_id     The ID of the cipher to search for. For example,
 363:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      #MBEDTLS_CIPHER_ID_AES.
 364:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param key_bitlen    The length of the key in bits.
 365:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param mode          The cipher mode. For example, #MBEDTLS_MODE_CBC.
 366:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 367:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              The cipher information structure associated with the
 368:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      given \p cipher_id.
 369:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              NULL if the associated cipher information is not found.
 370:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 371:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_values( const mbedtls_cipher_id_t cipher_id,
 372:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****                                               int key_bitlen,
 373:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****                                               const mbedtls_cipher_mode_t mode );
 374:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 375:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 376:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief               This function initializes a \p cipher_context as NONE.
 377:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 378:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** void mbedtls_cipher_init( mbedtls_cipher_context_t *ctx );
 379:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 380:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 381:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief               This function frees and clears the cipher-specific
 382:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      context of \p ctx. Freeing \p ctx itself remains the
 383:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      responsibility of the caller.
 384:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 385:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** void mbedtls_cipher_free( mbedtls_cipher_context_t *ctx );
 386:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 387:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 388:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 389:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief               This function initializes and fills the cipher-context
 390:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      structure with the appropriate values. It also clears
 391:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      the structure.
 392:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 393:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param ctx           The context to initialize. May not be NULL.
 394:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param cipher_info   The cipher to use.
 395:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 396:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              \c 0 on success.
 397:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              #MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA on
 398:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      parameter-verification failure.
 399:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return              #MBEDTLS_ERR_CIPHER_ALLOC_FAILED if allocation of the
 400:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *                      cipher-specific context fails.
 401:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 402:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \internal Currently, the function also clears the structure.
 403:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * In future versions, the caller will be required to call
 404:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * mbedtls_cipher_init() on the structure first.
 405:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 406:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** int mbedtls_cipher_setup( mbedtls_cipher_context_t *ctx, const mbedtls_cipher_info_t *cipher_info )
 407:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 408:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 409:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief        This function returns the block size of the given cipher.
 410:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 411:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param ctx    The context of the cipher. Must be initialized.
 412:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 413:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return       The size of the blocks of the cipher.
 414:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return       0 if \p ctx has not been initialized.
 415:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 416:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** static inline unsigned int mbedtls_cipher_get_block_size( const mbedtls_cipher_context_t *ctx )
 417:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** {
  25              		.loc 1 417 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 418:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     if( NULL == ctx || NULL == ctx->cipher_info )
  31              		.loc 1 418 0
  32 0000 000050E3 		cmp	r0, #0
  33 0004 1EFF2F01 		bxeq	lr
  34              		.loc 1 418 0 is_stmt 0 discriminator 1
  35 0008 000090E5 		ldr	r0, [r0]
  36              	.LVL1:
  37 000c 000050E3 		cmp	r0, #0
 419:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****         return 0;
 420:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 421:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     return ctx->cipher_info->block_size;
  38              		.loc 1 421 0 is_stmt 1 discriminator 1
  39 0010 14009015 		ldrne	r0, [r0, #20]
 422:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** }
  40              		.loc 1 422 0 discriminator 1
  41 0014 1EFF2FE1 		bx	lr
  42              		.cfi_endproc
  43              	.LFE0:
  45              		.section	.text.add_pkcs_padding,"ax",%progbits
  46              		.align	2
  47              		.syntax unified
  48              		.arm
  49              		.fpu neon
  51              	add_pkcs_padding:
  52              	.LFB21:
  53              		.file 2 "D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library/cipher.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /**
   2:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * \file cipher.c
   3:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
   4:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * \brief Generic cipher wrapper for mbed TLS
   5:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
   6:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * \author Adriaan de Jong <dejong@fox-it.com>
   7:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
   8:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
   9:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  SPDX-License-Identifier: Apache-2.0
  10:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
  11:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  Licensed under the Apache License, Version 2.0 (the "License"); you may
  12:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  not use this file except in compliance with the License.
  13:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  You may obtain a copy of the License at
  14:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  http://www.apache.org/licenses/LICENSE-2.0
  16:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
  17:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  Unless required by applicable law or agreed to in writing, software
  18:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  19:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  20:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  See the License for the specific language governing permissions and
  21:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  limitations under the License.
  22:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
  23:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *  This file is part of mbed TLS (https://tls.mbed.org)
  24:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if !defined(MBEDTLS_CONFIG_FILE)
  27:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/config.h"
  28:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #else
  29:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include MBEDTLS_CONFIG_FILE
  30:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  31:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  32:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_C)
  33:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  34:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/cipher.h"
  35:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/cipher_internal.h"
  36:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/platform_util.h"
  37:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  38:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include <stdlib.h>
  39:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include <string.h>
  40:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  41:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
  42:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/chachapoly.h"
  43:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  44:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  45:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
  46:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/gcm.h"
  47:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  48:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  49:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CCM_C)
  50:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/ccm.h"
  51:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  52:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  53:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHA20_C)
  54:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/chacha20.h"
  55:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  56:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  57:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CMAC_C)
  58:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/cmac.h"
  59:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  60:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  61:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_PLATFORM_C)
  62:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #include "mbedtls/platform.h"
  63:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #else
  64:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #define mbedtls_calloc calloc
  65:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #define mbedtls_free   free
  66:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
  67:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  68:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
  69:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /* Compare the contents of two buffers in constant time.
  70:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * Returns 0 if the contents are bitwise identical, otherwise returns
  71:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * a non-zero value.
  72:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * This is currently only used by GCM and ChaCha20+Poly1305.
  73:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
  74:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int mbedtls_constant_time_memcmp( const void *v1, const void *v2, size_t len )
  75:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
  76:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const unsigned char *p1 = (const unsigned char*) v1;
  77:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const unsigned char *p2 = (const unsigned char*) v2;
  78:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
  79:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char diff;
  80:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( diff = 0, i = 0; i < len; i++ )
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         diff |= p1[i] ^ p2[i];
  83:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  84:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return (int)diff;
  85:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
  86:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
  87:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  88:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int supported_init = 0;
  89:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  90:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** const int *mbedtls_cipher_list( void )
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
  92:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
  93:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int *type;
  94:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
  95:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ! supported_init )
  96:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
  97:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         def = mbedtls_cipher_definitions;
  98:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         type = mbedtls_cipher_supported;
  99:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         while( def->type != 0 )
 101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             *type++ = (*def++).type;
 102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *type = 0;
 104:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         supported_init = 1;
 106:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 107:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 108:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( mbedtls_cipher_supported );
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 110:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 111:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_type( const mbedtls_cipher_type_t cipher_type
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 113:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 114:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( def = mbedtls_cipher_definitions; def->info != NULL; def++ )
 116:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( def->type == cipher_type )
 117:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( def->info );
 118:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 119:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( NULL );
 120:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 121:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 122:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_string( const char *cipher_name )
 123:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 124:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 125:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == cipher_name )
 127:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( NULL );
 128:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( def = mbedtls_cipher_definitions; def->info != NULL; def++ )
 130:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( !  strcmp( def->info->name, cipher_name ) )
 131:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( def->info );
 132:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 133:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( NULL );
 134:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 135:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 136:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** const mbedtls_cipher_info_t *mbedtls_cipher_info_from_values( const mbedtls_cipher_id_t cipher_id,
 137:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                               int key_bitlen,
 138:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                               const mbedtls_cipher_mode_t mode )
 139:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 140:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 141:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 142:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( def = mbedtls_cipher_definitions; def->info != NULL; def++ )
 143:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( def->info->base->cipher == cipher_id &&
 144:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             def->info->key_bitlen == (unsigned) key_bitlen &&
 145:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             def->info->mode == mode )
 146:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( def->info );
 147:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 148:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( NULL );
 149:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 150:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 151:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** void mbedtls_cipher_init( mbedtls_cipher_context_t *ctx )
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 153:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     memset( ctx, 0, sizeof( mbedtls_cipher_context_t ) );
 154:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 155:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 156:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** void mbedtls_cipher_free( mbedtls_cipher_context_t *ctx )
 157:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 158:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx == NULL )
 159:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return;
 160:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 161:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CMAC_C)
 162:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cmac_ctx )
 163:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 164:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****        mbedtls_platform_zeroize( ctx->cmac_ctx,
 165:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                  sizeof( mbedtls_cmac_context_t ) );
 166:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****        mbedtls_free( ctx->cmac_ctx );
 167:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 168:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 169:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 170:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_ctx )
 171:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->cipher_info->base->ctx_free_func( ctx->cipher_ctx );
 172:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 173:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     mbedtls_platform_zeroize( ctx, sizeof(mbedtls_cipher_context_t) );
 174:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 175:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 176:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_setup( mbedtls_cipher_context_t *ctx, const mbedtls_cipher_info_t *cipher_info )
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 178:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == cipher_info || NULL == ctx )
 179:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 180:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 181:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     memset( ctx, 0, sizeof( mbedtls_cipher_context_t ) );
 182:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 183:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ( ctx->cipher_ctx = cipher_info->base->ctx_alloc_func() ) )
 184:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_ALLOC_FAILED );
 185:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 186:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->cipher_info = cipher_info;
 187:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 188:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 189:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /*
 190:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****      * Ignore possible errors caused by a cipher mode that doesn't use padding
 191:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****      */
 192:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_PKCS7)
 193:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     (void) mbedtls_cipher_set_padding_mode( ctx, MBEDTLS_PADDING_PKCS7 );
 194:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #else
 195:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     (void) mbedtls_cipher_set_padding_mode( ctx, MBEDTLS_PADDING_NONE );
 196:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 197:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_WITH_PADDING */
 198:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 199:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 200:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 201:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 202:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_setkey( mbedtls_cipher_context_t *ctx, const unsigned char *key,
 203:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         int key_bitlen, const mbedtls_operation_t operation )
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 206:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 207:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 208:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ( ctx->cipher_info->flags & MBEDTLS_CIPHER_VARIABLE_KEY_LEN ) == 0 &&
 209:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         (int) ctx->cipher_info->key_bitlen != key_bitlen )
 210:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 211:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 212:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 213:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 214:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->key_bitlen = key_bitlen;
 215:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->operation = operation;
 216:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 217:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /*
 218:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****      * For OFB, CFB and CTR mode always use the encryption key schedule
 219:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****      */
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_ENCRYPT == operation ||
 221:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CFB == ctx->cipher_info->mode ||
 222:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_OFB == ctx->cipher_info->mode ||
 223:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CTR == ctx->cipher_info->mode )
 224:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 225:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return ctx->cipher_info->base->setkey_enc_func( ctx->cipher_ctx, key,
 226:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->key_bitlen );
 227:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 228:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 229:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_DECRYPT == operation )
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return ctx->cipher_info->base->setkey_dec_func( ctx->cipher_ctx, key,
 231:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->key_bitlen );
 232:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 233:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 234:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 235:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 236:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_set_iv( mbedtls_cipher_context_t *ctx,
 237:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                    const unsigned char *iv, size_t iv_len )
 238:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 239:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t actual_iv_size;
 240:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 241:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info || NULL == iv )
 242:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 243:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 244:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /* avoid buffer overflow in ctx->iv */
 245:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( iv_len > MBEDTLS_MAX_IV_LENGTH )
 246:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 247:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 248:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ( ctx->cipher_info->flags & MBEDTLS_CIPHER_VARIABLE_IV_LEN ) != 0 )
 249:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         actual_iv_size = iv_len;
 250:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     else
 251:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 252:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         actual_iv_size = ctx->cipher_info->iv_size;
 253:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 254:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* avoid reading past the end of input buffer */
 255:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( actual_iv_size > iv_len )
 256:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 257:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 258:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 259:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHA20_C)
 260:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( ctx->cipher_info->type == MBEDTLS_CIPHER_CHACHA20 )
 261:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 262:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( 0 != mbedtls_chacha20_starts( (mbedtls_chacha20_context*)ctx->cipher_ctx,
 263:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                            iv,
 264:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                            0U ) ) /* Initial counter value */
 265:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 266:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 267:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 268:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 269:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 270:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 271:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     memcpy( ctx->iv, iv, actual_iv_size );
 272:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->iv_size = actual_iv_size;
 273:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 274:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 275:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 276:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 277:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_reset( mbedtls_cipher_context_t *ctx )
 278:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 280:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 281:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 282:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->unprocessed_len = 0;
 283:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 284:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 285:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 286:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 287:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
 288:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_update_ad( mbedtls_cipher_context_t *ctx,
 289:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                       const unsigned char *ad, size_t ad_len )
 290:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 291:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 292:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 293:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 294:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 295:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 296:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 297:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_gcm_starts( (mbedtls_gcm_context *) ctx->cipher_ctx, ctx->operation,
 298:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                            ctx->iv, ctx->iv_size, ad, ad_len );
 299:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 300:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 301:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 302:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 303:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if (MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
 304:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 305:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         int result;
 306:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         mbedtls_chachapoly_mode_t mode;
 307:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 308:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         mode = ( ctx->operation == MBEDTLS_ENCRYPT )
 309:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ? MBEDTLS_CHACHAPOLY_ENCRYPT
 310:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 : MBEDTLS_CHACHAPOLY_DECRYPT;
 311:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 312:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         result = mbedtls_chachapoly_starts( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 313:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                         ctx->iv,
 314:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                         mode );
 315:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( result != 0 )
 316:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( result );
 317:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 318:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_chachapoly_update_aad( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 319:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                           ad, ad_len );
 320:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 321:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 322:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 323:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 324:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 325:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
 326:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 327:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_update( mbedtls_cipher_context_t *ctx, const unsigned char *input,
 328:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                    size_t ilen, unsigned char *output, size_t *olen )
 329:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 330:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int ret;
 331:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t block_size = 0;
 332:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 333:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info || NULL == olen )
 334:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 335:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 336:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 337:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 338:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *olen = 0;
 339:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     block_size = mbedtls_cipher_get_block_size( ctx );
 340:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 341:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_ECB )
 342:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 343:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ilen != block_size )
 344:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 345:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 346:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 347:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 348:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->ecb_func( ctx->cipher_ctx,
 349:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, input, output ) ) )
 350:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 351:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 352:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 353:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 354:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 355:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 356:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 357:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 358:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_GCM )
 359:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 360:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 361:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_gcm_update( (mbedtls_gcm_context *) ctx->cipher_ctx, ilen, input,
 362:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                            output );
 363:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 364:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 365:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 366:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 367:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( ctx->cipher_info->type == MBEDTLS_CIPHER_CHACHA20_POLY1305 )
 368:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 369:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 370:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_chachapoly_update( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 371:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                       ilen, input, output );
 372:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 373:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 374:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 375:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( 0 == block_size )
 376:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 377:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return MBEDTLS_ERR_CIPHER_INVALID_CONTEXT;
 378:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 379:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 380:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( input == output &&
 381:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****        ( ctx->unprocessed_len != 0 || ilen % block_size ) )
 382:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 383:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 384:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 385:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 386:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CBC)
 387:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_CBC )
 388:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 389:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         size_t copy_len = 0;
 390:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 391:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /*
 392:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          * If there is not enough data for a full block, cache it.
 393:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          */
 394:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ( ctx->operation == MBEDTLS_DECRYPT && NULL != ctx->add_padding &&
 395:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen <= block_size - ctx->unprocessed_len ) ||
 396:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ( ctx->operation == MBEDTLS_DECRYPT && NULL == ctx->add_padding &&
 397:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen < block_size - ctx->unprocessed_len ) ||
 398:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              ( ctx->operation == MBEDTLS_ENCRYPT &&
 399:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen < block_size - ctx->unprocessed_len ) )
 400:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 401:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             memcpy( &( ctx->unprocessed_data[ctx->unprocessed_len] ), input,
 402:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ilen );
 403:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 404:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ctx->unprocessed_len += ilen;
 405:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( 0 );
 406:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 407:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 408:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /*
 409:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          * Process cached data first
 410:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          */
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ctx->unprocessed_len )
 412:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 413:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             copy_len = block_size - ctx->unprocessed_len;
 414:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 415:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             memcpy( &( ctx->unprocessed_data[ctx->unprocessed_len] ), input,
 416:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     copy_len );
 417:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 418:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( 0 != ( ret = ctx->cipher_info->base->cbc_func( ctx->cipher_ctx,
 419:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, block_size, ctx->iv,
 420:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->unprocessed_data, output ) ) )
 421:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             {
 422:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 return( ret );
 423:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             }
 424:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 425:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             *olen += block_size;
 426:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             output += block_size;
 427:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ctx->unprocessed_len = 0;
 428:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 429:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             input += copy_len;
 430:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ilen -= copy_len;
 431:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 432:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 433:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /*
 434:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          * Cache final, incomplete block
 435:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          */
 436:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ilen )
 437:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 438:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( 0 == block_size )
 439:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             {
 440:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 return MBEDTLS_ERR_CIPHER_INVALID_CONTEXT;
 441:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             }
 442:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 443:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             /* Encryption: only cache partial blocks
 444:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              * Decryption w/ padding: always keep at least one whole block
 445:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              * Decryption w/o padding: only cache partial blocks
 446:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              */
 447:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             copy_len = ilen % block_size;
 448:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( copy_len == 0 &&
 449:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation == MBEDTLS_DECRYPT &&
 450:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 NULL != ctx->add_padding)
 451:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             {
 452:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 copy_len = block_size;
 453:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             }
 454:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 455:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             memcpy( ctx->unprocessed_data, &( input[ilen - copy_len] ),
 456:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     copy_len );
 457:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 458:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ctx->unprocessed_len += copy_len;
 459:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ilen -= copy_len;
 460:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 461:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 462:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /*
 463:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          * Process remaining full blocks
 464:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          */
 465:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ilen )
 466:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 467:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( 0 != ( ret = ctx->cipher_info->base->cbc_func( ctx->cipher_ctx,
 468:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, ilen, ctx->iv, input, output ) ) )
 469:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             {
 470:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 return( ret );
 471:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             }
 472:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 473:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             *olen += ilen;
 474:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 475:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 476:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 477:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 478:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CBC */
 479:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 480:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CFB)
 481:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_CFB )
 482:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 483:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->cfb_func( ctx->cipher_ctx,
 484:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation, ilen, &ctx->unprocessed_len, ctx->iv,
 485:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 input, output ) ) )
 486:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 487:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 488:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 489:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 490:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 491:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 492:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 493:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 494:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CFB */
 495:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 496:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_OFB)
 497:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_OFB )
 498:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 499:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->ofb_func( ctx->cipher_ctx,
 500:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv, input, output ) ) )
 501:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 502:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 503:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 504:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 505:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 506:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 507:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 508:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 509:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_OFB */
 510:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 511:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CTR)
 512:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_CTR )
 513:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 514:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->ctr_func( ctx->cipher_ctx,
 515:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv,
 516:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->unprocessed_data, input, output ) ) )
 517:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 518:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 519:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 520:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 521:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 522:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 523:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 524:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 525:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CTR */
 526:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 527:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_XTS)
 528:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_XTS )
 529:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 530:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ctx->unprocessed_len > 0 ) {
 531:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             /* We can only process an entire data unit at a time. */
 532:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 533:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 534:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 535:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ret = ctx->cipher_info->base->xts_func( ctx->cipher_ctx,
 536:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation, ilen, ctx->iv, input, output );
 537:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ret != 0 )
 538:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 539:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 540:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 541:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 542:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 543:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 544:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 545:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 546:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_XTS */
 547:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 548:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_STREAM)
 549:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx->cipher_info->mode == MBEDTLS_MODE_STREAM )
 550:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 551:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->stream_func( ctx->cipher_ctx,
 552:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                     ilen, input, output ) ) )
 553:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 554:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 555:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 556:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 557:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 558:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 559:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 560:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 561:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_STREAM */
 562:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 563:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 564:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 565:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 566:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 567:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_PKCS7)
 568:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 569:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * PKCS7 (and PKCS5) padding: fill with ll bytes, with ll = padding_len
 570:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 571:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static void add_pkcs_padding( unsigned char *output, size_t output_len,
 572:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         size_t data_len )
 573:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
  54              		.loc 2 573 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL2:
 574:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
  60              		.loc 2 574 0
  61 0000 021041E0 		sub	r1, r1, r2
  62              	.LVL3:
 575:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char i;
 576:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 577:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 0; i < padding_len; i++ )
  63              		.loc 2 577 0
  64 0004 00C0A0E3 		mov	ip, #0
  65              	.LVL4:
  66              	.L6:
  67 0008 7C30EFE6 		uxtb	r3, ip
  68 000c 01C08CE2 		add	ip, ip, #1
  69              	.LVL5:
  70              		.loc 2 577 0 is_stmt 0 discriminator 1
  71 0010 030051E1 		cmp	r1, r3
  72 0014 0000008A 		bhi	.L7
 578:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i] = (unsigned char) padding_len;
 579:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
  73              		.loc 2 579 0 is_stmt 1
  74 0018 1EFF2FE1 		bx	lr
  75              	.L7:
 578:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i] = (unsigned char) padding_len;
  76              		.loc 2 578 0 discriminator 3
  77 001c 033080E0 		add	r3, r0, r3
  78              	.LVL6:
  79 0020 0210C3E7 		strb	r1, [r3, r2]
  80              	.LVL7:
  81 0024 F7FFFFEA 		b	.L6
  82              		.cfi_endproc
  83              	.LFE21:
  85              		.section	.text.get_pkcs_padding,"ax",%progbits
  86              		.align	2
  87              		.syntax unified
  88              		.arm
  89              		.fpu neon
  91              	get_pkcs_padding:
  92              	.LFB22:
 580:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 581:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int get_pkcs_padding( unsigned char *input, size_t input_len,
 582:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         size_t *data_len )
 583:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
  93              		.loc 2 583 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              	.LVL8:
 584:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i, pad_idx;
 585:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char padding_len, bad = 0;
 586:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 587:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
  98              		.loc 2 587 0
  99 0000 000052E3 		cmp	r2, #0
 100 0004 00005013 		cmpne	r0, #0
 101 0008 01C0A003 		moveq	ip, #1
 102 000c 00C0A013 		movne	ip, #0
 103 0010 1900000A 		beq	.L12
 588:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 589:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 590:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     padding_len = input[input_len - 1];
 104              		.loc 2 590 0
 105 0014 013080E0 		add	r3, r0, r1
 583:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i, pad_idx;
 106              		.loc 2 583 0
 107 0018 30402DE9 		push	{r4, r5, lr}
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 5, -8
 111              		.cfi_offset 14, -4
 112              		.loc 2 590 0
 113 001c 01E053E5 		ldrb	lr, [r3, #-1]	@ zero_extendqisi2
 114              	.LVL9:
 591:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 592:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 593:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /* Avoid logical || since it results in a branch */
 594:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     bad |= padding_len > input_len;
 595:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     bad |= padding_len == 0;
 115              		.loc 2 595 0
 116 0020 1E3F6FE1 		clz	r3, lr
 591:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 117              		.loc 2 591 0
 118 0024 0E4041E0 		sub	r4, r1, lr
 119              		.loc 2 595 0
 120 0028 A332A0E1 		lsr	r3, r3, #5
 591:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 121              		.loc 2 591 0
 122 002c 004082E5 		str	r4, [r2]
 123              	.LVL10:
 596:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 597:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /* The number of bytes checked must be independent of padding_len,
 598:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****      * so pick input_len, which is usually 8 or 16 (one block) */
 599:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     pad_idx = input_len - padding_len;
 600:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 0; i < input_len; i++ )
 124              		.loc 2 600 0
 125 0030 0C20A0E1 		mov	r2, ip
 126              	.LVL11:
 595:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 127              		.loc 2 595 0
 128 0034 0E0051E1 		cmp	r1, lr
 129 0038 01308333 		orrcc	r3, r3, #1
 130              	.LVL12:
 131              	.L10:
 132              		.loc 2 600 0 discriminator 1
 133 003c 010052E1 		cmp	r2, r1
 134 0040 0300001A 		bne	.L11
 601:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= ( input[i] ^ padding_len ) * ( i >= pad_idx );
 602:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 603:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_INVALID_PADDING * ( bad != 0 ) );
 135              		.loc 2 603 0
 136 0044 000053E3 		cmp	r3, #0
 137 0048 34009FE5 		ldr	r0, .L18
 138              	.LVL13:
 139 004c 0000A003 		moveq	r0, #0
 140 0050 3080BDE8 		pop	{r4, r5, pc}
 141              	.LVL14:
 142              	.L11:
 601:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= ( input[i] ^ padding_len ) * ( i >= pad_idx );
 143              		.loc 2 601 0 discriminator 3
 144 0054 02C0D0E7 		ldrb	ip, [r0, r2]	@ zero_extendqisi2
 145 0058 040052E1 		cmp	r2, r4
 146 005c 0050A033 		movcc	r5, #0
 147 0060 0150A023 		movcs	r5, #1
 600:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= ( input[i] ^ padding_len ) * ( i >= pad_idx );
 148              		.loc 2 600 0 discriminator 3
 149 0064 012082E2 		add	r2, r2, #1
 150              	.LVL15:
 601:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= ( input[i] ^ padding_len ) * ( i >= pad_idx );
 151              		.loc 2 601 0 discriminator 3
 152 0068 0EC02CE0 		eor	ip, ip, lr
 153 006c 8C056CE1 		smulbb	ip, ip, r5
 154 0070 03308CE1 		orr	r3, ip, r3
 155              	.LVL16:
 156 0074 7330EFE6 		uxtb	r3, r3
 157              	.LVL17:
 158 0078 EFFFFFEA 		b	.L10
 159              	.LVL18:
 160              	.L12:
 161              		.cfi_def_cfa_offset 0
 162              		.cfi_restore 4
 163              		.cfi_restore 5
 164              		.cfi_restore 14
 588:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 165              		.loc 2 588 0
 166 007c 04009FE5 		ldr	r0, .L18+4
 167              	.LVL19:
 168 0080 1EFF2FE1 		bx	lr
 169              	.L19:
 170              		.align	2
 171              	.L18:
 172 0084 009EFFFF 		.word	-25088
 173 0088 009FFFFF 		.word	-24832
 174              		.cfi_endproc
 175              	.LFE22:
 177              		.section	.text.add_one_and_zeros_padding,"ax",%progbits
 178              		.align	2
 179              		.syntax unified
 180              		.arm
 181              		.fpu neon
 183              	add_one_and_zeros_padding:
 184              	.LFB23:
 604:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 605:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_PKCS7 */
 606:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 607:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS)
 608:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 609:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * One and zeros padding: fill with 80 00 ... 00
 610:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 611:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static void add_one_and_zeros_padding( unsigned char *output,
 612:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                        size_t output_len, size_t data_len )
 613:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 185              		.loc 2 613 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL20:
 614:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 615:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char i = 0;
 616:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 617:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     output[data_len] = 0x80;
 190              		.loc 2 617 0
 191 0000 7F30E0E3 		mvn	r3, #127
 614:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 192              		.loc 2 614 0
 193 0004 021041E0 		sub	r1, r1, r2
 194              	.LVL21:
 195              		.loc 2 617 0
 196 0008 0230C0E7 		strb	r3, [r0, r2]
 197              	.LVL22:
 618:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 198              		.loc 2 618 0
 199 000c 0130A0E3 		mov	r3, #1
 200 0010 030051E1 		cmp	r1, r3
 619:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i] = 0x00;
 201              		.loc 2 619 0
 202 0014 00C0A0E3 		mov	ip, #0
 203              	.LVL23:
 618:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 204              		.loc 2 618 0
 205 0018 0000008A 		bhi	.L25
 206 001c 1EFF2FE1 		bx	lr
 207              	.L25:
 613:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 208              		.loc 2 613 0
 209 0020 04E02DE5 		str	lr, [sp, #-4]!
 210              		.cfi_def_cfa_offset 4
 211              		.cfi_offset 14, -4
 212              	.L22:
 213              		.loc 2 619 0 discriminator 3
 214 0024 03E080E0 		add	lr, r0, r3
 618:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 215              		.loc 2 618 0 discriminator 3
 216 0028 013083E2 		add	r3, r3, #1
 217              	.LVL24:
 218 002c 7330EFE6 		uxtb	r3, r3
 219              	.LVL25:
 220              		.loc 2 619 0 discriminator 3
 221 0030 02C0CEE7 		strb	ip, [lr, r2]
 618:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 222              		.loc 2 618 0 discriminator 3
 223 0034 030051E1 		cmp	r1, r3
 224 0038 F9FFFF8A 		bhi	.L22
 620:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 225              		.loc 2 620 0
 226 003c 04F09DE4 		ldr	pc, [sp], #4
 227              		.cfi_endproc
 228              	.LFE23:
 230              		.section	.text.add_zeros_and_len_padding,"ax",%progbits
 231              		.align	2
 232              		.syntax unified
 233              		.arm
 234              		.fpu neon
 236              	add_zeros_and_len_padding:
 237              	.LFB25:
 621:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 622:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int get_one_and_zeros_padding( unsigned char *input, size_t input_len,
 623:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                       size_t *data_len )
 624:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 625:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 626:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char done = 0, prev_done, bad;
 627:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 628:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 629:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 630:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 631:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     bad = 0x80;
 632:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = 0;
 633:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = input_len; i > 0; i-- )
 634:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 635:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         prev_done = done;
 636:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         done |= ( input[i - 1] != 0 );
 637:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= ( i - 1 ) * ( done != prev_done );
 638:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad ^= input[i - 1] * ( done != prev_done );
 639:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 640:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 641:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_INVALID_PADDING * ( bad != 0 ) );
 642:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 643:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 644:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS */
 645:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 646:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN)
 647:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 648:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * Zeros and len padding: fill with 00 ... 00 ll, where ll is padding length
 649:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 650:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static void add_zeros_and_len_padding( unsigned char *output,
 651:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                        size_t output_len, size_t data_len )
 652:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 238              		.loc 2 652 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              	.LVL26:
 243 0000 10402DE9 		push	{r4, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 653:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 654:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char i = 0;
 655:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 656:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 1; i < padding_len; i++ )
 247              		.loc 2 656 0
 248 0004 0130A0E3 		mov	r3, #1
 653:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t padding_len = output_len - data_len;
 249              		.loc 2 653 0
 250 0008 02E041E0 		sub	lr, r1, r2
 251              	.LVL27:
 657:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 252              		.loc 2 657 0
 253 000c 0040A0E3 		mov	r4, #0
 254              	.LVL28:
 255              	.L27:
 656:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 256              		.loc 2 656 0 discriminator 1
 257 0010 03005EE1 		cmp	lr, r3
 258 0014 0200008A 		bhi	.L28
 658:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     output[output_len - 1] = (unsigned char) padding_len;
 259              		.loc 2 658 0
 260 0018 010080E0 		add	r0, r0, r1
 261              	.LVL29:
 262 001c 01E040E5 		strb	lr, [r0, #-1]
 263 0020 1080BDE8 		pop	{r4, pc}
 264              	.LVL30:
 265              	.L28:
 657:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 266              		.loc 2 657 0 discriminator 3
 267 0024 03C080E0 		add	ip, r0, r3
 656:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 268              		.loc 2 656 0 discriminator 3
 269 0028 013083E2 		add	r3, r3, #1
 270              	.LVL31:
 657:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 271              		.loc 2 657 0 discriminator 3
 272 002c 02C08CE0 		add	ip, ip, r2
 656:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 273              		.loc 2 656 0 discriminator 3
 274 0030 7330EFE6 		uxtb	r3, r3
 275              	.LVL32:
 657:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[data_len + i - 1] = 0x00;
 276              		.loc 2 657 0 discriminator 3
 277 0034 01404CE5 		strb	r4, [ip, #-1]
 278 0038 F4FFFFEA 		b	.L27
 279              		.cfi_endproc
 280              	.LFE25:
 282              		.section	.text.get_zeros_and_len_padding,"ax",%progbits
 283              		.align	2
 284              		.syntax unified
 285              		.arm
 286              		.fpu neon
 288              	get_zeros_and_len_padding:
 289              	.LFB26:
 659:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 660:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 661:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int get_zeros_and_len_padding( unsigned char *input, size_t input_len,
 662:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                       size_t *data_len )
 663:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 290              		.loc 2 663 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              	.LVL33:
 664:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i, pad_idx;
 665:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char padding_len, bad = 0;
 666:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 667:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 295              		.loc 2 667 0
 296 0000 000052E3 		cmp	r2, #0
 297 0004 00005013 		cmpne	r0, #0
 298 0008 01C0A003 		moveq	ip, #1
 299 000c 00C0A013 		movne	ip, #0
 300 0010 1900000A 		beq	.L34
 663:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i, pad_idx;
 301              		.loc 2 663 0
 302 0014 30402DE9 		push	{r4, r5, lr}
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 14, -4
 668:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 669:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 670:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     padding_len = input[input_len - 1];
 307              		.loc 2 670 0
 308 0018 014041E2 		sub	r4, r1, #1
 309 001c 04E0D0E7 		ldrb	lr, [r0, r4]	@ zero_extendqisi2
 310              	.LVL34:
 671:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 672:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 673:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /* Avoid logical || since it results in a branch */
 674:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     bad |= padding_len > input_len;
 675:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     bad |= padding_len == 0;
 311              		.loc 2 675 0
 312 0020 1E3F6FE1 		clz	r3, lr
 671:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 313              		.loc 2 671 0
 314 0024 0E5041E0 		sub	r5, r1, lr
 315              		.loc 2 675 0
 316 0028 A332A0E1 		lsr	r3, r3, #5
 671:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len - padding_len;
 317              		.loc 2 671 0
 318 002c 005082E5 		str	r5, [r2]
 319              	.LVL35:
 320              		.loc 2 675 0
 321 0030 0E0051E1 		cmp	r1, lr
 322 0034 0310A021 		movcs	r1, r3
 323 0038 01108333 		orrcc	r1, r3, #1
 324              	.LVL36:
 676:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 677:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     /* The number of bytes checked must be independent of padding_len */
 678:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     pad_idx = input_len - padding_len;
 679:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = 0; i < input_len - 1; i++ )
 325              		.loc 2 679 0
 326 003c 0C30A0E1 		mov	r3, ip
 327              	.LVL37:
 328              	.L32:
 329              		.loc 2 679 0 is_stmt 0 discriminator 1
 330 0040 040053E1 		cmp	r3, r4
 331 0044 0300003A 		bcc	.L33
 680:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= input[i] * ( i >= pad_idx );
 681:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 682:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_INVALID_PADDING * ( bad != 0 ) );
 332              		.loc 2 682 0 is_stmt 1
 333 0048 000051E3 		cmp	r1, #0
 334 004c 30009FE5 		ldr	r0, .L40
 335              	.LVL38:
 336 0050 0000A003 		moveq	r0, #0
 337 0054 3080BDE8 		pop	{r4, r5, pc}
 338              	.LVL39:
 339              	.L33:
 680:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= input[i] * ( i >= pad_idx );
 340              		.loc 2 680 0 discriminator 3
 341 0058 0320D0E7 		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 342 005c 050053E1 		cmp	r3, r5
 343 0060 00C0A033 		movcc	ip, #0
 344 0064 01C0A023 		movcs	ip, #1
 679:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= input[i] * ( i >= pad_idx );
 345              		.loc 2 679 0 discriminator 3
 346 0068 013083E2 		add	r3, r3, #1
 347              	.LVL40:
 680:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad |= input[i] * ( i >= pad_idx );
 348              		.loc 2 680 0 discriminator 3
 349 006c 820C62E1 		smulbb	r2, r2, ip
 350 0070 011082E1 		orr	r1, r2, r1
 351              	.LVL41:
 352 0074 7110EFE6 		uxtb	r1, r1
 353              	.LVL42:
 354 0078 F0FFFFEA 		b	.L32
 355              	.LVL43:
 356              	.L34:
 357              		.cfi_def_cfa_offset 0
 358              		.cfi_restore 4
 359              		.cfi_restore 5
 360              		.cfi_restore 14
 668:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 361              		.loc 2 668 0
 362 007c 04009FE5 		ldr	r0, .L40+4
 363              	.LVL44:
 364 0080 1EFF2FE1 		bx	lr
 365              	.L41:
 366              		.align	2
 367              	.L40:
 368 0084 009EFFFF 		.word	-25088
 369 0088 009FFFFF 		.word	-24832
 370              		.cfi_endproc
 371              	.LFE26:
 373              		.section	.text.add_zeros_padding,"ax",%progbits
 374              		.align	2
 375              		.syntax unified
 376              		.arm
 377              		.fpu neon
 379              	add_zeros_padding:
 380              	.LFB27:
 683:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 684:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN */
 685:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 686:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS)
 687:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 688:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * Zero padding: fill with 00 ... 00
 689:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 690:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static void add_zeros_padding( unsigned char *output,
 691:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                size_t output_len, size_t data_len )
 692:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 381              		.loc 2 692 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386              	.LVL45:
 387 0000 022080E0 		add	r2, r0, r2
 388              	.LVL46:
 693:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 694:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 695:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = data_len; i < output_len; i++ )
 696:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[i] = 0x00;
 389              		.loc 2 696 0
 390 0004 00C0A0E3 		mov	ip, #0
 391              	.LVL47:
 392              	.L43:
 695:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         output[i] = 0x00;
 393              		.loc 2 695 0 discriminator 1
 394 0008 003042E0 		sub	r3, r2, r0
 395              	.LVL48:
 396 000c 030051E1 		cmp	r1, r3
 397 0010 0000008A 		bhi	.L44
 697:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 398              		.loc 2 697 0
 399 0014 1EFF2FE1 		bx	lr
 400              	.L44:
 696:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 401              		.loc 2 696 0 discriminator 3
 402 0018 01C0C2E4 		strb	ip, [r2], #1
 403              	.LVL49:
 404 001c F9FFFFEA 		b	.L43
 405              		.cfi_endproc
 406              	.LFE27:
 408              		.section	.text.get_no_padding,"ax",%progbits
 409              		.align	2
 410              		.syntax unified
 411              		.arm
 412              		.fpu neon
 414              	get_no_padding:
 415              	.LFB29:
 698:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 699:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int get_zeros_padding( unsigned char *input, size_t input_len,
 700:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                               size_t *data_len )
 701:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 702:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 703:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char done = 0, prev_done;
 704:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 705:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 706:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 707:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 708:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = 0;
 709:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = input_len; i > 0; i-- )
 710:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 711:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         prev_done = done;
 712:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         done |= ( input[i-1] != 0 );
 713:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= i * ( done != prev_done );
 714:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 715:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 716:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 717:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 718:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_PADDING_ZEROS */
 719:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 720:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 721:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * No padding: don't pad :)
 722:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  *
 723:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * There is no add_padding function (check for NULL in mbedtls_cipher_finish)
 724:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * but a trivial get_padding function
 725:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 726:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** static int get_no_padding( unsigned char *input, size_t input_len,
 727:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                               size_t *data_len )
 728:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 416              		.loc 2 728 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421              	.LVL50:
 729:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == input || NULL == data_len )
 422              		.loc 2 729 0
 423 0000 000052E3 		cmp	r2, #0
 424 0004 00005013 		cmpne	r0, #0
 425 0008 0100A003 		moveq	r0, #1
 426              	.LVL51:
 427 000c 0000A013 		movne	r0, #0
 730:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 731:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 732:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = input_len;
 428              		.loc 2 732 0
 429 0010 00108215 		strne	r1, [r2]
 730:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 430              		.loc 2 730 0
 431 0014 00009F05 		ldreq	r0, .L48
 733:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 734:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 735:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 432              		.loc 2 735 0
 433 0018 1EFF2FE1 		bx	lr
 434              	.L49:
 435              		.align	2
 436              	.L48:
 437 001c 009FFFFF 		.word	-24832
 438              		.cfi_endproc
 439              	.LFE29:
 441              		.section	.text.get_one_and_zeros_padding,"ax",%progbits
 442              		.align	2
 443              		.syntax unified
 444              		.arm
 445              		.fpu neon
 447              	get_one_and_zeros_padding:
 448              	.LFB24:
 624:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 449              		.loc 2 624 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL52:
 628:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 454              		.loc 2 628 0
 455 0000 000052E3 		cmp	r2, #0
 456 0004 00005013 		cmpne	r0, #0
 457 0008 0130A003 		moveq	r3, #1
 458 000c 0030A013 		movne	r3, #0
 459 0010 1900000A 		beq	.L54
 460              	.LVL53:
 624:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 461              		.loc 2 624 0
 462 0014 30402DE9 		push	{r4, r5, lr}
 463              		.cfi_def_cfa_offset 12
 464              		.cfi_offset 4, -12
 465              		.cfi_offset 5, -8
 466              		.cfi_offset 14, -4
 467 0018 010080E0 		add	r0, r0, r1
 468              	.LVL54:
 469              	.LBB5:
 470              	.LBB6:
 631:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *data_len = 0;
 471              		.loc 2 631 0
 472 001c 8040A0E3 		mov	r4, #128
 473              	.LBE6:
 474              	.LBE5:
 632:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = input_len; i > 0; i-- )
 475              		.loc 2 632 0
 476 0020 003082E5 		str	r3, [r2]
 477              	.LVL55:
 478              	.L52:
 479              	.LBB8:
 480              	.LBB7:
 633:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 481              		.loc 2 633 0
 482 0024 000051E3 		cmp	r1, #0
 483 0028 0300001A 		bne	.L53
 641:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 484              		.loc 2 641 0
 485 002c 000054E3 		cmp	r4, #0
 486 0030 4C009FE5 		ldr	r0, .L60
 487 0034 0000A003 		moveq	r0, #0
 488 0038 3080BDE8 		pop	{r4, r5, pc}
 489              	.L53:
 490              	.LVL56:
 636:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= ( i - 1 ) * ( done != prev_done );
 491              		.loc 2 636 0
 492 003c 01E050E5 		ldrb	lr, [r0, #-1]	@ zero_extendqisi2
 493 0040 011041E2 		sub	r1, r1, #1
 494              	.LVL57:
 637:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad ^= input[i - 1] * ( done != prev_done );
 495              		.loc 2 637 0
 496 0044 00C092E5 		ldr	ip, [r2]
 636:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= ( i - 1 ) * ( done != prev_done );
 497              		.loc 2 636 0
 498 0048 00005EE3 		cmp	lr, #0
 499 004c 03E0A001 		moveq	lr, r3
 500 0050 01E08313 		orrne	lr, r3, #1
 501              	.LVL58:
 502 0054 0E3023E0 		eor	r3, r3, lr
 503              	.LVL59:
 637:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         bad ^= input[i - 1] * ( done != prev_done );
 504              		.loc 2 637 0
 505 0058 910305E0 		mul	r5, r1, r3
 506 005c 05C08CE1 		orr	ip, ip, r5
 507 0060 00C082E5 		str	ip, [r2]
 638:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 508              		.loc 2 638 0
 509 0064 01C070E5 		ldrb	ip, [r0, #-1]!	@ zero_extendqisi2
 510 0068 8C0363E1 		smulbb	r3, ip, r3
 511 006c 043023E0 		eor	r3, r3, r4
 512 0070 7340EFE6 		uxtb	r4, r3
 513              	.LVL60:
 636:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= ( i - 1 ) * ( done != prev_done );
 514              		.loc 2 636 0
 515 0074 0E30A0E1 		mov	r3, lr
 516 0078 E9FFFFEA 		b	.L52
 517              	.LVL61:
 518              	.L54:
 519              		.cfi_def_cfa_offset 0
 520              		.cfi_restore 4
 521              		.cfi_restore 5
 522              		.cfi_restore 14
 523              	.LBE7:
 524              	.LBE8:
 629:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 525              		.loc 2 629 0
 526 007c 04009FE5 		ldr	r0, .L60+4
 527              	.LVL62:
 528 0080 1EFF2FE1 		bx	lr
 529              	.L61:
 530              		.align	2
 531              	.L60:
 532 0084 009EFFFF 		.word	-25088
 533 0088 009FFFFF 		.word	-24832
 534              		.cfi_endproc
 535              	.LFE24:
 537              		.section	.text.get_zeros_padding,"ax",%progbits
 538              		.align	2
 539              		.syntax unified
 540              		.arm
 541              		.fpu neon
 543              	get_zeros_padding:
 544              	.LFB28:
 701:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 545              		.loc 2 701 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL63:
 705:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 550              		.loc 2 705 0
 551 0000 000052E3 		cmp	r2, #0
 552 0004 00005013 		cmpne	r0, #0
 553 0008 0130A003 		moveq	r3, #1
 554 000c 0030A013 		movne	r3, #0
 555 0010 1200000A 		beq	.L66
 556 0014 011080E0 		add	r1, r0, r1
 557              	.LVL64:
 701:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t i;
 558              		.loc 2 701 0
 559 0018 04E02DE5 		str	lr, [sp, #-4]!
 560              		.cfi_def_cfa_offset 4
 561              		.cfi_offset 14, -4
 708:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     for( i = input_len; i > 0; i-- )
 562              		.loc 2 708 0
 563 001c 003082E5 		str	r3, [r2]
 564              	.LVL65:
 565              	.L64:
 566              	.LBB11:
 567              	.LBB12:
 709:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 568              		.loc 2 709 0
 569 0020 000051E1 		cmp	r1, r0
 570 0024 00E041E0 		sub	lr, r1, r0
 571              	.LVL66:
 572 0028 0100001A 		bne	.L65
 573 002c 0000A0E3 		mov	r0, #0
 574              	.LVL67:
 575 0030 04F09DE4 		ldr	pc, [sp], #4
 576              	.LVL68:
 577              	.L65:
 712:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= i * ( done != prev_done );
 578              		.loc 2 712 0
 579 0034 01C071E5 		ldrb	ip, [r1, #-1]!	@ zero_extendqisi2
 580 0038 00005CE3 		cmp	ip, #0
 581 003c 03C0A001 		moveq	ip, r3
 582 0040 01C08313 		orrne	ip, r3, #1
 583              	.LVL69:
 713:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 584              		.loc 2 713 0
 585 0044 0C3023E0 		eor	r3, r3, ip
 586              	.LVL70:
 587 0048 9E0303E0 		mul	r3, lr, r3
 588 004c 00E092E5 		ldr	lr, [r2]
 589              	.LVL71:
 590 0050 03308EE1 		orr	r3, lr, r3
 591 0054 003082E5 		str	r3, [r2]
 592              	.LVL72:
 712:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *data_len |= i * ( done != prev_done );
 593              		.loc 2 712 0
 594 0058 0C30A0E1 		mov	r3, ip
 595 005c EFFFFFEA 		b	.L64
 596              	.LVL73:
 597              	.L66:
 598              		.cfi_def_cfa_offset 0
 599              		.cfi_restore 14
 600              	.LBE12:
 601              	.LBE11:
 706:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 602              		.loc 2 706 0
 603 0060 00009FE5 		ldr	r0, .L71
 604              	.LVL74:
 605 0064 1EFF2FE1 		bx	lr
 606              	.L72:
 607              		.align	2
 608              	.L71:
 609 0068 009FFFFF 		.word	-24832
 610              		.cfi_endproc
 611              	.LFE28:
 613              		.section	.text.mbedtls_cipher_list,"ax",%progbits
 614              		.align	2
 615              		.global	mbedtls_cipher_list
 616              		.syntax unified
 617              		.arm
 618              		.fpu neon
 620              	mbedtls_cipher_list:
 621              	.LFB9:
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 622              		.loc 2 91 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
  95:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 626              		.loc 2 95 0
 627 0000 4C209FE5 		ldr	r2, .L81
 628 0004 003092E5 		ldr	r3, [r2]
 629 0008 000053E3 		cmp	r3, #0
 630 000c 0E00001A 		bne	.L78
  91:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 631              		.loc 2 91 0
 632 0010 04E02DE5 		str	lr, [sp, #-4]!
 633              		.cfi_def_cfa_offset 4
 634              		.cfi_offset 14, -4
 635 0014 3C009FE5 		ldr	r0, .L81+4
 100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             *type++ = (*def++).type;
 636              		.loc 2 100 0
 637 0018 3CE09FE5 		ldr	lr, .L81+8
 638              	.L75:
 639 001c 8310DEE7 		ldrb	r1, [lr, r3, lsl #1]	@ zero_extendqisi2
 640 0020 00C083E0 		add	ip, r3, r0
 641              	.LVL75:
 642 0024 000051E3 		cmp	r1, #0
 643 0028 0400001A 		bne	.L76
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 644              		.loc 2 105 0
 645 002c 0130A0E3 		mov	r3, #1
 646              	.LVL76:
 103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 647              		.loc 2 103 0
 648 0030 00108CE5 		str	r1, [ip]
 105:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 649              		.loc 2 105 0
 650 0034 003082E5 		str	r3, [r2]
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 651              		.loc 2 109 0
 652 0038 18009FE5 		ldr	r0, .L81+4
 653 003c 04F09DE4 		ldr	pc, [sp], #4
 654              	.LVL77:
 655              	.L76:
 101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 656              		.loc 2 101 0
 657 0040 001083E7 		str	r1, [r3, r0]
 658 0044 043083E2 		add	r3, r3, #4
 659              	.LVL78:
 660 0048 F3FFFFEA 		b	.L75
 661              	.LVL79:
 662              	.L78:
 663              		.cfi_def_cfa_offset 0
 664              		.cfi_restore 14
 109:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 665              		.loc 2 109 0
 666 004c 04009FE5 		ldr	r0, .L81+4
 667 0050 1EFF2FE1 		bx	lr
 668              	.L82:
 669              		.align	2
 670              	.L81:
 671 0054 00000000 		.word	.LANCHOR0
 672 0058 00000000 		.word	mbedtls_cipher_supported
 673 005c 00000000 		.word	mbedtls_cipher_definitions
 674              		.cfi_endproc
 675              	.LFE9:
 677              		.section	.text.mbedtls_cipher_info_from_type,"ax",%progbits
 678              		.align	2
 679              		.global	mbedtls_cipher_info_from_type
 680              		.syntax unified
 681              		.arm
 682              		.fpu neon
 684              	mbedtls_cipher_info_from_type:
 685              	.LFB10:
 112:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 686              		.loc 2 112 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691              	.LVL80:
 692 0000 20309FE5 		ldr	r3, .L87
 693              	.LVL81:
 694              	.L84:
 115:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( def->type == cipher_type )
 695              		.loc 2 115 0 discriminator 1
 696 0004 042013E5 		ldr	r2, [r3, #-4]
 697 0008 000052E3 		cmp	r2, #0
 698 000c 0300000A 		beq	.L83
 699 0010 083083E2 		add	r3, r3, #8
 700              	.LVL82:
 116:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( def->info );
 701              		.loc 2 116 0
 702 0014 101053E5 		ldrb	r1, [r3, #-16]	@ zero_extendqisi2
 703 0018 000051E1 		cmp	r1, r0
 704 001c F8FFFF1A 		bne	.L84
 705              	.LVL83:
 706              	.L83:
 120:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 707              		.loc 2 120 0
 708 0020 0200A0E1 		mov	r0, r2
 709              	.LVL84:
 710 0024 1EFF2FE1 		bx	lr
 711              	.L88:
 712              		.align	2
 713              	.L87:
 714 0028 08000000 		.word	mbedtls_cipher_definitions+8
 715              		.cfi_endproc
 716              	.LFE10:
 718              		.section	.text.mbedtls_cipher_info_from_string,"ax",%progbits
 719              		.align	2
 720              		.global	mbedtls_cipher_info_from_string
 721              		.syntax unified
 722              		.arm
 723              		.fpu neon
 725              	mbedtls_cipher_info_from_string:
 726              	.LFB11:
 123:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 727              		.loc 2 123 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 0
 730              		@ frame_needed = 0, uses_anonymous_args = 0
 731              	.LVL85:
 732 0000 70402DE9 		push	{r4, r5, r6, lr}
 733              		.cfi_def_cfa_offset 16
 734              		.cfi_offset 4, -16
 735              		.cfi_offset 5, -12
 736              		.cfi_offset 6, -8
 737              		.cfi_offset 14, -4
 126:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( NULL );
 738              		.loc 2 126 0
 739 0004 004050E2 		subs	r4, r0, #0
 740 0008 0460A011 		movne	r6, r4
 741 000c 30509F15 		ldrne	r5, .L98
 742 0010 0700001A 		bne	.L91
 743              	.LVL86:
 744              	.L89:
 134:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 745              		.loc 2 134 0
 746 0014 0400A0E1 		mov	r0, r4
 747 0018 7080BDE8 		pop	{r4, r5, r6, pc}
 748              	.LVL87:
 749              	.L92:
 130:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( def->info );
 750              		.loc 2 130 0
 751 001c 0610A0E1 		mov	r1, r6
 752 0020 080094E5 		ldr	r0, [r4, #8]
 753 0024 FEFFFFEB 		bl	strcmp
 754              	.LVL88:
 755 0028 000050E3 		cmp	r0, #0
 756 002c F8FFFF0A 		beq	.L89
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( !  strcmp( def->info->name, cipher_name ) )
 757              		.loc 2 129 0 discriminator 2
 758 0030 085085E2 		add	r5, r5, #8
 759              	.LVL89:
 760              	.L91:
 129:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( !  strcmp( def->info->name, cipher_name ) )
 761              		.loc 2 129 0 is_stmt 0 discriminator 1
 762 0034 044095E5 		ldr	r4, [r5, #4]
 763 0038 000054E3 		cmp	r4, #0
 764 003c F6FFFF1A 		bne	.L92
 765 0040 F3FFFFEA 		b	.L89
 766              	.L99:
 767              		.align	2
 768              	.L98:
 769 0044 00000000 		.word	mbedtls_cipher_definitions
 770              		.cfi_endproc
 771              	.LFE11:
 773              		.section	.text.mbedtls_cipher_info_from_values,"ax",%progbits
 774              		.align	2
 775              		.global	mbedtls_cipher_info_from_values
 776              		.syntax unified
 777              		.arm
 778              		.fpu neon
 780              	mbedtls_cipher_info_from_values:
 781              	.LFB12:
 139:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 782              		.loc 2 139 0 is_stmt 1
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              	.LVL90:
 142:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( def->info->base->cipher == cipher_id &&
 787              		.loc 2 142 0
 788 0000 54C09FE5 		ldr	ip, .L109
 789              	.LVL91:
 790 0004 04309CE5 		ldr	r3, [ip, #4]
 791 0008 000053E3 		cmp	r3, #0
 792 000c 0100001A 		bne	.L108
 149:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 793              		.loc 2 149 0
 794 0010 0300A0E1 		mov	r0, r3
 795              	.LVL92:
 796 0014 1EFF2FE1 		bx	lr
 797              	.LVL93:
 798              	.L108:
 139:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     const mbedtls_cipher_definition_t *def;
 799              		.loc 2 139 0
 800 0018 04E02DE5 		str	lr, [sp, #-4]!
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 14, -4
 803              	.L104:
 143:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             def->info->key_bitlen == (unsigned) key_bitlen &&
 804              		.loc 2 143 0
 805 001c 18E093E5 		ldr	lr, [r3, #24]
 806 0020 00E0DEE5 		ldrb	lr, [lr]	@ zero_extendqisi2
 807 0024 00005EE1 		cmp	lr, r0
 808 0028 0500001A 		bne	.L102
 143:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             def->info->key_bitlen == (unsigned) key_bitlen &&
 809              		.loc 2 143 0 is_stmt 0 discriminator 1
 810 002c 04E093E5 		ldr	lr, [r3, #4]
 811 0030 01005EE1 		cmp	lr, r1
 812 0034 0200001A 		bne	.L102
 144:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             def->info->mode == mode )
 813              		.loc 2 144 0 is_stmt 1
 814 0038 01E0D3E5 		ldrb	lr, [r3, #1]	@ zero_extendqisi2
 815 003c 02005EE1 		cmp	lr, r2
 816 0040 0300000A 		beq	.L100
 817              	.L102:
 142:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( def->info->base->cipher == cipher_id &&
 818              		.loc 2 142 0 discriminator 2
 819 0044 08C08CE2 		add	ip, ip, #8
 820              	.LVL94:
 821 0048 04309CE5 		ldr	r3, [ip, #4]
 822 004c 000053E3 		cmp	r3, #0
 823 0050 F1FFFF1A 		bne	.L104
 824              	.L100:
 149:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 825              		.loc 2 149 0
 826 0054 0300A0E1 		mov	r0, r3
 827              	.LVL95:
 828 0058 04F09DE4 		ldr	pc, [sp], #4
 829              	.L110:
 830              		.align	2
 831              	.L109:
 832 005c 00000000 		.word	mbedtls_cipher_definitions
 833              		.cfi_endproc
 834              	.LFE12:
 836              		.section	.text.mbedtls_cipher_init,"ax",%progbits
 837              		.align	2
 838              		.global	mbedtls_cipher_init
 839              		.syntax unified
 840              		.arm
 841              		.fpu neon
 843              	mbedtls_cipher_init:
 844              	.LFB13:
 152:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     memset( ctx, 0, sizeof( mbedtls_cipher_context_t ) );
 845              		.loc 2 152 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL96:
 153:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 851              		.loc 2 153 0
 852 0000 4020A0E3 		mov	r2, #64
 853 0004 0010A0E3 		mov	r1, #0
 854 0008 FEFFFFEA 		b	memset
 855              	.LVL97:
 856              		.cfi_endproc
 857              	.LFE13:
 859              		.section	.text.mbedtls_cipher_free,"ax",%progbits
 860              		.align	2
 861              		.global	mbedtls_cipher_free
 862              		.syntax unified
 863              		.arm
 864              		.fpu neon
 866              	mbedtls_cipher_free:
 867              	.LFB14:
 157:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ctx == NULL )
 868              		.loc 2 157 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872              	.LVL98:
 873 0000 10402DE9 		push	{r4, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 4, -8
 876              		.cfi_offset 14, -4
 158:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return;
 877              		.loc 2 158 0
 878 0004 004050E2 		subs	r4, r0, #0
 879 0008 1080BD08 		popeq	{r4, pc}
 170:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->cipher_info->base->ctx_free_func( ctx->cipher_ctx );
 880              		.loc 2 170 0
 881 000c 3C0094E5 		ldr	r0, [r4, #60]
 882              	.LVL99:
 883 0010 000050E3 		cmp	r0, #0
 884 0014 0300000A 		beq	.L114
 171:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 885              		.loc 2 171 0
 886 0018 003094E5 		ldr	r3, [r4]
 887 001c 183093E5 		ldr	r3, [r3, #24]
 888 0020 203093E5 		ldr	r3, [r3, #32]
 889 0024 33FF2FE1 		blx	r3
 890              	.LVL100:
 891              	.L114:
 173:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 892              		.loc 2 173 0
 893 0028 0400A0E1 		mov	r0, r4
 894 002c 4010A0E3 		mov	r1, #64
 174:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 895              		.loc 2 174 0
 896 0030 1040BDE8 		pop	{r4, lr}
 897              		.cfi_restore 14
 898              		.cfi_restore 4
 899              		.cfi_def_cfa_offset 0
 900              	.LVL101:
 173:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 901              		.loc 2 173 0
 902 0034 FEFFFFEA 		b	mbedtls_platform_zeroize
 903              	.LVL102:
 904              		.cfi_endproc
 905              	.LFE14:
 907              		.section	.text.mbedtls_cipher_setkey,"ax",%progbits
 908              		.align	2
 909              		.global	mbedtls_cipher_setkey
 910              		.syntax unified
 911              		.arm
 912              		.fpu neon
 914              	mbedtls_cipher_setkey:
 915              	.LFB16:
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 916              		.loc 2 204 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920              	.LVL103:
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 921              		.loc 2 205 0
 922 0000 000050E3 		cmp	r0, #0
 923 0004 1C00000A 		beq	.L133
 205:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 924              		.loc 2 205 0 is_stmt 0 discriminator 1
 925 0008 00C090E5 		ldr	ip, [r0]
 926 000c 00005CE3 		cmp	ip, #0
 927 0010 1900000A 		beq	.L133
 204:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 928              		.loc 2 204 0 is_stmt 1
 929 0014 04E02DE5 		str	lr, [sp, #-4]!
 930              		.cfi_def_cfa_offset 4
 931              		.cfi_offset 14, -4
 208:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         (int) ctx->cipher_info->key_bitlen != key_bitlen )
 932              		.loc 2 208 0
 933 0018 10E09CE5 		ldr	lr, [ip, #16]
 934 001c 02001EE3 		tst	lr, #2
 935 0020 0200001A 		bne	.L123
 208:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         (int) ctx->cipher_info->key_bitlen != key_bitlen )
 936              		.loc 2 208 0 is_stmt 0 discriminator 1
 937 0024 04E09CE5 		ldr	lr, [ip, #4]
 938 0028 02005EE1 		cmp	lr, r2
 939 002c 1000001A 		bne	.L121
 940              	.L123:
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CFB == ctx->cipher_info->mode ||
 941              		.loc 2 220 0 is_stmt 1
 942 0030 010053E3 		cmp	r3, #1
 214:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->operation = operation;
 943              		.loc 2 214 0
 944 0034 042080E5 		str	r2, [r0, #4]
 215:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 945              		.loc 2 215 0
 946 0038 0830C0E5 		strb	r3, [r0, #8]
 220:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CFB == ctx->cipher_info->mode ||
 947              		.loc 2 220 0
 948 003c 0300000A 		beq	.L124
 221:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_OFB == ctx->cipher_info->mode ||
 949              		.loc 2 221 0 discriminator 1
 950 0040 01E0DCE5 		ldrb	lr, [ip, #1]	@ zero_extendqisi2
 222:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CTR == ctx->cipher_info->mode )
 951              		.loc 2 222 0 discriminator 1
 952 0044 03E04EE2 		sub	lr, lr, #3
 953 0048 02005EE3 		cmp	lr, #2
 954 004c 0400008A 		bhi	.L125
 955              	.L124:
 225:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->key_bitlen );
 956              		.loc 2 225 0
 957 0050 18309CE5 		ldr	r3, [ip, #24]
 958              	.LVL104:
 959 0054 143093E5 		ldr	r3, [r3, #20]
 960              	.L136:
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->key_bitlen );
 961              		.loc 2 230 0
 962 0058 3C0090E5 		ldr	r0, [r0, #60]
 963              	.LVL105:
 234:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 964              		.loc 2 234 0
 965 005c 04E09DE4 		ldr	lr, [sp], #4
 966              		.cfi_remember_state
 967              		.cfi_restore 14
 968              		.cfi_def_cfa_offset 0
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->key_bitlen );
 969              		.loc 2 230 0
 970 0060 13FF2FE1 		bx	r3
 971              	.LVL106:
 972              	.L125:
 973              		.cfi_restore_state
 229:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return ctx->cipher_info->base->setkey_dec_func( ctx->cipher_ctx, key,
 974              		.loc 2 229 0
 975 0064 000053E3 		cmp	r3, #0
 230:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->key_bitlen );
 976              		.loc 2 230 0
 977 0068 18309C05 		ldreq	r3, [ip, #24]
 978              	.LVL107:
 979 006c 18309305 		ldreq	r3, [r3, #24]
 980 0070 F8FFFF0A 		beq	.L136
 981              	.LVL108:
 982              	.L121:
 234:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 983              		.loc 2 234 0
 984 0074 08009FE5 		ldr	r0, .L137
 985              	.LVL109:
 986 0078 04F09DE4 		ldr	pc, [sp], #4
 987              	.LVL110:
 988              	.L133:
 989              		.cfi_def_cfa_offset 0
 990              		.cfi_restore 14
 991 007c 00009FE5 		ldr	r0, .L137
 992              	.LVL111:
 993 0080 1EFF2FE1 		bx	lr
 994              	.L138:
 995              		.align	2
 996              	.L137:
 997 0084 009FFFFF 		.word	-24832
 998              		.cfi_endproc
 999              	.LFE16:
 1001              		.section	.text.mbedtls_cipher_set_iv,"ax",%progbits
 1002              		.align	2
 1003              		.global	mbedtls_cipher_set_iv
 1004              		.syntax unified
 1005              		.arm
 1006              		.fpu neon
 1008              	mbedtls_cipher_set_iv:
 1009              	.LFB17:
 238:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t actual_iv_size;
 1010              		.loc 2 238 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL112:
 1015 0000 70402DE9 		push	{r4, r5, r6, lr}
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 4, -16
 1018              		.cfi_offset 5, -12
 1019              		.cfi_offset 6, -8
 1020              		.cfi_offset 14, -4
 241:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1021              		.loc 2 241 0
 1022 0004 005050E2 		subs	r5, r0, #0
 1023 0008 1500000A 		beq	.L145
 241:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1024              		.loc 2 241 0 is_stmt 0 discriminator 1
 1025 000c 003095E5 		ldr	r3, [r5]
 1026 0010 000051E3 		cmp	r1, #0
 1027 0014 00005313 		cmpne	r3, #0
 1028 0018 1100000A 		beq	.L145
 245:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 1029              		.loc 2 245 0 is_stmt 1
 1030 001c 100052E3 		cmp	r2, #16
 1031 0020 0240A0E1 		mov	r4, r2
 1032 0024 0C00008A 		bhi	.L144
 248:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         actual_iv_size = iv_len;
 1033              		.loc 2 248 0
 1034 0028 102093E5 		ldr	r2, [r3, #16]
 1035              	.LVL113:
 1036 002c 010012E3 		tst	r2, #1
 1037 0030 0300001A 		bne	.L141
 252:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1038              		.loc 2 252 0
 1039 0034 0C3093E5 		ldr	r3, [r3, #12]
 1040              	.LVL114:
 255:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1041              		.loc 2 255 0
 1042 0038 030054E1 		cmp	r4, r3
 1043 003c 0800003A 		bcc	.L145
 1044 0040 0340A0E1 		mov	r4, r3
 1045              	.LVL115:
 1046              	.L141:
 271:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ctx->iv_size = actual_iv_size;
 1047              		.loc 2 271 0
 1048 0044 0420A0E1 		mov	r2, r4
 1049 0048 280085E2 		add	r0, r5, #40
 1050              	.LVL116:
 1051 004c FEFFFFEB 		bl	memcpy
 1052              	.LVL117:
 272:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1053              		.loc 2 272 0
 1054 0050 384085E5 		str	r4, [r5, #56]
 274:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1055              		.loc 2 274 0
 1056 0054 0000A0E3 		mov	r0, #0
 1057 0058 7080BDE8 		pop	{r4, r5, r6, pc}
 1058              	.LVL118:
 1059              	.L144:
 246:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1060              		.loc 2 246 0
 1061 005c 08009FE5 		ldr	r0, .L147
 1062              	.LVL119:
 1063 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 1064              	.LVL120:
 1065              	.L145:
 242:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1066              		.loc 2 242 0
 1067 0064 04009FE5 		ldr	r0, .L147+4
 1068              	.LVL121:
 275:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1069              		.loc 2 275 0
 1070 0068 7080BDE8 		pop	{r4, r5, r6, pc}
 1071              	.L148:
 1072              		.align	2
 1073              	.L147:
 1074 006c 809FFFFF 		.word	-24704
 1075 0070 009FFFFF 		.word	-24832
 1076              		.cfi_endproc
 1077              	.LFE17:
 1079              		.section	.text.mbedtls_cipher_reset,"ax",%progbits
 1080              		.align	2
 1081              		.global	mbedtls_cipher_reset
 1082              		.syntax unified
 1083              		.arm
 1084              		.fpu neon
 1086              	mbedtls_cipher_reset:
 1087              	.LFB18:
 278:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 1088              		.loc 2 278 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
 1093              	.LVL122:
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1094              		.loc 2 279 0
 1095 0000 003050E2 		subs	r3, r0, #0
 1096 0004 0500000A 		beq	.L152
 279:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1097              		.loc 2 279 0 is_stmt 0 discriminator 1
 1098 0008 002093E5 		ldr	r2, [r3]
 1099 000c 000052E3 		cmp	r2, #0
 1100 0010 0200000A 		beq	.L152
 282:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1101              		.loc 2 282 0 is_stmt 1
 1102 0014 0000A0E3 		mov	r0, #0
 1103              	.LVL123:
 1104 0018 240083E5 		str	r0, [r3, #36]
 284:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1105              		.loc 2 284 0
 1106 001c 1EFF2FE1 		bx	lr
 1107              	.LVL124:
 1108              	.L152:
 280:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1109              		.loc 2 280 0
 1110 0020 00009FE5 		ldr	r0, .L153
 1111              	.LVL125:
 285:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1112              		.loc 2 285 0
 1113 0024 1EFF2FE1 		bx	lr
 1114              	.L154:
 1115              		.align	2
 1116              	.L153:
 1117 0028 009FFFFF 		.word	-24832
 1118              		.cfi_endproc
 1119              	.LFE18:
 1121              		.section	.text.mbedtls_cipher_update_ad,"ax",%progbits
 1122              		.align	2
 1123              		.global	mbedtls_cipher_update_ad
 1124              		.syntax unified
 1125              		.arm
 1126              		.fpu neon
 1128              	mbedtls_cipher_update_ad:
 1129              	.LFB19:
 290:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info )
 1130              		.loc 2 290 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134              	.LVL126:
 1135 0000 07402DE9 		push	{r0, r1, r2, lr}
 1136              		.cfi_def_cfa_offset 16
 1137              		.cfi_offset 14, -4
 291:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1138              		.loc 2 291 0
 1139 0004 000050E3 		cmp	r0, #0
 1140 0008 1000000A 		beq	.L158
 291:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1141              		.loc 2 291 0 is_stmt 0 discriminator 1
 1142 000c 003090E5 		ldr	r3, [r0]
 1143 0010 000053E3 		cmp	r3, #0
 1144 0014 0D00000A 		beq	.L158
 295:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1145              		.loc 2 295 0 is_stmt 1
 1146 0018 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1147 001c 060053E3 		cmp	r3, #6
 323:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1148              		.loc 2 323 0
 1149 0020 0000A013 		movne	r0, #0
 1150              	.LVL127:
 295:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1151              		.loc 2 295 0
 1152 0024 0700001A 		bne	.L155
 1153 0028 0130A0E1 		mov	r3, r1
 297:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                            ctx->iv, ctx->iv_size, ad, ad_len );
 1154              		.loc 2 297 0
 1155 002c D810D0E1 		ldrsb	r1, [r0, #8]
 1156              	.LVL128:
 1157 0030 04208DE5 		str	r2, [sp, #4]
 1158 0034 282080E2 		add	r2, r0, #40
 1159              	.LVL129:
 1160 0038 00308DE5 		str	r3, [sp]
 1161 003c 383090E5 		ldr	r3, [r0, #56]
 1162              	.LVL130:
 1163 0040 3C0090E5 		ldr	r0, [r0, #60]
 1164 0044 FEFFFFEB 		bl	mbedtls_gcm_starts
 1165              	.LVL131:
 1166              	.L155:
 324:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
 1167              		.loc 2 324 0
 1168 0048 0CD08DE2 		add	sp, sp, #12
 1169              		.cfi_remember_state
 1170              		.cfi_def_cfa_offset 4
 1171              		@ sp needed
 1172 004c 04F09DE4 		ldr	pc, [sp], #4
 1173              	.LVL132:
 1174              	.L158:
 1175              		.cfi_restore_state
 292:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1176              		.loc 2 292 0
 1177 0050 00009FE5 		ldr	r0, .L161
 1178              	.LVL133:
 1179 0054 FBFFFFEA 		b	.L155
 1180              	.L162:
 1181              		.align	2
 1182              	.L161:
 1183 0058 009FFFFF 		.word	-24832
 1184              		.cfi_endproc
 1185              	.LFE19:
 1187              		.global	__aeabi_uidivmod
 1188              		.section	.text.mbedtls_cipher_update,"ax",%progbits
 1189              		.align	2
 1190              		.global	mbedtls_cipher_update
 1191              		.syntax unified
 1192              		.arm
 1193              		.fpu neon
 1195              	mbedtls_cipher_update:
 1196              	.LFB20:
 329:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int ret;
 1197              		.loc 2 329 0
 1198              		.cfi_startproc
 1199              		@ args = 4, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              	.LVL134:
 1202 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1203              		.cfi_def_cfa_offset 36
 1204              		.cfi_offset 4, -36
 1205              		.cfi_offset 5, -32
 1206              		.cfi_offset 6, -28
 1207              		.cfi_offset 7, -24
 1208              		.cfi_offset 8, -20
 1209              		.cfi_offset 9, -16
 1210              		.cfi_offset 10, -12
 1211              		.cfi_offset 11, -8
 1212              		.cfi_offset 14, -4
 333:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1213              		.loc 2 333 0
 1214 0004 004050E2 		subs	r4, r0, #0
 329:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int ret;
 1215              		.loc 2 329 0
 1216 0008 14D04DE2 		sub	sp, sp, #20
 1217              		.cfi_def_cfa_offset 56
 329:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int ret;
 1218              		.loc 2 329 0
 1219 000c 38709DE5 		ldr	r7, [sp, #56]
 333:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1220              		.loc 2 333 0
 1221 0010 0200001A 		bne	.L164
 1222              	.LVL135:
 1223              	.L166:
 335:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1224              		.loc 2 335 0
 1225 0014 BC029FE5 		ldr	r0, .L197
 1226              	.LVL136:
 1227              	.L163:
 564:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1228              		.loc 2 564 0
 1229 0018 14D08DE2 		add	sp, sp, #20
 1230              		.cfi_remember_state
 1231              		.cfi_def_cfa_offset 36
 1232              		@ sp needed
 1233 001c F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1234              	.LVL137:
 1235              	.L164:
 1236              		.cfi_restore_state
 333:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1237              		.loc 2 333 0 discriminator 1
 1238 0020 00A094E5 		ldr	r10, [r4]
 1239 0024 0390A0E1 		mov	r9, r3
 1240 0028 00005AE3 		cmp	r10, #0
 1241 002c 00005713 		cmpne	r7, #0
 1242 0030 0130A003 		moveq	r3, #1
 1243              	.LVL138:
 1244 0034 0030A013 		movne	r3, #0
 1245 0038 F5FFFF0A 		beq	.L166
 338:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     block_size = mbedtls_cipher_get_block_size( ctx );
 1246              		.loc 2 338 0
 1247 003c 003087E5 		str	r3, [r7]
 1248 0040 0180A0E1 		mov	r8, r1
 1249 0044 0250A0E1 		mov	r5, r2
 339:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1250              		.loc 2 339 0
 1251 0048 FEFFFFEB 		bl	mbedtls_cipher_get_block_size
 1252              	.LVL139:
 341:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1253              		.loc 2 341 0
 1254 004c 01B0DAE5 		ldrb	fp, [r10, #1]	@ zero_extendqisi2
 339:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1255              		.loc 2 339 0
 1256 0050 0060A0E1 		mov	r6, r0
 1257              	.LVL140:
 341:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1258              		.loc 2 341 0
 1259 0054 01005BE3 		cmp	fp, #1
 1260 0058 0C00001A 		bne	.L167
 343:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 1261              		.loc 2 343 0
 1262 005c 020050E1 		cmp	r0, r2
 1263 0060 9A00001A 		bne	.L180
 348:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, input, output ) ) )
 1264              		.loc 2 348 0
 1265 0064 18309AE5 		ldr	r3, [r10, #24]
 1266 0068 0120A0E1 		mov	r2, r1
 1267              	.LVL141:
 346:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1268              		.loc 2 346 0
 1269 006c 000087E5 		str	r0, [r7]
 348:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, input, output ) ) )
 1270              		.loc 2 348 0
 1271 0070 D810D4E1 		ldrsb	r1, [r4, #8]
 1272              	.LVL142:
 1273 0074 04E093E5 		ldr	lr, [r3, #4]
 1274 0078 0930A0E1 		mov	r3, r9
 1275 007c 3C0094E5 		ldr	r0, [r4, #60]
 1276              	.LVL143:
 1277 0080 0EC0A0E1 		mov	ip, lr
 564:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1278              		.loc 2 564 0
 1279 0084 14D08DE2 		add	sp, sp, #20
 1280              		.cfi_remember_state
 1281              		.cfi_def_cfa_offset 36
 1282              		@ sp needed
 1283 0088 F04FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1284              		.cfi_restore 14
 1285              		.cfi_restore 11
 1286              		.cfi_restore 10
 1287              		.cfi_restore 9
 1288              		.cfi_restore 8
 1289              		.cfi_restore 7
 1290              		.cfi_restore 6
 1291              		.cfi_restore 5
 1292              		.cfi_restore 4
 1293              		.cfi_def_cfa_offset 0
 1294              	.LVL144:
 348:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, input, output ) ) )
 1295              		.loc 2 348 0
 1296 008c 1CFF2FE1 		bx	ip
 1297              	.LVL145:
 1298              	.L167:
 1299              		.cfi_restore_state
 358:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1300              		.loc 2 358 0
 1301 0090 06005BE3 		cmp	fp, #6
 1302 0094 0700001A 		bne	.L168
 360:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_gcm_update( (mbedtls_gcm_context *) ctx->cipher_ctx, ilen, input,
 1303              		.loc 2 360 0
 1304 0098 002087E5 		str	r2, [r7]
 361:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                            output );
 1305              		.loc 2 361 0
 1306 009c 0930A0E1 		mov	r3, r9
 1307 00a0 0120A0E1 		mov	r2, r1
 1308              	.LVL146:
 1309 00a4 3C0094E5 		ldr	r0, [r4, #60]
 1310              	.LVL147:
 1311 00a8 0510A0E1 		mov	r1, r5
 1312              	.LVL148:
 564:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1313              		.loc 2 564 0
 1314 00ac 14D08DE2 		add	sp, sp, #20
 1315              		.cfi_remember_state
 1316              		.cfi_def_cfa_offset 36
 1317              		@ sp needed
 1318 00b0 F04FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1319              		.cfi_restore 14
 1320              		.cfi_restore 11
 1321              		.cfi_restore 10
 1322              		.cfi_restore 9
 1323              		.cfi_restore 8
 1324              		.cfi_restore 7
 1325              		.cfi_restore 6
 1326              		.cfi_restore 5
 1327              		.cfi_restore 4
 1328              		.cfi_def_cfa_offset 0
 1329              	.LVL149:
 361:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                            output );
 1330              		.loc 2 361 0
 1331 00b4 FEFFFFEA 		b	mbedtls_gcm_update
 1332              	.LVL150:
 1333              	.L168:
 1334              		.cfi_restore_state
 375:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1335              		.loc 2 375 0
 1336 00b8 000050E3 		cmp	r0, #0
 377:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1337              		.loc 2 377 0
 1338 00bc 18029F05 		ldreq	r0, .L197+4
 1339              	.LVL151:
 375:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1340              		.loc 2 375 0
 1341 00c0 D4FFFF0A 		beq	.L163
 380:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****        ( ctx->unprocessed_len != 0 || ilen % block_size ) )
 1342              		.loc 2 380 0
 1343 00c4 090051E1 		cmp	r1, r9
 1344 00c8 0700001A 		bne	.L169
 380:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****        ( ctx->unprocessed_len != 0 || ilen % block_size ) )
 1345              		.loc 2 380 0 is_stmt 0 discriminator 1
 1346 00cc 243094E5 		ldr	r3, [r4, #36]
 1347 00d0 000053E3 		cmp	r3, #0
 1348 00d4 CEFFFF1A 		bne	.L166
 381:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1349              		.loc 2 381 0 is_stmt 1
 1350 00d8 0610A0E1 		mov	r1, r6
 1351              	.LVL152:
 1352 00dc 0200A0E1 		mov	r0, r2
 1353 00e0 FEFFFFEB 		bl	__aeabi_uidivmod
 1354              	.LVL153:
 1355 00e4 000051E3 		cmp	r1, #0
 1356 00e8 C9FFFF1A 		bne	.L166
 1357              	.L169:
 387:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1358              		.loc 2 387 0
 1359 00ec 02005BE3 		cmp	fp, #2
 1360 00f0 5900001A 		bne	.L170
 1361              	.LVL154:
 1362              	.LBB13:
 394:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen <= block_size - ctx->unprocessed_len ) ||
 1363              		.loc 2 394 0
 1364 00f4 D830D4E1 		ldrsb	r3, [r4, #8]
 1365 00f8 240094E5 		ldr	r0, [r4, #36]
 1366 00fc 000053E3 		cmp	r3, #0
 1367 0100 0F00001A 		bne	.L171
 394:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen <= block_size - ctx->unprocessed_len ) ||
 1368              		.loc 2 394 0 is_stmt 0 discriminator 1
 1369 0104 0C3094E5 		ldr	r3, [r4, #12]
 1370 0108 000053E3 		cmp	r3, #0
 395:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ( ctx->operation == MBEDTLS_DECRYPT && NULL == ctx->add_padding &&
 1371              		.loc 2 395 0 is_stmt 1 discriminator 1
 1372 010c 003046E0 		sub	r3, r6, r0
 394:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen <= block_size - ctx->unprocessed_len ) ||
 1373              		.loc 2 394 0 discriminator 1
 1374 0110 0E00000A 		beq	.L193
 394:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen <= block_size - ctx->unprocessed_len ) ||
 1375              		.loc 2 394 0 is_stmt 0 discriminator 2
 1376 0114 030055E1 		cmp	r5, r3
 1377 0118 0E00008A 		bhi	.L174
 1378              	.L173:
 401:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ilen );
 1379              		.loc 2 401 0 is_stmt 1
 1380 011c 140080E2 		add	r0, r0, #20
 1381 0120 0520A0E1 		mov	r2, r5
 1382 0124 0810A0E1 		mov	r1, r8
 1383 0128 000084E0 		add	r0, r4, r0
 1384 012c FEFFFFEB 		bl	memcpy
 1385              	.LVL155:
 404:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( 0 );
 1386              		.loc 2 404 0
 1387 0130 243094E5 		ldr	r3, [r4, #36]
 1388 0134 055083E0 		add	r5, r3, r5
 1389              	.LVL156:
 1390 0138 245084E5 		str	r5, [r4, #36]
 1391              	.LVL157:
 1392              	.L178:
 476:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1393              		.loc 2 476 0
 1394 013c 0000A0E3 		mov	r0, #0
 1395 0140 B4FFFFEA 		b	.L163
 1396              	.LVL158:
 1397              	.L171:
 397:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              ( ctx->operation == MBEDTLS_ENCRYPT &&
 1398              		.loc 2 397 0
 1399 0144 010053E3 		cmp	r3, #1
 1400 0148 0200001A 		bne	.L174
 399:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1401              		.loc 2 399 0
 1402 014c 003046E0 		sub	r3, r6, r0
 1403              	.L193:
 398:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen < block_size - ctx->unprocessed_len ) )
 1404              		.loc 2 398 0
 1405 0150 030055E1 		cmp	r5, r3
 1406 0154 F0FFFF3A 		bcc	.L173
 1407              	.L174:
 411:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1408              		.loc 2 411 0
 1409 0158 000050E3 		cmp	r0, #0
 1410 015c 1800000A 		beq	.L175
 413:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1411              		.loc 2 413 0
 1412 0160 00A046E0 		sub	r10, r6, r0
 1413              	.LVL159:
 415:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     copy_len );
 1414              		.loc 2 415 0
 1415 0164 140080E2 		add	r0, r0, #20
 1416 0168 0A20A0E1 		mov	r2, r10
 1417 016c 0810A0E1 		mov	r1, r8
 1418 0170 000084E0 		add	r0, r4, r0
 1419 0174 FEFFFFEB 		bl	memcpy
 1420              	.LVL160:
 418:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, block_size, ctx->iv,
 1421              		.loc 2 418 0
 1422 0178 0430A0E1 		mov	r3, r4
 1423 017c D810D4E1 		ldrsb	r1, [r4, #8]
 1424 0180 142093E4 		ldr	r2, [r3], #20
 1425 0184 182092E5 		ldr	r2, [r2, #24]
 1426 0188 08028DE8 		stm	sp, {r3, r9}
 1427 018c 283084E2 		add	r3, r4, #40
 1428 0190 3C0094E5 		ldr	r0, [r4, #60]
 1429 0194 08B092E5 		ldr	fp, [r2, #8]
 1430 0198 0620A0E1 		mov	r2, r6
 1431 019c 3BFF2FE1 		blx	fp
 1432              	.LVL161:
 1433 01a0 000050E3 		cmp	r0, #0
 1434 01a4 9BFFFF1A 		bne	.L163
 425:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             output += block_size;
 1435              		.loc 2 425 0
 1436 01a8 003097E5 		ldr	r3, [r7]
 426:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ctx->unprocessed_len = 0;
 1437              		.loc 2 426 0
 1438 01ac 069089E0 		add	r9, r9, r6
 1439              	.LVL162:
 429:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ilen -= copy_len;
 1440              		.loc 2 429 0
 1441 01b0 0A8088E0 		add	r8, r8, r10
 1442              	.LVL163:
 430:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 1443              		.loc 2 430 0
 1444 01b4 0A5045E0 		sub	r5, r5, r10
 1445              	.LVL164:
 425:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             output += block_size;
 1446              		.loc 2 425 0
 1447 01b8 063083E0 		add	r3, r3, r6
 1448 01bc 003087E5 		str	r3, [r7]
 427:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1449              		.loc 2 427 0
 1450 01c0 240084E5 		str	r0, [r4, #36]
 1451              	.LVL165:
 1452              	.L175:
 436:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1453              		.loc 2 436 0
 1454 01c4 000055E3 		cmp	r5, #0
 1455 01c8 DBFFFF0A 		beq	.L178
 447:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( copy_len == 0 &&
 1456              		.loc 2 447 0
 1457 01cc 0610A0E1 		mov	r1, r6
 1458 01d0 0500A0E1 		mov	r0, r5
 1459 01d4 FEFFFFEB 		bl	__aeabi_uidivmod
 1460              	.LVL166:
 448:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation == MBEDTLS_DECRYPT &&
 1461              		.loc 2 448 0
 1462 01d8 00A051E2 		subs	r10, r1, #0
 1463 01dc 0500001A 		bne	.L177
 448:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation == MBEDTLS_DECRYPT &&
 1464              		.loc 2 448 0 is_stmt 0 discriminator 1
 1465 01e0 D830D4E1 		ldrsb	r3, [r4, #8]
 1466 01e4 000053E3 		cmp	r3, #0
 1467 01e8 0200001A 		bne	.L177
 449:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 NULL != ctx->add_padding)
 1468              		.loc 2 449 0 is_stmt 1
 1469 01ec 0C3094E5 		ldr	r3, [r4, #12]
 1470 01f0 000053E3 		cmp	r3, #0
 1471 01f4 06A0A011 		movne	r10, r6
 1472              	.L177:
 455:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     copy_len );
 1473              		.loc 2 455 0
 1474 01f8 0A5045E0 		sub	r5, r5, r10
 1475              	.LVL167:
 1476 01fc 0A20A0E1 		mov	r2, r10
 1477 0200 051088E0 		add	r1, r8, r5
 1478 0204 140084E2 		add	r0, r4, #20
 1479 0208 FEFFFFEB 		bl	memcpy
 1480              	.LVL168:
 458:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ilen -= copy_len;
 1481              		.loc 2 458 0
 1482 020c 243094E5 		ldr	r3, [r4, #36]
 465:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1483              		.loc 2 465 0
 1484 0210 000055E3 		cmp	r5, #0
 458:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ilen -= copy_len;
 1485              		.loc 2 458 0
 1486 0214 0AA083E0 		add	r10, r3, r10
 1487 0218 24A084E5 		str	r10, [r4, #36]
 1488              	.LVL169:
 465:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1489              		.loc 2 465 0
 1490 021c C6FFFF0A 		beq	.L178
 467:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, ilen, ctx->iv, input, output ) ) )
 1491              		.loc 2 467 0
 1492 0220 003094E5 		ldr	r3, [r4]
 1493 0224 0520A0E1 		mov	r2, r5
 1494 0228 D810D4E1 		ldrsb	r1, [r4, #8]
 1495 022c 183093E5 		ldr	r3, [r3, #24]
 1496 0230 00038DE8 		stm	sp, {r8, r9}
 1497 0234 3C0094E5 		ldr	r0, [r4, #60]
 1498 0238 086093E5 		ldr	r6, [r3, #8]
 1499              	.LVL170:
 1500 023c 283084E2 		add	r3, r4, #40
 1501 0240 36FF2FE1 		blx	r6
 1502              	.LVL171:
 1503 0244 000050E3 		cmp	r0, #0
 473:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 1504              		.loc 2 473 0
 1505 0248 00309705 		ldreq	r3, [r7]
 1506 024c 05508300 		addeq	r5, r3, r5
 1507              	.LVL172:
 467:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->operation, ilen, ctx->iv, input, output ) ) )
 1508              		.loc 2 467 0
 1509 0250 70FFFF1A 		bne	.L163
 1510              	.L195:
 1511              	.LBE13:
 521:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1512              		.loc 2 521 0
 1513 0254 005087E5 		str	r5, [r7]
 523:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1514              		.loc 2 523 0
 1515 0258 6EFFFFEA 		b	.L163
 1516              	.LVL173:
 1517              	.L170:
 481:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1518              		.loc 2 481 0
 1519 025c 03005BE3 		cmp	fp, #3
 1520 0260 0C00001A 		bne	.L179
 483:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation, ilen, &ctx->unprocessed_len, ctx->iv,
 1521              		.loc 2 483 0
 1522 0264 18309AE5 		ldr	r3, [r10, #24]
 484:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 input, output ) ) )
 1523              		.loc 2 484 0
 1524 0268 282084E2 		add	r2, r4, #40
 483:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation, ilen, &ctx->unprocessed_len, ctx->iv,
 1525              		.loc 2 483 0
 1526 026c D810D4E1 		ldrsb	r1, [r4, #8]
 1527 0270 00208DE5 		str	r2, [sp]
 1528 0274 0520A0E1 		mov	r2, r5
 1529 0278 00038DE9 		stmib	sp, {r8, r9}
 1530 027c 0C6093E5 		ldr	r6, [r3, #12]
 1531              	.LVL174:
 1532 0280 243084E2 		add	r3, r4, #36
 1533 0284 3C0094E5 		ldr	r0, [r4, #60]
 1534 0288 36FF2FE1 		blx	r6
 1535              	.LVL175:
 1536              	.L196:
 514:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv,
 1537              		.loc 2 514 0
 1538 028c 000050E3 		cmp	r0, #0
 1539 0290 EFFFFF0A 		beq	.L195
 1540 0294 5FFFFFEA 		b	.L163
 1541              	.LVL176:
 1542              	.L179:
 512:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1543              		.loc 2 512 0
 1544 0298 05005BE3 		cmp	fp, #5
 563:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1545              		.loc 2 563 0
 1546 029c 3C009F15 		ldrne	r0, .L197+8
 512:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1547              		.loc 2 512 0
 1548 02a0 5CFFFF1A 		bne	.L163
 514:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv,
 1549              		.loc 2 514 0
 1550 02a4 18309AE5 		ldr	r3, [r10, #24]
 516:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1551              		.loc 2 516 0
 1552 02a8 142084E2 		add	r2, r4, #20
 514:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ilen, &ctx->unprocessed_len, ctx->iv,
 1553              		.loc 2 514 0
 1554 02ac 00208DE5 		str	r2, [sp]
 1555 02b0 0510A0E1 		mov	r1, r5
 1556 02b4 00038DE9 		stmib	sp, {r8, r9}
 1557 02b8 242084E2 		add	r2, r4, #36
 1558 02bc 106093E5 		ldr	r6, [r3, #16]
 1559              	.LVL177:
 1560 02c0 283084E2 		add	r3, r4, #40
 1561 02c4 3C0094E5 		ldr	r0, [r4, #60]
 1562 02c8 36FF2FE1 		blx	r6
 1563              	.LVL178:
 1564 02cc EEFFFFEA 		b	.L196
 1565              	.LVL179:
 1566              	.L180:
 344:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1567              		.loc 2 344 0
 1568 02d0 0C009FE5 		ldr	r0, .L197+12
 1569              	.LVL180:
 1570 02d4 4FFFFFEA 		b	.L163
 1571              	.L198:
 1572              		.align	2
 1573              	.L197:
 1574 02d8 009FFFFF 		.word	-24832
 1575 02dc 809CFFFF 		.word	-25472
 1576 02e0 809FFFFF 		.word	-24704
 1577 02e4 809DFFFF 		.word	-25216
 1578              		.cfi_endproc
 1579              	.LFE20:
 1581              		.section	.text.mbedtls_cipher_finish,"ax",%progbits
 1582              		.align	2
 1583              		.global	mbedtls_cipher_finish
 1584              		.syntax unified
 1585              		.arm
 1586              		.fpu neon
 1588              	mbedtls_cipher_finish:
 1589              	.LFB30:
 736:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_WITH_PADDING */
 737:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 738:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_finish( mbedtls_cipher_context_t *ctx,
 739:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                    unsigned char *output, size_t *olen )
 740:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 1590              		.loc 2 740 0
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 0
 1593              		@ frame_needed = 0, uses_anonymous_args = 0
 1594              	.LVL181:
 1595 0000 F7402DE9 		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1596              		.cfi_def_cfa_offset 32
 1597              		.cfi_offset 4, -20
 1598              		.cfi_offset 5, -16
 1599              		.cfi_offset 6, -12
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 741:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info || NULL == olen )
 1602              		.loc 2 741 0
 1603 0004 007050E2 		subs	r7, r0, #0
 1604 0008 5200000A 		beq	.L209
 1605              		.loc 2 741 0 is_stmt 0 discriminator 1
 1606 000c 00E097E5 		ldr	lr, [r7]
 1607 0010 000052E3 		cmp	r2, #0
 1608 0014 00005E13 		cmpne	lr, #0
 1609 0018 0150A003 		moveq	r5, #1
 1610 001c 0050A013 		movne	r5, #0
 1611 0020 4C00000A 		beq	.L209
 742:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 743:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 744:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *olen = 0;
 745:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 746:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CFB == ctx->cipher_info->mode ||
 1612              		.loc 2 746 0 is_stmt 1
 1613 0024 0140DEE5 		ldrb	r4, [lr, #1]	@ zero_extendqisi2
 744:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1614              		.loc 2 744 0
 1615 0028 005082E5 		str	r5, [r2]
 747:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_OFB == ctx->cipher_info->mode ||
 748:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CTR == ctx->cipher_info->mode ||
 749:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_GCM == ctx->cipher_info->mode ||
 1616              		.loc 2 749 0
 1617 002c 03C044E2 		sub	ip, r4, #3
 750:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_XTS == ctx->cipher_info->mode ||
 1618              		.loc 2 750 0
 1619 0030 090054E3 		cmp	r4, #9
 1620 0034 04005C13 		cmpne	ip, #4
 1621 0038 0130A093 		movls	r3, #1
 1622 003c 0030A083 		movhi	r3, #0
 1623 0040 4600009A 		bls	.L210
 751:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_STREAM == ctx->cipher_info->mode )
 752:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 753:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 754:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 755:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 756:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( ( MBEDTLS_CIPHER_CHACHA20          == ctx->cipher_info->type ) ||
 1624              		.loc 2 756 0
 1625 0044 00C0DEE5 		ldrb	ip, [lr]	@ zero_extendqisi2
 1626 0048 48C04CE2 		sub	ip, ip, #72
 1627 004c 01005CE3 		cmp	ip, #1
 1628 0050 0500009A 		bls	.L199
 757:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****          ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type ) )
 758:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 759:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 760:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 761:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 762:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_ECB == ctx->cipher_info->mode )
 1629              		.loc 2 762 0
 1630 0054 010054E3 		cmp	r4, #1
 1631 0058 0600001A 		bne	.L201
 1632              	.L203:
 763:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 764:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ctx->unprocessed_len != 0 )
 1633              		.loc 2 764 0
 1634 005c 243097E5 		ldr	r3, [r7, #36]
 1635              	.LBB19:
 1636              	.LBB20:
 765:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 766:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 767:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 768:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 769:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 770:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_CBC)
 771:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CBC == ctx->cipher_info->mode )
 772:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 773:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         int ret = 0;
 774:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 775:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( MBEDTLS_ENCRYPT == ctx->operation )
 776:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 777:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             /* check for 'no padding' mode */
 778:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( NULL == ctx->add_padding )
 779:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             {
 780:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 if( 0 != ctx->unprocessed_len )
 781:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 782:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 783:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 return( 0 );
 784:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             }
 785:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 786:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ctx->add_padding( ctx->unprocessed_data, mbedtls_cipher_get_iv_size( ctx ),
 787:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->unprocessed_len );
 788:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 789:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         else if( mbedtls_cipher_get_block_size( ctx ) != ctx->unprocessed_len )
 790:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 791:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             /*
 792:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              * For decrypt operations, expect a full block,
 793:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              * or an empty block if no padding
 794:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              */
 795:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             if( NULL == ctx->add_padding && 0 == ctx->unprocessed_len )
 796:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 return( 0 );
 797:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 798:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_FULL_BLOCK_EXPECTED );
 1637              		.loc 2 798 0
 1638 0060 000053E3 		cmp	r3, #0
 1639 0064 04319FE5 		ldr	r3, .L219
 1640 0068 0030A003 		moveq	r3, #0
 1641              	.LVL182:
 1642              	.L199:
 1643              	.LBE20:
 1644              	.LBE19:
 799:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 800:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 801:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* cipher block */
 802:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = ctx->cipher_info->base->cbc_func( ctx->cipher_ctx,
 803:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation, mbedtls_cipher_get_block_size( ctx ), ctx->iv,
 804:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->unprocessed_data, output ) ) )
 805:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 806:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 807:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 808:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 809:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* Set output size for decryption */
 810:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( MBEDTLS_DECRYPT == ctx->operation )
 811:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return ctx->get_padding( output, mbedtls_cipher_get_block_size( ctx ),
 812:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      olen );
 813:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 814:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* Set output size for encryption */
 815:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = mbedtls_cipher_get_block_size( ctx );
 816:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 817:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 818:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #else
 819:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     ((void) output);
 820:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_CBC */
 821:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 822:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 823:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1645              		.loc 2 823 0
 1646 006c 0300A0E1 		mov	r0, r3
 1647 0070 0CD08DE2 		add	sp, sp, #12
 1648              		.cfi_remember_state
 1649              		.cfi_def_cfa_offset 20
 1650              		@ sp needed
 1651 0074 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1652              	.LVL183:
 1653              	.L201:
 1654              		.cfi_restore_state
 771:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 1655              		.loc 2 771 0
 1656 0078 020054E3 		cmp	r4, #2
 1657 007c 3900001A 		bne	.L213
 1658              	.LBB28:
 1659              	.LBB25:
 775:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1660              		.loc 2 775 0
 1661 0080 D830D7E1 		ldrsb	r3, [r7, #8]
 1662 0084 0740A0E1 		mov	r4, r7
 1663 0088 0250A0E1 		mov	r5, r2
 1664 008c 0160A0E1 		mov	r6, r1
 1665              	.LVL184:
 1666 0090 010053E3 		cmp	r3, #1
 1667 0094 2200001A 		bne	.L202
 1668              	.LVL185:
 778:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             {
 1669              		.loc 2 778 0
 1670 0098 0C3097E5 		ldr	r3, [r7, #12]
 1671 009c 000053E3 		cmp	r3, #0
 1672 00a0 EDFFFF0A 		beq	.L203
 1673              	.LBB21:
 1674              	.LBB22:
 423:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 424:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 425:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief        This function returns the mode of operation for
 426:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *               the cipher. For example, MBEDTLS_MODE_CBC.
 427:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 428:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param ctx    The context of the cipher. Must be initialized.
 429:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 430:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return       The mode of operation.
 431:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return       #MBEDTLS_MODE_NONE if \p ctx has not been initialized.
 432:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 433:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** static inline mbedtls_cipher_mode_t mbedtls_cipher_get_cipher_mode( const mbedtls_cipher_context_t 
 434:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** {
 435:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     if( NULL == ctx || NULL == ctx->cipher_info )
 436:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****         return MBEDTLS_MODE_NONE;
 437:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 438:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     return ctx->cipher_info->mode;
 439:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** }
 440:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 441:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** /**
 442:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \brief       This function returns the size of the IV or nonce
 443:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *              of the cipher, in Bytes.
 444:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 445:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \param ctx   The context of the cipher. Must be initialized.
 446:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  *
 447:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return      The recommended IV size if no IV has been set.
 448:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return      \c 0 for ciphers not using an IV or a nonce.
 449:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  * \return      The actual size if an IV has been set.
 450:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****  */
 451:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** static inline int mbedtls_cipher_get_iv_size( const mbedtls_cipher_context_t *ctx )
 452:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** {
 453:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     if( NULL == ctx || NULL == ctx->cipher_info )
 454:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****         return 0;
 455:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 456:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     if( ctx->iv_size != 0 )
 1675              		.loc 1 456 0
 1676 00a4 381097E5 		ldr	r1, [r7, #56]
 1677              	.LVL186:
 1678              	.LBE22:
 1679              	.LBE21:
 786:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->unprocessed_len );
 1680              		.loc 2 786 0
 1681 00a8 140087E2 		add	r0, r7, #20
 1682              	.LVL187:
 1683 00ac 242097E5 		ldr	r2, [r7, #36]
 1684              	.LVL188:
 1685              	.LBB24:
 1686              	.LBB23:
 1687              		.loc 1 456 0
 1688 00b0 000051E3 		cmp	r1, #0
 457:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****         return (int) ctx->iv_size;
 458:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h **** 
 459:D:\Work\DeviceTester\amazon-freertos\lib\third_party\mbedtls\include/mbedtls\cipher.h ****     return (int) ctx->cipher_info->iv_size;
 1689              		.loc 1 459 0
 1690 00b4 0C109E05 		ldreq	r1, [lr, #12]
 1691              	.LVL189:
 1692              	.LBE23:
 1693              	.LBE24:
 786:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                     ctx->unprocessed_len );
 1694              		.loc 2 786 0
 1695 00b8 33FF2FE1 		blx	r3
 1696              	.LVL190:
 1697              	.L206:
 802:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 ctx->operation, mbedtls_cipher_get_block_size( ctx ), ctx->iv,
 1698              		.loc 2 802 0
 1699 00bc 0400A0E1 		mov	r0, r4
 1700 00c0 FEFFFFEB 		bl	mbedtls_cipher_get_block_size
 1701              	.LVL191:
 1702 00c4 0430A0E1 		mov	r3, r4
 1703 00c8 D810D4E1 		ldrsb	r1, [r4, #8]
 1704 00cc 142093E4 		ldr	r2, [r3], #20
 1705 00d0 182092E5 		ldr	r2, [r2, #24]
 1706 00d4 48008DE8 		stm	sp, {r3, r6}
 1707 00d8 283084E2 		add	r3, r4, #40
 1708 00dc 087092E5 		ldr	r7, [r2, #8]
 1709 00e0 0020A0E1 		mov	r2, r0
 1710 00e4 3C0094E5 		ldr	r0, [r4, #60]
 1711 00e8 37FF2FE1 		blx	r7
 1712              	.LVL192:
 1713 00ec 003050E2 		subs	r3, r0, #0
 1714 00f0 DDFFFF1A 		bne	.L199
 810:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return ctx->get_padding( output, mbedtls_cipher_get_block_size( ctx ),
 1715              		.loc 2 810 0
 1716 00f4 D820D4E1 		ldrsb	r2, [r4, #8]
 811:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      olen );
 1717              		.loc 2 811 0
 1718 00f8 0400A0E1 		mov	r0, r4
 1719              	.LVL193:
 810:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return ctx->get_padding( output, mbedtls_cipher_get_block_size( ctx ),
 1720              		.loc 2 810 0
 1721 00fc 000052E3 		cmp	r2, #0
 1722 0100 1100001A 		bne	.L207
 1723              	.LVL194:
 811:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      olen );
 1724              		.loc 2 811 0
 1725 0104 FEFFFFEB 		bl	mbedtls_cipher_get_block_size
 1726              	.LVL195:
 1727 0108 103094E5 		ldr	r3, [r4, #16]
 1728              	.LVL196:
 1729 010c 0010A0E1 		mov	r1, r0
 1730 0110 0520A0E1 		mov	r2, r5
 1731 0114 0600A0E1 		mov	r0, r6
 1732              	.LBE25:
 1733              	.LBE28:
 1734              		.loc 2 823 0
 1735 0118 0CD08DE2 		add	sp, sp, #12
 1736              		.cfi_remember_state
 1737              		.cfi_def_cfa_offset 20
 1738              		@ sp needed
 1739 011c F040BDE8 		pop	{r4, r5, r6, r7, lr}
 1740              		.cfi_restore 14
 1741              		.cfi_restore 7
 1742              		.cfi_restore 6
 1743              		.cfi_restore 5
 1744              		.cfi_restore 4
 1745              		.cfi_def_cfa_offset 0
 1746              	.LVL197:
 1747              	.LBB29:
 1748              	.LBB26:
 811:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      olen );
 1749              		.loc 2 811 0
 1750 0120 13FF2FE1 		bx	r3
 1751              	.LVL198:
 1752              	.L202:
 1753              		.cfi_restore_state
 789:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 1754              		.loc 2 789 0
 1755 0124 FEFFFFEB 		bl	mbedtls_cipher_get_block_size
 1756              	.LVL199:
 1757 0128 243097E5 		ldr	r3, [r7, #36]
 1758 012c 030050E1 		cmp	r0, r3
 1759 0130 E1FFFF0A 		beq	.L206
 795:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                 return( 0 );
 1760              		.loc 2 795 0
 1761 0134 0C2097E5 		ldr	r2, [r7, #12]
 1762              	.LVL200:
 1763              	.LBE26:
 1764              	.LBE29:
 767:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1765              		.loc 2 767 0
 1766 0138 000052E3 		cmp	r2, #0
 1767 013c 00005303 		cmpeq	r3, #0
 1768 0140 28309FE5 		ldr	r3, .L219
 1769 0144 0030A003 		moveq	r3, #0
 1770 0148 C7FFFFEA 		b	.L199
 1771              	.LVL201:
 1772              	.L207:
 1773              	.LBB30:
 1774              	.LBB27:
 815:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 1775              		.loc 2 815 0
 1776 014c FEFFFFEB 		bl	mbedtls_cipher_get_block_size
 1777              	.LVL202:
 1778 0150 000085E5 		str	r0, [r5]
 1779 0154 C4FFFFEA 		b	.L199
 1780              	.LVL203:
 1781              	.L209:
 1782              	.LBE27:
 1783              	.LBE30:
 742:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1784              		.loc 2 742 0
 1785 0158 14309FE5 		ldr	r3, .L219+4
 1786 015c C2FFFFEA 		b	.L199
 1787              	.L210:
 767:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1788              		.loc 2 767 0
 1789 0160 0530A0E1 		mov	r3, r5
 1790 0164 C0FFFFEA 		b	.L199
 1791              	.L213:
 822:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1792              		.loc 2 822 0
 1793 0168 08309FE5 		ldr	r3, .L219+8
 1794 016c BEFFFFEA 		b	.L199
 1795              	.L220:
 1796              		.align	2
 1797              	.L219:
 1798 0170 809DFFFF 		.word	-25216
 1799 0174 009FFFFF 		.word	-24832
 1800 0178 809FFFFF 		.word	-24704
 1801              		.cfi_endproc
 1802              	.LFE30:
 1804              		.section	.text.mbedtls_cipher_set_padding_mode,"ax",%progbits
 1805              		.align	2
 1806              		.global	mbedtls_cipher_set_padding_mode
 1807              		.syntax unified
 1808              		.arm
 1809              		.fpu neon
 1811              	mbedtls_cipher_set_padding_mode:
 1812              	.LFB31:
 824:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 825:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_WITH_PADDING)
 826:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_set_padding_mode( mbedtls_cipher_context_t *ctx, mbedtls_cipher_padding_t mode )
 827:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 1813              		.loc 2 827 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817              		@ link register save eliminated.
 1818              	.LVL204:
 828:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx ||
 1819              		.loc 2 828 0
 1820 0000 003050E2 		subs	r3, r0, #0
 1821 0004 2200000A 		beq	.L230
 829:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_MODE_CBC != ctx->cipher_info->mode )
 1822              		.loc 2 829 0 discriminator 1
 1823 0008 002093E5 		ldr	r2, [r3]
 828:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx ||
 1824              		.loc 2 828 0 discriminator 1
 1825 000c 0120D2E5 		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 1826 0010 020052E3 		cmp	r2, #2
 1827 0014 1E00001A 		bne	.L230
 830:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 831:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 832:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 833:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 834:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     switch( mode )
 1828              		.loc 2 834 0
 1829 0018 040051E3 		cmp	r1, #4
 1830 001c 01F19F97 		ldrls	pc, [pc, r1, asl #2]
 1831 0020 1D0000EA 		b	.L231
 1832              	.L224:
 1833 0024 38000000 		.word	.L223
 1834 0028 50000000 		.word	.L225
 1835 002c 60000000 		.word	.L226
 1836 0030 70000000 		.word	.L227
 1837 0034 80000000 		.word	.L228
 1838              	.L223:
 835:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 836:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_PKCS7)
 837:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_PKCS7:
 838:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->add_padding = add_pkcs_padding;
 1839              		.loc 2 838 0
 1840 0038 64209FE5 		ldr	r2, .L233
 1841 003c 0C2083E5 		str	r2, [r3, #12]
 839:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_pkcs_padding;
 1842              		.loc 2 839 0
 1843 0040 60209FE5 		ldr	r2, .L233+4
 1844              	.L232:
 840:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 841:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 842:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS)
 843:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_ONE_AND_ZEROS:
 844:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->add_padding = add_one_and_zeros_padding;
 845:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_one_and_zeros_padding;
 1845              		.loc 2 845 0
 1846 0044 102083E5 		str	r2, [r3, #16]
 846:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 847:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 848:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN)
 849:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_ZEROS_AND_LEN:
 850:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->add_padding = add_zeros_and_len_padding;
 851:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_zeros_and_len_padding;
 852:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 853:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 854:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_PADDING_ZEROS)
 855:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_ZEROS:
 856:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->add_padding = add_zeros_padding;
 857:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_zeros_padding;
 858:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 859:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 860:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     case MBEDTLS_PADDING_NONE:
 861:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->add_padding = NULL;
 862:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_no_padding;
 863:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 864:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 865:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     default:
 866:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 867:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 868:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 869:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 1847              		.loc 2 869 0
 1848 0048 0000A0E3 		mov	r0, #0
 1849              	.LVL205:
 846:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 1850              		.loc 2 846 0
 1851 004c 1EFF2FE1 		bx	lr
 1852              	.LVL206:
 1853              	.L225:
 844:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_one_and_zeros_padding;
 1854              		.loc 2 844 0
 1855 0050 54209FE5 		ldr	r2, .L233+8
 1856 0054 0C2083E5 		str	r2, [r3, #12]
 845:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 1857              		.loc 2 845 0
 1858 0058 50209FE5 		ldr	r2, .L233+12
 1859 005c F8FFFFEA 		b	.L232
 1860              	.L226:
 850:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_zeros_and_len_padding;
 1861              		.loc 2 850 0
 1862 0060 4C209FE5 		ldr	r2, .L233+16
 1863 0064 0C2083E5 		str	r2, [r3, #12]
 851:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 1864              		.loc 2 851 0
 1865 0068 48209FE5 		ldr	r2, .L233+20
 1866 006c F4FFFFEA 		b	.L232
 1867              	.L227:
 856:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_zeros_padding;
 1868              		.loc 2 856 0
 1869 0070 44209FE5 		ldr	r2, .L233+24
 1870 0074 0C2083E5 		str	r2, [r3, #12]
 857:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 1871              		.loc 2 857 0
 1872 0078 40209FE5 		ldr	r2, .L233+28
 1873 007c F0FFFFEA 		b	.L232
 1874              	.L228:
 862:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 1875              		.loc 2 862 0
 1876 0080 3C209FE5 		ldr	r2, .L233+32
 861:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ctx->get_padding = get_no_padding;
 1877              		.loc 2 861 0
 1878 0084 0000A0E3 		mov	r0, #0
 1879              	.LVL207:
 1880 0088 0C0083E5 		str	r0, [r3, #12]
 862:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         break;
 1881              		.loc 2 862 0
 1882 008c 102083E5 		str	r2, [r3, #16]
 863:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1883              		.loc 2 863 0
 1884 0090 1EFF2FE1 		bx	lr
 1885              	.LVL208:
 1886              	.L230:
 831:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1887              		.loc 2 831 0
 1888 0094 2C009FE5 		ldr	r0, .L233+36
 1889              	.LVL209:
 1890 0098 1EFF2FE1 		bx	lr
 1891              	.LVL210:
 1892              	.L231:
 866:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 1893              		.loc 2 866 0
 1894 009c 28009FE5 		ldr	r0, .L233+40
 1895              	.LVL211:
 870:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1896              		.loc 2 870 0
 1897 00a0 1EFF2FE1 		bx	lr
 1898              	.L234:
 1899              		.align	2
 1900              	.L233:
 1901 00a4 00000000 		.word	add_pkcs_padding
 1902 00a8 00000000 		.word	get_pkcs_padding
 1903 00ac 00000000 		.word	add_one_and_zeros_padding
 1904 00b0 00000000 		.word	get_one_and_zeros_padding
 1905 00b4 00000000 		.word	add_zeros_and_len_padding
 1906 00b8 00000000 		.word	get_zeros_and_len_padding
 1907 00bc 00000000 		.word	add_zeros_padding
 1908 00c0 00000000 		.word	get_zeros_padding
 1909 00c4 00000000 		.word	get_no_padding
 1910 00c8 009FFFFF 		.word	-24832
 1911 00cc 809FFFFF 		.word	-24704
 1912              		.cfi_endproc
 1913              	.LFE31:
 1915              		.section	.text.mbedtls_cipher_setup,"ax",%progbits
 1916              		.align	2
 1917              		.global	mbedtls_cipher_setup
 1918              		.syntax unified
 1919              		.arm
 1920              		.fpu neon
 1922              	mbedtls_cipher_setup:
 1923              	.LFB15:
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == cipher_info || NULL == ctx )
 1924              		.loc 2 177 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 0
 1927              		@ frame_needed = 0, uses_anonymous_args = 0
 1928              	.LVL212:
 178:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1929              		.loc 2 178 0
 1930 0000 000050E3 		cmp	r0, #0
 1931 0004 00005113 		cmpne	r1, #0
 177:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == cipher_info || NULL == ctx )
 1932              		.loc 2 177 0
 1933 0008 70402DE9 		push	{r4, r5, r6, lr}
 1934              		.cfi_def_cfa_offset 16
 1935              		.cfi_offset 4, -16
 1936              		.cfi_offset 5, -12
 1937              		.cfi_offset 6, -8
 1938              		.cfi_offset 14, -4
 178:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 1939              		.loc 2 178 0
 1940 000c 0140A003 		moveq	r4, #1
 1941 0010 0040A013 		movne	r4, #0
 1942 0014 1000000A 		beq	.L237
 1943 0018 0150A0E1 		mov	r5, r1
 181:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1944              		.loc 2 181 0
 1945 001c 4020A0E3 		mov	r2, #64
 1946 0020 0410A0E1 		mov	r1, r4
 1947              	.LVL213:
 1948 0024 0060A0E1 		mov	r6, r0
 1949 0028 FEFFFFEB 		bl	memset
 1950              	.LVL214:
 183:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_ALLOC_FAILED );
 1951              		.loc 2 183 0
 1952 002c 183095E5 		ldr	r3, [r5, #24]
 1953 0030 1C3093E5 		ldr	r3, [r3, #28]
 1954 0034 33FF2FE1 		blx	r3
 1955              	.LVL215:
 1956 0038 000050E3 		cmp	r0, #0
 1957 003c 3C0086E5 		str	r0, [r6, #60]
 1958 0040 0700000A 		beq	.L238
 186:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1959              		.loc 2 186 0
 1960 0044 005086E5 		str	r5, [r6]
 193:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #else
 1961              		.loc 2 193 0
 1962 0048 0410A0E1 		mov	r1, r4
 1963 004c 0600A0E1 		mov	r0, r6
 1964 0050 FEFFFFEB 		bl	mbedtls_cipher_set_padding_mode
 1965              	.LVL216:
 199:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 1966              		.loc 2 199 0
 1967 0054 0400A0E1 		mov	r0, r4
 1968 0058 7080BDE8 		pop	{r4, r5, r6, pc}
 1969              	.LVL217:
 1970              	.L237:
 179:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1971              		.loc 2 179 0
 1972 005c 08009FE5 		ldr	r0, .L240
 1973              	.LVL218:
 1974 0060 7080BDE8 		pop	{r4, r5, r6, pc}
 1975              	.LVL219:
 1976              	.L238:
 184:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1977              		.loc 2 184 0
 1978 0064 04009FE5 		ldr	r0, .L240+4
 200:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 1979              		.loc 2 200 0
 1980 0068 7080BDE8 		pop	{r4, r5, r6, pc}
 1981              	.L241:
 1982              		.align	2
 1983              	.L240:
 1984 006c 009FFFFF 		.word	-24832
 1985 0070 809EFFFF 		.word	-24960
 1986              		.cfi_endproc
 1987              	.LFE15:
 1989              		.section	.text.mbedtls_cipher_write_tag,"ax",%progbits
 1990              		.align	2
 1991              		.global	mbedtls_cipher_write_tag
 1992              		.syntax unified
 1993              		.arm
 1994              		.fpu neon
 1996              	mbedtls_cipher_write_tag:
 1997              	.LFB32:
 871:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CIPHER_MODE_WITH_PADDING */
 872:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 873:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C) || defined(MBEDTLS_CHACHAPOLY_C)
 874:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_write_tag( mbedtls_cipher_context_t *ctx,
 875:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                       unsigned char *tag, size_t tag_len )
 876:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 1998              		.loc 2 876 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002              	.LVL220:
 877:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info || NULL == tag )
 2003              		.loc 2 877 0
 2004 0000 00C050E2 		subs	ip, r0, #0
 2005 0004 0F00000A 		beq	.L244
 876:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info || NULL == tag )
 2006              		.loc 2 876 0 discriminator 1
 2007 0008 04E02DE5 		str	lr, [sp, #-4]!
 2008              		.cfi_def_cfa_offset 4
 2009              		.cfi_offset 14, -4
 2010              		.loc 2 877 0 discriminator 1
 2011 000c 00E09CE5 		ldr	lr, [ip]
 2012 0010 000051E3 		cmp	r1, #0
 2013 0014 00005E13 		cmpne	lr, #0
 2014 0018 0100A003 		moveq	r0, #1
 2015              	.LVL221:
 2016 001c 0000A013 		movne	r0, #0
 2017 0020 0A00000A 		beq	.L246
 878:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 879:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 880:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_ENCRYPT != ctx->operation )
 2018              		.loc 2 880 0
 2019 0024 D830DCE1 		ldrsb	r3, [ip, #8]
 2020 0028 010053E3 		cmp	r3, #1
 2021 002c 0700001A 		bne	.L246
 881:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 882:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 883:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 884:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 2022              		.loc 2 884 0
 2023 0030 0130DEE5 		ldrb	r3, [lr, #1]	@ zero_extendqisi2
 2024 0034 060053E3 		cmp	r3, #6
 2025 0038 04F09D14 		ldrne	pc, [sp], #4
 885:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_gcm_finish( (mbedtls_gcm_context *) ctx->cipher_ctx, tag, tag_len );
 2026              		.loc 2 885 0
 2027 003c 3C009CE5 		ldr	r0, [ip, #60]
 886:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 887:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 888:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 889:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
 890:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 891:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* Don't allow truncated MAC for Poly1305 */
 892:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( tag_len != 16U )
 893:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 894:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 895:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_chachapoly_finish( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 896:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                       tag );
 897:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 898:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif
 899:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 900:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 901:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 2028              		.loc 2 901 0
 2029 0040 04E09DE4 		ldr	lr, [sp], #4
 2030              		.cfi_restore 14
 2031              		.cfi_def_cfa_offset 0
 885:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return mbedtls_gcm_finish( (mbedtls_gcm_context *) ctx->cipher_ctx, tag, tag_len );
 2032              		.loc 2 885 0
 2033 0044 FEFFFFEA 		b	mbedtls_gcm_finish
 2034              	.LVL222:
 2035              	.L244:
 878:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 2036              		.loc 2 878 0
 2037 0048 08009FE5 		ldr	r0, .L252
 2038              	.LVL223:
 2039 004c 1EFF2FE1 		bx	lr
 2040              	.L246:
 2041              		.cfi_def_cfa_offset 4
 2042              		.cfi_offset 14, -4
 2043 0050 00009FE5 		ldr	r0, .L252
 2044              		.loc 2 901 0
 2045 0054 04F09DE4 		ldr	pc, [sp], #4
 2046              	.L253:
 2047              		.align	2
 2048              	.L252:
 2049 0058 009FFFFF 		.word	-24832
 2050              		.cfi_endproc
 2051              	.LFE32:
 2053              		.section	.text.mbedtls_cipher_check_tag,"ax",%progbits
 2054              		.align	2
 2055              		.global	mbedtls_cipher_check_tag
 2056              		.syntax unified
 2057              		.arm
 2058              		.fpu neon
 2060              	mbedtls_cipher_check_tag:
 2061              	.LFB33:
 902:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 903:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_check_tag( mbedtls_cipher_context_t *ctx,
 904:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                       const unsigned char *tag, size_t tag_len )
 905:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 2062              		.loc 2 905 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 16
 2065              		@ frame_needed = 0, uses_anonymous_args = 0
 2066              	.LVL224:
 906:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char check_tag[16];
 907:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int ret;
 908:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 909:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( NULL == ctx || NULL == ctx->cipher_info ||
 2067              		.loc 2 909 0
 2068 0000 000050E3 		cmp	r0, #0
 2069 0004 2200000A 		beq	.L260
 2070              		.loc 2 909 0 is_stmt 0 discriminator 1
 2071 0008 00C090E5 		ldr	ip, [r0]
 2072 000c 00005CE3 		cmp	ip, #0
 2073 0010 1F00000A 		beq	.L260
 905:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     unsigned char check_tag[16];
 2074              		.loc 2 905 0 is_stmt 1 discriminator 2
 2075 0014 30402DE9 		push	{r4, r5, lr}
 2076              		.cfi_def_cfa_offset 12
 2077              		.cfi_offset 4, -12
 2078              		.cfi_offset 5, -8
 2079              		.cfi_offset 14, -4
 2080 0018 14D04DE2 		sub	sp, sp, #20
 2081              		.cfi_def_cfa_offset 32
 2082              		.loc 2 909 0 discriminator 2
 2083 001c D8E0D0E1 		ldrsb	lr, [r0, #8]
 2084 0020 00005EE3 		cmp	lr, #0
 2085 0024 1C00001A 		bne	.L262
 910:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         MBEDTLS_DECRYPT != ctx->operation )
 911:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 912:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 913:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 914:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 915:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 916:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 2086              		.loc 2 916 0
 2087 0028 01C0DCE5 		ldrb	ip, [ip, #1]	@ zero_extendqisi2
 2088 002c 06005CE3 		cmp	ip, #6
 2089 0030 1500001A 		bne	.L256
 917:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 918:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( tag_len > sizeof( check_tag ) )
 2090              		.loc 2 918 0
 2091 0034 100052E3 		cmp	r2, #16
 2092 0038 0250A0E1 		mov	r5, r2
 2093 003c 1600008A 		bhi	.L262
 2094 0040 0140A0E1 		mov	r4, r1
 919:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 920:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 921:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( 0 != ( ret = mbedtls_gcm_finish( (mbedtls_gcm_context *) ctx->cipher_ctx,
 2095              		.loc 2 921 0
 2096 0044 3C0090E5 		ldr	r0, [r0, #60]
 2097              	.LVL225:
 2098 0048 0D10A0E1 		mov	r1, sp
 2099              	.LVL226:
 2100 004c FEFFFFEB 		bl	mbedtls_gcm_finish
 2101              	.LVL227:
 2102 0050 000050E3 		cmp	r0, #0
 2103 0054 0030A001 		moveq	r3, r0
 2104 0058 0600000A 		beq	.L257
 2105              	.LVL228:
 2106              	.L254:
 922:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      check_tag, tag_len ) ) )
 923:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 924:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 925:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 926:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 927:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* Check the tag in "constant-time" */
 928:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( mbedtls_constant_time_memcmp( tag, check_tag, tag_len ) != 0 )
 929:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_AUTH_FAILED );
 930:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 931:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 932:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 933:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C */
 934:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 935:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
 936:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
 937:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 938:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* Don't allow truncated MAC for Poly1305 */
 939:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( tag_len != sizeof( check_tag ) )
 940:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
 941:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 942:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ret = mbedtls_chachapoly_finish( (mbedtls_chachapoly_context*) ctx->cipher_ctx,
 943:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                                      check_tag );
 944:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( ret != 0 )
 945:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
 946:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( ret );
 947:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
 948:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 949:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* Check the tag in "constant-time" */
 950:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( mbedtls_constant_time_memcmp( tag, check_tag, tag_len ) != 0 )
 951:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_AUTH_FAILED );
 952:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 953:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( 0 );
 954:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 955:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CHACHAPOLY_C */
 956:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 957:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 958:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 2107              		.loc 2 958 0
 2108 005c 14D08DE2 		add	sp, sp, #20
 2109              		.cfi_remember_state
 2110              		.cfi_def_cfa_offset 12
 2111              		@ sp needed
 2112 0060 3080BDE8 		pop	{r4, r5, pc}
 2113              	.LVL229:
 2114              	.L258:
 2115              		.cfi_restore_state
 2116              	.LBB33:
 2117              	.LBB34:
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 2118              		.loc 2 82 0
 2119 0064 0310D4E7 		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2120 0068 0320DDE7 		ldrb	r2, [sp, r3]	@ zero_extendqisi2
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         diff |= p1[i] ^ p2[i];
 2121              		.loc 2 81 0
 2122 006c 013083E2 		add	r3, r3, #1
 2123              	.LVL230:
  82:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 2124              		.loc 2 82 0
 2125 0070 021021E0 		eor	r1, r1, r2
 2126 0074 010080E1 		orr	r0, r0, r1
 2127              	.LVL231:
 2128              	.L257:
  81:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         diff |= p1[i] ^ p2[i];
 2129              		.loc 2 81 0
 2130 0078 030055E1 		cmp	r5, r3
 2131 007c F8FFFF1A 		bne	.L258
 2132              	.LVL232:
 2133              	.LBE34:
 2134              	.LBE33:
 928:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_AUTH_FAILED );
 2135              		.loc 2 928 0
 2136 0080 000050E3 		cmp	r0, #0
 929:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 2137              		.loc 2 929 0
 2138 0084 18009F15 		ldrne	r0, .L268
 928:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_AUTH_FAILED );
 2139              		.loc 2 928 0
 2140 0088 F3FFFF1A 		bne	.L254
 2141              	.LVL233:
 2142              	.L256:
 931:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 2143              		.loc 2 931 0
 2144 008c 0000A0E3 		mov	r0, #0
 2145 0090 F1FFFFEA 		b	.L254
 2146              	.LVL234:
 2147              	.L260:
 2148              		.cfi_def_cfa_offset 0
 2149              		.cfi_restore 4
 2150              		.cfi_restore 5
 2151              		.cfi_restore 14
 912:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
 2152              		.loc 2 912 0
 2153 0094 0C009FE5 		ldr	r0, .L268+4
 2154              	.LVL235:
 2155 0098 1EFF2FE1 		bx	lr
 2156              	.LVL236:
 2157              	.L262:
 2158              		.cfi_def_cfa_offset 32
 2159              		.cfi_offset 4, -12
 2160              		.cfi_offset 5, -8
 2161              		.cfi_offset 14, -4
 2162 009c 04009FE5 		ldr	r0, .L268+4
 2163              	.LVL237:
 2164 00a0 EDFFFFEA 		b	.L254
 2165              	.L269:
 2166              		.align	2
 2167              	.L268:
 2168 00a4 009DFFFF 		.word	-25344
 2169 00a8 009FFFFF 		.word	-24832
 2170              		.cfi_endproc
 2171              	.LFE33:
 2173              		.section	.text.mbedtls_cipher_crypt,"ax",%progbits
 2174              		.align	2
 2175              		.global	mbedtls_cipher_crypt
 2176              		.syntax unified
 2177              		.arm
 2178              		.fpu neon
 2180              	mbedtls_cipher_crypt:
 2181              	.LFB34:
 959:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C || MBEDTLS_CHACHAPOLY_C */
 960:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 961:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 962:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * Packet-oriented wrapper for non-AEAD modes
 963:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 964:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_crypt( mbedtls_cipher_context_t *ctx,
 965:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                   const unsigned char *iv, size_t iv_len,
 966:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                   const unsigned char *input, size_t ilen,
 967:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                   unsigned char *output, size_t *olen )
 968:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 2182              		.loc 2 968 0
 2183              		.cfi_startproc
 2184              		@ args = 12, pretend = 0, frame = 8
 2185              		@ frame_needed = 0, uses_anonymous_args = 0
 2186              	.LVL238:
 2187 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 2188              		.cfi_def_cfa_offset 20
 2189              		.cfi_offset 4, -20
 2190              		.cfi_offset 5, -16
 2191              		.cfi_offset 6, -12
 2192              		.cfi_offset 7, -8
 2193              		.cfi_offset 14, -4
 2194 0004 14D04DE2 		sub	sp, sp, #20
 2195              		.cfi_def_cfa_offset 40
 2196              		.loc 2 968 0
 2197 0008 0050A0E1 		mov	r5, r0
 2198 000c 0370A0E1 		mov	r7, r3
 2199 0010 2C609DE5 		ldr	r6, [sp, #44]
 2200 0014 30409DE5 		ldr	r4, [sp, #48]
 969:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     int ret;
 970:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     size_t finish_olen;
 971:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 972:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_set_iv( ctx, iv, iv_len ) ) != 0 )
 2201              		.loc 2 972 0
 2202 0018 FEFFFFEB 		bl	mbedtls_cipher_set_iv
 2203              	.LVL239:
 2204 001c 000050E3 		cmp	r0, #0
 2205 0020 1500001A 		bne	.L270
 973:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
 974:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 975:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_reset( ctx ) ) != 0 )
 2206              		.loc 2 975 0
 2207 0024 0500A0E1 		mov	r0, r5
 2208              	.LVL240:
 2209 0028 FEFFFFEB 		bl	mbedtls_cipher_reset
 2210              	.LVL241:
 2211 002c 000050E3 		cmp	r0, #0
 2212 0030 1100001A 		bne	.L270
 976:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
 977:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 978:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_update( ctx, input, ilen, output, olen ) ) != 0 )
 2213              		.loc 2 978 0
 2214 0034 00408DE5 		str	r4, [sp]
 2215 0038 0630A0E1 		mov	r3, r6
 2216 003c 28209DE5 		ldr	r2, [sp, #40]
 2217 0040 0710A0E1 		mov	r1, r7
 2218 0044 0500A0E1 		mov	r0, r5
 2219              	.LVL242:
 2220 0048 FEFFFFEB 		bl	mbedtls_cipher_update
 2221              	.LVL243:
 2222 004c 000050E3 		cmp	r0, #0
 2223 0050 0900001A 		bne	.L270
 979:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
 980:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 981:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( ( ret = mbedtls_cipher_finish( ctx, output + *olen, &finish_olen ) ) != 0 )
 2224              		.loc 2 981 0
 2225 0054 001094E5 		ldr	r1, [r4]
 2226 0058 0C208DE2 		add	r2, sp, #12
 2227 005c 0500A0E1 		mov	r0, r5
 2228              	.LVL244:
 2229 0060 011086E0 		add	r1, r6, r1
 2230 0064 FEFFFFEB 		bl	mbedtls_cipher_finish
 2231              	.LVL245:
 2232 0068 000050E3 		cmp	r0, #0
 982:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
 983:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 984:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     *olen += finish_olen;
 2233              		.loc 2 984 0
 2234 006c 00309405 		ldreq	r3, [r4]
 2235 0070 0C209D05 		ldreq	r2, [sp, #12]
 2236 0074 02308300 		addeq	r3, r3, r2
 2237 0078 00308405 		streq	r3, [r4]
 2238              	.L270:
 985:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 986:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( 0 );
 987:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 2239              		.loc 2 987 0
 2240 007c 14D08DE2 		add	sp, sp, #20
 2241              		.cfi_def_cfa_offset 20
 2242              		@ sp needed
 2243 0080 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 2244              		.cfi_endproc
 2245              	.LFE34:
 2247              		.section	.text.mbedtls_cipher_auth_encrypt,"ax",%progbits
 2248              		.align	2
 2249              		.global	mbedtls_cipher_auth_encrypt
 2250              		.syntax unified
 2251              		.arm
 2252              		.fpu neon
 2254              	mbedtls_cipher_auth_encrypt:
 2255              	.LFB35:
 988:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 989:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CIPHER_MODE_AEAD)
 990:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
 991:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * Packet-oriented encryption for AEAD modes
 992:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
 993:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_auth_encrypt( mbedtls_cipher_context_t *ctx,
 994:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *iv, size_t iv_len,
 995:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *ad, size_t ad_len,
 996:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *input, size_t ilen,
 997:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          unsigned char *output, size_t *olen,
 998:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          unsigned char *tag, size_t tag_len )
 999:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 2256              		.loc 2 999 0
 2257              		.cfi_startproc
 2258              		@ args = 28, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260              	.LVL246:
 2261 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 2262              		.cfi_def_cfa_offset 28
 2263              		.cfi_offset 4, -28
 2264              		.cfi_offset 5, -24
 2265              		.cfi_offset 6, -20
 2266              		.cfi_offset 7, -16
 2267              		.cfi_offset 8, -12
 2268              		.cfi_offset 9, -8
 2269              		.cfi_offset 14, -4
 2270              		.loc 2 999 0
 2271 0004 02C0A0E1 		mov	ip, r2
1000:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
1001:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 2272              		.loc 2 1001 0
 2273 0008 009090E5 		ldr	r9, [r0]
 999:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 2274              		.loc 2 999 0
 2275 000c 24208DE2 		add	r2, sp, #36
 2276              	.LVL247:
 2277 0010 1CE09DE5 		ldr	lr, [sp, #28]
 2278              		.loc 2 1001 0
 2279 0014 0190D9E5 		ldrb	r9, [r9, #1]	@ zero_extendqisi2
 999:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 2280              		.loc 2 999 0
 2281 0018 20409DE5 		ldr	r4, [sp, #32]
 2282 001c 240192E8 		ldm	r2, {r2, r5, r8}
 2283              	.LVL248:
 2284              		.loc 2 1001 0
 2285 0020 060059E3 		cmp	r9, #6
 999:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 2286              		.loc 2 999 0
 2287 0024 30709DE5 		ldr	r7, [sp, #48]
 2288 0028 34609DE5 		ldr	r6, [sp, #52]
 2289              		.loc 2 1001 0
 2290 002c 0C00001A 		bne	.L274
1002:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
1003:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
 2291              		.loc 2 1003 0
 2292 0030 002088E5 		str	r2, [r8]
1004:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( mbedtls_gcm_crypt_and_tag( ctx->cipher_ctx, MBEDTLS_GCM_ENCRYPT, ilen,
 2293              		.loc 2 1004 0
 2294 0034 20308DE5 		str	r3, [sp, #32]
 2295 0038 0130A0E1 		mov	r3, r1
 2296              	.LVL249:
 2297 003c 34708DE5 		str	r7, [sp, #52]
 2298              	.LVL250:
 2299 0040 0110A0E3 		mov	r1, #1
 2300              	.LVL251:
 2301 0044 30608DE5 		str	r6, [sp, #48]
 2302              	.LVL252:
 2303 0048 2C508DE5 		str	r5, [sp, #44]
 2304              	.LVL253:
 2305 004c 28408DE5 		str	r4, [sp, #40]
 2306              	.LVL254:
 2307 0050 24E08DE5 		str	lr, [sp, #36]
 2308              	.LVL255:
 2309 0054 1CC08DE5 		str	ip, [sp, #28]
1005:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                    iv, iv_len, ad, ad_len, input, output,
1006:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                    tag_len, tag ) );
1007:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
1008:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C */
1009:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CCM_C)
1010:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CCM == ctx->cipher_info->mode )
1011:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
1012:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
1013:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( mbedtls_ccm_encrypt_and_tag( ctx->cipher_ctx, ilen,
1014:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      iv, iv_len, ad, ad_len, input, output,
1015:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                      tag, tag_len ) );
1016:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
1017:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CCM_C */
1018:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
1019:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
1020:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
1021:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* ChachaPoly has fixed length nonce and MAC (tag) */
1022:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( ( iv_len != ctx->cipher_info->iv_size ) ||
1023:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              ( tag_len != 16U ) )
1024:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
1025:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
1026:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
1027:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1028:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
1029:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( mbedtls_chachapoly_encrypt_and_tag( ctx->cipher_ctx,
1030:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 ilen, iv, ad, ad_len, input, output, tag ) );
1031:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
1032:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CHACHAPOLY_C */
1033:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1034:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
1035:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 2310              		.loc 2 1035 0
 2311 0058 F043BDE8 		pop	{r4, r5, r6, r7, r8, r9, lr}
 2312              		.cfi_remember_state
 2313              		.cfi_restore 14
 2314              		.cfi_restore 9
 2315              		.cfi_restore 8
 2316              		.cfi_restore 7
 2317              		.cfi_restore 6
 2318              		.cfi_restore 5
 2319              		.cfi_restore 4
 2320              		.cfi_def_cfa_offset 0
1004:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( mbedtls_gcm_crypt_and_tag( ctx->cipher_ctx, MBEDTLS_GCM_ENCRYPT, ilen,
 2321              		.loc 2 1004 0
 2322 005c 3C0090E5 		ldr	r0, [r0, #60]
 2323              	.LVL256:
 2324 0060 FEFFFFEA 		b	mbedtls_gcm_crypt_and_tag
 2325              	.LVL257:
 2326              	.L274:
 2327              		.cfi_restore_state
 2328              		.loc 2 1035 0
 2329 0064 00009FE5 		ldr	r0, .L276
 2330              	.LVL258:
 2331 0068 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2332              	.L277:
 2333              		.align	2
 2334              	.L276:
 2335 006c 809FFFFF 		.word	-24704
 2336              		.cfi_endproc
 2337              	.LFE35:
 2339              		.section	.text.mbedtls_cipher_auth_decrypt,"ax",%progbits
 2340              		.align	2
 2341              		.global	mbedtls_cipher_auth_decrypt
 2342              		.syntax unified
 2343              		.arm
 2344              		.fpu neon
 2346              	mbedtls_cipher_auth_decrypt:
 2347              	.LFB36:
1036:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1037:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** /*
1038:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  * Packet-oriented decryption for AEAD modes
1039:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****  */
1040:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** int mbedtls_cipher_auth_decrypt( mbedtls_cipher_context_t *ctx,
1041:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *iv, size_t iv_len,
1042:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *ad, size_t ad_len,
1043:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *input, size_t ilen,
1044:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          unsigned char *output, size_t *olen,
1045:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                          const unsigned char *tag, size_t tag_len )
1046:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** {
 2348              		.loc 2 1046 0
 2349              		.cfi_startproc
 2350              		@ args = 28, pretend = 0, frame = 0
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352              	.LVL259:
1047:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
1048:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_GCM == ctx->cipher_info->mode )
 2353              		.loc 2 1048 0
 2354 0000 00C090E5 		ldr	ip, [r0]
1046:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 2355              		.loc 2 1046 0
 2356 0004 7F402DE9 		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 2357              		.cfi_def_cfa_offset 32
 2358              		.cfi_offset 14, -4
1046:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_GCM_C)
 2359              		.loc 2 1046 0
 2360 0008 28E09DE5 		ldr	lr, [sp, #40]
 2361              		.loc 2 1048 0
 2362 000c 01C0DCE5 		ldrb	ip, [ip, #1]	@ zero_extendqisi2
 2363 0010 06005CE3 		cmp	ip, #6
1049:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
1050:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         int ret;
1051:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1052:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
1053:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ret = mbedtls_gcm_auth_decrypt( ctx->cipher_ctx, ilen,
1054:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 iv, iv_len, ad, ad_len,
1055:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 tag, tag_len, input, output );
1056:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1057:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ret == MBEDTLS_ERR_GCM_AUTH_FAILED )
1058:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ret = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
1059:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1060:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
1061:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
1062:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_GCM_C */
1063:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CCM_C)
1064:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if( MBEDTLS_MODE_CCM == ctx->cipher_info->mode )
1065:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
1066:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         int ret;
1067:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1068:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
1069:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ret = mbedtls_ccm_auth_decrypt( ctx->cipher_ctx, ilen,
1070:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 iv, iv_len, ad, ad_len,
1071:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 input, output, tag, tag_len );
1072:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1073:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ret == MBEDTLS_ERR_CCM_AUTH_FAILED )
1074:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ret = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
1075:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1076:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
1077:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
1078:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CCM_C */
1079:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #if defined(MBEDTLS_CHACHAPOLY_C)
1080:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     if ( MBEDTLS_CIPHER_CHACHA20_POLY1305 == ctx->cipher_info->type )
1081:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
1082:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         int ret;
1083:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1084:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         /* ChachaPoly has fixed length nonce and MAC (tag) */
1085:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if ( ( iv_len != ctx->cipher_info->iv_size ) ||
1086:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****              ( tag_len != 16U ) )
1087:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         {
1088:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             return( MBEDTLS_ERR_CIPHER_BAD_INPUT_DATA );
1089:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         }
1090:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1091:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         *olen = ilen;
1092:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ret = mbedtls_chachapoly_auth_decrypt( ctx->cipher_ctx, ilen,
1093:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 iv, ad, ad_len, tag, input, output );
1094:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1095:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         if( ret == MBEDTLS_ERR_CHACHAPOLY_AUTH_FAILED )
1096:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****             ret = MBEDTLS_ERR_CIPHER_AUTH_FAILED;
1097:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1098:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         return( ret );
1099:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     }
1100:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** #endif /* MBEDTLS_CHACHAPOLY_C */
1101:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
1102:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     return( MBEDTLS_ERR_CIPHER_FEATURE_UNAVAILABLE );
 2364              		.loc 2 1102 0
 2365 0014 60009F15 		ldrne	r0, .L282
 2366              	.LVL260:
1048:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****     {
 2367              		.loc 2 1048 0
 2368 0018 1500001A 		bne	.L278
 2369 001c 03C0A0E1 		mov	ip, r3
 2370 0020 0230A0E1 		mov	r3, r2
 2371              	.LVL261:
 2372 0024 0120A0E1 		mov	r2, r1
 2373              	.LVL262:
 2374              	.LBB35:
1052:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****         ret = mbedtls_gcm_auth_decrypt( ctx->cipher_ctx, ilen,
 2375              		.loc 2 1052 0
 2376 0028 30109DE5 		ldr	r1, [sp, #48]
 2377              	.LVL263:
 2378 002c 00E081E5 		str	lr, [r1]
1053:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c ****                                 iv, iv_len, ad, ad_len,
 2379              		.loc 2 1053 0
 2380 0030 2C109DE5 		ldr	r1, [sp, #44]
 2381 0034 00C08DE5 		str	ip, [sp]
 2382 0038 14108DE5 		str	r1, [sp, #20]
 2383 003c 24109DE5 		ldr	r1, [sp, #36]
 2384 0040 10108DE5 		str	r1, [sp, #16]
 2385 0044 38109DE5 		ldr	r1, [sp, #56]
 2386 0048 0C108DE5 		str	r1, [sp, #12]
 2387 004c 34109DE5 		ldr	r1, [sp, #52]
 2388 0050 08108DE5 		str	r1, [sp, #8]
 2389 0054 20109DE5 		ldr	r1, [sp, #32]
 2390 0058 04108DE5 		str	r1, [sp, #4]
 2391 005c 0E10A0E1 		mov	r1, lr
 2392 0060 3C0090E5 		ldr	r0, [r0, #60]
 2393 0064 FEFFFFEB 		bl	mbedtls_gcm_auth_decrypt
 2394              	.LVL264:
1058:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** 
 2395              		.loc 2 1058 0
 2396 0068 10309FE5 		ldr	r3, .L282+4
 2397 006c 120070E3 		cmn	r0, #18
 2398 0070 0300A001 		moveq	r0, r3
 2399              	.LVL265:
 2400              	.L278:
 2401              	.LBE35:
1103:D:/Work/DeviceTester/amazon-freertos/lib/third_party/mbedtls/library\cipher.c **** }
 2402              		.loc 2 1103 0
 2403 0074 1CD08DE2 		add	sp, sp, #28
 2404              		.cfi_def_cfa_offset 4
 2405              		@ sp needed
 2406 0078 04F09DE4 		ldr	pc, [sp], #4
 2407              	.L283:
 2408              		.align	2
 2409              	.L282:
 2410 007c 809FFFFF 		.word	-24704
 2411 0080 009DFFFF 		.word	-25344
 2412              		.cfi_endproc
 2413              	.LFE36:
 2415              		.section	.bss.supported_init,"aw",%nobits
 2416              		.align	2
 2417              		.set	.LANCHOR0,. + 0
 2420              	supported_init:
 2421 0000 00000000 		.space	4
 2422              		.text
 2423              	.Letext0:
 2424              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2425              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 2426              		.file 5 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mbedtls\\include/mbedtls/ciphe
 2427              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2428              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2429              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2430              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2431              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2432              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mbedtls\\include/mbedtls/gcm.
 2433              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2434              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mbedtls\\include/mbedtls/plat
 2435              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 cipher.c
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:17     .text.mbedtls_cipher_get_block_size:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:22     .text.mbedtls_cipher_get_block_size:00000000 mbedtls_cipher_get_block_size
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:46     .text.add_pkcs_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:51     .text.add_pkcs_padding:00000000 add_pkcs_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:86     .text.get_pkcs_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:91     .text.get_pkcs_padding:00000000 get_pkcs_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:172    .text.get_pkcs_padding:00000084 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:178    .text.add_one_and_zeros_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:183    .text.add_one_and_zeros_padding:00000000 add_one_and_zeros_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:231    .text.add_zeros_and_len_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:236    .text.add_zeros_and_len_padding:00000000 add_zeros_and_len_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:283    .text.get_zeros_and_len_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:288    .text.get_zeros_and_len_padding:00000000 get_zeros_and_len_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:368    .text.get_zeros_and_len_padding:00000084 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:374    .text.add_zeros_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:379    .text.add_zeros_padding:00000000 add_zeros_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:409    .text.get_no_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:414    .text.get_no_padding:00000000 get_no_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:437    .text.get_no_padding:0000001c $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:442    .text.get_one_and_zeros_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:447    .text.get_one_and_zeros_padding:00000000 get_one_and_zeros_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:532    .text.get_one_and_zeros_padding:00000084 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:538    .text.get_zeros_padding:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:543    .text.get_zeros_padding:00000000 get_zeros_padding
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:609    .text.get_zeros_padding:00000068 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:614    .text.mbedtls_cipher_list:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:620    .text.mbedtls_cipher_list:00000000 mbedtls_cipher_list
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:671    .text.mbedtls_cipher_list:00000054 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:678    .text.mbedtls_cipher_info_from_type:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:684    .text.mbedtls_cipher_info_from_type:00000000 mbedtls_cipher_info_from_type
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:714    .text.mbedtls_cipher_info_from_type:00000028 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:719    .text.mbedtls_cipher_info_from_string:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:725    .text.mbedtls_cipher_info_from_string:00000000 mbedtls_cipher_info_from_string
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:769    .text.mbedtls_cipher_info_from_string:00000044 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:774    .text.mbedtls_cipher_info_from_values:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:780    .text.mbedtls_cipher_info_from_values:00000000 mbedtls_cipher_info_from_values
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:832    .text.mbedtls_cipher_info_from_values:0000005c $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:837    .text.mbedtls_cipher_init:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:843    .text.mbedtls_cipher_init:00000000 mbedtls_cipher_init
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:860    .text.mbedtls_cipher_free:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:866    .text.mbedtls_cipher_free:00000000 mbedtls_cipher_free
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:908    .text.mbedtls_cipher_setkey:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:914    .text.mbedtls_cipher_setkey:00000000 mbedtls_cipher_setkey
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:997    .text.mbedtls_cipher_setkey:00000084 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1002   .text.mbedtls_cipher_set_iv:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1008   .text.mbedtls_cipher_set_iv:00000000 mbedtls_cipher_set_iv
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1074   .text.mbedtls_cipher_set_iv:0000006c $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1080   .text.mbedtls_cipher_reset:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1086   .text.mbedtls_cipher_reset:00000000 mbedtls_cipher_reset
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1117   .text.mbedtls_cipher_reset:00000028 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1122   .text.mbedtls_cipher_update_ad:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1128   .text.mbedtls_cipher_update_ad:00000000 mbedtls_cipher_update_ad
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1183   .text.mbedtls_cipher_update_ad:00000058 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1189   .text.mbedtls_cipher_update:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1195   .text.mbedtls_cipher_update:00000000 mbedtls_cipher_update
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1574   .text.mbedtls_cipher_update:000002d8 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1582   .text.mbedtls_cipher_finish:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1588   .text.mbedtls_cipher_finish:00000000 mbedtls_cipher_finish
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1798   .text.mbedtls_cipher_finish:00000170 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1805   .text.mbedtls_cipher_set_padding_mode:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1811   .text.mbedtls_cipher_set_padding_mode:00000000 mbedtls_cipher_set_padding_mode
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1833   .text.mbedtls_cipher_set_padding_mode:00000024 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1840   .text.mbedtls_cipher_set_padding_mode:00000038 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1901   .text.mbedtls_cipher_set_padding_mode:000000a4 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1916   .text.mbedtls_cipher_setup:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1922   .text.mbedtls_cipher_setup:00000000 mbedtls_cipher_setup
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1984   .text.mbedtls_cipher_setup:0000006c $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1990   .text.mbedtls_cipher_write_tag:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:1996   .text.mbedtls_cipher_write_tag:00000000 mbedtls_cipher_write_tag
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2049   .text.mbedtls_cipher_write_tag:00000058 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2054   .text.mbedtls_cipher_check_tag:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2060   .text.mbedtls_cipher_check_tag:00000000 mbedtls_cipher_check_tag
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2168   .text.mbedtls_cipher_check_tag:000000a4 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2174   .text.mbedtls_cipher_crypt:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2180   .text.mbedtls_cipher_crypt:00000000 mbedtls_cipher_crypt
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2248   .text.mbedtls_cipher_auth_encrypt:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2254   .text.mbedtls_cipher_auth_encrypt:00000000 mbedtls_cipher_auth_encrypt
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2335   .text.mbedtls_cipher_auth_encrypt:0000006c $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2340   .text.mbedtls_cipher_auth_decrypt:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2346   .text.mbedtls_cipher_auth_decrypt:00000000 mbedtls_cipher_auth_decrypt
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2410   .text.mbedtls_cipher_auth_decrypt:0000007c $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2416   .bss.supported_init:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjuxby4.s:2420   .bss.supported_init:00000000 supported_init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
mbedtls_cipher_supported
mbedtls_cipher_definitions
strcmp
memset
mbedtls_platform_zeroize
memcpy
mbedtls_gcm_starts
__aeabi_uidivmod
mbedtls_gcm_update
mbedtls_gcm_finish
mbedtls_gcm_crypt_and_tag
mbedtls_gcm_auth_decrypt
