   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"FreeRTOS_IP.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvIPTimerCheck,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	prvIPTimerCheck:
  23              	.LFB32:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/FreeRTOS_IP.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * FreeRTOS+TCP V2.0.10
   3:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Standard includes. */
  27:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include <stdint.h>
  28:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include <stdio.h>
  29:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include <string.h>
  30:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  31:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* FreeRTOS includes. */
  32:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS.h"
  33:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "task.h"
  34:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "queue.h"
  35:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "semphr.h"
  36:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  37:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* FreeRTOS+TCP includes. */
  38:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_IP.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_Sockets.h"
  40:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_IP_Private.h"
  41:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_ARP.h"
  42:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_UDP_IP.h"
  43:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_TCP_IP.h"
  44:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_DHCP.h"
  45:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "NetworkInterface.h"
  46:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "NetworkBufferManagement.h"
  47:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #include "FreeRTOS_DNS.h"
  48:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  49:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  50:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Used to ensure the structure packing is having the desired effect.  The
  51:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 'volatile' is used to prevent compiler warnings about comparing a constant with
  52:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** a constant. */
  53:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_EthernetHeader_t_SIZE	( ( size_t ) 14 )
  54:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_ARPHeader_t_SIZE			( ( size_t ) 28 )
  55:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_IPHeader_t_SIZE			( ( size_t ) 20 )
  56:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_IGMPHeader__SIZE			( ( size_t ) 8 )
  57:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_ICMPHeader_t_SIZE		( ( size_t ) 8 )
  58:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_UDPHeader_t_SIZE			( ( size_t ) 8 )
  59:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipEXPECTED_TCPHeader_t_SIZE			( ( size_t ) 20 )
  60:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  61:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  62:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* ICMP protocol definitions. */
  63:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipICMP_ECHO_REQUEST				( ( uint8_t ) 8 )
  64:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipICMP_ECHO_REPLY				( ( uint8_t ) 0 )
  65:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  66:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  67:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Time delay between repeated attempts to initialise the network hardware. */
  68:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipINITIALISATION_RETRY_DELAY	( pdMS_TO_TICKS( 3000 ) )
  69:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  70:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Defines how often the ARP timer callback function is executed.  The time is
  71:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** shorted in the Windows simulator as simulated time is not real time. */
  72:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #ifndef	ipARP_TIMER_PERIOD_MS
  73:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#ifdef _WINDOWS_
  74:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#define ipARP_TIMER_PERIOD_MS	( 500 ) /* For windows simulator builds. */
  75:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#else
  76:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#define ipARP_TIMER_PERIOD_MS	( 10000 )
  77:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif
  78:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
  79:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  80:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #ifndef iptraceIP_TASK_STARTING
  81:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define	iptraceIP_TASK_STARTING()	do {} while( 0 )
  82:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
  83:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  84:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ( ipconfigUSE_TCP == 1 ) && !defined( ipTCP_TIMER_PERIOD_MS ) )
  85:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* When initialising the TCP timer,
  86:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	give it an initial time-out of 1 second. */
  87:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define ipTCP_TIMER_PERIOD_MS	( 1000 )
  88:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
  89:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  90:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* If ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES is set to 1, then the Ethernet
  91:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** driver will filter incoming packets and only pass the stack those packets it
  92:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** considers need processing.  In this case ipCONSIDER_FRAME_FOR_PROCESSING() can
  93:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** be #defined away.  If ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES is set to 0
  94:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** then the Ethernet driver will pass all received packets to the stack, and the
  95:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** stack must do the filtering itself.  In this case ipCONSIDER_FRAME_FOR_PROCESSING
  96:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** needs to call eConsiderFrameForProcessing. */
  97:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ipconfigETHERNET_DRIVER_FILTERS_FRAME_TYPES == 0
  98:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define ipCONSIDER_FRAME_FOR_PROCESSING( pucEthernetBuffer ) eConsiderFrameForProcessing( ( pucEth
  99:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #else
 100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define ipCONSIDER_FRAME_FOR_PROCESSING( pucEthernetBuffer ) eProcessBuffer
 101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* The character used to fill ICMP echo requests, and therefore also the
 104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** character expected to fill ICMP echo replies. */
 105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipECHO_DATA_FILL_BYTE						'x'
 106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN )
 108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* The bits in the two byte IP header field that make up the fragment offset value. */
 109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define ipFRAGMENT_OFFSET_BIT_MASK				( ( uint16_t ) 0xff0f )
 110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #else
 111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* The bits in the two byte IP header field that make up the fragment offset value. */
 112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define ipFRAGMENT_OFFSET_BIT_MASK				( ( uint16_t ) 0x0fff )
 113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigBYTE_ORDER */
 114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* The maximum time the IP task is allowed to remain in the Blocked state if no
 116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** events are posted to the network event queue. */
 117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #ifndef	ipconfigMAX_IP_TASK_SLEEP_TIME
 118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#define ipconfigMAX_IP_TASK_SLEEP_TIME ( pdMS_TO_TICKS( 10000UL ) )
 119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* When a new TCP connection is established, the value of
 122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 'ulNextInitialSequenceNumber' will be used as the initial sequence number.  It
 123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** is very important that at start-up, 'ulNextInitialSequenceNumber' contains a
 124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** random value.  Also its value must be increased continuously in time, to prevent
 125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** a third party guessing the next sequence number and take-over a TCP connection.
 126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** It is advised to increment it by 1 ever 4us, which makes about 256 times
 127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** per ms: */
 128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipINITIAL_SEQUENCE_NUMBER_FACTOR	256UL
 129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Returned as the (invalid) checksum when the protocol being checked is not
 131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** handled.  The value is chosen simply to be easy to spot when debugging. */
 132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipUNHANDLED_PROTOCOL		0x4321u
 133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Returned to indicate a valid checksum when the checksum does not need to be
 135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** calculated. */
 136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipCORRECT_CRC				0xffffu
 137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Returned as the (invalid) checksum when the length of the data being checked
 139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** had an invalid length. */
 140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #define ipINVALID_LENGTH			0x1234u
 141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** typedef struct xIP_TIMER
 145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint32_t
 147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		bActive : 1,	/* This timer is running and must be processed. */
 148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		bExpired : 1;	/* Timer has expired and a task must be processed. */
 149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	TimeOut_t xTimeOut;
 150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	TickType_t ulRemainingTime;
 151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	TickType_t ulReloadTime;
 152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** } IPTimer_t;
 153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Used in checksum calculation. */
 155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** typedef union _xUnion32
 156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint32_t u32;
 158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint16_t u16[ 2 ];
 159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint8_t u8[ 4 ];
 160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** } xUnion32;
 161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Used in checksum calculation. */
 163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** typedef union _xUnionPtr
 164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint32_t *u32ptr;
 166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint16_t *u16ptr;
 167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint8_t *u8ptr;
 168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** } xUnionPtr;
 169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * The main TCP/IP stack processing task.  This task receives commands/events
 174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * from the network hardware drivers and tasks that are using sockets.  It also
 175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * maintains a set of protocol timers.
 176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvIPTask( void *pvParameters );
 178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Called when new data is available from the network interface.
 181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvProcessEthernetPacket( NetworkBufferDescriptor_t * const pxNetworkBuffer );
 183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Process incoming IP packets.
 186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static eFrameProcessingResult_t prvProcessIPPacket( IPPacket_t * const pxIPPacket, NetworkBufferDes
 188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) || ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
 190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/*
 191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	 * Process incoming ICMP packets.
 192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	 */
 193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static eFrameProcessingResult_t prvProcessICMPPacket( ICMPPacket_t * const pxICMPPacket );
 194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) || ( ipconfigSUPPORT_OUTGOING_PINGS == 1 ) */
 195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Turns around an incoming ping request to convert it into a ping reply.
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigREPLY_TO_INCOMING_PINGS == 1 )
 200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static eFrameProcessingResult_t prvProcessICMPEchoRequest( ICMPPacket_t * const pxICMPPacket );
 201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigREPLY_TO_INCOMING_PINGS */
 202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Processes incoming ping replies.  The application callback function
 205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * vApplicationPingReplyHook() is called with the results.
 206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
 208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static void prvProcessICMPEchoReply( ICMPPacket_t * const pxICMPPacket );
 209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigSUPPORT_OUTGOING_PINGS */
 210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Called to create a network connection when the stack is first started, or
 213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * when the network connection is lost.
 214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvProcessNetworkDownEvent( void );
 216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Checks the ARP, DHCP and TCP timers to see if any periodic or timeout
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * processing is required.
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvCheckNetworkTimers( void );
 222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Determine how long the IP task can sleep for, which depends on when the next
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * periodic or timeout processing must be performed.
 226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static TickType_t prvCalculateSleepTime( void );
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * The network card driver has received a packet.  In the case that it is part
 231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * of a linked packet chain, walk through it to handle every message.
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvHandleEthernetPacket( NetworkBufferDescriptor_t *pxBuffer );
 234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Utility functions for the light weight IP timers.
 237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvIPTimerStart( IPTimer_t *pxTimer, TickType_t xTime );
 239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static BaseType_t prvIPTimerCheck( IPTimer_t *pxTimer );
 240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvIPTimerReload( IPTimer_t *pxTimer, TickType_t xTime );
 241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static eFrameProcessingResult_t prvAllowIPPacket( const IPPacket_t * const pxIPPacket,
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t * const pxNetworkBuffer, UBaseType_t uxHeaderLength );
 244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* The queue used to pass events into the IP-task for processing. */
 248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** QueueHandle_t xNetworkEventQueue = NULL;
 249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*_RB_ Requires comment. */
 251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint16_t usPacketIdentifier = 0U;
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* For convenience, a MAC address of all 0xffs is defined const for quick
 254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** reference. */
 255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** const MACAddress_t xBroadcastMACAddress = { { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff } };
 256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Structure that stores the netmask, gateway address and DNS server addresses. */
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkAddressingParameters_t xNetworkAddressing = { 0, 0, 0, 0, 0 };
 259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Default values for the above struct in case DHCP
 261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** does not lead to a confirmed request. */
 262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkAddressingParameters_t xDefaultAddressing = { 0, 0, 0, 0, 0 };
 263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Used to ensure network down events cannot be missed when they cannot be
 265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** posted to the network event queue because the network event queue is already
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** full. */
 267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static BaseType_t xNetworkDownEventPending = pdFALSE;
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Stores the handle of the task that handles the stack.  The handle is used
 270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** (indirectly) by some utility function to determine if the utility function is
 271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** being called by a task (in which case it is ok to block) or by the IP task
 272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** itself (in which case it is not ok to block). */
 273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static TaskHandle_t xIPTaskHandle = NULL;
 274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigUSE_TCP != 0 )
 276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Set to a non-zero value if one or more TCP message have been processed
 277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	within the last round. */
 278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static BaseType_t xProcessedTCPMessage;
 279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Simple set to pdTRUE or pdFALSE depending on whether the network is up or
 282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** down (connected, not connected) respectively. */
 283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static BaseType_t xNetworkUp = pdFALSE;
 284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*
 286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** A timer for each of the following processes, all of which need attention on a
 287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** regular basis:
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	1. ARP, to check its table entries
 289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	2. DPHC, to send requests and to renew a reservation
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	3. TCP, to check for timeouts, resends
 291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	4. DNS, to check for timeouts when looking-up a domain.
 292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static IPTimer_t xARPTimer;
 294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigUSE_DHCP != 0 )
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static IPTimer_t xDHCPTimer;
 296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigUSE_TCP != 0 )
 298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static IPTimer_t xTCPTimer;
 299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigDNS_USE_CALLBACKS != 0 )
 301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static IPTimer_t xDNSTimer;
 302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /* Set to pdTRUE when the IP task is ready to start processing packets. */
 305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static BaseType_t xIPTaskInitialised = pdFALSE;
 306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigCHECK_IP_QUEUE_SPACE != 0 )
 308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Keep track of the lowest amount of space in 'xNetworkEventQueue'. */
 309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static UBaseType_t uxQueueMinimumSpace = ipconfigEVENT_QUEUE_LENGTH;
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
 311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvIPTask( void *pvParameters )
 315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** IPStackEvent_t xReceivedEvent;
 317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** TickType_t xNextIPSleep;
 318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** FreeRTOS_Socket_t *pxSocket;
 319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** struct freertos_sockaddr xAddress;
 320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Just to prevent compiler warnings about unused parameters. */
 322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	( void ) pvParameters;
 323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* A possibility to set some additional task properties. */
 325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	iptraceIP_TASK_STARTING();
 326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Generate a dummy message to say that the network connection has gone
 328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	down.  This will cause this task to initialise the network interface.  After
 329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	this it is the responsibility of the network interface hardware driver to
 330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	send this message if a previously connected network is disconnected. */
 331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	FreeRTOS_NetworkDown();
 332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_TCP == 1 )
 334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Initialise the TCP timer. */
 336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvIPTimerReload( &xTCPTimer, pdMS_TO_TICKS( ipTCP_TIMER_PERIOD_MS ) );
 337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif
 339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Initialisation is complete and events can now be processed. */
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xIPTaskInitialised = pdTRUE;
 342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	FreeRTOS_debug_printf( ( "prvIPTask started\n" ) );
 344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Loop, processing IP events. */
 346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	for( ;; )
 347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		ipconfigWATCHDOG_TIMER();
 349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Check the ARP, DHCP and TCP timers to see if there is any periodic
 351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		or timeout processing to perform. */
 352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvCheckNetworkTimers();
 353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Calculate the acceptable maximum sleep time. */
 355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNextIPSleep = prvCalculateSleepTime();
 356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Wait until there is something to do. If the following call exits
 358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		 * due to a time out rather than a message being received, set a
 359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		 * 'NoEvent' value. */
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if ( xQueueReceive( xNetworkEventQueue, ( void * ) &xReceivedEvent, xNextIPSleep ) == pdFALSE ) 
 361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReceivedEvent.eEventType = eNoEvent;
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigCHECK_IP_QUEUE_SPACE != 0 )
 366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( xReceivedEvent.eEventType != eNoEvent )
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			UBaseType_t uxCount;
 370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				uxCount = uxQueueSpacesAvailable( xNetworkEventQueue );
 372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				if( uxQueueMinimumSpace > uxCount )
 373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					uxQueueMinimumSpace = uxCount;
 375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif /* ipconfigCHECK_IP_QUEUE_SPACE */
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		iptraceNETWORK_EVENT_RECEIVED( xReceivedEvent.eEventType );
 381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		switch( xReceivedEvent.eEventType )
 383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eNetworkDownEvent :
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Attempt to establish a connection. */
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xNetworkUp = pdFALSE;
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				prvProcessNetworkDownEvent();
 388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eNetworkRxEvent:
 391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The network hardware driver has received a new packet.  A
 392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pointer to the received buffer is located in the pvData member
 393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				of the received event structure. */
 394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				prvHandleEthernetPacket( ( NetworkBufferDescriptor_t * ) ( xReceivedEvent.pvData ) );
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eARPTimerEvent :
 398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The ARP timer has expired, process the ARP cache. */
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vARPAgeCache();
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eSocketBindEvent:
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* FreeRTOS_bind (a user API) wants the IP-task to bind a socket
 404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				to a port. The port number is communicated in the socket field
 405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				usLocalPort. vSocketBind() will actually bind the socket and the
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				API will unblock as soon as the eSOCKET_BOUND event is
 407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				triggered. */
 408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxSocket = ( FreeRTOS_Socket_t * ) ( xReceivedEvent.pvData );
 409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xAddress.sin_addr = 0u;	/* For the moment. */
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xAddress.sin_port = FreeRTOS_ntohs( pxSocket->usLocalPort );
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxSocket->usLocalPort = 0u;
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketBind( pxSocket, &xAddress, sizeof( xAddress ), pdFALSE );
 413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Before 'eSocketBindEvent' was sent it was tested that
 415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( xEventGroup != NULL ) so it can be used now to wake up the
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				user. */
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxSocket->xEventBits |= eSOCKET_BOUND;
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketWakeUpUser( pxSocket );
 419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eSocketCloseEvent :
 422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The user API FreeRTOS_closesocket() has sent a message to the
 423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				IP-task to actually close a socket. This is handled in
 424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketClose().  As the socket gets closed, there is no way to
 425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				report back to the API, so the API won't wait for the result */
 426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketClose( ( FreeRTOS_Socket_t * ) ( xReceivedEvent.pvData ) );
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eStackTxEvent :
 430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The network stack has generated a packet to send.  A
 431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pointer to the generated buffer is located in the pvData
 432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				member of the received event structure. */
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vProcessGeneratedUDPPacket( ( NetworkBufferDescriptor_t * ) ( xReceivedEvent.pvData ) );
 434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eDHCPEvent:
 437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The DHCP state machine needs processing. */
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if( ipconfigUSE_DHCP == 1 )
 439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					vDHCPProcess( pdFALSE );
 441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigUSE_DHCP */
 443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eSocketSelectEvent :
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* FreeRTOS_select() has got unblocked by a socket event,
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketSelect() will check which sockets actually have an event
 448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				and update the socket field xSocketBits. */
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					vSocketSelect( ( SocketSelect_t * ) ( xReceivedEvent.pvData ) );
 452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eSocketSignalEvent :
 457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if( ipconfigSUPPORT_SIGNALS != 0 )
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					/* Some task wants to signal the user of this socket in
 460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					order to interrupt a call to recv() or a call to select(). */
 461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					FreeRTOS_SignalSocket( ( Socket_t ) xReceivedEvent.pvData );
 462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigSUPPORT_SIGNALS */
 464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eTCPTimerEvent :
 467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if( ipconfigUSE_TCP == 1 )
 468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					/* Simply mark the TCP timer as expired so it gets processed
 470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					the next time prvCheckNetworkTimers() is called. */
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					xTCPTimer.bExpired = pdTRUE_UNSIGNED;
 472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigUSE_TCP */
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eTCPAcceptEvent:
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The API FreeRTOS_accept() was called, the IP-task will now
 478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				check if the listening socket (communicated in pvData) actually
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				received a new connection. */
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if( ipconfigUSE_TCP == 1 )
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					pxSocket = ( FreeRTOS_Socket_t * ) ( xReceivedEvent.pvData );
 483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					if( xTCPCheckNewClient( pxSocket ) != pdFALSE )
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						pxSocket->xEventBits |= eSOCKET_ACCEPT;
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						vSocketWakeUpUser( pxSocket );
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigUSE_TCP */
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case eTCPNetStat:
 494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* FreeRTOS_netstat() was called to have the IP-task print an
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				overview of all sockets and their connections */
 496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if( ( ipconfigUSE_TCP == 1 ) && ( ipconfigHAS_PRINTF == 1 ) )
 497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					vTCPNetStat();
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigUSE_TCP */
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			default :
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Should not get here. */
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xNetworkDownEventPending != pdFALSE )
 509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* A network down event could not be posted to the network event
 511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			queue because the queue was full.  Try posting again. */
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_NetworkDown();
 513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xIsCallingFromIPTask( void )
 519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn;
 521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xTaskGetCurrentTaskHandle() == xIPTaskHandle )
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xReturn = pdTRUE;
 525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xReturn = pdFALSE;
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xReturn;
 532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvHandleEthernetPacket( NetworkBufferDescriptor_t *pxBuffer )
 536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_LINKED_RX_MESSAGES == 0 )
 538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* When ipconfigUSE_LINKED_RX_MESSAGES is not set to 0 then only one
 540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		buffer will be sent at a time.  This is the default way for +TCP to pass
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		messages from the MAC to the TCP/IP stack. */
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvProcessEthernetPacket( pxBuffer );
 543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#else /* ipconfigUSE_LINKED_RX_MESSAGES */
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t *pxNextBuffer;
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* An optimisation that is useful when there is high network traffic.
 549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		Instead of passing received packets into the IP task one at a time the
 550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		network interface can chain received packets together and pass them into
 551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		the IP task in one go.  The packets are chained using the pxNextBuffer
 552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		member.  The loop below walks through the chain processing each packet
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		in the chain in turn. */
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		do
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Store a pointer to the buffer after pxBuffer for use later on. */
 557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxNextBuffer = pxBuffer->pxNextBuffer;
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Make it NULL to avoid using it later on. */
 560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxBuffer->pxNextBuffer = NULL;
 561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			prvProcessEthernetPacket( pxBuffer );
 563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxBuffer = pxNextBuffer;
 564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* While there is another packet in the chain. */
 566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		} while( pxBuffer != NULL );
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigUSE_LINKED_RX_MESSAGES */
 569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static TickType_t prvCalculateSleepTime( void )
 573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** TickType_t xMaximumSleepTime;
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Start with the maximum sleep time, then check this against the remaining
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	time in any other timers that are active. */
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xMaximumSleepTime = ipconfigMAX_IP_TASK_SLEEP_TIME;
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xARPTimer.bActive != pdFALSE_UNSIGNED )
 581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xARPTimer.ulRemainingTime < xMaximumSleepTime )
 583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xMaximumSleepTime = xARPTimer.ulReloadTime;
 585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_DHCP == 1 )
 589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xDHCPTimer.bActive != pdFALSE_UNSIGNED )
 591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( xDHCPTimer.ulRemainingTime < xMaximumSleepTime )
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xMaximumSleepTime = xDHCPTimer.ulRemainingTime;
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigUSE_DHCP */
 599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_TCP == 1 )
 601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xTCPTimer.ulRemainingTime < xMaximumSleepTime )
 603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xMaximumSleepTime = xTCPTimer.ulRemainingTime;
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif
 608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigDNS_USE_CALLBACKS != 0 )
 610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xDNSTimer.bActive != pdFALSE )
 612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( xDNSTimer.ulRemainingTime < xMaximumSleepTime )
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xMaximumSleepTime = xDNSTimer.ulRemainingTime;
 616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif
 620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xMaximumSleepTime;
 622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvCheckNetworkTimers( void )
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Is it time for ARP processing? */
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( prvIPTimerCheck( &xARPTimer ) != pdFALSE )
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSendEventToIPTask( eARPTimerEvent );
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_DHCP == 1 )
 634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Is it time for DHCP processing? */
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( prvIPTimerCheck( &xDHCPTimer ) != pdFALSE )
 637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xSendEventToIPTask( eDHCPEvent );
 639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigUSE_DHCP */
 642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigDNS_USE_CALLBACKS != 0 )
 644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	extern void vDNSCheckCallBack( void *pvSearchID );
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Is it time for DNS processing? */
 648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( prvIPTimerCheck( &xDNSTimer ) != pdFALSE )
 649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vDNSCheckCallBack( NULL );
 651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigDNS_USE_CALLBACKS */
 654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_TCP == 1 )
 656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	BaseType_t xWillSleep;
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	TickType_t xNextTime;
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	BaseType_t xCheckTCPSockets;
 660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( uxQueueMessagesWaiting( xNetworkEventQueue ) == 0u )
 662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xWillSleep = pdTRUE;
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xWillSleep = pdFALSE;
 668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Sockets need to be checked if the TCP timer has expired. */
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xCheckTCPSockets = prvIPTimerCheck( &xTCPTimer );
 672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Sockets will also be checked if there are TCP messages but the
 674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		message queue is empty (indicated by xWillSleep being true). */
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( ( xProcessedTCPMessage != pdFALSE ) && ( xWillSleep != pdFALSE ) )
 676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xCheckTCPSockets = pdTRUE;
 678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xCheckTCPSockets != pdFALSE )
 681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Attend to the sockets, returning the period after which the
 683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			check must be repeated. */
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNextTime = xTCPTimerCheck( xWillSleep );
 685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			prvIPTimerStart( &xTCPTimer, xNextTime );
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xProcessedTCPMessage = 0;
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigUSE_TCP == 1 */
 690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvIPTimerStart( IPTimer_t *pxTimer, TickType_t xTime )
 694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	vTaskSetTimeOutState( &pxTimer->xTimeOut );
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xTime == ( TickType_t ) 0 )
 699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxTimer->bExpired = pdTRUE_UNSIGNED;
 701:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 703:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxTimer->bExpired = pdFALSE_UNSIGNED;
 705:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->bActive = pdTRUE_UNSIGNED;
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 709:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 711:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvIPTimerReload( IPTimer_t *pxTimer, TickType_t xTime )
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulReloadTime = xTime;
 714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static BaseType_t prvIPTimerCheck( IPTimer_t *pxTimer )
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
  25              		.loc 1 719 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
 720:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn;
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pxTimer->bActive == pdFALSE_UNSIGNED )
  30              		.loc 1 722 0
  31 0000 0030D0E5 		ldrb	r3, [r0]	@ zero_extendqisi2
  32 0004 010013E3 		tst	r3, #1
  33 0008 0100001A 		bne	.L2
 723:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 724:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The timer is not enabled. */
 725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xReturn = pdFALSE;
  34              		.loc 1 725 0
  35 000c 0000A0E3 		mov	r0, #0
  36              	.LVL1:
 726:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 728:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The timer might have set the bExpired flag already, if not, check the
 730:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		value of xTimeOut against ulRemainingTime. */
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( ( pxTimer->bExpired != pdFALSE_UNSIGNED ) ||
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( xTaskCheckForTimeOut( &( pxTimer->xTimeOut ), &( pxTimer->ulRemainingTime ) ) != pdFALSE ) )
 733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			prvIPTimerStart( pxTimer, pxTimer->ulReloadTime );
 735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReturn = pdTRUE;
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 737:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
 738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReturn = pdFALSE;
 740:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 741:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 743:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xReturn;
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
  37              		.loc 1 744 0
  38 0010 1EFF2FE1 		bx	lr
  39              	.LVL2:
  40              	.L2:
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( xTaskCheckForTimeOut( &( pxTimer->xTimeOut ), &( pxTimer->ulRemainingTime ) ) != pdFALSE ) )
  41              		.loc 1 731 0
  42 0014 020013E3 		tst	r3, #2
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn;
  43              		.loc 1 719 0
  44 0018 70402DE9 		push	{r4, r5, r6, lr}
  45              		.cfi_def_cfa_offset 16
  46              		.cfi_offset 4, -16
  47              		.cfi_offset 5, -12
  48              		.cfi_offset 6, -8
  49              		.cfi_offset 14, -4
  50 001c 0040A0E1 		mov	r4, r0
  51 0020 045080E2 		add	r5, r0, #4
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( xTaskCheckForTimeOut( &( pxTimer->xTimeOut ), &( pxTimer->ulRemainingTime ) ) != pdFALSE ) )
  52              		.loc 1 731 0
  53 0024 0D00000A 		beq	.L4
  54              	.LVL3:
  55              	.L7:
  56              	.LBB15:
  57              	.LBB16:
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReturn = pdTRUE;
  58              		.loc 1 734 0
  59 0028 106094E5 		ldr	r6, [r4, #16]
  60              	.LVL4:
  61              	.LBB17:
  62              	.LBB18:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
  63              		.loc 1 695 0
  64 002c 0500A0E1 		mov	r0, r5
  65 0030 FEFFFFEB 		bl	vTaskSetTimeOutState
  66              	.LVL5:
  67 0034 0030D4E5 		ldrb	r3, [r4]	@ zero_extendqisi2
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
  68              		.loc 1 698 0
  69 0038 000056E3 		cmp	r6, #0
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
  70              		.loc 1 696 0
  71 003c 0C6084E5 		str	r6, [r4, #12]
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
  72              		.loc 1 704 0
  73 0040 9F30C117 		bfcne	r3, #1, #1
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
  74              		.loc 1 698 0
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
  75              		.loc 1 700 0
  76 0044 02308303 		orreq	r3, r3, #2
  77              	.L14:
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
  78              		.loc 1 704 0
  79 0048 0030C4E5 		strb	r3, [r4]
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
  80              		.loc 1 707 0
  81 004c 0100A0E3 		mov	r0, #1
  82 0050 0030D4E5 		ldrb	r3, [r4]	@ zero_extendqisi2
  83 0054 013083E3 		orr	r3, r3, #1
  84 0058 0030C4E5 		strb	r3, [r4]
  85              	.LVL6:
  86              	.LBE18:
  87              	.LBE17:
  88              	.LBE16:
  89              	.LBE15:
  90              		.loc 1 744 0
  91 005c 7080BDE8 		pop	{r4, r5, r6, pc}
  92              	.LVL7:
  93              	.L4:
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
  94              		.loc 1 732 0 discriminator 1
  95 0060 0C1080E2 		add	r1, r0, #12
  96 0064 0500A0E1 		mov	r0, r5
  97              	.LVL8:
  98 0068 FEFFFFEB 		bl	xTaskCheckForTimeOut
  99              	.LVL9:
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( xTaskCheckForTimeOut( &( pxTimer->xTimeOut ), &( pxTimer->ulRemainingTime ) ) != pdFALSE ) )
 100              		.loc 1 731 0 discriminator 1
 101 006c 000050E3 		cmp	r0, #0
 102 0070 ECFFFF1A 		bne	.L7
 725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 103              		.loc 1 725 0
 104 0074 0000A0E3 		mov	r0, #0
 105 0078 7080BDE8 		pop	{r4, r5, r6, pc}
 106              		.cfi_endproc
 107              	.LFE32:
 109              		.section	.text.xIsCallingFromIPTask,"ax",%progbits
 110              		.align	2
 111              		.global	xIsCallingFromIPTask
 112              		.syntax unified
 113              		.arm
 114              		.fpu neon
 116              	xIsCallingFromIPTask:
 117              	.LFB26:
 519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn;
 118              		.loc 1 519 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 10402DE9 		push	{r4, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 126              		.loc 1 522 0
 127 0004 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 128              	.LVL10:
 129 0008 10309FE5 		ldr	r3, .L17
 130 000c 003093E5 		ldr	r3, [r3]
 532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 131              		.loc 1 532 0
 132 0010 000043E0 		sub	r0, r3, r0
 133              	.LVL11:
 134 0014 100F6FE1 		clz	r0, r0
 135 0018 A002A0E1 		lsr	r0, r0, #5
 136 001c 1080BDE8 		pop	{r4, pc}
 137              	.L18:
 138              		.align	2
 139              	.L17:
 140 0020 00000000 		.word	.LANCHOR0
 141              		.cfi_endproc
 142              	.LFE26:
 144              		.section	.text.FreeRTOS_NetworkDownFromISR,"ax",%progbits
 145              		.align	2
 146              		.global	FreeRTOS_NetworkDownFromISR
 147              		.syntax unified
 148              		.arm
 149              		.fpu neon
 151              	FreeRTOS_NetworkDownFromISR:
 152              	.LFB34:
 745:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 747:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_NetworkDown( void )
 748:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 749:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static const IPStackEvent_t xNetworkDownEvent = { eNetworkDownEvent, NULL };
 750:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** const TickType_t xDontBlock = ( TickType_t ) 0;
 751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 752:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Simply send the network task the appropriate event. */
 753:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xSendEventStructToIPTask( &xNetworkDownEvent, xDontBlock ) != pdPASS )
 754:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 755:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Could not send the message, so it is still pending. */
 756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkDownEventPending = pdTRUE;
 757:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 758:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 759:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 760:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Message was sent so it is not pending. */
 761:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkDownEventPending = pdFALSE;
 762:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 763:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 764:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	iptraceNETWORK_DOWN();
 765:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 766:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 767:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 768:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t FreeRTOS_NetworkDownFromISR( void )
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 153              		.loc 1 769 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 13402DE9 		push	{r0, r1, r4, lr}
 158              		.cfi_def_cfa_offset 16
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
 770:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static const IPStackEvent_t xNetworkDownEvent = { eNetworkDownEvent, NULL };
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 161              		.loc 1 771 0
 162 0004 0040A0E3 		mov	r4, #0
 772:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 773:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Simply send the network task the appropriate event. */
 774:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xQueueSendToBackFromISR( xNetworkEventQueue, &xNetworkDownEvent, &xHigherPriorityTaskWoken ) !
 163              		.loc 1 774 0
 164 0008 34009FE5 		ldr	r0, .L23
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 165              		.loc 1 771 0
 166 000c 08208DE2 		add	r2, sp, #8
 167              		.loc 1 774 0
 168 0010 0430A0E1 		mov	r3, r4
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 169              		.loc 1 771 0
 170 0014 044022E5 		str	r4, [r2, #-4]!
 171              		.loc 1 774 0
 172 0018 28109FE5 		ldr	r1, .L23+4
 173 001c 000090E5 		ldr	r0, [r0]
 174 0020 FEFFFFEB 		bl	xQueueGenericSendFromISR
 175              	.LVL12:
 176 0024 20309FE5 		ldr	r3, .L23+8
 177 0028 010050E3 		cmp	r0, #1
 775:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkDownEventPending = pdTRUE;
 178              		.loc 1 776 0
 179 002c 0120A013 		movne	r2, #1
 777:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 778:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 779:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 780:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkDownEventPending = pdFALSE;
 781:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 782:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 783:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	iptraceNETWORK_DOWN();
 784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 785:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xHigherPriorityTaskWoken;
 786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 180              		.loc 1 786 0
 181 0030 04009DE5 		ldr	r0, [sp, #4]
 776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 182              		.loc 1 776 0
 183 0034 00208315 		strne	r2, [r3]
 780:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 184              		.loc 1 780 0
 185 0038 00408305 		streq	r4, [r3]
 186              		.loc 1 786 0
 187 003c 08D08DE2 		add	sp, sp, #8
 188              		.cfi_def_cfa_offset 8
 189              		@ sp needed
 190 0040 1080BDE8 		pop	{r4, pc}
 191              	.L24:
 192              		.align	2
 193              	.L23:
 194 0044 00000000 		.word	.LANCHOR2
 195 0048 00000000 		.word	.LANCHOR1
 196 004c 00000000 		.word	.LANCHOR3
 197              		.cfi_endproc
 198              	.LFE34:
 200              		.section	.text.FreeRTOS_GetUDPPayloadBuffer,"ax",%progbits
 201              		.align	2
 202              		.global	FreeRTOS_GetUDPPayloadBuffer
 203              		.syntax unified
 204              		.arm
 205              		.fpu neon
 207              	FreeRTOS_GetUDPPayloadBuffer:
 208              	.LFB35:
 787:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 788:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 789:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void *FreeRTOS_GetUDPPayloadBuffer( size_t xRequestedSizeBytes, TickType_t xBlockTimeTicks )
 790:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 209              		.loc 1 790 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              	.LVL13:
 791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkBufferDescriptor_t *pxNetworkBuffer;
 792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void *pvReturn;
 793:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 794:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Cap the block time.  The reason for this is explained where
 795:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS is defined (assuming an official
 796:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	FreeRTOSIPConfig.h header file is being used). */
 797:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xBlockTimeTicks > ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS )
 798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 799:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xBlockTimeTicks = ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS;
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 801:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Obtain a network buffer with the required amount of storage. */
 803:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxNetworkBuffer = pxGetNetworkBufferWithDescriptor( sizeof( UDPPacket_t ) + xRequestedSizeBytes, x
 214              		.loc 1 803 0
 215 0000 883301E3 		movw	r3, #5000
 790:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkBufferDescriptor_t *pxNetworkBuffer;
 216              		.loc 1 790 0
 217 0004 10402DE9 		push	{r4, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
 221              		.loc 1 803 0
 222 0008 030051E1 		cmp	r1, r3
 223 000c 2A4080E2 		add	r4, r0, #42
 224 0010 0310A021 		movcs	r1, r3
 225              	.LVL14:
 226 0014 0400A0E1 		mov	r0, r4
 227              	.LVL15:
 228 0018 FEFFFFEB 		bl	pxGetNetworkBufferWithDescriptor
 229              	.LVL16:
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 805:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pxNetworkBuffer != NULL )
 230              		.loc 1 805 0
 231 001c 000050E3 		cmp	r0, #0
 806:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 807:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Set the actual packet size in case a bigger buffer was returned. */
 808:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNetworkBuffer->xDataLength = sizeof( UDPPacket_t ) + xRequestedSizeBytes;
 232              		.loc 1 808 0
 233 0020 1C408015 		strne	r4, [r0, #28]
 809:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 810:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Leave space for the UPD header. */
 811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pvReturn = ( void * ) &( pxNetworkBuffer->pucEthernetBuffer[ ipUDP_PAYLOAD_OFFSET_IPv4 ] );
 234              		.loc 1 811 0
 235 0024 18009015 		ldrne	r0, [r0, #24]
 236              	.LVL17:
 237 0028 2A008012 		addne	r0, r0, #42
 238              	.LVL18:
 812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 813:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 814:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 815:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pvReturn = NULL;
 816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 817:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 818:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return ( void * ) pvReturn;
 819:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 239              		.loc 1 819 0
 240 002c 1080BDE8 		pop	{r4, pc}
 241              		.cfi_endproc
 242              	.LFE35:
 244              		.section	.text.pxDuplicateNetworkBufferWithDescriptor,"ax",%progbits
 245              		.align	2
 246              		.global	pxDuplicateNetworkBufferWithDescriptor
 247              		.syntax unified
 248              		.arm
 249              		.fpu neon
 251              	pxDuplicateNetworkBufferWithDescriptor:
 252              	.LFB36:
 820:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 821:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 822:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkBufferDescriptor_t *pxDuplicateNetworkBufferWithDescriptor( NetworkBufferDescriptor_t * cons
 823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	BaseType_t xNewLength )
 824:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 253              		.loc 1 824 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL19:
 258 0000 70402DE9 		push	{r4, r5, r6, lr}
 259              		.cfi_def_cfa_offset 16
 260              		.cfi_offset 4, -16
 261              		.cfi_offset 5, -12
 262              		.cfi_offset 6, -8
 263              		.cfi_offset 14, -4
 264              		.loc 1 824 0
 265 0004 0160A0E1 		mov	r6, r1
 266 0008 0050A0E1 		mov	r5, r0
 825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkBufferDescriptor_t * pxNewBuffer;
 826:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* This function is only used when 'ipconfigZERO_COPY_TX_DRIVER' is set to 1.
 828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	The transmit routine wants to have ownership of the network buffer
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	descriptor, because it will pass the buffer straight to DMA. */
 830:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxNewBuffer = pxGetNetworkBufferWithDescriptor( ( size_t ) xNewLength, ( TickType_t ) 0 );
 267              		.loc 1 830 0
 268 000c 0010A0E3 		mov	r1, #0
 269              	.LVL20:
 270 0010 0600A0E1 		mov	r0, r6
 271              	.LVL21:
 272 0014 FEFFFFEB 		bl	pxGetNetworkBufferWithDescriptor
 273              	.LVL22:
 831:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 832:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pxNewBuffer != NULL )
 274              		.loc 1 832 0
 275 0018 004050E2 		subs	r4, r0, #0
 276 001c 0A00000A 		beq	.L29
 833:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Set the actual packet size in case a bigger buffer than requested
 835:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		was returned. */
 836:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->xDataLength = xNewLength;
 837:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Copy the original packet information. */
 839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->ulIPAddress = pxNetworkBuffer->ulIPAddress;
 277              		.loc 1 839 0
 278 0020 143095E5 		ldr	r3, [r5, #20]
 836:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 279              		.loc 1 836 0
 280 0024 1C6084E5 		str	r6, [r4, #28]
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->usPort = pxNetworkBuffer->usPort;
 841:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->usBoundPort = pxNetworkBuffer->usBoundPort;
 842:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		memcpy( pxNewBuffer->pucEthernetBuffer, pxNetworkBuffer->pucEthernetBuffer, pxNetworkBuffer->xDat
 281              		.loc 1 842 0
 282 0028 181095E5 		ldr	r1, [r5, #24]
 839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->usPort = pxNetworkBuffer->usPort;
 283              		.loc 1 839 0
 284 002c 143084E5 		str	r3, [r4, #20]
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->usPort = pxNetworkBuffer->usPort;
 285              		.loc 1 840 0
 286 0030 B032D5E1 		ldrh	r3, [r5, #32]
 287              		.loc 1 842 0
 288 0034 1C2095E5 		ldr	r2, [r5, #28]
 289 0038 180094E5 		ldr	r0, [r4, #24]
 290              	.LVL23:
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer->usPort = pxNetworkBuffer->usPort;
 291              		.loc 1 840 0
 292 003c B032C4E1 		strh	r3, [r4, #32]	@ movhi
 841:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		memcpy( pxNewBuffer->pucEthernetBuffer, pxNetworkBuffer->pucEthernetBuffer, pxNetworkBuffer->xDat
 293              		.loc 1 841 0
 294 0040 B232D5E1 		ldrh	r3, [r5, #34]
 295 0044 B232C4E1 		strh	r3, [r4, #34]	@ movhi
 296              		.loc 1 842 0
 297 0048 FEFFFFEB 		bl	memcpy
 298              	.LVL24:
 299              	.L29:
 843:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 844:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 845:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return pxNewBuffer;
 846:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 300              		.loc 1 846 0
 301 004c 0400A0E1 		mov	r0, r4
 302 0050 7080BDE8 		pop	{r4, r5, r6, pc}
 303              		.cfi_endproc
 304              	.LFE36:
 306              		.section	.text.pxUDPPayloadBuffer_to_NetworkBuffer,"ax",%progbits
 307              		.align	2
 308              		.global	pxUDPPayloadBuffer_to_NetworkBuffer
 309              		.syntax unified
 310              		.arm
 311              		.fpu neon
 313              	pxUDPPayloadBuffer_to_NetworkBuffer:
 314              	.LFB37:
 847:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 848:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 849:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigZERO_COPY_TX_DRIVER != 0 ) || ( ipconfigZERO_COPY_RX_DRIVER != 0 )
 850:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 851:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t *pxPacketBuffer_to_NetworkBuffer( const void *pvBuffer )
 852:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 853:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint8_t *pucBuffer;
 854:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t *pxResult;
 855:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 856:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( pvBuffer == NULL )
 857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 858:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxResult = NULL;
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 860:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
 861:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 862:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Obtain the network buffer from the zero copy pointer. */
 863:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pucBuffer = ( uint8_t * ) pvBuffer;
 864:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 865:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The input here is a pointer to a payload buffer.  Subtract the
 866:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			size of the header in the network buffer, usually 8 + 2 bytes. */
 867:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pucBuffer -= ipBUFFER_PADDING;
 868:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Here a pointer was placed to the network descriptor.  As a
 870:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pointer is dereferenced, make sure it is well aligned. */
 871:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( ( ( ( uint32_t ) pucBuffer ) & ( sizeof( pucBuffer ) - ( size_t ) 1 ) ) == ( uint32_t ) 0 )
 872:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 873:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxResult = * ( ( NetworkBufferDescriptor_t ** ) pucBuffer );
 874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 875:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			else
 876:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 877:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxResult = NULL;
 878:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 879:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 880:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 881:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return pxResult;
 882:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 883:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 884:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigZERO_COPY_TX_DRIVER != 0 */
 885:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 887:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkBufferDescriptor_t *pxUDPPayloadBuffer_to_NetworkBuffer( void *pvBuffer )
 888:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 315              		.loc 1 888 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LVL25:
 889:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint8_t *pucBuffer;
 890:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** NetworkBufferDescriptor_t *pxResult;
 891:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 892:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pvBuffer == NULL )
 321              		.loc 1 892 0
 322 0000 000050E3 		cmp	r0, #0
 323 0004 1EFF2F01 		bxeq	lr
 324              	.LVL26:
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 894:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxResult = NULL;
 895:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Obtain the network buffer from the zero copy pointer. */
 899:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pucBuffer = ( uint8_t * ) pvBuffer;
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The input here is a pointer to a payload buffer.  Subtract
 902:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		the total size of a UDP/IP header plus the size of the header in
 903:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		the network buffer, usually 8 + 2 bytes. */
 904:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pucBuffer -= ( sizeof( UDPPacket_t ) + ipBUFFER_PADDING );
 905:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 906:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Here a pointer was placed to the network descriptor,
 907:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		As a pointer is dereferenced, make sure it is well aligned */
 908:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( ( ( ( uint32_t ) pucBuffer ) & ( sizeof( pucBuffer ) - 1 ) ) == 0 )
 325              		.loc 1 908 0
 326 0008 030010E3 		tst	r0, #3
 909:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 910:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The following statement may trigger a:
 911:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			warning: cast increases required alignment of target type [-Wcast-align].
 912:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			It has been confirmed though that the alignment is suitable. */
 913:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxResult = * ( ( NetworkBufferDescriptor_t ** ) pucBuffer );
 327              		.loc 1 913 0
 328 000c 34001005 		ldreq	r0, [r0, #-52]
 329              	.LVL27:
 894:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 330              		.loc 1 894 0
 331 0010 0000A013 		movne	r0, #0
 332              	.LVL28:
 914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
 916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxResult = NULL;
 918:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 919:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 920:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 921:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return pxResult;
 922:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 333              		.loc 1 922 0
 334 0014 1EFF2FE1 		bx	lr
 335              		.cfi_endproc
 336              	.LFE37:
 338              		.section	.text.FreeRTOS_ReleaseUDPPayloadBuffer,"ax",%progbits
 339              		.align	2
 340              		.global	FreeRTOS_ReleaseUDPPayloadBuffer
 341              		.syntax unified
 342              		.arm
 343              		.fpu neon
 345              	FreeRTOS_ReleaseUDPPayloadBuffer:
 346              	.LFB38:
 923:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 924:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 925:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_ReleaseUDPPayloadBuffer( void *pvBuffer )
 926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 347              		.loc 1 926 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL29:
 352 0000 10402DE9 		push	{r4, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	vReleaseNetworkBufferAndDescriptor( pxUDPPayloadBuffer_to_NetworkBuffer( pvBuffer ) );
 356              		.loc 1 927 0
 357 0004 FEFFFFEB 		bl	pxUDPPayloadBuffer_to_NetworkBuffer
 358              	.LVL30:
 928:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 359              		.loc 1 928 0
 360 0008 1040BDE8 		pop	{r4, lr}
 361              		.cfi_restore 14
 362              		.cfi_restore 4
 363              		.cfi_def_cfa_offset 0
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	vReleaseNetworkBufferAndDescriptor( pxUDPPayloadBuffer_to_NetworkBuffer( pvBuffer ) );
 364              		.loc 1 927 0
 365 000c FEFFFFEA 		b	vReleaseNetworkBufferAndDescriptor
 366              	.LVL31:
 367              		.cfi_endproc
 368              	.LFE38:
 370              		.section	.text.FreeRTOS_IPInit,"ax",%progbits
 371              		.align	2
 372              		.global	FreeRTOS_IPInit
 373              		.syntax unified
 374              		.arm
 375              		.fpu neon
 377              	FreeRTOS_IPInit:
 378              	.LFB39:
 929:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 930:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 931:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*_RB_ Should we add an error or assert if the task priorities are set such that the servers won't 
 932:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*_HT_ There was a bug in FreeRTOS_TCP_IP.c that only occurred when the applications' priority was 
 933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  As that bug has been repaired, there is not an urgent reason to warn.
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  It is better though to use the advised priority scheme. */
 935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t FreeRTOS_IPInit( const uint8_t ucIPAddress[ ipIP_ADDRESS_LENGTH_BYTES ], const uint8_t u
 936:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 379              		.loc 1 936 0
 380              		.cfi_startproc
 381              		@ args = 4, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL32:
 384 0000 F3472DE9 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 385              		.cfi_def_cfa_offset 40
 386              		.cfi_offset 4, -32
 387              		.cfi_offset 5, -28
 388              		.cfi_offset 6, -24
 389              		.cfi_offset 7, -20
 390              		.cfi_offset 8, -16
 391              		.cfi_offset 9, -12
 392              		.cfi_offset 10, -8
 393              		.cfi_offset 14, -4
 394              		.loc 1 936 0
 395 0004 0370A0E1 		mov	r7, r3
 396              	.LBB19:
 397              	.LBB20:
 937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn = pdFALSE;
 938:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* This function should only be called once. */
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xIPIsNetworkTaskReady() == pdFALSE );
 941:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xNetworkEventQueue == NULL );
 942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xIPTaskHandle == NULL );
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 944:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Check structure packing is correct. */
 945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( sizeof( EthernetHeader_t ) == ipEXPECTED_EthernetHeader_t_SIZE );
 946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( sizeof( ARPHeader_t ) == ipEXPECTED_ARPHeader_t_SIZE );
 947:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( sizeof( IPHeader_t ) == ipEXPECTED_IPHeader_t_SIZE );
 948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( sizeof( ICMPHeader_t ) == ipEXPECTED_ICMPHeader_t_SIZE );
 949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( sizeof( UDPHeader_t ) == ipEXPECTED_UDPHeader_t_SIZE );
 950:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 951:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Attempt to create the queue used to communicate with the IP task. */
 952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkEventQueue = xQueueCreate( ( UBaseType_t ) ipconfigEVENT_QUEUE_LENGTH, ( UBaseType_t ) siz
 953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xNetworkEventQueue );
 954:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 955:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xNetworkEventQueue != NULL )
 956:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 957:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if ( configQUEUE_REGISTRY_SIZE > 0 )
 958:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 959:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* A queue registry is normally used to assist a kernel aware
 960:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			debugger.  If one is in use then it will be helpful for the debugger
 961:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			to show information about the network event queue. */
 962:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vQueueAddToRegistry( xNetworkEventQueue, "NetEvnt" );
 963:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif /* configQUEUE_REGISTRY_SIZE */
 965:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 966:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xNetworkBuffersInitialise() == pdPASS )
 967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 968:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Store the local IP and MAC address. */
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulDefaultIPAddress = FreeRTOS_inet_addr_quick( ucIPAddress[ 0 ], ucIPAddress[
 970:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulNetMask = FreeRTOS_inet_addr_quick( ucNetMask[ 0 ], ucNetMask[ 1 ], ucNetMa
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulGatewayAddress = FreeRTOS_inet_addr_quick( ucGatewayAddress[ 0 ], ucGateway
 972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulDNSServerAddress = FreeRTOS_inet_addr_quick( ucDNSServerAddress[ 0 ], ucDNS
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulBroadcastAddress = ( xNetworkAddressing.ulDefaultIPAddress & xNetworkAddres
 974:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			memcpy( &xDefaultAddressing, &xNetworkAddressing, sizeof( xDefaultAddressing ) );
 976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 977:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#if ipconfigUSE_DHCP == 1
 978:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 979:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The IP address is not set until DHCP completes. */
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				*ipLOCAL_IP_ADDRESS_POINTER = 0x00UL;
 981:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 982:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#else
 983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 984:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The IP address is set from the value passed in. */
 985:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				*ipLOCAL_IP_ADDRESS_POINTER = xNetworkAddressing.ulDefaultIPAddress;
 986:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 987:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Added to prevent ARP flood to gateway.  Ensure the
 988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				gateway is on the same subnet as the IP	address. */
 989:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				configASSERT( ( ( *ipLOCAL_IP_ADDRESS_POINTER ) & xNetworkAddressing.ulNetMask ) == ( xNetworkA
 990:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 991:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#endif /* ipconfigUSE_DHCP == 1 */
 992:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 993:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The MAC address is stored in the start of the default packet
 994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			header fragment, which is used when sending UDP packets. */
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			memcpy( ( void * ) ipLOCAL_MAC_ADDRESS, ( void * ) ucMACAddress, ( size_t ) ipMAC_ADDRESS_LENGTH
 996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 997:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Prepare the sockets interface. */
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReturn = vNetworkSocketsInit();
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1000:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( pdTRUE == xReturn )
1001:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1002:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Create the task that processes Ethernet and stack events. */
1003:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xReturn = xTaskCreate( prvIPTask, "IP-task", ( uint16_t )ipconfigIP_TASK_STACK_SIZE_WORDS, NULL
1004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1005:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1006:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
1007:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1008:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_debug_printf( ( "FreeRTOS_IPInit: xNetworkBuffersInitialise() failed\n") );
1009:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Clean up. */
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vQueueDelete( xNetworkEventQueue );
1012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkEventQueue = NULL;
1013:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1014:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1015:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1016:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1017:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		FreeRTOS_debug_printf( ( "FreeRTOS_IPInit: Network event queue could not be created\n") );
1018:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1020:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xReturn;
1021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1022:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1023:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1024:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_GetAddressConfiguration( uint32_t *pulIPAddress, uint32_t *pulNetMask, uint32_t *pulG
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1026:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Return the address configuration to the caller. */
1027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulIPAddress != NULL )
1029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1030:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*pulIPAddress = *ipLOCAL_IP_ADDRESS_POINTER;
1031:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulNetMask != NULL )
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*pulNetMask = xNetworkAddressing.ulNetMask;
1036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1037:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulGatewayAddress != NULL )
1039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*pulGatewayAddress = xNetworkAddressing.ulGatewayAddress;
1041:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1042:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1043:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulDNSServerAddress != NULL )
1044:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*pulDNSServerAddress = xNetworkAddressing.ulDNSServerAddress;
1046:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1047:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1048:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1049:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1050:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_SetAddressConfiguration( const uint32_t *pulIPAddress, const uint32_t *pulNetMask, co
1051:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Update the address configuration. */
1053:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulIPAddress != NULL )
1055:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*ipLOCAL_IP_ADDRESS_POINTER = *pulIPAddress;
1057:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1058:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulNetMask != NULL )
1060:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkAddressing.ulNetMask = *pulNetMask;
1062:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulGatewayAddress != NULL )
1065:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkAddressing.ulGatewayAddress = *pulGatewayAddress;
1067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pulDNSServerAddress != NULL )
1070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1071:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkAddressing.ulDNSServerAddress = *pulDNSServerAddress;
1072:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1073:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1074:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1076:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
1077:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1078:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	BaseType_t FreeRTOS_SendPingRequest( uint32_t ulIPAddress, size_t xNumberOfBytesToSend, TickType_t
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t *pxNetworkBuffer;
1081:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ICMPHeader_t *pxICMPHeader;
1082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	BaseType_t xReturn = pdFAIL;
1083:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static uint16_t usSequenceNumber = 0;
1084:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint8_t *pucChar;
1085:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	IPStackEvent_t xStackTxEvent = { eStackTxEvent, NULL };
1086:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( (xNumberOfBytesToSend >= 1 ) && ( xNumberOfBytesToSend < ( ( ipconfigNETWORK_MTU - sizeof( IP
1088:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxNetworkBuffer = pxGetNetworkBufferWithDescriptor( xNumberOfBytesToSend + sizeof( ICMPPacket_t 
1090:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1091:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( pxNetworkBuffer != NULL )
1092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1093:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxICMPHeader = ( ICMPHeader_t * ) &( pxNetworkBuffer->pucEthernetBuffer[ ipIP_PAYLOAD_OFFSET ] 
1094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				usSequenceNumber++;
1095:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1096:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Fill in the basic header information. */
1097:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxICMPHeader->ucTypeOfMessage = ipICMP_ECHO_REQUEST;
1098:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxICMPHeader->ucTypeOfService = 0;
1099:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxICMPHeader->usIdentifier = usSequenceNumber;
1100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxICMPHeader->usSequenceNumber = usSequenceNumber;
1101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Find the start of the data. */
1103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pucChar = ( uint8_t * ) pxICMPHeader;
1104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pucChar += sizeof( ICMPHeader_t );
1105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Just memset the data to a fixed value. */
1107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				memset( ( void * ) pucChar, ( int ) ipECHO_DATA_FILL_BYTE, xNumberOfBytesToSend );
1108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The message is complete, IP and checksum's are handled by
1110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vProcessGeneratedUDPPacket */
1111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxNetworkBuffer->pucEthernetBuffer[ ipSOCKET_OPTIONS_OFFSET ] = FREERTOS_SO_UDPCKSUM_OUT;
1112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxNetworkBuffer->ulIPAddress = ulIPAddress;
1113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxNetworkBuffer->usPort = ipPACKET_CONTAINS_ICMP_DATA;
1114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxNetworkBuffer->xDataLength = xNumberOfBytesToSend + sizeof( ICMPHeader_t );
1115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Send to the stack. */
1117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xStackTxEvent.pvData = pxNetworkBuffer;
1118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				if( xSendEventStructToIPTask( &xStackTxEvent, xBlockTimeTicks) != pdPASS )
1120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					vReleaseNetworkBufferAndDescriptor( pxNetworkBuffer );
1122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					iptraceSTACK_TX_EVENT_LOST( ipSTACK_TX_EVENT );
1123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				else
1125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					xReturn = usSequenceNumber;
1127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
1131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The requested number of bytes will not fit in the available space
1133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			in the network buffer. */
1134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return xReturn;
1137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigSUPPORT_OUTGOING_PINGS == 1 */
1140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xSendEventToIPTask( eIPEvent_t eEvent )
1143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** IPStackEvent_t xEventMessage;
1145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** const TickType_t xDontBlock = ( TickType_t ) 0;
1146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xEventMessage.eEventType = eEvent;
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xEventMessage.pvData = ( void* )NULL;
1149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xSendEventStructToIPTask( &xEventMessage, xDontBlock );
1151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xSendEventStructToIPTask( const IPStackEvent_t *pxEvent, TickType_t xTimeout )
1155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn, xSendMessage;
1157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( xIPIsNetworkTaskReady() == pdFALSE ) && ( pxEvent->eEventType != eNetworkDownEvent ) )
1159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Only allow eNetworkDownEvent events if the IP task is not ready
1161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		yet.  Not going to attempt to send the message so the send failed. */
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xReturn = pdFAIL;
1163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSendMessage = pdTRUE;
1167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigUSE_TCP == 1 )
1169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( pxEvent->eEventType == eTCPTimerEvent )
1171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* TCP timer events are sent to wake the timer task when
1173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xTCPTimer has expired, but there is no point sending them if the
1174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				IP task is already awake processing other message. */
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xTCPTimer.bExpired = pdTRUE_UNSIGNED;
1176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				if( uxQueueMessagesWaiting( xNetworkEventQueue ) != 0u )
1178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					/* Not actually going to send the message but this is not a
1180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					failure as the message didn't need to be sent. */
1181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					xSendMessage = pdFALSE;
1182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif /* ipconfigUSE_TCP */
1186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSendMessage != pdFALSE )
1188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The IP task cannot block itself while waiting for itself to
1190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			respond. */
1191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( ( xIsCallingFromIPTask() == pdTRUE ) && ( xTimeout > ( TickType_t ) 0 ) )
1192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xTimeout = ( TickType_t ) 0;
1194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReturn = xQueueSendToBack( xNetworkEventQueue, pxEvent, xTimeout );
1197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( xReturn == pdFAIL )
1199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* A message should have been sent to the IP task, but wasn't. */
1201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				FreeRTOS_debug_printf( ( "xSendEventStructToIPTask: CAN NOT ADD %d\n", pxEvent->eEventType ) );
1202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				iptraceSTACK_TX_EVENT_LOST( pxEvent->eEventType );
1203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
1206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* It was not necessary to send the message to process the event so
1208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			even though the message was not sent the call was successful. */
1209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xReturn = pdPASS;
1210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xReturn;
1214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eConsiderFrameForProcessing( const uint8_t * const pucEthernetBuffer )
1218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eReturn;
1220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** const EthernetHeader_t *pxEthernetHeader;
1221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxEthernetHeader = ( const EthernetHeader_t * ) pucEthernetBuffer;
1223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( memcmp( ( void * ) ipLOCAL_MAC_ADDRESS, ( void * ) &( pxEthernetHeader->xDestinationAddress ),
1225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The packet was directed to this node directly - process it. */
1227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		eReturn = eProcessBuffer;
1228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else if( memcmp( ( void * ) xBroadcastMACAddress.ucBytes, ( void * ) pxEthernetHeader->xDestinatio
1230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The packet was a broadcast - process it. */
1232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		eReturn = eProcessBuffer;
1233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigUSE_LLMNR == 1 )
1236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( memcmp( ( void * ) xLLMNR_MacAdress.ucBytes, ( void * ) pxEthernetHeader->xDestinationAddress.
1237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The packet is a request for LLMNR - process it. */
1239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		eReturn = eProcessBuffer;
1240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigUSE_LLMNR */
1243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The packet was not a broadcast, or for this node, just release
1245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		the buffer without taking any other action. */
1246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		eReturn = eReleaseBuffer;
1247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigFILTER_OUT_NON_ETHERNET_II_FRAMES == 1 )
1250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint16_t usFrameType;
1252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( eReturn == eProcessBuffer )
1254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			usFrameType = pxEthernetHeader->usFrameType;
1256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			usFrameType = FreeRTOS_ntohs( usFrameType );
1257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( usFrameType <= 0x600U )
1259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Not an Ethernet II frame. */
1261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturn = eReleaseBuffer;
1262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigFILTER_OUT_NON_ETHERNET_II_FRAMES == 1  */
1266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return eReturn;
1268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvProcessNetworkDownEvent( void )
1272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Stop the ARP timer while there is no network. */
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xARPTimer.bActive = pdFALSE_UNSIGNED;
1275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if ipconfigUSE_NETWORK_EVENT_HOOK == 1
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		static BaseType_t xCallEventHook = pdFALSE;
1279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The first network down event is generated by the IP stack itself to
1281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		initialise the network hardware, so do not call the network down event
1282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		the first time through. */
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xCallEventHook == pdTRUE )
1284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vApplicationIPNetworkEventHook( eNetworkDown );
1286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xCallEventHook = pdTRUE;
1288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif
1290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Per the ARP Cache Validation section of https://tools.ietf.org/html/rfc1122, 
1292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	treat network down as a "delivery problem" and flush the ARP cache for this
1293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	interface. */
1294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	FreeRTOS_ClearARP( );
1295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* The network has been disconnected (or is being initialised for the first
1297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	time).  Perform whatever hardware processing is necessary to bring it up
1298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	again, or wait for it to be available again.  This is hardware dependent. */
1299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xNetworkInterfaceInitialise() != pdPASS )
1300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Ideally the network interface initialisation function will only
1302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return when the network is available.  In case this is not the case,
1303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		wait a while before retrying the initialisation. */
1304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		vTaskDelay( ipINITIALISATION_RETRY_DELAY );
1305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		FreeRTOS_NetworkDown();
1306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Set remaining time to 0 so it will become active immediately. */
1310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if ipconfigUSE_DHCP == 1
1311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The network is not up until DHCP has completed. */
1313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vDHCPProcess( pdTRUE );
1314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xSendEventToIPTask( eDHCPEvent );
1315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#else
1317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Perform any necessary 'network up' processing. */
1319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vIPNetworkUpCalls();
1320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif
1322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void vIPNetworkUpCalls( void )
1327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkUp = pdTRUE;
1329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigUSE_NETWORK_EVENT_HOOK == 1 )
1331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		vApplicationIPNetworkEventHook( eNetworkUp );
1333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigUSE_NETWORK_EVENT_HOOK */
1335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigDNS_USE_CALLBACKS != 0 )
1337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The following function is declared in FreeRTOS_DNS.c	and 'private' to
1339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		this library */
1340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		extern void vDNSInitialise( void );
1341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		vDNSInitialise();
1342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigDNS_USE_CALLBACKS != 0 */
1344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Set remaining time to 0 so it will become active immediately. */
1346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerReload( &xARPTimer, pdMS_TO_TICKS( ipARP_TIMER_PERIOD_MS ) );
1347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static void prvProcessEthernetPacket( NetworkBufferDescriptor_t * const pxNetworkBuffer )
1351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** EthernetHeader_t *pxEthernetHeader;
1353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eReturned = eReleaseBuffer;
1354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( pxNetworkBuffer );
1356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Interpret the Ethernet frame. */
1358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pxNetworkBuffer->xDataLength >= sizeof( EthernetHeader_t ) )
1359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		eReturned = ipCONSIDER_FRAME_FOR_PROCESSING( pxNetworkBuffer->pucEthernetBuffer );
1361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxEthernetHeader = ( EthernetHeader_t * )( pxNetworkBuffer->pucEthernetBuffer );
1362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( eReturned == eProcessBuffer )
1364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Interpret the received Ethernet packet. */
1366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			switch( pxEthernetHeader->usFrameType )
1367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipARP_FRAME_TYPE:
1369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The Ethernet frame contains an ARP packet. */
1370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				if( pxNetworkBuffer->xDataLength >= sizeof( ARPPacket_t ) )
1371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					eReturned = eARPProcessPacket( ( ARPPacket_t * )pxNetworkBuffer->pucEthernetBuffer );
1373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				else
1375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					eReturned = eReleaseBuffer;
1377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipIPv4_FRAME_TYPE:
1381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The Ethernet frame contains an IP packet. */
1382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				if( pxNetworkBuffer->xDataLength >= sizeof( IPPacket_t ) )
1383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					eReturned = prvProcessIPPacket( ( IPPacket_t * )pxNetworkBuffer->pucEthernetBuffer, pxNetworkB
1385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				else
1387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					eReturned = eReleaseBuffer;
1389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			default:
1393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* No other packet types are handled.  Nothing to do. */
1394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturned = eReleaseBuffer;
1395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Perform any actions that resulted from processing the Ethernet frame. */
1401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	switch( eReturned )
1402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		case eReturnEthernetFrame :
1404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The Ethernet frame will have been updated (maybe it was
1405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			an ARP request or a PING request?) and should be sent back to
1406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			its source. */
1407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vReturnEthernetFrame( pxNetworkBuffer, pdTRUE );
1408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* parameter pdTRUE: the buffer must be released once
1409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			the frame has been transmitted */
1410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			break;
1411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		case eFrameConsumed :
1413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The frame is in use somewhere, don't release the buffer
1414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			yet. */
1415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			break;
1416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		default :
1418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* The frame is not being used anywhere, and the
1419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			NetworkBufferDescriptor_t structure containing the frame should
1420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			just be	released back to the list of free buffers. */
1421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vReleaseNetworkBufferAndDescriptor( pxNetworkBuffer );
1422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			break;
1423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static eFrameProcessingResult_t prvAllowIPPacket( const IPPacket_t * const pxIPPacket,
1428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t * const pxNetworkBuffer, UBaseType_t uxHeaderLength )
1429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eReturn = eProcessBuffer;
1431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 0 ) || ( ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM =
1433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	const IPHeader_t * pxIPHeader = &( pxIPPacket->xIPHeader );
1434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #else
1435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* or else, the parameter won't be used and the function will be optimised
1436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	away */
1437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	( void ) pxIPPacket;
1438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
1439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 0 )
1441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* In systems with a very small amount of RAM, it might be advantageous
1443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		to have incoming messages checked earlier, by the network card driver.
1444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		This method may decrease the usage of sparse network buffers. */
1445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		uint32_t ulDestinationIPAddress = pxIPHeader->ulDestinationIPAddress;
1446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Ensure that the incoming packet is not fragmented (only outgoing
1448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			packets can be fragmented) as these are the only handled IP frames
1449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			currently. */
1450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( ( pxIPHeader->usFragmentOffset & ipFRAGMENT_OFFSET_BIT_MASK ) != 0U )
1451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Can not handle, fragmented packet. */
1453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturn = eReleaseBuffer;
1454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* 0x45 means: IPv4 with an IP header of 5 x 4 = 20 bytes
1456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * 0x47 means: IPv4 with an IP header of 7 x 4 = 28 bytes */
1457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			else if( ( pxIPHeader->ucVersionHeaderLength < 0x45u ) || ( pxIPHeader->ucVersionHeaderLength > 
1458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Can not handle, unknown or invalid header version. */
1460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturn = eReleaseBuffer;
1461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Is the packet for this IP address? */
1463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			else if( ( ulDestinationIPAddress != *ipLOCAL_IP_ADDRESS_POINTER ) &&
1464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Is it the global broadcast address 255.255.255.255 ? */
1465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ulDestinationIPAddress != ipBROADCAST_IP_ADDRESS ) &&
1466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Is it a specific broadcast address 192.168.1.255 ? */
1467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ulDestinationIPAddress != xNetworkAddressing.ulBroadcastAddress ) &&
1468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#if( ipconfigUSE_LLMNR == 1 )
1469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Is it the LLMNR multicast address? */
1470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ulDestinationIPAddress != ipLLMNR_IP_ADDR ) &&
1471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#endif
1472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Or (during DHCP negotiation) we have no IP-address yet? */
1473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( *ipLOCAL_IP_ADDRESS_POINTER != 0UL ) )
1474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Packet is not for this node, release it */
1476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturn = eReleaseBuffer;
1477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigETHERNET_DRIVER_FILTERS_PACKETS */
1480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM == 0 )
1482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Some drivers of NIC's with checksum-offloading will enable the above
1484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		define, so that the checksum won't be checked again here */
1485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if (eReturn == eProcessBuffer )
1486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Is the IP header checksum correct? */
1488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( ( pxIPHeader->ucProtocol != ( uint8_t ) ipPROTOCOL_ICMP ) &&
1489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( usGenerateChecksum( 0UL, ( uint8_t * ) &( pxIPHeader->ucVersionHeaderLength ), ( size_t ) uxH
1490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Check sum in IP-header not correct. */
1492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturn = eReleaseBuffer;
1493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Is the upper-layer checksum (TCP/UDP/ICMP) correct? */
1495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			else if( usGenerateProtocolChecksum( ( uint8_t * )( pxNetworkBuffer->pucEthernetBuffer ), pxNetw
1496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Protocol checksum not accepted. */
1498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eReturn = eReleaseBuffer;
1499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#else
1503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* to avoid warning unused parameters */
1505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( void ) pxNetworkBuffer;
1506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( void ) uxHeaderLength;
1507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif /* ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM == 0 */
1509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return eReturn;
1511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static eFrameProcessingResult_t prvProcessIPPacket( IPPacket_t * const pxIPPacket, NetworkBufferDes
1515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eReturn;
1517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** IPHeader_t * pxIPHeader = &( pxIPPacket->xIPHeader );
1518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** UBaseType_t uxHeaderLength = ( UBaseType_t ) ( ( pxIPHeader->ucVersionHeaderLength & 0x0Fu ) << 2 )
1519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint8_t ucProtocol;
1520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Bound the calculated header length: take away the Ethernet header size,
1522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	then check if the IP header is claiming to be longer than the remaining
1523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	total packet size. Also check for minimal header field length. */
1524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( uxHeaderLength > ( pxNetworkBuffer->xDataLength - ipSIZE_OF_ETH_HEADER ) ) ||
1525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( uxHeaderLength < ipSIZE_OF_IPv4_HEADER ) )
1526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return eReleaseBuffer;
1528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ucProtocol = pxIPPacket->xIPHeader.ucProtocol;
1531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Check if the IP headers are acceptable and if it has our destination. */
1532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	eReturn = prvAllowIPPacket( pxIPPacket, pxNetworkBuffer, uxHeaderLength );
1533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( eReturn == eProcessBuffer )
1535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( uxHeaderLength > ipSIZE_OF_IPv4_HEADER )
1537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* All structs of headers expect a IP header size of 20 bytes
1539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * IP header options were included, we'll ignore them and cut them out
1540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * Note: IP options are mostly use in Multi-cast protocols */
1541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			const size_t optlen = ( ( size_t ) uxHeaderLength ) - ipSIZE_OF_IPv4_HEADER;
1542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* From: the previous start of UDP/ICMP/TCP data */
1543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			uint8_t *pucSource = ( uint8_t* )(pxNetworkBuffer->pucEthernetBuffer + sizeof( EthernetHeader_t 
1544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* To: the usual start of UDP/ICMP/TCP data at offset 20 from IP header */
1545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			uint8_t *pucTarget = ( uint8_t* )(pxNetworkBuffer->pucEthernetBuffer + sizeof( EthernetHeader_t 
1546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* How many: total length minus the options and the lower headers */
1547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			const size_t  xMoveLen = pxNetworkBuffer->xDataLength - optlen - ipSIZE_OF_IPv4_HEADER - ipSIZE_
1548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			memmove( pucTarget, pucSource, xMoveLen );
1550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxNetworkBuffer->xDataLength -= optlen;
1551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Fix-up new version/header length field in IP packet. */
1553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxIPHeader->ucVersionHeaderLength = ( pxIPHeader->ucVersionHeaderLength & 0xF0 ) | /* High nibbl
1554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 												( ( ipSIZE_OF_IPv4_HEADER >> 2 ) & 0x0F ); /* Low nibble is the header size, in bytes, 
1555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Add the IP and MAC addresses to the ARP table if they are not
1558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		already there - otherwise refresh the age of the existing
1559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		entry. */
1560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( ucProtocol != ( uint8_t ) ipPROTOCOL_UDP )
1561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* Refresh the ARP cache with the IP/MAC-address of the received packet
1563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * For UDP packets, this will be done later in xProcessReceivedUDPPacket()
1564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * as soon as know that the message will be handled by someone
1565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * This will prevent that the ARP cache will get overwritten
1566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 * with the IP-address of useless broadcast packets
1567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			 */
1568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			vARPRefreshCacheEntry( &( pxIPPacket->xEthernetHeader.xSourceAddress ), pxIPHeader->ulSourceIPAd
1569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		switch( ucProtocol )
1571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipPROTOCOL_ICMP :
1573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* The IP packet contained an ICMP frame.  Don't bother
1574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				checking the ICMP checksum, as if it is wrong then the
1575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				wrong data will also be returned, and the source of the
1576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				ping will know something went wrong because it will not
1577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				be able to validate what it receives. */
1578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) || ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
1579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					if( pxNetworkBuffer->xDataLength >= sizeof( ICMPPacket_t ) )
1581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
1582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						ICMPPacket_t *pxICMPPacket = ( ICMPPacket_t * )( pxNetworkBuffer->pucEthernetBuffer );
1583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						if( pxIPHeader->ulDestinationIPAddress == *ipLOCAL_IP_ADDRESS_POINTER )
1584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						{
1585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 							eReturn = prvProcessICMPPacket( pxICMPPacket );
1586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						}
1587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
1588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					else
1589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
1590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						eReturn = eReleaseBuffer;
1591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
1592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) || ( ipconfigSUPPORT_OUTGOING_PINGS == 1 ) *
1594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipPROTOCOL_UDP :
1597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					/* The IP packet contained a UDP frame. */
1599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					UDPPacket_t *pxUDPPacket = ( UDPPacket_t * ) ( pxNetworkBuffer->pucEthernetBuffer );
1600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					/* Only proceed if the payload length indicated in the header
1602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					appears to be valid. */
1603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					if ( pxNetworkBuffer->xDataLength >= sizeof( UDPPacket_t ) )
1604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
1605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						/* Ensure that downstream UDP packet handling has the lesser
1606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * of: the actual network buffer Ethernet frame length, or
1607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * the sender's UDP packet header payload length, minus the
1608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * size of the UDP header.
1609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 *
1610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * The size of the UDP packet structure in this implementation
1611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * includes the size of the Ethernet header, the size of
1612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * the IP header, and the size of the UDP header.
1613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 */
1614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						pxNetworkBuffer->xDataLength -= sizeof( UDPPacket_t );
1616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						if( ( FreeRTOS_ntohs( pxUDPPacket->xUDPHeader.usLength ) - sizeof( UDPHeader_t ) ) <
1617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 								pxNetworkBuffer->xDataLength )
1618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						{
1619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 							pxNetworkBuffer->xDataLength = FreeRTOS_ntohs( pxUDPPacket->xUDPHeader.usLength ) - sizeof( 
1620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						}
1621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						/* Fields in pxNetworkBuffer (usPort, ulIPAddress) are network order. */
1623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						pxNetworkBuffer->usPort = pxUDPPacket->xUDPHeader.usSourcePort;
1624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						pxNetworkBuffer->ulIPAddress = pxUDPPacket->xIPHeader.ulSourceIPAddress;
1625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						/* ipconfigDRIVER_INCLUDED_RX_IP_CHECKSUM:
1627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * In some cases, the upper-layer checksum has been calculated
1628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * by the NIC driver.
1629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 *
1630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						 * Pass the packet payload to the UDP sockets implementation. */
1631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						if( xProcessReceivedUDPPacket( pxNetworkBuffer,
1632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 													   pxUDPPacket->xUDPHeader.usDestinationPort ) == pdPASS )
1633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						{
1634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 							eReturn = eFrameConsumed;
1635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						}
1636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
1637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					else
1638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
1639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						eReturn = eReleaseBuffer;
1640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
1641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ipconfigUSE_TCP == 1
1645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipPROTOCOL_TCP :
1646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					if( xProcessReceivedTCPPacket( pxNetworkBuffer ) == pdPASS )
1649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
1650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						eReturn = eFrameConsumed;
1651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
1652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					/* Setting this variable will cause xTCPTimerCheck()
1654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					to be called just before the IP-task blocks. */
1655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					xProcessedTCPMessage++;
1656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
1659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			default	:
1660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Not a supported frame type. */
1661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return eReturn;
1666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
1670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static void prvProcessICMPEchoReply( ICMPPacket_t * const pxICMPPacket )
1672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ePingReplyStatus_t eStatus = eSuccess;
1674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint16_t usDataLength, usCount;
1675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint8_t *pucByte;
1676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Find the total length of the IP packet. */
1678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usDataLength = pxICMPPacket->xIPHeader.usLength;
1679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usDataLength = FreeRTOS_ntohs( usDataLength );
1680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Remove the length of the IP headers to obtain the length of the ICMP
1682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		message itself. */
1683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usDataLength = ( uint16_t ) ( ( ( uint32_t ) usDataLength ) - ipSIZE_OF_IPv4_HEADER );
1684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Remove the length of the ICMP header, to obtain the length of
1686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		data contained in the ping. */
1687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usDataLength = ( uint16_t ) ( ( ( uint32_t ) usDataLength ) - ipSIZE_OF_ICMP_HEADER );
1688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Checksum has already been checked before in prvProcessIPPacket */
1690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Find the first byte of the data within the ICMP packet. */
1692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pucByte = ( uint8_t * ) pxICMPPacket;
1693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pucByte += sizeof( ICMPPacket_t );
1694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Check each byte. */
1696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		for( usCount = 0; usCount < usDataLength; usCount++ )
1697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( *pucByte != ipECHO_DATA_FILL_BYTE )
1699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				eStatus = eInvalidData;
1701:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1703:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pucByte++;
1705:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Call back into the application to pass it the result. */
1708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		vApplicationPingReplyHook( eStatus, pxICMPPacket->xICMPHeader.usIdentifier );
1709:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1711:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
1712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigREPLY_TO_INCOMING_PINGS == 1 )
1715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static eFrameProcessingResult_t prvProcessICMPEchoRequest( ICMPPacket_t * const pxICMPPacket )
1717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ICMPHeader_t *pxICMPHeader;
1719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	IPHeader_t *pxIPHeader;
1720:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uint16_t usRequest;
1721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxICMPHeader = &( pxICMPPacket->xICMPHeader );
1723:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader = &( pxICMPPacket->xIPHeader );
1724:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* HT:endian: changed back */
1726:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		iptraceSENDING_PING_REPLY( pxIPHeader->ulSourceIPAddress );
1727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1728:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* The checksum can be checked here - but a ping reply should be
1729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		returned even if the checksum is incorrect so the other end can
1730:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		tell that the ping was received - even if the ping reply contains
1731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		invalid data. */
1732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxICMPHeader->ucTypeOfMessage = ( uint8_t ) ipICMP_ECHO_REPLY;
1733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulDestinationIPAddress = pxIPHeader->ulSourceIPAddress;
1734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulSourceIPAddress = *ipLOCAL_IP_ADDRESS_POINTER;
1735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Update the checksum because the ucTypeOfMessage member in the header
1737:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		has been changed to ipICMP_ECHO_REPLY.  This is faster than calling
1738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usGenerateChecksum(). */
1739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1740:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* due to compiler warning "integer operation result is out of range" */
1741:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usRequest = ( uint16_t ) ( ( uint16_t )ipICMP_ECHO_REQUEST << 8 );
1743:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( pxICMPHeader->usChecksum >= FreeRTOS_htons( 0xFFFFu - usRequest ) )
1745:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxICMPHeader->usChecksum = ( uint16_t )
1747:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ( ( uint32_t ) pxICMPHeader->usChecksum ) +
1748:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					FreeRTOS_htons( usRequest + 1UL ) );
1749:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1750:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
1751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1752:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxICMPHeader->usChecksum = ( uint16_t )
1753:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ( ( uint32_t ) pxICMPHeader->usChecksum ) +
1754:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					FreeRTOS_htons( usRequest ) );
1755:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return eReturnEthernetFrame;
1757:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1758:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1759:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigREPLY_TO_INCOMING_PINGS == 1 */
1760:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1761:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1762:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) || ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
1763:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1764:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	static eFrameProcessingResult_t prvProcessICMPPacket( ICMPPacket_t * const pxICMPPacket )
1765:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1766:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	eFrameProcessingResult_t eReturn = eReleaseBuffer;
1767:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1768:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		iptraceICMP_PACKET_RECEIVED();
1769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		switch( pxICMPPacket->xICMPHeader.ucTypeOfMessage )
1770:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipICMP_ECHO_REQUEST	:
1772:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if ( ipconfigREPLY_TO_INCOMING_PINGS == 1 )
1773:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1774:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					eReturn = prvProcessICMPEchoRequest( pxICMPPacket );
1775:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) */
1777:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1778:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1779:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			case ipICMP_ECHO_REPLY		:
1780:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#if ( ipconfigSUPPORT_OUTGOING_PINGS == 1 )
1781:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1782:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					prvProcessICMPEchoReply( pxICMPPacket );
1783:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				#endif /* ipconfigSUPPORT_OUTGOING_PINGS */
1785:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1787:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			default	:
1788:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
1789:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1790:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return eReturn;
1792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1793:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1794:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ( ipconfigREPLY_TO_INCOMING_PINGS == 1 ) || ( ipconfigSUPPORT_OUTGOING_PINGS == 1 ) */
1795:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1796:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1797:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint16_t usGenerateProtocolChecksum( const uint8_t * const pucEthernetBuffer, size_t uxBufferLength
1798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
1799:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t ulLength;
1800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint16_t usChecksum, *pusChecksum;
1801:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** const IPPacket_t * pxIPPacket;
1802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** UBaseType_t uxIPHeaderLength;
1803:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** ProtocolPacket_t *pxProtPack;
1804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint8_t ucProtocol;
1805:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigHAS_DEBUG_PRINTF != 0 )
1806:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	const char *pcType;
1807:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
1808:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1809:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Check for minimum packet size. */
1810:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( uxBufferLength < sizeof( IPPacket_t ) )
1811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return ipINVALID_LENGTH;
1813:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1814:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1815:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Parse the packet length. */
1816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxIPPacket = ( const IPPacket_t * ) pucEthernetBuffer;
1817:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1818:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Per https://tools.ietf.org/html/rfc791, the four-bit Internet Header
1819:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	Length field contains the length of the internet header in 32-bit words. */
1820:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uxIPHeaderLength = ( UBaseType_t ) ( sizeof( uint32_t ) * ( pxIPPacket->xIPHeader.ucVersionHeaderL
1821:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1822:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Check for minimum packet size. */
1823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( uxBufferLength < sizeof( IPPacket_t ) + uxIPHeaderLength - ipSIZE_OF_IPv4_HEADER )
1824:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return ipINVALID_LENGTH;
1826:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( uxBufferLength < FreeRTOS_ntohs( pxIPPacket->xIPHeader.usLength ) )
1828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return ipINVALID_LENGTH;
1830:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1831:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1832:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Identify the next protocol. */
1833:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ucProtocol = pxIPPacket->xIPHeader.ucProtocol;
1834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1835:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* N.B., if this IP packet header includes Options, then the following
1836:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	assignment results in a pointer into the protocol packet with the Ethernet
1837:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	and IP headers incorrectly aligned. However, either way, the "third"
1838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	protocol (Layer 3 or 4) header will be aligned, which is the convenience
1839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	of this calculation. */
1840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxProtPack = ( ProtocolPacket_t * ) ( pucEthernetBuffer + ( uxIPHeaderLength - ipSIZE_OF_IPv4_HEAD
1841:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1842:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Switch on the Layer 3/4 protocol. */
1843:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ucProtocol == ( uint8_t ) ipPROTOCOL_UDP )
1844:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1845:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( uxBufferLength < ( uxIPHeaderLength + ipSIZE_OF_ETH_HEADER + ipSIZE_OF_UDP_HEADER ) )
1846:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1847:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			return ipINVALID_LENGTH;
1848:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1849:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1850:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pusChecksum = ( uint16_t * ) ( &( pxProtPack->xUDPPacket.xUDPHeader.usChecksum ) );
1851:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1852:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1853:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pcType = "UDP";
1854:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1855:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif	/* ipconfigHAS_DEBUG_PRINTF != 0 */
1856:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else if( ucProtocol == ( uint8_t ) ipPROTOCOL_TCP )
1858:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( uxBufferLength < ( uxIPHeaderLength + ipSIZE_OF_ETH_HEADER + ipSIZE_OF_TCP_HEADER ) )
1860:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1861:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			return ipINVALID_LENGTH;
1862:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1863:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1864:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pusChecksum = ( uint16_t * ) ( &( pxProtPack->xTCPPacket.xTCPHeader.usChecksum ) );
1865:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1866:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1867:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pcType = "TCP";
1868:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif	/* ipconfigHAS_DEBUG_PRINTF != 0 */
1870:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1871:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else if( ( ucProtocol == ( uint8_t ) ipPROTOCOL_ICMP ) ||
1872:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( ucProtocol == ( uint8_t ) ipPROTOCOL_IGMP ) )
1873:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( uxBufferLength < ( uxIPHeaderLength + ipSIZE_OF_ETH_HEADER + ipSIZE_OF_ICMP_HEADER ) )
1875:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1876:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			return ipINVALID_LENGTH;
1877:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1878:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1879:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pusChecksum = ( uint16_t * ) ( &( pxProtPack->xICMPPacket.xICMPHeader.usChecksum ) );
1880:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1881:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1882:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			if( ucProtocol == ( uint8_t ) ipPROTOCOL_ICMP )
1883:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1884:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pcType = "ICMP";
1885:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			else
1887:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1888:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pcType = "IGMP";
1889:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1890:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1891:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif	/* ipconfigHAS_DEBUG_PRINTF != 0 */
1892:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1894:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1895:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Unhandled protocol, other than ICMP, IGMP, UDP, or TCP. */
1896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return ipUNHANDLED_PROTOCOL;
1897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1899:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* The protocol and checksum field have been identified. Check the direction
1900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	of the packet. */
1901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xOutgoingPacket != pdFALSE )
1902:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1903:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* This is an outgoing packet. Before calculating the checksum, set it
1904:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		to zero. */
1905:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*( pusChecksum ) = 0u;
1906:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1907:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else if( ( *pusChecksum == 0u ) && ( ucProtocol == ( uint8_t ) ipPROTOCOL_UDP ) )
1908:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1909:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Sender hasn't set the checksum, no use to calculate it. */
1910:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return ipCORRECT_CRC;
1911:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1912:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1913:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ulLength = ( uint32_t )
1914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( FreeRTOS_ntohs( pxIPPacket->xIPHeader.usLength ) - ( ( uint16_t ) uxIPHeaderLength ) ); /* norm
1915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( ulLength < sizeof( pxProtPack->xUDPPacket.xUDPHeader ) ) ||
1917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( ulLength > ( uint32_t )( ipconfigNETWORK_MTU - uxIPHeaderLength ) ) )
1918:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1919:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1920:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1921:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_debug_printf( ( "usGenerateProtocolChecksum[%s]: len invalid: %lu\n", pcType, ulLength 
1922:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1923:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#endif	/* ipconfigHAS_DEBUG_PRINTF != 0 */
1924:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1925:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Again, in a 16-bit return value there is no space to indicate an
1926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		error.  For incoming packets, 0x1234 will cause dropping of the packet.
1927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		For outgoing packets, there is a serious problem with the
1928:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		format/length */
1929:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		return ipINVALID_LENGTH;
1930:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1931:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ucProtocol <= ( uint8_t ) ipPROTOCOL_IGMP )
1932:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* ICMP/IGMP do not have a pseudo header for CRC-calculation. */
1934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usChecksum = ( uint16_t )
1935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( ~usGenerateChecksum( 0UL,
1936:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( uint8_t * ) &( pxProtPack->xTCPPacket.xTCPHeader ), ( size_t ) ulLength ) );
1937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1938:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* For UDP and TCP, sum the pseudo header, i.e. IP protocol + length
1941:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		fields */
1942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usChecksum = ( uint16_t ) ( ulLength + ( ( uint16_t ) ucProtocol ) );
1943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1944:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* And then continue at the IPv4 source and destination addresses. */
1945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		usChecksum = ( uint16_t )
1946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( ~usGenerateChecksum( ( uint32_t ) usChecksum, ( uint8_t * )&( pxIPPacket->xIPHeader.ulSourceIP
1947:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( 2u * sizeof( pxIPPacket->xIPHeader.ulSourceIPAddress ) + ulLength ) ) );
1948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Sum TCP header and data. */
1950:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1951:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xOutgoingPacket == pdFALSE )
1953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1954:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* This is in incoming packet. If the CRC is correct, it should be zero. */
1955:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( usChecksum == 0u )
1956:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1957:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			usChecksum = ( uint16_t )ipCORRECT_CRC;
1958:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1959:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1960:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else
1961:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1962:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( ( usChecksum == 0u ) && ( ucProtocol == ( uint8_t ) ipPROTOCOL_UDP ) )
1963:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
1964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* In case of UDP, a calculated checksum of 0x0000 is transmitted
1965:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			as 0xffff. A value of zero would mean that the checksum is not used. */
1966:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
1968:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				if( xOutgoingPacket != pdFALSE )
1969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
1970:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					FreeRTOS_debug_printf( ( "usGenerateProtocolChecksum[%s]: crc swap: %04X\n", pcType, usChecksu
1971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
1972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
1973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#endif	/* ipconfigHAS_DEBUG_PRINTF != 0 */
1974:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			usChecksum = ( uint16_t )0xffffu;
1976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
1977:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1978:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	usChecksum = FreeRTOS_htons( usChecksum );
1979:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xOutgoingPacket != pdFALSE )
1981:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1982:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		*( pusChecksum ) = usChecksum;
1983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1984:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1985:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	else if( ( xOutgoingPacket == pdFALSE ) && ( usChecksum != ipCORRECT_CRC ) )
1986:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
1987:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		FreeRTOS_debug_printf( ( "usGenerateProtocolChecksum[%s]: ID %04X: from %lxip to %lxip bad crc: %
1988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pcType,
1989:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_ntohs( pxIPPacket->xIPHeader.usIdentification ),
1990:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_ntohl( pxIPPacket->xIPHeader.ulSourceIPAddress ),
1991:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_ntohl( pxIPPacket->xIPHeader.ulDestinationIPAddress ),
1992:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_ntohs( *pusChecksum ) ) );
1993:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
1994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif	/* ipconfigHAS_DEBUG_PRINTF != 0 */
1995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
1996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return usChecksum;
1997:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
1998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
1999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2000:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /**
2001:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * This method generates a checksum for a given IPv4 header, per RFC791 (page 14).
2002:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * The checksum algorithm is decribed as:
2003:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *   "[T]he 16 bit one's complement of the one's complement sum of all 16 bit words in the
2004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *   header.  For purposes of computing the checksum, the value of the checksum field is zero."
2005:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
2006:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * In a nutshell, that means that each 16-bit 'word' must be summed, after which
2007:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * the number of 'carries' (overflows) is added to the result. If that addition
2008:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * produces an overflow, that 'carry' must also be added to the final result. The final checksum
2009:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * should be the bitwise 'not' (ones-complement) of the result if the packet is
2010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * meant to be transmitted, but this method simply returns the raw value, probably
2011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * because when a packet is received, the checksum is verified by checking that
2012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * ((received & calculated) == 0) without applying a bitwise 'not' to the 'calculated' checksum.
2013:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
2014:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * This logic is optimized for microcontrollers which have limited resources, so the logic looks od
2015:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * It iterates over the full range of 16-bit words, but it does so by processing several 32-bit
2016:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * words at once whenever possible. Its first step is to align the memory pointer to a 32-bit bound
2017:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * after which it runs a fast loop to process multiple 32-bit words at once and adding their 'carri
2018:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Finally, it finishes up by processing any remaining 16-bit words, and adding up all of the 'carr
2019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * With 32-bit arithmetic, the number of 16-bit 'carries' produced by sequential additions can be f
2020:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * by looking at the 16 most-significant bits of the 32-bit integer, since a 32-bit int will contin
2021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * counting up instead of overflowing after 16 bits. That is why the actual checksum calculations l
2022:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *   union.u32 = ( uint32_t ) union.u16[ 0 ] + union.u16[ 1 ];
2023:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *
2024:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  * Arguments:
2025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *   ulSum: This argument provides a value to initialize the progressive summation
2026:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *	 of the header's values to. It is often 0, but protocols like TCP or UDP
2027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *	 can have pseudo-header fields which need to be included in the checksum.
2028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *   pucNextData: This argument contains the address of the first byte which this
2029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *	 method should process. The method's memory iterator is initialized to this value.
2030:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *   uxDataLengthBytes: This argument contains the number of bytes that this method
2031:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  *	 should process.
2032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c ****  */
2033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint16_t usGenerateChecksum( uint32_t ulSum, const uint8_t * pucNextData, size_t uxDataLengthBytes 
2034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** xUnion32 xSum2, xSum, xTerm;
2036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** xUnionPtr xSource;		/* Points to first byte */
2037:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** xUnionPtr xLastSource;	/* Points to last byte plus one */
2038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t ulAlignBits, ulCarry = 0ul;
2039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Small MCUs often spend up to 30% of the time doing checksum calculations
2041:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	This function is optimised for 32-bit CPUs; Each time it will try to fetch
2042:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	32-bits, sums it with an accumulator and counts the number of carries. */
2043:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2044:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Swap the input (little endian platform only). */
2045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xSum.u32 = FreeRTOS_ntohs( ulSum );
2046:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xTerm.u32 = 0ul;
2047:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2048:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xSource.u8ptr = ( uint8_t * ) pucNextData;
2049:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	ulAlignBits = ( ( ( uint32_t ) pucNextData ) & 0x03u ); /* gives 0, 1, 2, or 3 */
2050:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2051:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* If byte (8-bit) aligned... */
2052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( ( ulAlignBits & 1ul ) != 0ul ) && ( uxDataLengthBytes >= ( size_t ) 1 ) )
2053:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xTerm.u8[ 1 ] = *( xSource.u8ptr );
2055:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( xSource.u8ptr )++;
2056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		uxDataLengthBytes--;
2057:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Now xSource is word (16-bit) aligned. */
2058:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2060:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* If half-word (16-bit) aligned... */
2061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( ( ulAlignBits == 1u ) || ( ulAlignBits == 2u ) ) && ( uxDataLengthBytes >= 2u ) )
2062:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum.u32 += *(xSource.u16ptr);
2064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( xSource.u16ptr )++;
2065:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		uxDataLengthBytes -= 2u;
2066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Now xSource is word (32-bit) aligned. */
2067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Word (32-bit) aligned, do the most part. */
2070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xLastSource.u32ptr = ( xSource.u32ptr + ( uxDataLengthBytes / 4u ) ) - 3u;
2071:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2072:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* In this loop, four 32-bit additions will be done, in total 16 bytes.
2073:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	Indexing with constants (0,1,2,3) gives faster code than using
2074:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	post-increments. */
2075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	while( xSource.u32ptr < xLastSource.u32ptr )
2076:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2077:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Use a secondary Sum2, just to see if the addition produced an
2078:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		overflow. */
2079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum2.u32 = xSum.u32 + xSource.u32ptr[ 0 ];
2080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 < xSum.u32 )
2081:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			ulCarry++;
2083:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2084:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2085:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Now add the secondary sum to the major sum, and remember if there was
2086:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		a carry. */
2087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum.u32 = xSum2.u32 + xSource.u32ptr[ 1 ];
2088:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 > xSum.u32 )
2089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2090:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			ulCarry++;
2091:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2093:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* And do the same trick once again for indexes 2 and 3 */
2094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum2.u32 = xSum.u32 + xSource.u32ptr[ 2 ];
2095:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 < xSum.u32 )
2096:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2097:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			ulCarry++;
2098:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2099:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum.u32 = xSum2.u32 + xSource.u32ptr[ 3 ];
2101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 > xSum.u32 )
2103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			ulCarry++;
2105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* And finally advance the pointer 4 * 4 = 16 bytes. */
2108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSource.u32ptr += 4;
2109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Now add all carries. */
2112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xSum.u32 = ( uint32_t )xSum.u16[ 0 ] + xSum.u16[ 1 ] + ulCarry;
2113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	uxDataLengthBytes %= 16u;
2115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xLastSource.u8ptr = ( uint8_t * ) ( xSource.u8ptr + ( uxDataLengthBytes & ~( ( size_t ) 1 ) ) );
2116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Half-word aligned. */
2118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	while( xSource.u16ptr < xLastSource.u16ptr )
2119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* At least one more short. */
2121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum.u32 += xSource.u16ptr[ 0 ];
2122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSource.u16ptr++;
2123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( uxDataLengthBytes & ( size_t ) 1 ) != 0u )	/* Maybe one more ? */
2126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xTerm.u8[ 0 ] = xSource.u8ptr[ 0 ];
2128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xSum.u32 += xTerm.u32;
2130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Now add all carries again. */
2132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xSum.u32 = ( uint32_t ) xSum.u16[ 0 ] + xSum.u16[ 1 ];
2133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* The previous summation might have given a 16-bit carry. */
2135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xSum.u32 = ( uint32_t ) xSum.u16[ 0 ] + xSum.u16[ 1 ];
2136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( ( ulAlignBits & 1u ) != 0u )
2138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Quite unlikely, but pucNextData might be non-aligned, which would
2140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		 mean that a checksum is calculated starting at an odd position. */
2141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSum.u32 = ( ( xSum.u32 & 0xffu ) << 8 ) | ( ( xSum.u32 & 0xff00u ) >> 8 );
2142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* swap the output (little endian platform only). */
2145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return FreeRTOS_htons( ( (uint16_t) xSum.u32 ) );
2146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void vReturnEthernetFrame( NetworkBufferDescriptor_t * pxNetworkBuffer, BaseType_t xReleaseAfterSen
2150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** EthernetHeader_t *pxEthernetHeader;
2152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigZERO_COPY_TX_DRIVER != 0 )
2154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	NetworkBufferDescriptor_t *pxNewBuffer;
2155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
2156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#if defined( ipconfigETHERNET_MINIMUM_PACKET_BYTES )
2158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( pxNetworkBuffer->xDataLength < ( size_t ) ipconfigETHERNET_MINIMUM_PACKET_BYTES )
2160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		BaseType_t xIndex;
2162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			FreeRTOS_printf( ( "vReturnEthernetFrame: length %lu\n", ( uint32_t )pxNetworkBuffer->xDataLengt
2164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			for( xIndex = ( BaseType_t ) pxNetworkBuffer->xDataLength; xIndex < ( BaseType_t ) ipconfigETHER
2165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
2166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxNetworkBuffer->pucEthernetBuffer[ xIndex ] = 0u;
2167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
2168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxNetworkBuffer->xDataLength = ( size_t ) ipconfigETHERNET_MINIMUM_PACKET_BYTES;
2169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	#endif
2172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigZERO_COPY_TX_DRIVER != 0 )
2174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( xReleaseAfterSend == pdFALSE )
2176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNewBuffer = pxDuplicateNetworkBufferWithDescriptor( pxNetworkBuffer, ( BaseType_t ) pxNetworkBu
2178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xReleaseAfterSend = pdTRUE;
2179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxNetworkBuffer = pxNewBuffer;
2180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	if( pxNetworkBuffer != NULL )
2183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif
2184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxEthernetHeader = ( EthernetHeader_t * ) ( pxNetworkBuffer->pucEthernetBuffer );
2186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Swap source and destination MAC addresses. */
2188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		memcpy( ( void * ) &( pxEthernetHeader->xDestinationAddress ), ( void * ) &( pxEthernetHeader->xS
2189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		memcpy( ( void * ) &( pxEthernetHeader->xSourceAddress) , ( void * ) ipLOCAL_MAC_ADDRESS, ( size_
2190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Send! */
2192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xNetworkInterfaceOutput( pxNetworkBuffer, xReleaseAfterSend );
2193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t FreeRTOS_GetIPAddress( void )
2198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Returns the IP address of the NIC. */
2200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return *ipLOCAL_IP_ADDRESS_POINTER;
2201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_SetIPAddress( uint32_t ulIPAddress )
2205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Sets the IP address of the NIC. */
2207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	*ipLOCAL_IP_ADDRESS_POINTER = ulIPAddress;
2208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t FreeRTOS_GetGatewayAddress( void )
2212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkAddressing.ulGatewayAddress;
2214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t FreeRTOS_GetDNSServerAddress( void )
2218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkAddressing.ulDNSServerAddress;
2220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t FreeRTOS_GetNetmask( void )
2224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkAddressing.ulNetMask;
2226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_UpdateMACAddress( const uint8_t ucMACAddress[ipMAC_ADDRESS_LENGTH_BYTES] )
2230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Copy the MAC address at the start of the default packet header fragment. */
2232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	memcpy( ( void * )ipLOCAL_MAC_ADDRESS, ( void * )ucMACAddress, ( size_t )ipMAC_ADDRESS_LENGTH_BYTE
2233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** const uint8_t * FreeRTOS_GetMACAddress( void )
2237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return ipLOCAL_MAC_ADDRESS;
2239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_SetNetmask ( uint32_t ulNetmask )
2243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkAddressing.ulNetMask = ulNetmask;
2245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** void FreeRTOS_SetGatewayAddress ( uint32_t ulGatewayAddress )
2249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkAddressing.ulGatewayAddress = ulGatewayAddress;
2251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
2252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigUSE_DHCP == 1 )
2255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	void vIPSetDHCPTimerEnableState( BaseType_t xEnableState )
2256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xEnableState != pdFALSE )
2258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xDHCPTimer.bActive = pdTRUE_UNSIGNED;
2260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
2262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xDHCPTimer.bActive = pdFALSE_UNSIGNED;
2264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigUSE_DHCP */
2267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigUSE_DHCP == 1 )
2270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	void vIPReloadDHCPTimer( uint32_t ulLeaseTime )
2271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvIPTimerReload( &xDHCPTimer, ulLeaseTime );
2273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigUSE_DHCP */
2275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigDNS_USE_CALLBACKS == 1 )
2278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	void vIPSetDnsTimerEnableState( BaseType_t xEnableState )
2279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xEnableState != 0 )
2281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xDNSTimer.bActive = pdTRUE;
2283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		else
2285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
2286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xDNSTimer.bActive = pdFALSE;
2287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
2288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigUSE_DHCP */
2290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #if( ipconfigDNS_USE_CALLBACKS != 0 )
2293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	void vIPReloadDNSTimer( uint32_t ulCheckTime )
2294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
2295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvIPTimerReload( &xDNSTimer, ulCheckTime );
2296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
2297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** #endif /* ipconfigDNS_USE_CALLBACKS != 0 */
2298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xIPIsNetworkTaskReady( void )
2301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
2302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xIPTaskInitialised;
 398              		.loc 1 2302 0
 399 0008 6C319FE5 		ldr	r3, .L50
 400              	.LVL33:
 401              	.LBE20:
 402              	.LBE19:
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xNetworkEventQueue == NULL );
 403              		.loc 1 940 0
 404 000c 003093E5 		ldr	r3, [r3]
 405 0010 000053E3 		cmp	r3, #0
 406 0014 0200000A 		beq	.L42
 407              	.LVL34:
 408              	.L43:
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xNetworkEventQueue == NULL );
 409              		.loc 1 940 0 is_stmt 0 discriminator 1
 410 0018 0110A0E3 		mov	r1, #1
 411 001c 5C019FE5 		ldr	r0, .L50+4
 412 0020 FEFFFFEB 		bl	longjmp
 413              	.LVL35:
 414              	.L42:
 941:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xIPTaskHandle == NULL );
 415              		.loc 1 941 0 is_stmt 1
 416 0024 58419FE5 		ldr	r4, .L50+8
 417 0028 003094E5 		ldr	r3, [r4]
 418 002c 000053E3 		cmp	r3, #0
 419 0030 F8FFFF1A 		bne	.L43
 942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 420              		.loc 1 942 0
 421 0034 4C619FE5 		ldr	r6, .L50+12
 422 0038 005096E5 		ldr	r5, [r6]
 423 003c 000055E3 		cmp	r5, #0
 424 0040 F4FFFF1A 		bne	.L43
 425 0044 00A0A0E1 		mov	r10, r0
 426 0048 0190A0E1 		mov	r9, r1
 427 004c 0280A0E1 		mov	r8, r2
 952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xNetworkEventQueue );
 428              		.loc 1 952 0
 429 0050 0810A0E3 		mov	r1, #8
 430              	.LVL36:
 431 0054 0520A0E1 		mov	r2, r5
 432              	.LVL37:
 433 0058 0D00A0E3 		mov	r0, #13
 434              	.LVL38:
 435 005c FEFFFFEB 		bl	xQueueGenericCreate
 436              	.LVL39:
 953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 437              		.loc 1 953 0
 438 0060 000050E3 		cmp	r0, #0
 952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	configASSERT( xNetworkEventQueue );
 439              		.loc 1 952 0
 440 0064 000084E5 		str	r0, [r4]
 953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 441              		.loc 1 953 0
 442 0068 EAFFFF0A 		beq	.L43
 962:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 443              		.loc 1 962 0
 444 006c 18119FE5 		ldr	r1, .L50+16
 445 0070 FEFFFFEB 		bl	vQueueAddToRegistry
 446              	.LVL40:
 966:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 447              		.loc 1 966 0
 448 0074 FEFFFFEB 		bl	xNetworkBuffersInitialise
 449              	.LVL41:
 450 0078 010050E3 		cmp	r0, #1
 451 007c 3900001A 		bne	.L44
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulNetMask = FreeRTOS_inet_addr_quick( ucNetMask[ 0 ], ucNetMask[ 1 ], ucNetMa
 452              		.loc 1 969 0
 453 0080 0120DAE5 		ldrb	r2, [r10, #1]	@ zero_extendqisi2
 454 0084 0040DAE5 		ldrb	r4, [r10]	@ zero_extendqisi2
 455 0088 00C19FE5 		ldr	ip, .L50+20
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 456              		.loc 1 975 0
 457 008c 00E19FE5 		ldr	lr, .L50+24
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulNetMask = FreeRTOS_inet_addr_quick( ucNetMask[ 0 ], ucNetMask[ 1 ], ucNetMa
 458              		.loc 1 969 0
 459 0090 024484E1 		orr	r4, r4, r2, lsl #8
 460 0094 0220DAE5 		ldrb	r2, [r10, #2]	@ zero_extendqisi2
 461 0098 024884E1 		orr	r4, r4, r2, lsl #16
 462 009c 0320DAE5 		ldrb	r2, [r10, #3]	@ zero_extendqisi2
 463 00a0 022C84E1 		orr	r2, r4, r2, lsl #24
 464 00a4 00208CE5 		str	r2, [ip]
 970:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulGatewayAddress = FreeRTOS_inet_addr_quick( ucGatewayAddress[ 0 ], ucGateway
 465              		.loc 1 970 0
 466 00a8 0130D9E5 		ldrb	r3, [r9, #1]	@ zero_extendqisi2
 467 00ac 0040D9E5 		ldrb	r4, [r9]	@ zero_extendqisi2
 468 00b0 034484E1 		orr	r4, r4, r3, lsl #8
 469 00b4 0230D9E5 		ldrb	r3, [r9, #2]	@ zero_extendqisi2
 470 00b8 034884E1 		orr	r4, r4, r3, lsl #16
 471 00bc 0330D9E5 		ldrb	r3, [r9, #3]	@ zero_extendqisi2
 472 00c0 034C84E1 		orr	r4, r4, r3, lsl #24
 473 00c4 04408CE5 		str	r4, [ip, #4]
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 474              		.loc 1 973 0
 475 00c8 0440E0E1 		mvn	r4, r4
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulDNSServerAddress = FreeRTOS_inet_addr_quick( ucDNSServerAddress[ 0 ], ucDNS
 476              		.loc 1 971 0
 477 00cc 0110D8E5 		ldrb	r1, [r8, #1]	@ zero_extendqisi2
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 478              		.loc 1 973 0
 479 00d0 024084E1 		orr	r4, r4, r2
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulDNSServerAddress = FreeRTOS_inet_addr_quick( ucDNSServerAddress[ 0 ], ucDNS
 480              		.loc 1 971 0
 481 00d4 0030D8E5 		ldrb	r3, [r8]	@ zero_extendqisi2
 482 00d8 013483E1 		orr	r3, r3, r1, lsl #8
 483 00dc 0210D8E5 		ldrb	r1, [r8, #2]	@ zero_extendqisi2
 484 00e0 013883E1 		orr	r3, r3, r1, lsl #16
 485 00e4 0310D8E5 		ldrb	r1, [r8, #3]	@ zero_extendqisi2
 486 00e8 013C83E1 		orr	r3, r3, r1, lsl #24
 487 00ec 08308CE5 		str	r3, [ip, #8]
 972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulBroadcastAddress = ( xNetworkAddressing.ulDefaultIPAddress & xNetworkAddres
 488              		.loc 1 972 0
 489 00f0 0130D7E5 		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 490 00f4 0010D7E5 		ldrb	r1, [r7]	@ zero_extendqisi2
 491 00f8 031481E1 		orr	r1, r1, r3, lsl #8
 492 00fc 0230D7E5 		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 493 0100 031881E1 		orr	r1, r1, r3, lsl #16
 494 0104 0330D7E5 		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 495              		.loc 1 973 0
 496 0108 10408CE5 		str	r4, [ip, #16]
 972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkAddressing.ulBroadcastAddress = ( xNetworkAddressing.ulDefaultIPAddress & xNetworkAddres
 497              		.loc 1 972 0
 498 010c 033C81E1 		orr	r3, r1, r3, lsl #24
 499 0110 0C308CE5 		str	r3, [ip, #12]
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 500              		.loc 1 975 0
 501 0114 0F00BCE8 		ldmia	ip!, {r0, r1, r2, r3}
 502 0118 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 503              		.loc 1 995 0
 504 011c 0620A0E3 		mov	r2, #6
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 505              		.loc 1 980 0
 506 0120 70009FE5 		ldr	r0, .L50+28
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 507              		.loc 1 975 0
 508 0124 00408EE5 		str	r4, [lr]
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 509              		.loc 1 995 0
 510 0128 28109DE5 		ldr	r1, [sp, #40]
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 511              		.loc 1 980 0
 512 012c 145080E5 		str	r5, [r0, #20]
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 513              		.loc 1 995 0
 514 0130 FEFFFFEB 		bl	memcpy
 515              	.LVL42:
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 516              		.loc 1 998 0
 517 0134 FEFFFFEB 		bl	vNetworkSocketsInit
 518              	.LVL43:
1000:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 519              		.loc 1 1000 0
 520 0138 010050E3 		cmp	r0, #1
 521 013c 0700001A 		bne	.L41
1003:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 522              		.loc 1 1003 0
 523 0140 1230A0E3 		mov	r3, #18
 524 0144 04608DE5 		str	r6, [sp, #4]
 525 0148 00308DE5 		str	r3, [sp]
 526 014c 0A2CA0E3 		mov	r2, #2560
 527 0150 0530A0E1 		mov	r3, r5
 528 0154 40109FE5 		ldr	r1, .L50+32
 529 0158 40009FE5 		ldr	r0, .L50+36
 530              	.LVL44:
 531 015c FEFFFFEB 		bl	xTaskCreate
 532              	.LVL45:
 533              	.L41:
1021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 534              		.loc 1 1021 0
 535 0160 08D08DE2 		add	sp, sp, #8
 536              		.cfi_remember_state
 537              		.cfi_def_cfa_offset 32
 538              		@ sp needed
 539 0164 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 540              	.LVL46:
 541              	.L44:
 542              		.cfi_restore_state
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xNetworkEventQueue = NULL;
 543              		.loc 1 1011 0
 544 0168 000094E5 		ldr	r0, [r4]
 545 016c FEFFFFEB 		bl	vQueueDelete
 546              	.LVL47:
1012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 547              		.loc 1 1012 0
 548 0170 005084E5 		str	r5, [r4]
 937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 549              		.loc 1 937 0
 550 0174 0500A0E1 		mov	r0, r5
 551              	.LVL48:
1020:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 552              		.loc 1 1020 0
 553 0178 F8FFFFEA 		b	.L41
 554              	.L51:
 555              		.align	2
 556              	.L50:
 557 017c 00000000 		.word	.LANCHOR4
 558 0180 28000000 		.word	Unity+40
 559 0184 00000000 		.word	.LANCHOR2
 560 0188 00000000 		.word	.LANCHOR0
 561 018c 00000000 		.word	.LC0
 562 0190 00000000 		.word	.LANCHOR5
 563 0194 00000000 		.word	.LANCHOR6
 564 0198 00000000 		.word	xDefaultPartUDPPacketHeader
 565 019c 08000000 		.word	.LC1
 566 01a0 00000000 		.word	prvIPTask
 567              		.cfi_endproc
 568              	.LFE39:
 570              		.section	.text.FreeRTOS_GetAddressConfiguration,"ax",%progbits
 571              		.align	2
 572              		.global	FreeRTOS_GetAddressConfiguration
 573              		.syntax unified
 574              		.arm
 575              		.fpu neon
 577              	FreeRTOS_GetAddressConfiguration:
 578              	.LFB40:
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Return the address configuration to the caller. */
 579              		.loc 1 1025 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL49:
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 585              		.loc 1 1028 0
 586 0000 000050E3 		cmp	r0, #0
1030:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 587              		.loc 1 1030 0
 588 0004 38C09F15 		ldrne	ip, .L69
 589 0008 14C09C15 		ldrne	ip, [ip, #20]
 590 000c 00C08015 		strne	ip, [r0]
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 591              		.loc 1 1033 0
 592 0010 000051E3 		cmp	r1, #0
1035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 593              		.loc 1 1035 0
 594 0014 2C009F15 		ldrne	r0, .L69+4
 595              	.LVL50:
 596 0018 04009015 		ldrne	r0, [r0, #4]
 597 001c 00008115 		strne	r0, [r1]
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 598              		.loc 1 1038 0
 599 0020 000052E3 		cmp	r2, #0
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 600              		.loc 1 1040 0
 601 0024 1C109F15 		ldrne	r1, .L69+4
 602              	.LVL51:
 603 0028 08109115 		ldrne	r1, [r1, #8]
 604 002c 00108215 		strne	r1, [r2]
1043:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 605              		.loc 1 1043 0
 606 0030 000053E3 		cmp	r3, #0
1045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 607              		.loc 1 1045 0
 608 0034 0C209F15 		ldrne	r2, .L69+4
 609              	.LVL52:
 610 0038 0C209215 		ldrne	r2, [r2, #12]
 611 003c 00208315 		strne	r2, [r3]
 612 0040 1EFF2FE1 		bx	lr
 613              	.L70:
 614              		.align	2
 615              	.L69:
 616 0044 00000000 		.word	xDefaultPartUDPPacketHeader
 617 0048 00000000 		.word	.LANCHOR5
 618              		.cfi_endproc
 619              	.LFE40:
 621              		.section	.text.FreeRTOS_SetAddressConfiguration,"ax",%progbits
 622              		.align	2
 623              		.global	FreeRTOS_SetAddressConfiguration
 624              		.syntax unified
 625              		.arm
 626              		.fpu neon
 628              	FreeRTOS_SetAddressConfiguration:
 629              	.LFB41:
1051:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Update the address configuration. */
 630              		.loc 1 1051 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL53:
1054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 636              		.loc 1 1054 0
 637 0000 000050E3 		cmp	r0, #0
1056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 638              		.loc 1 1056 0
 639 0004 00C09015 		ldrne	ip, [r0]
 640 0008 34009F15 		ldrne	r0, .L88
 641              	.LVL54:
 642 000c 14C08015 		strne	ip, [r0, #20]
1059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 643              		.loc 1 1059 0
 644 0010 000051E3 		cmp	r1, #0
1061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 645              		.loc 1 1061 0
 646 0014 00009115 		ldrne	r0, [r1]
 647 0018 28109F15 		ldrne	r1, .L88+4
 648              	.LVL55:
 649 001c 04008115 		strne	r0, [r1, #4]
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 650              		.loc 1 1064 0
 651 0020 000052E3 		cmp	r2, #0
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 652              		.loc 1 1066 0
 653 0024 00109215 		ldrne	r1, [r2]
 654 0028 18209F15 		ldrne	r2, .L88+4
 655              	.LVL56:
 656 002c 08108215 		strne	r1, [r2, #8]
1069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 657              		.loc 1 1069 0
 658 0030 000053E3 		cmp	r3, #0
1071:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 659              		.loc 1 1071 0
 660 0034 00209315 		ldrne	r2, [r3]
 661 0038 08309F15 		ldrne	r3, .L88+4
 662              	.LVL57:
 663 003c 0C208315 		strne	r2, [r3, #12]
 664 0040 1EFF2FE1 		bx	lr
 665              	.L89:
 666              		.align	2
 667              	.L88:
 668 0044 00000000 		.word	xDefaultPartUDPPacketHeader
 669 0048 00000000 		.word	.LANCHOR5
 670              		.cfi_endproc
 671              	.LFE41:
 673              		.section	.text.xSendEventStructToIPTask,"ax",%progbits
 674              		.align	2
 675              		.global	xSendEventStructToIPTask
 676              		.syntax unified
 677              		.arm
 678              		.fpu neon
 680              	xSendEventStructToIPTask:
 681              	.LFB43:
1155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn, xSendMessage;
 682              		.loc 1 1155 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686              	.LVL58:
 687              	.LBB27:
 688              	.LBB28:
 689              		.loc 1 2302 0
 690 0000 80309FE5 		ldr	r3, .L101
 691 0004 D020D0E1 		ldrsb	r2, [r0]
 692              	.LBE28:
 693              	.LBE27:
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 694              		.loc 1 1158 0
 695 0008 003093E5 		ldr	r3, [r3]
 696 000c 000053E3 		cmp	r3, #0
 697 0010 0100001A 		bne	.L91
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 698              		.loc 1 1158 0 is_stmt 0 discriminator 1
 699 0014 000052E3 		cmp	r2, #0
 700 0018 1600001A 		bne	.L96
 701              	.L91:
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 702              		.loc 1 1170 0 is_stmt 1
 703 001c 050052E3 		cmp	r2, #5
1155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t xReturn, xSendMessage;
 704              		.loc 1 1155 0
 705 0020 70402DE9 		push	{r4, r5, r6, lr}
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 4, -16
 708              		.cfi_offset 5, -12
 709              		.cfi_offset 6, -8
 710              		.cfi_offset 14, -4
 711 0024 0150A0E1 		mov	r5, r1
 712 0028 0040A0E1 		mov	r4, r0
 713              	.LVL59:
 714 002c 58609FE5 		ldr	r6, .L101+4
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 715              		.loc 1 1170 0
 716 0030 0700001A 		bne	.L93
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 717              		.loc 1 1175 0
 718 0034 54209FE5 		ldr	r2, .L101+8
1177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 719              		.loc 1 1177 0
 720 0038 000096E5 		ldr	r0, [r6]
 721              	.LVL60:
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 722              		.loc 1 1175 0
 723 003c 0030D2E5 		ldrb	r3, [r2]	@ zero_extendqisi2
 724 0040 023083E3 		orr	r3, r3, #2
 725 0044 0030C2E5 		strb	r3, [r2]
1177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 726              		.loc 1 1177 0
 727 0048 FEFFFFEB 		bl	uxQueueMessagesWaiting
 728              	.LVL61:
 729 004c 000050E3 		cmp	r0, #0
 730 0050 0A00001A 		bne	.L97
 731              	.L93:
 732              	.LVL62:
 733              	.LBB29:
 734              	.LBB30:
1191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 735              		.loc 1 1191 0
 736 0054 FEFFFFEB 		bl	xIsCallingFromIPTask
 737              	.LVL63:
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 738              		.loc 1 1196 0
 739 0058 0030A0E3 		mov	r3, #0
1193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			}
 740              		.loc 1 1193 0
 741 005c 010050E3 		cmp	r0, #1
 742              	.LVL64:
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 743              		.loc 1 1196 0
 744 0060 0520A011 		movne	r2, r5
 745 0064 0410A0E1 		mov	r1, r4
 746 0068 000096E5 		ldr	r0, [r6]
 747 006c 0320A001 		moveq	r2, r3
 748              	.LBE30:
 749              	.LBE29:
1214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 750              		.loc 1 1214 0
 751 0070 7040BDE8 		pop	{r4, r5, r6, lr}
 752              		.cfi_restore 14
 753              		.cfi_restore 6
 754              		.cfi_restore 5
 755              		.cfi_restore 4
 756              		.cfi_def_cfa_offset 0
 757              	.LVL65:
 758              	.LBB32:
 759              	.LBB31:
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 760              		.loc 1 1196 0
 761 0074 FEFFFFEA 		b	xQueueGenericSend
 762              	.LVL66:
 763              	.L96:
 764              	.LBE31:
 765              	.LBE32:
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 766              		.loc 1 1162 0
 767 0078 0300A0E1 		mov	r0, r3
 768              	.LVL67:
 769 007c 1EFF2FE1 		bx	lr
 770              	.LVL68:
 771              	.L97:
 772              		.cfi_def_cfa_offset 16
 773              		.cfi_offset 4, -16
 774              		.cfi_offset 5, -12
 775              		.cfi_offset 6, -8
 776              		.cfi_offset 14, -4
1209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 777              		.loc 1 1209 0
 778 0080 0100A0E3 		mov	r0, #1
 779              	.LVL69:
1213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 780              		.loc 1 1213 0
 781 0084 7080BDE8 		pop	{r4, r5, r6, pc}
 782              	.L102:
 783              		.align	2
 784              	.L101:
 785 0088 00000000 		.word	.LANCHOR4
 786 008c 00000000 		.word	.LANCHOR2
 787 0090 00000000 		.word	.LANCHOR7
 788              		.cfi_endproc
 789              	.LFE43:
 791              		.section	.text.FreeRTOS_NetworkDown,"ax",%progbits
 792              		.align	2
 793              		.global	FreeRTOS_NetworkDown
 794              		.syntax unified
 795              		.arm
 796              		.fpu neon
 798              	FreeRTOS_NetworkDown:
 799              	.LFB33:
 748:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** static const IPStackEvent_t xNetworkDownEvent = { eNetworkDownEvent, NULL };
 800              		.loc 1 748 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL70:
 805 0000 10402DE9 		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 753:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 809              		.loc 1 753 0
 810 0004 0010A0E3 		mov	r1, #0
 811 0008 18009FE5 		ldr	r0, .L108
 812 000c FEFFFFEB 		bl	xSendEventStructToIPTask
 813              	.LVL71:
 814 0010 14309FE5 		ldr	r3, .L108+4
 815 0014 010050E3 		cmp	r0, #1
 756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 816              		.loc 1 756 0
 817 0018 0120A013 		movne	r2, #1
 761:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 818              		.loc 1 761 0
 819 001c 0020A003 		moveq	r2, #0
 820 0020 002083E5 		str	r2, [r3]
 821 0024 1080BDE8 		pop	{r4, pc}
 822              	.L109:
 823              		.align	2
 824              	.L108:
 825 0028 00000000 		.word	.LANCHOR8
 826 002c 00000000 		.word	.LANCHOR3
 827              		.cfi_endproc
 828              	.LFE33:
 830              		.section	.text.xSendEventToIPTask,"ax",%progbits
 831              		.align	2
 832              		.global	xSendEventToIPTask
 833              		.syntax unified
 834              		.arm
 835              		.fpu neon
 837              	xSendEventToIPTask:
 838              	.LFB42:
1143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** IPStackEvent_t xEventMessage;
 839              		.loc 1 1143 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL72:
 844 0000 07402DE9 		push	{r0, r1, r2, lr}
 845              		.cfi_def_cfa_offset 16
 846              		.cfi_offset 14, -4
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 847              		.loc 1 1148 0
 848 0004 0010A0E3 		mov	r1, #0
1147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xEventMessage.pvData = ( void* )NULL;
 849              		.loc 1 1147 0
 850 0008 0000CDE5 		strb	r0, [sp]
1150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 851              		.loc 1 1150 0
 852 000c 0D00A0E1 		mov	r0, sp
 853              	.LVL73:
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 854              		.loc 1 1148 0
 855 0010 04108DE5 		str	r1, [sp, #4]
1150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 856              		.loc 1 1150 0
 857 0014 FEFFFFEB 		bl	xSendEventStructToIPTask
 858              	.LVL74:
1151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 859              		.loc 1 1151 0
 860 0018 0CD08DE2 		add	sp, sp, #12
 861              		.cfi_def_cfa_offset 4
 862              		@ sp needed
 863 001c 04F09DE4 		ldr	pc, [sp], #4
 864              		.cfi_endproc
 865              	.LFE42:
 867              		.section	.text.eConsiderFrameForProcessing,"ax",%progbits
 868              		.align	2
 869              		.global	eConsiderFrameForProcessing
 870              		.syntax unified
 871              		.arm
 872              		.fpu neon
 874              	eConsiderFrameForProcessing:
 875              	.LFB44:
1218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eReturn;
 876              		.loc 1 1218 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              	.LVL75:
 881 0000 10402DE9 		push	{r4, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 4, -8
 884              		.cfi_offset 14, -4
1224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 885              		.loc 1 1224 0
 886 0004 0010A0E1 		mov	r1, r0
1218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** eFrameProcessingResult_t eReturn;
 887              		.loc 1 1218 0
 888 0008 0040A0E1 		mov	r4, r0
1224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 889              		.loc 1 1224 0
 890 000c 0620A0E3 		mov	r2, #6
 891 0010 50009FE5 		ldr	r0, .L123
 892              	.LVL76:
 893 0014 FEFFFFEB 		bl	memcmp
 894              	.LVL77:
 895 0018 000050E3 		cmp	r0, #0
 896 001c 0700000A 		beq	.L113
1229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 897              		.loc 1 1229 0
 898 0020 0620A0E3 		mov	r2, #6
 899 0024 0410A0E1 		mov	r1, r4
 900 0028 3C009FE5 		ldr	r0, .L123+4
 901 002c FEFFFFEB 		bl	memcmp
 902              	.LVL78:
 903 0030 000050E3 		cmp	r0, #0
 904 0034 0100000A 		beq	.L113
 905 0038 0000A0E3 		mov	r0, #0
 906 003c 1080BDE8 		pop	{r4, pc}
 907              	.L113:
 908              	.LVL79:
 909              	.LBB33:
1255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			usFrameType = FreeRTOS_ntohs( usFrameType );
 910              		.loc 1 1255 0
 911 0040 0C00D4E5 		ldrb	r0, [r4, #12]	@ zero_extendqisi2
 912 0044 0D30D4E5 		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 913 0048 033480E1 		orr	r3, r0, r3, lsl #8
 914              	.LVL80:
1256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 915              		.loc 1 1256 0
 916 004c 2304A0E1 		lsr	r0, r3, #8
 917 0050 030480E1 		orr	r0, r0, r3, lsl #8
 918              	.LVL81:
1258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 919              		.loc 1 1258 0
 920 0054 7000FFE6 		uxth	r0, r0
 921 0058 060C50E3 		cmp	r0, #1536
 922 005c 0000A093 		movls	r0, #0
 923              	.LVL82:
 924 0060 0100A083 		movhi	r0, #1
 925              	.LVL83:
 926              	.LBE33:
1268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 927              		.loc 1 1268 0
 928 0064 1080BDE8 		pop	{r4, pc}
 929              	.L124:
 930              		.align	2
 931              	.L123:
 932 0068 00000000 		.word	xDefaultPartUDPPacketHeader
 933 006c 00000000 		.word	.LANCHOR9
 934              		.cfi_endproc
 935              	.LFE44:
 937              		.section	.text.vIPNetworkUpCalls,"ax",%progbits
 938              		.align	2
 939              		.global	vIPNetworkUpCalls
 940              		.syntax unified
 941              		.arm
 942              		.fpu neon
 944              	vIPNetworkUpCalls:
 945              	.LFB46:
1327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkUp = pdTRUE;
 946              		.loc 1 1327 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950 0000 70402DE9 		push	{r4, r5, r6, lr}
 951              		.cfi_def_cfa_offset 16
 952              		.cfi_offset 4, -16
 953              		.cfi_offset 5, -12
 954              		.cfi_offset 6, -8
 955              		.cfi_offset 14, -4
1328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 956              		.loc 1 1328 0
 957 0004 0120A0E3 		mov	r2, #1
 958              	.LBB38:
 959              	.LBB39:
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 960              		.loc 1 713 0
 961 0008 34409FE5 		ldr	r4, .L127
 962              	.LBE39:
 963              	.LBE38:
1332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 964              		.loc 1 1332 0
 965 000c 0000A0E3 		mov	r0, #0
 966              	.LBB46:
 967              	.LBB44:
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 968              		.loc 1 713 0
 969 0010 105702E3 		movw	r5, #10000
 970              	.LBE44:
 971              	.LBE46:
1328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 972              		.loc 1 1328 0
 973 0014 2C309FE5 		ldr	r3, .L127+4
 974 0018 002083E5 		str	r2, [r3]
1332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 975              		.loc 1 1332 0
 976 001c FEFFFFEB 		bl	vApplicationIPNetworkEventHook
 977              	.LVL84:
 978              	.LBB47:
 979              	.LBB45:
 980              	.LBB40:
 981              	.LBB41:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 982              		.loc 1 695 0
 983 0020 040084E2 		add	r0, r4, #4
 984              	.LBE41:
 985              	.LBE40:
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 986              		.loc 1 713 0
 987 0024 105084E5 		str	r5, [r4, #16]
 988              	.LVL85:
 989              	.LBB43:
 990              	.LBB42:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 991              		.loc 1 695 0
 992 0028 FEFFFFEB 		bl	vTaskSetTimeOutState
 993              	.LVL86:
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 994              		.loc 1 704 0
 995 002c 0030D4E5 		ldrb	r3, [r4]	@ zero_extendqisi2
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 996              		.loc 1 696 0
 997 0030 0C5084E5 		str	r5, [r4, #12]
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 998              		.loc 1 707 0
 999 0034 FD3003E2 		and	r3, r3, #253
 1000 0038 013083E3 		orr	r3, r3, #1
 1001 003c 0030C4E5 		strb	r3, [r4]
 1002              	.LVL87:
 1003 0040 7080BDE8 		pop	{r4, r5, r6, pc}
 1004              	.L128:
 1005              		.align	2
 1006              	.L127:
 1007 0044 00000000 		.word	.LANCHOR11
 1008 0048 00000000 		.word	.LANCHOR10
 1009              	.LBE42:
 1010              	.LBE43:
 1011              	.LBE45:
 1012              	.LBE47:
 1013              		.cfi_endproc
 1014              	.LFE46:
 1016              		.section	.text.usGenerateChecksum,"ax",%progbits
 1017              		.align	2
 1018              		.global	usGenerateChecksum
 1019              		.syntax unified
 1020              		.arm
 1021              		.fpu neon
 1023              	usGenerateChecksum:
 1024              	.LFB53:
2034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** xUnion32 xSum2, xSum, xTerm;
 1025              		.loc 1 2034 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              	.LVL88:
2045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xTerm.u32 = 0ul;
 1030              		.loc 1 2045 0
 1031 0000 2034A0E1 		lsr	r3, r0, #8
2034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** xUnion32 xSum2, xSum, xTerm;
 1032              		.loc 1 2034 0
 1033 0004 F0402DE9 		push	{r4, r5, r6, r7, lr}
 1034              		.cfi_def_cfa_offset 20
 1035              		.cfi_offset 4, -20
 1036              		.cfi_offset 5, -16
 1037              		.cfi_offset 6, -12
 1038              		.cfi_offset 7, -8
 1039              		.cfi_offset 14, -4
2052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1040              		.loc 1 2052 0
 1041 0008 01E011E2 		ands	lr, r1, #1
2045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xTerm.u32 = 0ul;
 1042              		.loc 1 2045 0
 1043 000c 000483E1 		orr	r0, r3, r0, lsl #8
 1044              	.LVL89:
2046:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1045              		.loc 1 2046 0
 1046 0010 0050A0E3 		mov	r5, #0
 1047              	.LVL90:
2049:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1048              		.loc 1 2049 0
 1049 0014 03C001E2 		and	ip, r1, #3
 1050              	.LVL91:
2045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xTerm.u32 = 0ul;
 1051              		.loc 1 2045 0
 1052 0018 7000FFE6 		uxth	r0, r0
 1053 001c 0030A0E1 		mov	r3, r0
 1054              	.LVL92:
2052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1055              		.loc 1 2052 0
 1056 0020 0300000A 		beq	.L130
2052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1057              		.loc 1 2052 0 is_stmt 0 discriminator 1
 1058 0024 050052E1 		cmp	r2, r5
2054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( xSource.u8ptr )++;
 1059              		.loc 1 2054 0 is_stmt 1 discriminator 1
 1060 0028 0140D114 		ldrbne	r4, [r1], #1	@ zero_extendqisi2
 1061              	.LVL93:
2056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Now xSource is word (16-bit) aligned. */
 1062              		.loc 1 2056 0 discriminator 1
 1063 002c 01204212 		subne	r2, r2, #1
 1064              	.LVL94:
2054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( xSource.u8ptr )++;
 1065              		.loc 1 2054 0 discriminator 1
 1066 0030 1454CF17 		bfine	r5, r4, #8, #8
 1067              	.LVL95:
 1068              	.L130:
2061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1069              		.loc 1 2061 0
 1070 0034 01C04CE2 		sub	ip, ip, #1
 1071              	.LVL96:
2075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1072              		.loc 1 2075 0
 1073 0038 0070A0E3 		mov	r7, #0
2061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1074              		.loc 1 2061 0
 1075 003c 01005CE3 		cmp	ip, #1
 1076 0040 01C0A093 		movls	ip, #1
 1077              	.LVL97:
 1078 0044 00C0A083 		movhi	ip, #0
 1079 0048 010052E3 		cmp	r2, #1
 1080 004c 00C0A093 		movls	ip, #0
 1081 0050 00005CE3 		cmp	ip, #0
2038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1082              		.loc 1 2038 0
 1083 0054 07C0A0E1 		mov	ip, r7
2063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( xSource.u16ptr )++;
 1084              		.loc 1 2063 0
 1085 0058 B230D110 		ldrhne	r3, [r1], #2
 1086              	.LVL98:
2065:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		/* Now xSource is word (32-bit) aligned. */
 1087              		.loc 1 2065 0
 1088 005c 02204212 		subne	r2, r2, #2
 1089              	.LVL99:
2070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1090              		.loc 1 2070 0
 1091 0060 0360C2E3 		bic	r6, r2, #3
 1092 0064 0C6046E2 		sub	r6, r6, #12
2063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( xSource.u16ptr )++;
 1093              		.loc 1 2063 0
 1094 0068 00308310 		addne	r3, r3, r0
 1095              	.LVL100:
2070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1096              		.loc 1 2070 0
 1097 006c 066081E0 		add	r6, r1, r6
 1098              	.LVL101:
 1099 0070 0300A0E1 		mov	r0, r3
 1100              	.LVL102:
 1101              	.L132:
2075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1102              		.loc 1 2075 0
 1103 0074 010056E1 		cmp	r6, r1
 1104 0078 0140A0E1 		mov	r4, r1
 1105              	.LVL103:
 1106 007c 1F00008A 		bhi	.L137
 1107 0080 000057E3 		cmp	r7, #0
 1108 0084 0030A011 		movne	r3, r0
 1109              	.LVL104:
2112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1110              		.loc 1 2112 0
 1111 0088 2308A0E1 		lsr	r0, r3, #16
 1112 008c 7330F0E6 		uxtah	r3, r0, r3
 1113              	.LVL105:
2115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1114              		.loc 1 2115 0
 1115 0090 0E0002E2 		and	r0, r2, #14
 1116 0094 000084E0 		add	r0, r4, r0
2112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1117              		.loc 1 2112 0
 1118 0098 0C3083E0 		add	r3, r3, ip
2118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1119              		.loc 1 2118 0
 1120 009c 00C0A0E3 		mov	ip, #0
 1121              	.LVL106:
2112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1122              		.loc 1 2112 0
 1123 00a0 0310A0E1 		mov	r1, r3
 1124              	.LVL107:
 1125              	.L139:
2118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1126              		.loc 1 2118 0
 1127 00a4 040050E1 		cmp	r0, r4
 1128 00a8 2300008A 		bhi	.L140
 1129 00ac 00005CE3 		cmp	ip, #0
 1130 00b0 0130A011 		movne	r3, r1
 1131              	.LVL108:
2125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1132              		.loc 1 2125 0
 1133 00b4 010012E3 		tst	r2, #1
2127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1134              		.loc 1 2127 0
 1135 00b8 0020D415 		ldrbne	r2, [r4]	@ zero_extendqisi2
 1136              	.LVL109:
 1137 00bc 1250C717 		bfine	r5, r2, #0, #8
2137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1138              		.loc 1 2137 0
 1139 00c0 00005EE3 		cmp	lr, #0
 1140              	.LVL110:
2129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1141              		.loc 1 2129 0
 1142 00c4 053083E0 		add	r3, r3, r5
 1143              	.LVL111:
2132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1144              		.loc 1 2132 0
 1145 00c8 2328A0E1 		lsr	r2, r3, #16
 1146 00cc 7330F2E6 		uxtah	r3, r2, r3
 1147              	.LVL112:
2135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1148              		.loc 1 2135 0
 1149 00d0 2308A0E1 		lsr	r0, r3, #16
 1150              	.LVL113:
 1151 00d4 7330F0E6 		uxtah	r3, r0, r3
 1152              	.LVL114:
2141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1153              		.loc 1 2141 0
 1154 00d8 0304A011 		lslne	r0, r3, #8
 1155 00dc 5334E717 		ubfxne	r3, r3, #8, #8
 1156 00e0 7000FF16 		uxthne	r0, r0
 1157 00e4 03308011 		orrne	r3, r0, r3
 1158              	.LVL115:
2145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 1159              		.loc 1 2145 0
 1160 00e8 5C009FE5 		ldr	r0, .L158
 1161              	.LVL116:
 1162 00ec 030400E0 		and	r0, r0, r3, lsl #8
 1163 00f0 5334E7E7 		ubfx	r3, r3, #8, #8
 1164              	.LVL117:
 1165 00f4 030080E1 		orr	r0, r0, r3
2146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 1166              		.loc 1 2146 0
 1167 00f8 7000FFE6 		uxth	r0, r0
 1168 00fc F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1169              	.LVL118:
 1170              	.L137:
2079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 < xSum.u32 )
 1171              		.loc 1 2079 0
 1172 0100 004091E5 		ldr	r4, [r1]
 1173              	.LVL119:
 1174 0104 0170A0E3 		mov	r7, #1
 1175 0108 101081E2 		add	r1, r1, #16
 1176              	.LVL120:
2080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1177              		.loc 1 2080 0
 1178 010c 040090E0 		adds	r0, r0, r4
 1179              	.LVL121:
2087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 > xSum.u32 )
 1180              		.loc 1 2087 0
 1181 0110 0C4011E5 		ldr	r4, [r1, #-12]
2082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1182              		.loc 1 2082 0
 1183 0114 01C08C22 		addcs	ip, ip, #1
 1184              	.LVL122:
2088:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1185              		.loc 1 2088 0
 1186 0118 040090E0 		adds	r0, r0, r4
 1187              	.LVL123:
2094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xSum2.u32 < xSum.u32 )
 1188              		.loc 1 2094 0
 1189 011c 084011E5 		ldr	r4, [r1, #-8]
2090:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1190              		.loc 1 2090 0
 1191 0120 01C08C22 		addcs	ip, ip, #1
 1192              	.LVL124:
2095:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1193              		.loc 1 2095 0
 1194 0124 040090E0 		adds	r0, r0, r4
 1195              	.LVL125:
2100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1196              		.loc 1 2100 0
 1197 0128 044011E5 		ldr	r4, [r1, #-4]
2097:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1198              		.loc 1 2097 0
 1199 012c 01C08C22 		addcs	ip, ip, #1
 1200              	.LVL126:
2102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1201              		.loc 1 2102 0
 1202 0130 040090E0 		adds	r0, r0, r4
 1203              	.LVL127:
2104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1204              		.loc 1 2104 0
 1205 0134 01C08C22 		addcs	ip, ip, #1
 1206              	.LVL128:
 1207 0138 CDFFFFEA 		b	.L132
 1208              	.LVL129:
 1209              	.L140:
2121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		xSource.u16ptr++;
 1210              		.loc 1 2121 0
 1211 013c B2C0D4E0 		ldrh	ip, [r4], #2
 1212              	.LVL130:
 1213 0140 0C1081E0 		add	r1, r1, ip
 1214              	.LVL131:
 1215 0144 01C0A0E3 		mov	ip, #1
 1216 0148 D5FFFFEA 		b	.L139
 1217              	.L159:
 1218              		.align	2
 1219              	.L158:
 1220 014c 00FFFF00 		.word	16776960
 1221              		.cfi_endproc
 1222              	.LFE53:
 1224              		.section	.text.usGenerateProtocolChecksum,"ax",%progbits
 1225              		.align	2
 1226              		.global	usGenerateProtocolChecksum
 1227              		.syntax unified
 1228              		.arm
 1229              		.fpu neon
 1231              	usGenerateProtocolChecksum:
 1232              	.LFB52:
1798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t ulLength;
 1233              		.loc 1 1798 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 1237              	.LVL132:
1810:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1238              		.loc 1 1810 0
 1239 0000 210051E3 		cmp	r1, #33
 1240 0004 0100008A 		bhi	.L161
 1241              	.L184:
1812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1242              		.loc 1 1812 0
 1243 0008 340201E3 		movw	r0, #4660
 1244              	.LVL133:
1997:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 1245              		.loc 1 1997 0
 1246 000c 1EFF2FE1 		bx	lr
 1247              	.LVL134:
 1248              	.L161:
1820:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1249              		.loc 1 1820 0
 1250 0010 0E30D0E5 		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 1251 0014 0F3003E2 		and	r3, r3, #15
 1252 0018 0331A0E1 		lsl	r3, r3, #2
 1253              	.LVL135:
1823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1254              		.loc 1 1823 0
 1255 001c 0EC083E2 		add	ip, r3, #14
 1256 0020 0C0051E1 		cmp	r1, ip
 1257 0024 F7FFFF3A 		bcc	.L184
1798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint32_t ulLength;
 1258              		.loc 1 1798 0
 1259 0028 70402DE9 		push	{r4, r5, r6, lr}
 1260              		.cfi_def_cfa_offset 16
 1261              		.cfi_offset 4, -16
 1262              		.cfi_offset 5, -12
 1263              		.cfi_offset 6, -8
 1264              		.cfi_offset 14, -4
1827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1265              		.loc 1 1827 0
 1266 002c 10C0D0E5 		ldrb	ip, [r0, #16]	@ zero_extendqisi2
 1267 0030 11E0D0E5 		ldrb	lr, [r0, #17]	@ zero_extendqisi2
 1268 0034 0EE48CE1 		orr	lr, ip, lr, lsl #8
 1269 0038 2EC4A0E1 		lsr	ip, lr, #8
 1270 003c 0EC48CE1 		orr	ip, ip, lr, lsl #8
 1271 0040 7CC0FFE6 		uxth	ip, ip
 1272 0044 0C0051E1 		cmp	r1, ip
 1273 0048 1500003A 		bcc	.L163
1833:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1274              		.loc 1 1833 0
 1275 004c 1750D0E5 		ldrb	r5, [r0, #23]	@ zero_extendqisi2
 1276              	.LVL136:
1840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1277              		.loc 1 1840 0
 1278 0050 14E043E2 		sub	lr, r3, #20
 1279 0054 0EE080E0 		add	lr, r0, lr
 1280              	.LVL137:
1843:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1281              		.loc 1 1843 0
 1282 0058 110055E3 		cmp	r5, #17
 1283 005c 0A00001A 		bne	.L164
1845:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1284              		.loc 1 1845 0
 1285 0060 16C083E2 		add	ip, r3, #22
 1286 0064 0C0051E1 		cmp	r1, ip
 1287 0068 0D00003A 		bcc	.L163
1901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1288              		.loc 1 1901 0
 1289 006c 000052E3 		cmp	r2, #0
1850:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
 1290              		.loc 1 1850 0
 1291 0070 28408EE2 		add	r4, lr, #40
 1292              	.LVL138:
1901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1293              		.loc 1 1901 0
 1294 0074 1500001A 		bne	.L165
1907:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1295              		.loc 1 1907 0
 1296 0078 B812DEE1 		ldrh	r1, [lr, #40]
 1297              	.LVL139:
 1298 007c 000051E3 		cmp	r1, #0
 1299 0080 1400001A 		bne	.L169
1910:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1300              		.loc 1 1910 0
 1301 0084 FF0F0FE3 		movw	r0, #65535
 1302              	.LVL140:
 1303 0088 7080BDE8 		pop	{r4, r5, r6, pc}
 1304              	.LVL141:
 1305              	.L164:
1857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1306              		.loc 1 1857 0
 1307 008c 060055E3 		cmp	r5, #6
 1308 0090 0500001A 		bne	.L167
1859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1309              		.loc 1 1859 0
 1310 0094 22C083E2 		add	ip, r3, #34
 1311 0098 0C0051E1 		cmp	r1, ip
1864:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
 1312              		.loc 1 1864 0
 1313 009c 32408E22 		addcs	r4, lr, #50
1859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1314              		.loc 1 1859 0
 1315 00a0 0800002A 		bcs	.L168
 1316              	.LVL142:
 1317              	.L163:
1812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1318              		.loc 1 1812 0
 1319 00a4 340201E3 		movw	r0, #4660
 1320              	.LVL143:
 1321 00a8 7080BDE8 		pop	{r4, r5, r6, pc}
 1322              	.LVL144:
 1323              	.L167:
1871:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( ucProtocol == ( uint8_t ) ipPROTOCOL_IGMP ) )
 1324              		.loc 1 1871 0
 1325 00ac 01C045E2 		sub	ip, r5, #1
 1326 00b0 01005CE3 		cmp	ip, #1
 1327 00b4 2F00008A 		bhi	.L174
1874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1328              		.loc 1 1874 0
 1329 00b8 16C083E2 		add	ip, r3, #22
 1330 00bc 0C0051E1 		cmp	r1, ip
1879:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
 1331              		.loc 1 1879 0
 1332 00c0 24408E22 		addcs	r4, lr, #36
1874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1333              		.loc 1 1874 0
 1334 00c4 F6FFFF3A 		bcc	.L163
 1335              	.L168:
 1336              	.LVL145:
1901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1337              		.loc 1 1901 0
 1338 00c8 000052E3 		cmp	r2, #0
 1339 00cc 0100000A 		beq	.L169
 1340              	.L165:
1905:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1341              		.loc 1 1905 0
 1342 00d0 0010A0E3 		mov	r1, #0
 1343              	.LVL146:
 1344 00d4 B010C4E1 		strh	r1, [r4]	@ movhi
 1345              	.L169:
1914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1346              		.loc 1 1914 0
 1347 00d8 10C0D0E5 		ldrb	ip, [r0, #16]	@ zero_extendqisi2
 1348 00dc 1110D0E5 		ldrb	r1, [r0, #17]	@ zero_extendqisi2
 1349 00e0 01148CE1 		orr	r1, ip, r1, lsl #8
 1350 00e4 21C4A0E1 		lsr	ip, r1, #8
 1351 00e8 01C48CE1 		orr	ip, ip, r1, lsl #8
 1352 00ec 7CC0FFE6 		uxth	ip, ip
 1353 00f0 03C04CE0 		sub	ip, ip, r3
 1354              	.LVL147:
1916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( ulLength > ( uint32_t )( ipconfigNETWORK_MTU - uxIPHeaderLength ) ) )
 1355              		.loc 1 1916 0
 1356 00f4 07005CE3 		cmp	ip, #7
 1357 00f8 E9FFFF9A 		bls	.L163
1917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1358              		.loc 1 1917 0 discriminator 1
 1359 00fc 5D3E63E2 		rsb	r3, r3, #1488
 1360              	.LVL148:
 1361 0100 0C3083E2 		add	r3, r3, #12
1916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( ulLength > ( uint32_t )( ipconfigNETWORK_MTU - uxIPHeaderLength ) ) )
 1362              		.loc 1 1916 0 discriminator 1
 1363 0104 03005CE1 		cmp	ip, r3
 1364 0108 E5FFFF8A 		bhi	.L163
1931:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1365              		.loc 1 1931 0
 1366 010c 020055E3 		cmp	r5, #2
 1367 0110 0260A0E1 		mov	r6, r2
1942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1368              		.loc 1 1942 0
 1369 0114 05308C80 		addhi	r3, ip, r5
1946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( 2u * sizeof( pxIPPacket->xIPHeader.ulSourceIPAddress ) + ulLength ) ) );
 1370              		.loc 1 1946 0
 1371 0118 1A108082 		addhi	r1, r0, #26
1935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( uint8_t * ) &( pxProtPack->xTCPPacket.xTCPHeader ), ( size_t ) ulLength ) );
 1372              		.loc 1 1935 0
 1373 011c 0C20A091 		movls	r2, ip
 1374              	.LVL149:
 1375 0120 22108E92 		addls	r1, lr, #34
 1376 0124 0000A093 		movls	r0, #0
 1377              	.LVL150:
1946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( 2u * sizeof( pxIPPacket->xIPHeader.ulSourceIPAddress ) + ulLength ) ) );
 1378              		.loc 1 1946 0
 1379 0128 08208C82 		addhi	r2, ip, #8
 1380 012c 7300FF86 		uxthhi	r0, r3
 1381 0130 FEFFFFEB 		bl	usGenerateChecksum
 1382              	.LVL151:
1952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1383              		.loc 1 1952 0
 1384 0134 000056E3 		cmp	r6, #0
1945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			( ~usGenerateChecksum( ( uint32_t ) usChecksum, ( uint8_t * )&( pxIPPacket->xIPHeader.ulSourceIP
 1385              		.loc 1 1945 0
 1386 0138 0000E0E1 		mvn	r0, r0
 1387 013c 7000FFE6 		uxth	r0, r0
 1388              	.LVL152:
1952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1389              		.loc 1 1952 0
 1390 0140 0700001A 		bne	.L172
1975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1391              		.loc 1 1975 0
 1392 0144 FF3F0FE3 		movw	r3, #65535
 1393 0148 000050E3 		cmp	r0, #0
 1394 014c 0300A001 		moveq	r0, r3
 1395              	.LVL153:
 1396              	.L173:
 1397 0150 B03FBFE6 		rev16	r3, r0
1980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1398              		.loc 1 1980 0
 1399 0154 000056E3 		cmp	r6, #0
 1400 0158 7300FFE6 		uxth	r0, r3
 1401              	.LVL154:
1982:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1402              		.loc 1 1982 0
 1403 015c B030C411 		strhne	r3, [r4]	@ movhi
 1404 0160 7080BDE8 		pop	{r4, r5, r6, pc}
 1405              	.LVL155:
 1406              	.L172:
1975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1407              		.loc 1 1975 0
 1408 0164 000050E3 		cmp	r0, #0
 1409 0168 11005503 		cmpeq	r5, #17
 1410 016c FF3F0FE3 		movw	r3, #65535
 1411 0170 0300A001 		moveq	r0, r3
 1412              	.LVL156:
 1413 0174 F5FFFFEA 		b	.L173
 1414              	.LVL157:
 1415              	.L174:
1896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1416              		.loc 1 1896 0
 1417 0178 210304E3 		movw	r0, #17185
 1418              	.LVL158:
 1419 017c 7080BDE8 		pop	{r4, r5, r6, pc}
 1420              		.cfi_endproc
 1421              	.LFE52:
 1423              		.section	.text.vReturnEthernetFrame,"ax",%progbits
 1424              		.align	2
 1425              		.global	vReturnEthernetFrame
 1426              		.syntax unified
 1427              		.arm
 1428              		.fpu neon
 1430              	vReturnEthernetFrame:
 1431              	.LFB54:
2150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** EthernetHeader_t *pxEthernetHeader;
 1432              		.loc 1 2150 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              	.LVL159:
 1437 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1438              		.cfi_def_cfa_offset 24
 1439              		.cfi_offset 4, -24
 1440              		.cfi_offset 5, -20
 1441              		.cfi_offset 6, -16
 1442              		.cfi_offset 7, -12
 1443              		.cfi_offset 8, -8
 1444              		.cfi_offset 14, -4
2150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** EthernetHeader_t *pxEthernetHeader;
 1445              		.loc 1 2150 0
 1446 0004 0040A0E1 		mov	r4, r0
2185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1447              		.loc 1 2185 0
 1448 0008 180090E5 		ldr	r0, [r0, #24]
 1449              	.LVL160:
2188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		memcpy( ( void * ) &( pxEthernetHeader->xSourceAddress) , ( void * ) ipLOCAL_MAC_ADDRESS, ( size_
 1450              		.loc 1 2188 0
 1451 000c 0660A0E3 		mov	r6, #6
2150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** EthernetHeader_t *pxEthernetHeader;
 1452              		.loc 1 2150 0
 1453 0010 0170A0E1 		mov	r7, r1
2188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		memcpy( ( void * ) &( pxEthernetHeader->xSourceAddress) , ( void * ) ipLOCAL_MAC_ADDRESS, ( size_
 1454              		.loc 1 2188 0
 1455 0014 0620A0E1 		mov	r2, r6
 1456 0018 065080E2 		add	r5, r0, #6
 1457 001c 0510A0E1 		mov	r1, r5
 1458              	.LVL161:
 1459 0020 FEFFFFEB 		bl	memcpy
 1460              	.LVL162:
2189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1461              		.loc 1 2189 0
 1462 0024 0620A0E1 		mov	r2, r6
 1463 0028 14109FE5 		ldr	r1, .L190
 1464 002c 0500A0E1 		mov	r0, r5
 1465 0030 FEFFFFEB 		bl	memcpy
 1466              	.LVL163:
2192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1467              		.loc 1 2192 0
 1468 0034 0710A0E1 		mov	r1, r7
 1469 0038 0400A0E1 		mov	r0, r4
2194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 1470              		.loc 1 2194 0
 1471 003c F041BDE8 		pop	{r4, r5, r6, r7, r8, lr}
 1472              		.cfi_restore 14
 1473              		.cfi_restore 8
 1474              		.cfi_restore 7
 1475              		.cfi_restore 6
 1476              		.cfi_restore 5
 1477              		.cfi_restore 4
 1478              		.cfi_def_cfa_offset 0
 1479              	.LVL164:
2192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1480              		.loc 1 2192 0
 1481 0040 FEFFFFEA 		b	xNetworkInterfaceOutput
 1482              	.LVL165:
 1483              	.L191:
 1484              		.align	2
 1485              	.L190:
 1486 0044 00000000 		.word	xDefaultPartUDPPacketHeader
 1487              		.cfi_endproc
 1488              	.LFE54:
 1490              		.section	.text.prvIPTask,"ax",%progbits
 1491              		.align	2
 1492              		.syntax unified
 1493              		.arm
 1494              		.fpu neon
 1496              	prvIPTask:
 1497              	.LFB25:
 315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** IPStackEvent_t xReceivedEvent;
 1498              		.loc 1 315 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 24
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              	.LVL166:
 1503 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1504              		.cfi_def_cfa_offset 36
 1505              		.cfi_offset 4, -36
 1506              		.cfi_offset 5, -32
 1507              		.cfi_offset 6, -28
 1508              		.cfi_offset 7, -24
 1509              		.cfi_offset 8, -20
 1510              		.cfi_offset 9, -16
 1511              		.cfi_offset 10, -12
 1512              		.cfi_offset 11, -8
 1513              		.cfi_offset 14, -4
 1514 0004 1CD04DE2 		sub	sp, sp, #28
 1515              		.cfi_def_cfa_offset 64
 1516              	.LBB78:
 1517              	.LBB79:
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 1518              		.loc 1 713 0
 1519 0008 F4659FE5 		ldr	r6, .L270
 1520 000c FA4FA0E3 		mov	r4, #1000
 1521              	.LBE79:
 1522              	.LBE78:
 331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1523              		.loc 1 331 0
 1524 0010 FEFFFFEB 		bl	FreeRTOS_NetworkDown
 1525              	.LVL167:
 1526              	.LBB88:
 1527              	.LBB86:
 1528              	.LBB80:
 1529              	.LBB81:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 1530              		.loc 1 695 0
 1531 0014 040086E2 		add	r0, r6, #4
 1532              	.LBE81:
 1533              	.LBE80:
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 1534              		.loc 1 713 0
 1535 0018 104086E5 		str	r4, [r6, #16]
 1536              	.LVL168:
 1537              	.LBB84:
 1538              	.LBB82:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 1539              		.loc 1 695 0
 1540 001c FEFFFFEB 		bl	vTaskSetTimeOutState
 1541              	.LVL169:
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1542              		.loc 1 704 0
 1543 0020 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 1544              	.LBE82:
 1545              	.LBE84:
 1546              	.LBE86:
 1547              	.LBE88:
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1548              		.loc 1 341 0
 1549 0024 0120A0E3 		mov	r2, #1
 1550              	.LBB89:
 1551              	.LBB90:
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1552              		.loc 1 628 0
 1553 0028 D8959FE5 		ldr	r9, .L270+4
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1554              		.loc 1 636 0
 1555 002c D8B59FE5 		ldr	fp, .L270+8
 1556              	.LBE90:
 1557              	.LBE89:
 1558              	.LBB95:
 1559              	.LBB87:
 1560              	.LBB85:
 1561              	.LBB83:
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 1562              		.loc 1 707 0
 1563 0030 FD3003E2 		and	r3, r3, #253
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1564              		.loc 1 696 0
 1565 0034 0C4086E5 		str	r4, [r6, #12]
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 1566              		.loc 1 707 0
 1567 0038 013083E3 		orr	r3, r3, #1
 1568 003c 09A0A0E1 		mov	r10, r9
 1569 0040 0030C6E5 		strb	r3, [r6]
 1570              	.LVL170:
 1571              	.LBE83:
 1572              	.LBE85:
 1573              	.LBE87:
 1574              	.LBE95:
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1575              		.loc 1 341 0
 1576 0044 C4359FE5 		ldr	r3, .L270+12
 1577 0048 002083E5 		str	r2, [r3]
 1578              	.L232:
 1579              	.LBB96:
 1580              	.LBB94:
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1581              		.loc 1 628 0
 1582 004c 0A00A0E1 		mov	r0, r10
 1583 0050 FEFFFFEB 		bl	prvIPTimerCheck
 1584              	.LVL171:
 1585 0054 000050E3 		cmp	r0, #0
 1586 0058 0100000A 		beq	.L193
 630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1587              		.loc 1 630 0
 1588 005c 0200A0E3 		mov	r0, #2
 1589 0060 FEFFFFEB 		bl	xSendEventToIPTask
 1590              	.LVL172:
 1591              	.L193:
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1592              		.loc 1 636 0
 1593 0064 0B00A0E1 		mov	r0, fp
 1594 0068 FEFFFFEB 		bl	prvIPTimerCheck
 1595              	.LVL173:
 1596 006c 000050E3 		cmp	r0, #0
 1597 0070 0100000A 		beq	.L194
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1598              		.loc 1 638 0
 1599 0074 0400A0E3 		mov	r0, #4
 1600 0078 FEFFFFEB 		bl	xSendEventToIPTask
 1601              	.LVL174:
 1602              	.L194:
 1603              	.LBB91:
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1604              		.loc 1 661 0
 1605 007c 90459FE5 		ldr	r4, .L270+16
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1606              		.loc 1 675 0
 1607 0080 90859FE5 		ldr	r8, .L270+20
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1608              		.loc 1 661 0
 1609 0084 000094E5 		ldr	r0, [r4]
 1610 0088 FEFFFFEB 		bl	uxQueueMessagesWaiting
 1611              	.LVL175:
 1612 008c 105F6FE1 		clz	r5, r0
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1613              		.loc 1 671 0
 1614 0090 6C059FE5 		ldr	r0, .L270
 1615 0094 FEFFFFEB 		bl	prvIPTimerCheck
 1616              	.LVL176:
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1617              		.loc 1 675 0
 1618 0098 003098E5 		ldr	r3, [r8]
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1619              		.loc 1 661 0
 1620 009c A552A0E1 		lsr	r5, r5, #5
 1621              	.LVL177:
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1622              		.loc 1 675 0
 1623 00a0 000053E3 		cmp	r3, #0
 1624 00a4 0030A003 		moveq	r3, #0
 1625 00a8 01300512 		andne	r3, r5, #1
 1626 00ac 000053E3 		cmp	r3, #0
 1627 00b0 0100001A 		bne	.L195
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1628              		.loc 1 680 0
 1629 00b4 000050E3 		cmp	r0, #0
 1630 00b8 0F00000A 		beq	.L196
 1631              	.L195:
 1632              	.LVL178:
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			prvIPTimerStart( &xTCPTimer, xNextTime );
 1633              		.loc 1 684 0
 1634 00bc 0500A0E1 		mov	r0, r5
 1635 00c0 FEFFFFEB 		bl	xTCPTimerCheck
 1636              	.LVL179:
 1637 00c4 0050A0E1 		mov	r5, r0
 1638              	.LVL180:
 1639              	.LBB92:
 1640              	.LBB93:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 1641              		.loc 1 695 0
 1642 00c8 4C059FE5 		ldr	r0, .L270+24
 1643              	.LVL181:
 1644 00cc FEFFFFEB 		bl	vTaskSetTimeOutState
 1645              	.LVL182:
 1646 00d0 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1647              		.loc 1 698 0
 1648 00d4 000055E3 		cmp	r5, #0
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1649              		.loc 1 696 0
 1650 00d8 0C5086E5 		str	r5, [r6, #12]
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1651              		.loc 1 700 0
 1652 00dc 02308303 		orreq	r3, r3, #2
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1653              		.loc 1 704 0
 1654 00e0 9F30C117 		bfcne	r3, #1, #1
 1655 00e4 0030C6E5 		strb	r3, [r6]
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 1656              		.loc 1 707 0
 1657 00e8 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 1658 00ec 013083E3 		orr	r3, r3, #1
 1659 00f0 0030C6E5 		strb	r3, [r6]
 1660              	.LVL183:
 1661              	.LBE93:
 1662              	.LBE92:
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1663              		.loc 1 686 0
 1664 00f4 0030A0E3 		mov	r3, #0
 1665 00f8 003088E5 		str	r3, [r8]
 1666              	.LVL184:
 1667              	.L196:
 1668              	.LBE91:
 1669              	.LBE94:
 1670              	.LBE96:
 1671              	.LBB97:
 1672              	.LBB98:
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1673              		.loc 1 580 0
 1674 00fc 0030D9E5 		ldrb	r3, [r9]	@ zero_extendqisi2
 1675 0100 010013E3 		tst	r3, #1
 1676 0104 0400000A 		beq	.L237
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1677              		.loc 1 582 0
 1678 0108 0C2099E5 		ldr	r2, [r9, #12]
 1679 010c 0F3702E3 		movw	r3, #9999
 1680 0110 030052E1 		cmp	r2, r3
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1681              		.loc 1 584 0
 1682 0114 10309995 		ldrls	r3, [r9, #16]
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1683              		.loc 1 582 0
 1684 0118 0000009A 		bls	.L199
 1685              	.L237:
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1686              		.loc 1 578 0
 1687 011c 103702E3 		movw	r3, #10000
 1688              	.L199:
 1689              	.LVL185:
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1690              		.loc 1 590 0
 1691 0120 0020DBE5 		ldrb	r2, [fp]	@ zero_extendqisi2
 1692 0124 010012E3 		tst	r2, #1
 1693 0128 0200000A 		beq	.L200
 1694 012c 0C209BE5 		ldr	r2, [fp, #12]
 1695 0130 020053E1 		cmp	r3, r2
 1696 0134 0230A021 		movcs	r3, r2
 1697              	.LVL186:
 1698              	.L200:
 1699              	.LBE98:
 1700              	.LBE97:
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1701              		.loc 1 360 0
 1702 0138 0C2096E5 		ldr	r2, [r6, #12]
 1703 013c 08108DE2 		add	r1, sp, #8
 1704 0140 000094E5 		ldr	r0, [r4]
 1705 0144 020053E1 		cmp	r3, r2
 1706 0148 0320A031 		movcc	r2, r3
 1707 014c FEFFFFEB 		bl	xQueueReceive
 1708              	.LVL187:
 1709 0150 000050E3 		cmp	r0, #0
 362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1710              		.loc 1 362 0
 1711 0154 0030E003 		mvneq	r3, #0
 1712 0158 0830CD05 		strbeq	r3, [sp, #8]
 382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1713              		.loc 1 382 0
 1714 015c D830DDE1 		ldrsb	r3, [sp, #8]
 1715 0160 090053E3 		cmp	r3, #9
 1716 0164 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1717 0168 1D0000EA 		b	.L202
 1718              	.L204:
 1719 016c 94010000 		.word	.L203
 1720 0170 0C020000 		.word	.L205
 1721 0174 58050000 		.word	.L206
 1722 0178 B4050000 		.word	.L207
 1723 017c C0050000 		.word	.L208
 1724 0180 CC050000 		.word	.L209
 1725 0184 DC050000 		.word	.L210
 1726 0188 FC050000 		.word	.L211
 1727 018c 60050000 		.word	.L212
 1728 0190 A8050000 		.word	.L213
 1729              	.L203:
 1730              	.LBB99:
 1731              	.LBB100:
 1732              	.LBB101:
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1733              		.loc 1 1283 0
 1734 0194 84449FE5 		ldr	r4, .L270+28
 1735              	.LBE101:
 1736              	.LBE100:
 1737              	.LBE99:
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				prvProcessNetworkDownEvent();
 1738              		.loc 1 386 0
 1739 0198 0020A0E3 		mov	r2, #0
 1740 019c 80349FE5 		ldr	r3, .L270+32
 1741              	.LBB108:
 1742              	.LBB105:
 1743              	.LBB102:
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1744              		.loc 1 1283 0
 1745 01a0 000094E5 		ldr	r0, [r4]
 1746              	.LBE102:
 1747              	.LBE105:
 1748              	.LBE108:
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				prvProcessNetworkDownEvent();
 1749              		.loc 1 386 0
 1750 01a4 002083E5 		str	r2, [r3]
 1751              	.LBB109:
 1752              	.LBB106:
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1753              		.loc 1 1274 0
 1754 01a8 0030DAE5 		ldrb	r3, [r10]	@ zero_extendqisi2
 1755              	.LBB103:
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1756              		.loc 1 1283 0
 1757 01ac 010050E3 		cmp	r0, #1
 1758              	.LBE103:
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1759              		.loc 1 1274 0
 1760 01b0 1230C0E7 		bfi	r3, r2, #0, #1
 1761 01b4 0030CAE5 		strb	r3, [r10]
 1762              	.LBB104:
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1763              		.loc 1 1283 0
 1764 01b8 0000001A 		bne	.L214
1285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1765              		.loc 1 1285 0
 1766 01bc FEFFFFEB 		bl	vApplicationIPNetworkEventHook
 1767              	.LVL188:
 1768              	.L214:
1287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1769              		.loc 1 1287 0
 1770 01c0 0130A0E3 		mov	r3, #1
 1771 01c4 003084E5 		str	r3, [r4]
 1772              	.LBE104:
1294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1773              		.loc 1 1294 0
 1774 01c8 FEFFFFEB 		bl	FreeRTOS_ClearARP
 1775              	.LVL189:
1299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1776              		.loc 1 1299 0
 1777 01cc FEFFFFEB 		bl	xNetworkInterfaceInitialise
 1778              	.LVL190:
 1779 01d0 010050E3 		cmp	r0, #1
 1780 01d4 0800000A 		beq	.L215
1304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		FreeRTOS_NetworkDown();
 1781              		.loc 1 1304 0
 1782 01d8 B80B00E3 		movw	r0, #3000
 1783 01dc FEFFFFEB 		bl	vTaskDelay
 1784              	.LVL191:
1305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 1785              		.loc 1 1305 0
 1786 01e0 FEFFFFEB 		bl	FreeRTOS_NetworkDown
 1787              	.LVL192:
 1788              	.L202:
 1789              	.LBE106:
 1790              	.LBE109:
 508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1791              		.loc 1 508 0
 1792 01e4 3C349FE5 		ldr	r3, .L270+36
 1793 01e8 003093E5 		ldr	r3, [r3]
 1794 01ec 000053E3 		cmp	r3, #0
 1795 01f0 95FFFF0A 		beq	.L232
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1796              		.loc 1 512 0
 1797 01f4 FEFFFFEB 		bl	FreeRTOS_NetworkDown
 1798              	.LVL193:
 1799 01f8 93FFFFEA 		b	.L232
 1800              	.L215:
 1801              	.LBB110:
 1802              	.LBB107:
1313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			xSendEventToIPTask( eDHCPEvent );
 1803              		.loc 1 1313 0
 1804 01fc FEFFFFEB 		bl	vDHCPProcess
 1805              	.LVL194:
1314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1806              		.loc 1 1314 0
 1807 0200 0400A0E3 		mov	r0, #4
 1808 0204 FEFFFFEB 		bl	xSendEventToIPTask
 1809              	.LVL195:
 1810 0208 F5FFFFEA 		b	.L202
 1811              	.L205:
 1812              	.LBE107:
 1813              	.LBE110:
 394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 1814              		.loc 1 394 0
 1815 020c 0C509DE5 		ldr	r5, [sp, #12]
 1816              	.LVL196:
 1817              	.LBB111:
 1818              	.LBB112:
 1819              	.LBB113:
1355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1820              		.loc 1 1355 0
 1821 0210 000055E3 		cmp	r5, #0
 1822 0214 0200001A 		bne	.L216
 1823 0218 0110A0E3 		mov	r1, #1
 1824 021c 08049FE5 		ldr	r0, .L270+40
 1825 0220 FEFFFFEB 		bl	longjmp
 1826              	.LVL197:
 1827              	.L216:
1358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1828              		.loc 1 1358 0
 1829 0224 1C2095E5 		ldr	r2, [r5, #28]
 1830 0228 0D0052E3 		cmp	r2, #13
 1831 022c 00208DE5 		str	r2, [sp]
 1832 0230 6200009A 		bls	.L219
1360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxEthernetHeader = ( EthernetHeader_t * )( pxNetworkBuffer->pucEthernetBuffer );
 1833              		.loc 1 1360 0
 1834 0234 184095E5 		ldr	r4, [r5, #24]
 1835 0238 0400A0E1 		mov	r0, r4
 1836 023c FEFFFFEB 		bl	eConsiderFrameForProcessing
 1837              	.LVL198:
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1838              		.loc 1 1363 0
 1839 0240 010050E3 		cmp	r0, #1
1360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxEthernetHeader = ( EthernetHeader_t * )( pxNetworkBuffer->pucEthernetBuffer );
 1840              		.loc 1 1360 0
 1841 0244 0070A0E1 		mov	r7, r0
 1842              	.LVL199:
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1843              		.loc 1 1363 0
 1844 0248 00209DE5 		ldr	r2, [sp]
 1845 024c 0C00001A 		bne	.L218
1366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 1846              		.loc 1 1366 0
 1847 0250 0C30D4E5 		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 1848 0254 0D10D4E5 		ldrb	r1, [r4, #13]	@ zero_extendqisi2
 1849 0258 013483E1 		orr	r3, r3, r1, lsl #8
 1850 025c 080053E3 		cmp	r3, #8
 1851 0260 0B00000A 		beq	.L220
 1852 0264 081600E3 		movw	r1, #1544
 1853 0268 010053E1 		cmp	r3, r1
 1854 026c 5300001A 		bne	.L219
1370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 1855              		.loc 1 1370 0
 1856 0270 290052E3 		cmp	r2, #41
 1857 0274 5100009A 		bls	.L219
1372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 1858              		.loc 1 1372 0
 1859 0278 0400A0E1 		mov	r0, r4
 1860              	.LVL200:
 1861 027c FEFFFFEB 		bl	eARPProcessPacket
 1862              	.LVL201:
 1863 0280 0070A0E1 		mov	r7, r0
 1864              	.LVL202:
 1865              	.L218:
1401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 1866              		.loc 1 1401 0
 1867 0284 020057E3 		cmp	r7, #2
 1868 0288 8300000A 		beq	.L228
 1869 028c 030057E3 		cmp	r7, #3
 1870 0290 A60000EA 		b	.L268
 1871              	.LVL203:
 1872              	.L220:
1382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				{
 1873              		.loc 1 1382 0
 1874 0294 210052E3 		cmp	r2, #33
 1875 0298 4800009A 		bls	.L219
 1876              	.LVL204:
 1877              	.LBB114:
 1878              	.LBB115:
1518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint8_t ucProtocol;
 1879              		.loc 1 1518 0
 1880 029c 0E00D4E5 		ldrb	r0, [r4, #14]	@ zero_extendqisi2
 1881              	.LVL205:
1524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( uxHeaderLength < ipSIZE_OF_IPv4_HEADER ) )
 1882              		.loc 1 1524 0
 1883 02a0 0E3042E2 		sub	r3, r2, #14
1518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** uint8_t ucProtocol;
 1884              		.loc 1 1518 0
 1885 02a4 0011A0E1 		lsl	r1, r0, #2
 1886 02a8 3C1001E2 		and	r1, r1, #60
 1887              	.LVL206:
1524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		( uxHeaderLength < ipSIZE_OF_IPv4_HEADER ) )
 1888              		.loc 1 1524 0
 1889 02ac 130051E3 		cmp	r1, #19
 1890 02b0 00C0A083 		movhi	ip, #0
 1891 02b4 01C0A093 		movls	ip, #1
 1892 02b8 030051E1 		cmp	r1, r3
 1893 02bc 0C30A091 		movls	r3, ip
 1894 02c0 01308C83 		orrhi	r3, ip, #1
 1895 02c4 000053E3 		cmp	r3, #0
 1896 02c8 3C00001A 		bne	.L219
 1897              	.LVL207:
 1898              	.LBB116:
 1899              	.LBB117:
 1900              	.LBB118:
1450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 1901              		.loc 1 1450 0
 1902 02cc 1430D4E5 		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 1903 02d0 15C0D4E5 		ldrb	ip, [r4, #21]	@ zero_extendqisi2
 1904 02d4 0C3483E1 		orr	r3, r3, ip, lsl #8
 1905 02d8 F030C3E3 		bic	r3, r3, #240
 1906 02dc 000053E3 		cmp	r3, #0
 1907 02e0 3600001A 		bne	.L219
1457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			{
 1908              		.loc 1 1457 0
 1909 02e4 450040E2 		sub	r0, r0, #69
 1910 02e8 0A0050E3 		cmp	r0, #10
 1911 02ec 3300008A 		bhi	.L219
1445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1912              		.loc 1 1445 0
 1913 02f0 1F00D4E5 		ldrb	r0, [r4, #31]	@ zero_extendqisi2
 1914 02f4 1E30D4E5 		ldrb	r3, [r4, #30]	@ zero_extendqisi2
 1915 02f8 003483E1 		orr	r3, r3, r0, lsl #8
 1916 02fc 2000D4E5 		ldrb	r0, [r4, #32]	@ zero_extendqisi2
 1917 0300 003883E1 		orr	r3, r3, r0, lsl #16
 1918 0304 2100D4E5 		ldrb	r0, [r4, #33]	@ zero_extendqisi2
 1919 0308 003C83E1 		orr	r3, r3, r0, lsl #24
1463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Is it the global broadcast address 255.255.255.255 ? */
 1920              		.loc 1 1463 0
 1921 030c 1C039FE5 		ldr	r0, .L270+44
 1922 0310 140090E5 		ldr	r0, [r0, #20]
 1923 0314 000053E1 		cmp	r3, r0
 1924 0318 01007313 		cmnne	r3, #1
 1925 031c 0400000A 		beq	.L222
1467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#if( ipconfigUSE_LLMNR == 1 )
 1926              		.loc 1 1467 0
 1927 0320 0CC39FE5 		ldr	ip, .L270+48
1465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				/* Is it a specific broadcast address 192.168.1.255 ? */
 1928              		.loc 1 1465 0
 1929 0324 10C09CE5 		ldr	ip, [ip, #16]
1467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			#if( ipconfigUSE_LLMNR == 1 )
 1930              		.loc 1 1467 0
 1931 0328 03005CE1 		cmp	ip, r3
 1932 032c 00005013 		cmpne	r0, #0
 1933 0330 2200001A 		bne	.L219
 1934              	.L222:
 1935              	.LBE118:
 1936              	.LBE117:
 1937              	.LBE116:
1530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Check if the IP headers are acceptable and if it has our destination. */
 1938              		.loc 1 1530 0
 1939 0334 1730D4E5 		ldrb	r3, [r4, #23]	@ zero_extendqisi2
1536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1940              		.loc 1 1536 0
 1941 0338 140051E3 		cmp	r1, #20
1530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Check if the IP headers are acceptable and if it has our destination. */
 1942              		.loc 1 1530 0
 1943 033c 00308DE5 		str	r3, [sp]
 1944              	.LVL208:
1536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1945              		.loc 1 1536 0
 1946 0340 0D00000A 		beq	.L235
 1947              	.LBB119:
1541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* From: the previous start of UDP/ICMP/TCP data */
 1948              		.loc 1 1541 0
 1949 0344 143041E2 		sub	r3, r1, #20
 1950              	.LVL209:
1547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1951              		.loc 1 1547 0
 1952 0348 222042E2 		sub	r2, r2, #34
 1953              	.LVL210:
1543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* To: the usual start of UDP/ICMP/TCP data at offset 20 from IP header */
 1954              		.loc 1 1543 0
 1955 034c 0E1081E2 		add	r1, r1, #14
 1956              	.LVL211:
1549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			pxNetworkBuffer->xDataLength -= optlen;
 1957              		.loc 1 1549 0
 1958 0350 032042E0 		sub	r2, r2, r3
 1959              	.LVL212:
 1960 0354 011084E0 		add	r1, r4, r1
 1961              	.LVL213:
 1962 0358 220084E2 		add	r0, r4, #34
 1963              	.LVL214:
 1964 035c 04308DE5 		str	r3, [sp, #4]
 1965 0360 FEFFFFEB 		bl	memmove
 1966              	.LVL215:
1550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 1967              		.loc 1 1550 0
 1968 0364 1C2095E5 		ldr	r2, [r5, #28]
 1969 0368 04309DE5 		ldr	r3, [sp, #4]
 1970 036c 032042E0 		sub	r2, r2, r3
 1971 0370 1C2085E5 		str	r2, [r5, #28]
1553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 												( ( ipSIZE_OF_IPv4_HEADER >> 2 ) & 0x0F ); /* Low nibble is the header size, in bytes, 
 1972              		.loc 1 1553 0
 1973 0374 4520A0E3 		mov	r2, #69
 1974 0378 0E20C4E5 		strb	r2, [r4, #14]
 1975              	.LVL216:
 1976              	.L235:
 1977              	.LBE119:
1560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1978              		.loc 1 1560 0
 1979 037c 00309DE5 		ldr	r3, [sp]
 1980 0380 110053E3 		cmp	r3, #17
 1981 0384 4800000A 		beq	.L223
1568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 1982              		.loc 1 1568 0
 1983 0388 1B10D4E5 		ldrb	r1, [r4, #27]	@ zero_extendqisi2
 1984 038c 060084E2 		add	r0, r4, #6
 1985 0390 1A20D4E5 		ldrb	r2, [r4, #26]	@ zero_extendqisi2
 1986 0394 012482E1 		orr	r2, r2, r1, lsl #8
 1987 0398 1C10D4E5 		ldrb	r1, [r4, #28]	@ zero_extendqisi2
 1988 039c 012882E1 		orr	r2, r2, r1, lsl #16
 1989 03a0 1D10D4E5 		ldrb	r1, [r4, #29]	@ zero_extendqisi2
 1990 03a4 011C82E1 		orr	r1, r2, r1, lsl #24
 1991 03a8 FEFFFFEB 		bl	vARPRefreshCacheEntry
 1992              	.LVL217:
1570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 1993              		.loc 1 1570 0
 1994 03ac 00309DE5 		ldr	r3, [sp]
 1995 03b0 010053E3 		cmp	r3, #1
 1996 03b4 0400000A 		beq	.L224
 1997 03b8 060053E3 		cmp	r3, #6
 1998 03bc 5D00000A 		beq	.L225
 1999              	.LVL218:
 2000              	.L219:
 2001              	.LBE115:
 2002              	.LBE114:
1421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			break;
 2003              		.loc 1 1421 0
 2004 03c0 0500A0E1 		mov	r0, r5
 2005 03c4 FEFFFFEB 		bl	vReleaseNetworkBufferAndDescriptor
 2006              	.LVL219:
 2007 03c8 85FFFFEA 		b	.L202
 2008              	.LVL220:
 2009              	.L224:
 2010              	.LBB129:
 2011              	.LBB126:
1580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
 2012              		.loc 1 1580 0
 2013 03cc 1C3095E5 		ldr	r3, [r5, #28]
 2014 03d0 290053E3 		cmp	r3, #41
 2015 03d4 F9FFFF9A 		bls	.L219
 2016              	.LBB120:
1583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						{
 2017              		.loc 1 1583 0
 2018 03d8 1F10D4E5 		ldrb	r1, [r4, #31]	@ zero_extendqisi2
 2019 03dc 1E20D4E5 		ldrb	r2, [r4, #30]	@ zero_extendqisi2
1582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						if( pxIPHeader->ulDestinationIPAddress == *ipLOCAL_IP_ADDRESS_POINTER )
 2020              		.loc 1 1582 0
 2021 03e0 183095E5 		ldr	r3, [r5, #24]
 2022              	.LVL221:
1583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						{
 2023              		.loc 1 1583 0
 2024 03e4 012482E1 		orr	r2, r2, r1, lsl #8
 2025 03e8 2010D4E5 		ldrb	r1, [r4, #32]	@ zero_extendqisi2
 2026 03ec 012882E1 		orr	r2, r2, r1, lsl #16
 2027 03f0 2110D4E5 		ldrb	r1, [r4, #33]	@ zero_extendqisi2
 2028 03f4 012C82E1 		orr	r2, r2, r1, lsl #24
 2029 03f8 30129FE5 		ldr	r1, .L270+44
 2030 03fc 141091E5 		ldr	r1, [r1, #20]
 2031 0400 010052E1 		cmp	r2, r1
 2032 0404 EDFFFF1A 		bne	.L219
 2033              	.LVL222:
 2034              	.LBB121:
 2035              	.LBB122:
1769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 2036              		.loc 1 1769 0
 2037 0408 2210D3E5 		ldrb	r1, [r3, #34]	@ zero_extendqisi2
 2038 040c 080051E3 		cmp	r1, #8
 2039 0410 EAFFFF1A 		bne	.L219
 2040              	.LVL223:
 2041              	.LBB123:
 2042              	.LBB124:
1732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulDestinationIPAddress = pxIPHeader->ulSourceIPAddress;
 2043              		.loc 1 1732 0
 2044 0414 0010A0E3 		mov	r1, #0
1733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulSourceIPAddress = *ipLOCAL_IP_ADDRESS_POINTER;
 2045              		.loc 1 1733 0
 2046 0418 1B00D3E5 		ldrb	r0, [r3, #27]	@ zero_extendqisi2
1732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulDestinationIPAddress = pxIPHeader->ulSourceIPAddress;
 2047              		.loc 1 1732 0
 2048 041c 2210C3E5 		strb	r1, [r3, #34]
1733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulSourceIPAddress = *ipLOCAL_IP_ADDRESS_POINTER;
 2049              		.loc 1 1733 0
 2050 0420 1A10D3E5 		ldrb	r1, [r3, #26]	@ zero_extendqisi2
1734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2051              		.loc 1 1734 0
 2052 0424 1A20C3E5 		strb	r2, [r3, #26]
1733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		pxIPHeader->ulSourceIPAddress = *ipLOCAL_IP_ADDRESS_POINTER;
 2053              		.loc 1 1733 0
 2054 0428 001481E1 		orr	r1, r1, r0, lsl #8
 2055 042c 1C00D3E5 		ldrb	r0, [r3, #28]	@ zero_extendqisi2
 2056 0430 001881E1 		orr	r1, r1, r0, lsl #16
 2057 0434 1D00D3E5 		ldrb	r0, [r3, #29]	@ zero_extendqisi2
 2058 0438 001C81E1 		orr	r1, r1, r0, lsl #24
 2059 043c 5104E7E7 		ubfx	r0, r1, #8, #8
 2060 0440 1E10C3E5 		strb	r1, [r3, #30]
 2061 0444 1F00C3E5 		strb	r0, [r3, #31]
 2062 0448 5108E7E7 		ubfx	r0, r1, #16, #8
 2063 044c 211CA0E1 		lsr	r1, r1, #24
 2064 0450 2000C3E5 		strb	r0, [r3, #32]
 2065 0454 2110C3E5 		strb	r1, [r3, #33]
1734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2066              		.loc 1 1734 0
 2067 0458 5214E7E7 		ubfx	r1, r2, #8, #8
 2068 045c 1B10C3E5 		strb	r1, [r3, #27]
 2069 0460 5218E7E7 		ubfx	r1, r2, #16, #8
 2070 0464 222CA0E1 		lsr	r2, r2, #24
 2071 0468 1C10C3E5 		strb	r1, [r3, #28]
1744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 2072              		.loc 1 1744 0
 2073 046c 2510D3E5 		ldrb	r1, [r3, #37]	@ zero_extendqisi2
1734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2074              		.loc 1 1734 0
 2075 0470 1D20C3E5 		strb	r2, [r3, #29]
 2076              	.LVL224:
1744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 2077              		.loc 1 1744 0
 2078 0474 2420D3E5 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 2079 0478 012482E1 		orr	r2, r2, r1, lsl #8
 2080 047c F61F0FE3 		movw	r1, #65526
 2081 0480 010052E1 		cmp	r2, r1
1746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ( ( uint32_t ) pxICMPHeader->usChecksum ) +
 2082              		.loc 1 1746 0
 2083 0484 422F8282 		addhi	r2, r2, #264
1752:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				( ( ( uint32_t ) pxICMPHeader->usChecksum ) +
 2084              		.loc 1 1752 0
 2085 0488 08208292 		addls	r2, r2, #8
 2086 048c 7220FFE6 		uxth	r2, r2
 2087 0490 2420C3E5 		strb	r2, [r3, #36]
 2088 0494 2224A0E1 		lsr	r2, r2, #8
 2089 0498 2520C3E5 		strb	r2, [r3, #37]
 2090              	.LVL225:
 2091              	.L228:
 2092              	.LBE124:
 2093              	.LBE123:
 2094              	.LBE122:
 2095              	.LBE121:
 2096              	.LBE120:
 2097              	.LBE126:
 2098              	.LBE129:
1407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 			/* parameter pdTRUE: the buffer must be released once
 2099              		.loc 1 1407 0
 2100 049c 0110A0E3 		mov	r1, #1
 2101 04a0 0500A0E1 		mov	r0, r5
 2102 04a4 FEFFFFEB 		bl	vReturnEthernetFrame
 2103              	.LVL226:
 2104 04a8 4DFFFFEA 		b	.L202
 2105              	.LVL227:
 2106              	.L223:
 2107              	.LBB130:
 2108              	.LBB127:
 2109              	.LBB125:
1603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
 2110              		.loc 1 1603 0
 2111 04ac 1C1095E5 		ldr	r1, [r5, #28]
1599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2112              		.loc 1 1599 0
 2113 04b0 182095E5 		ldr	r2, [r5, #24]
 2114              	.LVL228:
1603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
 2115              		.loc 1 1603 0
 2116 04b4 290051E3 		cmp	r1, #41
 2117 04b8 C0FFFF9A 		bls	.L219
1615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						if( ( FreeRTOS_ntohs( pxUDPPacket->xUDPHeader.usLength ) - sizeof( UDPHeader_t ) ) <
 2118              		.loc 1 1615 0
 2119 04bc 2A1041E2 		sub	r1, r1, #42
 2120 04c0 1C1085E5 		str	r1, [r5, #28]
1616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 								pxNetworkBuffer->xDataLength )
 2121              		.loc 1 1616 0
 2122 04c4 2630D2E5 		ldrb	r3, [r2, #38]	@ zero_extendqisi2
 2123 04c8 2700D2E5 		ldrb	r0, [r2, #39]	@ zero_extendqisi2
 2124 04cc 000483E1 		orr	r0, r3, r0, lsl #8
 2125 04d0 2034A0E1 		lsr	r3, r0, #8
 2126 04d4 003483E1 		orr	r3, r3, r0, lsl #8
1631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 													   pxUDPPacket->xUDPHeader.usDestinationPort ) == pdPASS )
 2127              		.loc 1 1631 0
 2128 04d8 0500A0E1 		mov	r0, r5
1616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 								pxNetworkBuffer->xDataLength )
 2129              		.loc 1 1616 0
 2130 04dc 7330FFE6 		uxth	r3, r3
 2131 04e0 083043E2 		sub	r3, r3, #8
 2132 04e4 030051E1 		cmp	r1, r3
1619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						}
 2133              		.loc 1 1619 0
 2134 04e8 1C308585 		strhi	r3, [r5, #28]
1623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						pxNetworkBuffer->ulIPAddress = pxUDPPacket->xIPHeader.ulSourceIPAddress;
 2135              		.loc 1 1623 0
 2136 04ec 2310D2E5 		ldrb	r1, [r2, #35]	@ zero_extendqisi2
 2137 04f0 2230D2E5 		ldrb	r3, [r2, #34]	@ zero_extendqisi2
 2138 04f4 013483E1 		orr	r3, r3, r1, lsl #8
 2139 04f8 B032C5E1 		strh	r3, [r5, #32]	@ movhi
1624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2140              		.loc 1 1624 0
 2141 04fc 1B10D2E5 		ldrb	r1, [r2, #27]	@ zero_extendqisi2
 2142 0500 1A30D2E5 		ldrb	r3, [r2, #26]	@ zero_extendqisi2
 2143 0504 013483E1 		orr	r3, r3, r1, lsl #8
 2144 0508 1C10D2E5 		ldrb	r1, [r2, #28]	@ zero_extendqisi2
 2145 050c 013883E1 		orr	r3, r3, r1, lsl #16
 2146 0510 1D10D2E5 		ldrb	r1, [r2, #29]	@ zero_extendqisi2
 2147 0514 013C83E1 		orr	r3, r3, r1, lsl #24
 2148 0518 143085E5 		str	r3, [r5, #20]
1631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 													   pxUDPPacket->xUDPHeader.usDestinationPort ) == pdPASS )
 2149              		.loc 1 1631 0
 2150 051c 2430D2E5 		ldrb	r3, [r2, #36]	@ zero_extendqisi2
 2151 0520 2510D2E5 		ldrb	r1, [r2, #37]	@ zero_extendqisi2
 2152 0524 011483E1 		orr	r1, r3, r1, lsl #8
 2153 0528 FEFFFFEB 		bl	xProcessReceivedUDPPacket
 2154              	.LVL229:
 2155 052c 010050E3 		cmp	r0, #1
 2156              	.LVL230:
 2157              	.L268:
 2158              	.LBE125:
 2159              	.LBE127:
 2160              	.LBE130:
1401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 2161              		.loc 1 1401 0
 2162 0530 2BFFFF0A 		beq	.L202
 2163 0534 A1FFFFEA 		b	.L219
 2164              	.LVL231:
 2165              	.L225:
 2166              	.LBB131:
 2167              	.LBB128:
1648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
 2168              		.loc 1 1648 0
 2169 0538 0500A0E1 		mov	r0, r5
 2170 053c FEFFFFEB 		bl	xProcessReceivedTCPPacket
 2171              	.LVL232:
1655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 2172              		.loc 1 1655 0
 2173 0540 003098E5 		ldr	r3, [r8]
1650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
 2174              		.loc 1 1650 0
 2175 0544 010050E3 		cmp	r0, #1
 2176 0548 0370A003 		moveq	r7, #3
 2177              	.LVL233:
1655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 2178              		.loc 1 1655 0
 2179 054c 013083E2 		add	r3, r3, #1
 2180 0550 003088E5 		str	r3, [r8]
 2181 0554 4AFFFFEA 		b	.L218
 2182              	.LVL234:
 2183              	.L206:
 2184              	.LBE128:
 2185              	.LBE131:
 2186              	.LBE113:
 2187              	.LBE112:
 2188              	.LBE111:
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 2189              		.loc 1 399 0
 2190 0558 FEFFFFEB 		bl	vARPAgeCache
 2191              	.LVL235:
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2192              		.loc 1 400 0
 2193 055c 20FFFFEA 		b	.L202
 2194              	.L212:
 408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xAddress.sin_addr = 0u;	/* For the moment. */
 2195              		.loc 1 408 0
 2196 0560 0C409DE5 		ldr	r4, [sp, #12]
 2197              	.LVL236:
 409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				xAddress.sin_port = FreeRTOS_ntohs( pxSocket->usLocalPort );
 2198              		.loc 1 409 0
 2199 0564 0030A0E3 		mov	r3, #0
 2200 0568 14308DE5 		str	r3, [sp, #20]
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxSocket->usLocalPort = 0u;
 2201              		.loc 1 410 0
 2202 056c B412D4E1 		ldrh	r1, [r4, #36]
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2203              		.loc 1 412 0
 2204 0570 0400A0E1 		mov	r0, r4
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketBind( pxSocket, &xAddress, sizeof( xAddress ), pdFALSE );
 2205              		.loc 1 411 0
 2206 0574 B432C4E1 		strh	r3, [r4, #36]	@ movhi
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxSocket->usLocalPort = 0u;
 2207              		.loc 1 410 0
 2208 0578 2124A0E1 		lsr	r2, r1, #8
 2209 057c 012482E1 		orr	r2, r2, r1, lsl #8
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2210              		.loc 1 412 0
 2211 0580 10108DE2 		add	r1, sp, #16
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				pxSocket->usLocalPort = 0u;
 2212              		.loc 1 410 0
 2213 0584 B221CDE1 		strh	r2, [sp, #18]	@ movhi
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2214              		.loc 1 412 0
 2215 0588 0820A0E3 		mov	r2, #8
 2216 058c FEFFFFEB 		bl	vSocketBind
 2217              	.LVL237:
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				vSocketWakeUpUser( pxSocket );
 2218              		.loc 1 417 0
 2219 0590 003094E5 		ldr	r3, [r4]
 2220 0594 103083E3 		orr	r3, r3, #16
 2221              	.L269:
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						vSocketWakeUpUser( pxSocket );
 2222              		.loc 1 486 0
 2223 0598 003084E5 		str	r3, [r4]
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					}
 2224              		.loc 1 487 0
 2225 059c 0400A0E1 		mov	r0, r4
 2226 05a0 FEFFFFEB 		bl	vSocketWakeUpUser
 2227              	.LVL238:
 2228 05a4 0EFFFFEA 		b	.L202
 2229              	.LVL239:
 2230              	.L213:
 426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 2231              		.loc 1 426 0
 2232 05a8 0C009DE5 		ldr	r0, [sp, #12]
 2233 05ac FEFFFFEB 		bl	vSocketClose
 2234              	.LVL240:
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2235              		.loc 1 427 0
 2236 05b0 0BFFFFEA 		b	.L202
 2237              	.L207:
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				break;
 2238              		.loc 1 433 0
 2239 05b4 0C009DE5 		ldr	r0, [sp, #12]
 2240 05b8 FEFFFFEB 		bl	vProcessGeneratedUDPPacket
 2241              	.LVL241:
 434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2242              		.loc 1 434 0
 2243 05bc 08FFFFEA 		b	.L202
 2244              	.L208:
 440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 2245              		.loc 1 440 0
 2246 05c0 0000A0E3 		mov	r0, #0
 2247 05c4 FEFFFFEB 		bl	vDHCPProcess
 2248              	.LVL242:
 443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2249              		.loc 1 443 0
 2250 05c8 05FFFFEA 		b	.L202
 2251              	.L209:
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 2252              		.loc 1 471 0
 2253 05cc 0030D6E5 		ldrb	r3, [r6]	@ zero_extendqisi2
 2254 05d0 023083E3 		orr	r3, r3, #2
 2255 05d4 0030C6E5 		strb	r3, [r6]
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2256              		.loc 1 474 0
 2257 05d8 01FFFFEA 		b	.L202
 2258              	.L210:
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2259              		.loc 1 482 0
 2260 05dc 0C409DE5 		ldr	r4, [sp, #12]
 2261              	.LVL243:
 484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 					{
 2262              		.loc 1 484 0
 2263 05e0 0400A0E1 		mov	r0, r4
 2264 05e4 FEFFFFEB 		bl	xTCPCheckNewClient
 2265              	.LVL244:
 2266 05e8 000050E3 		cmp	r0, #0
 2267 05ec FCFEFF0A 		beq	.L202
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 						vSocketWakeUpUser( pxSocket );
 2268              		.loc 1 486 0
 2269 05f0 003094E5 		ldr	r3, [r4]
 2270 05f4 043083E3 		orr	r3, r3, #4
 2271 05f8 E6FFFFEA 		b	.L269
 2272              	.LVL245:
 2273              	.L211:
 498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 				}
 2274              		.loc 1 498 0
 2275 05fc FEFFFFEB 		bl	vTCPNetStat
 2276              	.LVL246:
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2277              		.loc 1 501 0
 2278 0600 F7FEFFEA 		b	.L202
 2279              	.L271:
 2280              		.align	2
 2281              	.L270:
 2282 0604 00000000 		.word	.LANCHOR7
 2283 0608 00000000 		.word	.LANCHOR11
 2284 060c 00000000 		.word	.LANCHOR12
 2285 0610 00000000 		.word	.LANCHOR4
 2286 0614 00000000 		.word	.LANCHOR2
 2287 0618 00000000 		.word	.LANCHOR13
 2288 061c 04000000 		.word	.LANCHOR7+4
 2289 0620 00000000 		.word	.LANCHOR14
 2290 0624 00000000 		.word	.LANCHOR10
 2291 0628 00000000 		.word	.LANCHOR3
 2292 062c 28000000 		.word	Unity+40
 2293 0630 00000000 		.word	xDefaultPartUDPPacketHeader
 2294 0634 00000000 		.word	.LANCHOR5
 2295              		.cfi_endproc
 2296              	.LFE25:
 2298              		.section	.text.FreeRTOS_GetIPAddress,"ax",%progbits
 2299              		.align	2
 2300              		.global	FreeRTOS_GetIPAddress
 2301              		.syntax unified
 2302              		.arm
 2303              		.fpu neon
 2305              	FreeRTOS_GetIPAddress:
 2306              	.LFB55:
2198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Returns the IP address of the NIC. */
 2307              		.loc 1 2198 0
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 0
 2310              		@ frame_needed = 0, uses_anonymous_args = 0
 2311              		@ link register save eliminated.
2201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 2312              		.loc 1 2201 0
 2313 0000 04309FE5 		ldr	r3, .L273
 2314 0004 140093E5 		ldr	r0, [r3, #20]
 2315 0008 1EFF2FE1 		bx	lr
 2316              	.L274:
 2317              		.align	2
 2318              	.L273:
 2319 000c 00000000 		.word	xDefaultPartUDPPacketHeader
 2320              		.cfi_endproc
 2321              	.LFE55:
 2323              		.section	.text.FreeRTOS_SetIPAddress,"ax",%progbits
 2324              		.align	2
 2325              		.global	FreeRTOS_SetIPAddress
 2326              		.syntax unified
 2327              		.arm
 2328              		.fpu neon
 2330              	FreeRTOS_SetIPAddress:
 2331              	.LFB56:
2205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Sets the IP address of the NIC. */
 2332              		.loc 1 2205 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336              		@ link register save eliminated.
 2337              	.LVL247:
2207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2338              		.loc 1 2207 0
 2339 0000 04309FE5 		ldr	r3, .L276
 2340 0004 140083E5 		str	r0, [r3, #20]
 2341 0008 1EFF2FE1 		bx	lr
 2342              	.L277:
 2343              		.align	2
 2344              	.L276:
 2345 000c 00000000 		.word	xDefaultPartUDPPacketHeader
 2346              		.cfi_endproc
 2347              	.LFE56:
 2349              		.section	.text.FreeRTOS_GetGatewayAddress,"ax",%progbits
 2350              		.align	2
 2351              		.global	FreeRTOS_GetGatewayAddress
 2352              		.syntax unified
 2353              		.arm
 2354              		.fpu neon
 2356              	FreeRTOS_GetGatewayAddress:
 2357              	.LFB57:
2212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkAddressing.ulGatewayAddress;
 2358              		.loc 1 2212 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
2214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 2363              		.loc 1 2214 0
 2364 0000 04309FE5 		ldr	r3, .L279
 2365 0004 080093E5 		ldr	r0, [r3, #8]
 2366 0008 1EFF2FE1 		bx	lr
 2367              	.L280:
 2368              		.align	2
 2369              	.L279:
 2370 000c 00000000 		.word	.LANCHOR5
 2371              		.cfi_endproc
 2372              	.LFE57:
 2374              		.section	.text.FreeRTOS_GetDNSServerAddress,"ax",%progbits
 2375              		.align	2
 2376              		.global	FreeRTOS_GetDNSServerAddress
 2377              		.syntax unified
 2378              		.arm
 2379              		.fpu neon
 2381              	FreeRTOS_GetDNSServerAddress:
 2382              	.LFB58:
2218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkAddressing.ulDNSServerAddress;
 2383              		.loc 1 2218 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 0, uses_anonymous_args = 0
 2387              		@ link register save eliminated.
2220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 2388              		.loc 1 2220 0
 2389 0000 04309FE5 		ldr	r3, .L282
 2390 0004 0C0093E5 		ldr	r0, [r3, #12]
 2391 0008 1EFF2FE1 		bx	lr
 2392              	.L283:
 2393              		.align	2
 2394              	.L282:
 2395 000c 00000000 		.word	.LANCHOR5
 2396              		.cfi_endproc
 2397              	.LFE58:
 2399              		.section	.text.FreeRTOS_GetNetmask,"ax",%progbits
 2400              		.align	2
 2401              		.global	FreeRTOS_GetNetmask
 2402              		.syntax unified
 2403              		.arm
 2404              		.fpu neon
 2406              	FreeRTOS_GetNetmask:
 2407              	.LFB59:
2224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkAddressing.ulNetMask;
 2408              		.loc 1 2224 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
 2412              		@ link register save eliminated.
2226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 2413              		.loc 1 2226 0
 2414 0000 04309FE5 		ldr	r3, .L285
 2415 0004 040093E5 		ldr	r0, [r3, #4]
 2416 0008 1EFF2FE1 		bx	lr
 2417              	.L286:
 2418              		.align	2
 2419              	.L285:
 2420 000c 00000000 		.word	.LANCHOR5
 2421              		.cfi_endproc
 2422              	.LFE59:
 2424              		.section	.text.FreeRTOS_UpdateMACAddress,"ax",%progbits
 2425              		.align	2
 2426              		.global	FreeRTOS_UpdateMACAddress
 2427              		.syntax unified
 2428              		.arm
 2429              		.fpu neon
 2431              	FreeRTOS_UpdateMACAddress:
 2432              	.LFB60:
2230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	/* Copy the MAC address at the start of the default packet header fragment. */
 2433              		.loc 1 2230 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 0
 2436              		@ frame_needed = 0, uses_anonymous_args = 0
 2437              		@ link register save eliminated.
 2438              	.LVL248:
2232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2439              		.loc 1 2232 0
 2440 0000 0010A0E1 		mov	r1, r0
 2441 0004 0620A0E3 		mov	r2, #6
 2442 0008 00009FE5 		ldr	r0, .L288
 2443              	.LVL249:
 2444 000c FEFFFFEA 		b	memcpy
 2445              	.LVL250:
 2446              	.L289:
 2447              		.align	2
 2448              	.L288:
 2449 0010 00000000 		.word	xDefaultPartUDPPacketHeader
 2450              		.cfi_endproc
 2451              	.LFE60:
 2453              		.section	.text.FreeRTOS_GetMACAddress,"ax",%progbits
 2454              		.align	2
 2455              		.global	FreeRTOS_GetMACAddress
 2456              		.syntax unified
 2457              		.arm
 2458              		.fpu neon
 2460              	FreeRTOS_GetMACAddress:
 2461              	.LFB61:
2237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return ipLOCAL_MAC_ADDRESS;
 2462              		.loc 1 2237 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 0
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              		@ link register save eliminated.
2239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
 2467              		.loc 1 2239 0
 2468 0000 00009FE5 		ldr	r0, .L291
 2469 0004 1EFF2FE1 		bx	lr
 2470              	.L292:
 2471              		.align	2
 2472              	.L291:
 2473 0008 00000000 		.word	xDefaultPartUDPPacketHeader
 2474              		.cfi_endproc
 2475              	.LFE61:
 2477              		.section	.text.FreeRTOS_SetNetmask,"ax",%progbits
 2478              		.align	2
 2479              		.global	FreeRTOS_SetNetmask
 2480              		.syntax unified
 2481              		.arm
 2482              		.fpu neon
 2484              	FreeRTOS_SetNetmask:
 2485              	.LFB62:
2243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkAddressing.ulNetMask = ulNetmask;
 2486              		.loc 1 2243 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
 2491              	.LVL251:
2244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2492              		.loc 1 2244 0
 2493 0000 04309FE5 		ldr	r3, .L294
 2494 0004 040083E5 		str	r0, [r3, #4]
 2495 0008 1EFF2FE1 		bx	lr
 2496              	.L295:
 2497              		.align	2
 2498              	.L294:
 2499 000c 00000000 		.word	.LANCHOR5
 2500              		.cfi_endproc
 2501              	.LFE62:
 2503              		.section	.text.FreeRTOS_SetGatewayAddress,"ax",%progbits
 2504              		.align	2
 2505              		.global	FreeRTOS_SetGatewayAddress
 2506              		.syntax unified
 2507              		.arm
 2508              		.fpu neon
 2510              	FreeRTOS_SetGatewayAddress:
 2511              	.LFB63:
2249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	xNetworkAddressing.ulGatewayAddress = ulGatewayAddress;
 2512              		.loc 1 2249 0
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 0
 2515              		@ frame_needed = 0, uses_anonymous_args = 0
 2516              		@ link register save eliminated.
 2517              	.LVL252:
2250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2518              		.loc 1 2250 0
 2519 0000 04309FE5 		ldr	r3, .L297
 2520 0004 080083E5 		str	r0, [r3, #8]
 2521 0008 1EFF2FE1 		bx	lr
 2522              	.L298:
 2523              		.align	2
 2524              	.L297:
 2525 000c 00000000 		.word	.LANCHOR5
 2526              		.cfi_endproc
 2527              	.LFE63:
 2529              		.section	.text.vIPSetDHCPTimerEnableState,"ax",%progbits
 2530              		.align	2
 2531              		.global	vIPSetDHCPTimerEnableState
 2532              		.syntax unified
 2533              		.arm
 2534              		.fpu neon
 2536              	vIPSetDHCPTimerEnableState:
 2537              	.LFB64:
2256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		if( xEnableState != pdFALSE )
 2538              		.loc 1 2256 0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 0
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
 2542              		@ link register save eliminated.
 2543              	.LVL253:
 2544 0000 14309FE5 		ldr	r3, .L303
2257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		{
 2545              		.loc 1 2257 0
 2546 0004 000050E3 		cmp	r0, #0
2259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 2547              		.loc 1 2259 0
 2548 0008 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
 2549 000c 01208213 		orrne	r2, r2, #1
2263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		}
 2550              		.loc 1 2263 0
 2551 0010 1020C007 		bfieq	r2, r0, #0, #1
 2552 0014 0020C3E5 		strb	r2, [r3]
 2553 0018 1EFF2FE1 		bx	lr
 2554              	.L304:
 2555              		.align	2
 2556              	.L303:
 2557 001c 00000000 		.word	.LANCHOR12
 2558              		.cfi_endproc
 2559              	.LFE64:
 2561              		.section	.text.vIPReloadDHCPTimer,"ax",%progbits
 2562              		.align	2
 2563              		.global	vIPReloadDHCPTimer
 2564              		.syntax unified
 2565              		.arm
 2566              		.fpu neon
 2568              	vIPReloadDHCPTimer:
 2569              	.LFB65:
2271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvIPTimerReload( &xDHCPTimer, ulLeaseTime );
 2570              		.loc 1 2271 0
 2571              		.cfi_startproc
 2572              		@ args = 0, pretend = 0, frame = 0
 2573              		@ frame_needed = 0, uses_anonymous_args = 0
 2574              	.LVL254:
 2575 0000 70402DE9 		push	{r4, r5, r6, lr}
 2576              		.cfi_def_cfa_offset 16
 2577              		.cfi_offset 4, -16
 2578              		.cfi_offset 5, -12
 2579              		.cfi_offset 6, -8
 2580              		.cfi_offset 14, -4
2271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 		prvIPTimerReload( &xDHCPTimer, ulLeaseTime );
 2581              		.loc 1 2271 0
 2582 0004 0050A0E1 		mov	r5, r0
 2583              	.LBB136:
 2584              	.LBB137:
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	prvIPTimerStart( pxTimer, xTime );
 2585              		.loc 1 713 0
 2586 0008 30409FE5 		ldr	r4, .L310
 2587 000c 100084E5 		str	r0, [r4, #16]
 2588              	.LVL255:
 2589              	.LBB138:
 2590              	.LBB139:
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	pxTimer->ulRemainingTime = xTime;
 2591              		.loc 1 695 0
 2592 0010 040084E2 		add	r0, r4, #4
 2593              	.LVL256:
 2594 0014 FEFFFFEB 		bl	vTaskSetTimeOutState
 2595              	.LVL257:
 2596 0018 0020D4E5 		ldrb	r2, [r4]	@ zero_extendqisi2
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	{
 2597              		.loc 1 698 0
 2598 001c 000055E3 		cmp	r5, #0
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
 2599              		.loc 1 696 0
 2600 0020 0C5084E5 		str	r5, [r4, #12]
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 2601              		.loc 1 700 0
 2602 0024 02208203 		orreq	r2, r2, #2
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	}
 2603              		.loc 1 704 0
 2604 0028 9F20C117 		bfcne	r2, #1, #1
 2605 002c 0020C4E5 		strb	r2, [r4]
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2606              		.loc 1 707 0
 2607 0030 0020D4E5 		ldrb	r2, [r4]	@ zero_extendqisi2
 2608 0034 012082E3 		orr	r2, r2, #1
 2609 0038 0020C4E5 		strb	r2, [r4]
 2610              	.LVL258:
 2611 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 2612              	.L311:
 2613              		.align	2
 2614              	.L310:
 2615 0040 00000000 		.word	.LANCHOR12
 2616              	.LBE139:
 2617              	.LBE138:
 2618              	.LBE137:
 2619              	.LBE136:
 2620              		.cfi_endproc
 2621              	.LFE65:
 2623              		.section	.text.xIPIsNetworkTaskReady,"ax",%progbits
 2624              		.align	2
 2625              		.global	xIPIsNetworkTaskReady
 2626              		.syntax unified
 2627              		.arm
 2628              		.fpu neon
 2630              	xIPIsNetworkTaskReady:
 2631              	.LFB66:
2301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xIPTaskInitialised;
 2632              		.loc 1 2301 0
 2633              		.cfi_startproc
 2634              		@ args = 0, pretend = 0, frame = 0
 2635              		@ frame_needed = 0, uses_anonymous_args = 0
 2636              		@ link register save eliminated.
2303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2637              		.loc 1 2303 0
 2638 0000 04309FE5 		ldr	r3, .L313
 2639 0004 000093E5 		ldr	r0, [r3]
 2640 0008 1EFF2FE1 		bx	lr
 2641              	.L314:
 2642              		.align	2
 2643              	.L313:
 2644 000c 00000000 		.word	.LANCHOR4
 2645              		.cfi_endproc
 2646              	.LFE66:
 2648              		.section	.text.FreeRTOS_IsNetworkUp,"ax",%progbits
 2649              		.align	2
 2650              		.global	FreeRTOS_IsNetworkUp
 2651              		.syntax unified
 2652              		.arm
 2653              		.fpu neon
 2655              	FreeRTOS_IsNetworkUp:
 2656              	.LFB67:
2304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** /*-----------------------------------------------------------*/
2305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 
2306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** BaseType_t FreeRTOS_IsNetworkUp( void )
2307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** {
 2657              		.loc 1 2307 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              		@ link register save eliminated.
2308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** 	return xNetworkUp;
2309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_IP.c **** }
 2662              		.loc 1 2309 0
 2663 0000 04309FE5 		ldr	r3, .L316
 2664 0004 000093E5 		ldr	r0, [r3]
 2665 0008 1EFF2FE1 		bx	lr
 2666              	.L317:
 2667              		.align	2
 2668              	.L316:
 2669 000c 00000000 		.word	.LANCHOR10
 2670              		.cfi_endproc
 2671              	.LFE67:
 2673              		.global	xDefaultAddressing
 2674              		.global	xNetworkAddressing
 2675              		.global	xBroadcastMACAddress
 2676              		.global	usPacketIdentifier
 2677              		.global	xNetworkEventQueue
 2678              		.section	.bss.usPacketIdentifier,"aw",%nobits
 2679              		.align	1
 2682              	usPacketIdentifier:
 2683 0000 0000     		.space	2
 2684              		.section	.bss.xARPTimer,"aw",%nobits
 2685              		.align	2
 2686              		.set	.LANCHOR11,. + 0
 2689              	xARPTimer:
 2690 0000 00000000 		.space	20
 2690      00000000 
 2690      00000000 
 2690      00000000 
 2690      00000000 
 2691              		.section	.bss.xCallEventHook.72622,"aw",%nobits
 2692              		.align	2
 2693              		.set	.LANCHOR14,. + 0
 2696              	xCallEventHook.72622:
 2697 0000 00000000 		.space	4
 2698              		.section	.bss.xDHCPTimer,"aw",%nobits
 2699              		.align	2
 2700              		.set	.LANCHOR12,. + 0
 2703              	xDHCPTimer:
 2704 0000 00000000 		.space	20
 2704      00000000 
 2704      00000000 
 2704      00000000 
 2704      00000000 
 2705              		.section	.bss.xDefaultAddressing,"aw",%nobits
 2706              		.align	2
 2707              		.set	.LANCHOR6,. + 0
 2710              	xDefaultAddressing:
 2711 0000 00000000 		.space	20
 2711      00000000 
 2711      00000000 
 2711      00000000 
 2711      00000000 
 2712              		.section	.bss.xIPTaskHandle,"aw",%nobits
 2713              		.align	2
 2714              		.set	.LANCHOR0,. + 0
 2717              	xIPTaskHandle:
 2718 0000 00000000 		.space	4
 2719              		.section	.bss.xIPTaskInitialised,"aw",%nobits
 2720              		.align	2
 2721              		.set	.LANCHOR4,. + 0
 2724              	xIPTaskInitialised:
 2725 0000 00000000 		.space	4
 2726              		.section	.bss.xNetworkAddressing,"aw",%nobits
 2727              		.align	2
 2728              		.set	.LANCHOR5,. + 0
 2731              	xNetworkAddressing:
 2732 0000 00000000 		.space	20
 2732      00000000 
 2732      00000000 
 2732      00000000 
 2732      00000000 
 2733              		.section	.bss.xNetworkDownEventPending,"aw",%nobits
 2734              		.align	2
 2735              		.set	.LANCHOR3,. + 0
 2738              	xNetworkDownEventPending:
 2739 0000 00000000 		.space	4
 2740              		.section	.bss.xNetworkEventQueue,"aw",%nobits
 2741              		.align	2
 2742              		.set	.LANCHOR2,. + 0
 2745              	xNetworkEventQueue:
 2746 0000 00000000 		.space	4
 2747              		.section	.bss.xNetworkUp,"aw",%nobits
 2748              		.align	2
 2749              		.set	.LANCHOR10,. + 0
 2752              	xNetworkUp:
 2753 0000 00000000 		.space	4
 2754              		.section	.bss.xProcessedTCPMessage,"aw",%nobits
 2755              		.align	2
 2756              		.set	.LANCHOR13,. + 0
 2759              	xProcessedTCPMessage:
 2760 0000 00000000 		.space	4
 2761              		.section	.bss.xTCPTimer,"aw",%nobits
 2762              		.align	2
 2763              		.set	.LANCHOR7,. + 0
 2766              	xTCPTimer:
 2767 0000 00000000 		.space	20
 2767      00000000 
 2767      00000000 
 2767      00000000 
 2767      00000000 
 2768              		.section	.rodata.FreeRTOS_IPInit.str1.1,"aMS",%progbits,1
 2769              	.LC0:
 2770 0000 4E657445 		.ascii	"NetEvnt\000"
 2770      766E7400 
 2771              	.LC1:
 2772 0008 49502D74 		.ascii	"IP-task\000"
 2772      61736B00 
 2773              		.section	.rodata.xBroadcastMACAddress,"a",%progbits
 2774              		.set	.LANCHOR9,. + 0
 2777              	xBroadcastMACAddress:
 2778 0000 FF       		.byte	-1
 2779 0001 FF       		.byte	-1
 2780 0002 FF       		.byte	-1
 2781 0003 FF       		.byte	-1
 2782 0004 FF       		.byte	-1
 2783 0005 FF       		.byte	-1
 2784              		.section	.rodata.xNetworkDownEvent.72556,"a",%progbits
 2785              		.align	2
 2786              		.set	.LANCHOR8,. + 0
 2789              	xNetworkDownEvent.72556:
 2790 0000 00000000 		.space	8
 2790      00000000 
 2791              		.section	.rodata.xNetworkDownEvent.72561,"a",%progbits
 2792              		.align	2
 2793              		.set	.LANCHOR1,. + 0
 2796              	xNetworkDownEvent.72561:
 2797 0000 00000000 		.space	8
 2797      00000000 
 2798              		.text
 2799              	.Letext0:
 2800              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2801              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2802              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 2803              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2804              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2805              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2806              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2807              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2808              		.file 10 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 2809              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2810              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 2811              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/list.h"
 2812              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 2813              		.file 15 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/queue.h"
 2814              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2815              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2816              		.file 18 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2817              		.file 19 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2818              		.file 20 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2819              		.file 21 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2820              		.file 22 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2821              		.file 23 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_IP.h"
 2822              		.file 24 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/event_groups.h"
 2823              		.file 25 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_Socket
 2824              		.file 26 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_Stream
 2825              		.file 27 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_TCP_WI
 2826              		.file 28 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_IP_Pri
 2827              		.file 29 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/NetworkInterfac
 2828              		.file 30 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2829              		.file 31 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2830              		.file 32 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/NetworkBufferMa
 2831              		.file 33 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_DHCP.h
 2832              		.file 34 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_ARP.h"
 2833              		.file 35 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_TCP_IP
DEFINED SYMBOLS
                            *ABS*:00000000 FreeRTOS_IP.c
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:17     .text.prvIPTimerCheck:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:22     .text.prvIPTimerCheck:00000000 prvIPTimerCheck
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:110    .text.xIsCallingFromIPTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:116    .text.xIsCallingFromIPTask:00000000 xIsCallingFromIPTask
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:140    .text.xIsCallingFromIPTask:00000020 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:145    .text.FreeRTOS_NetworkDownFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:151    .text.FreeRTOS_NetworkDownFromISR:00000000 FreeRTOS_NetworkDownFromISR
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:194    .text.FreeRTOS_NetworkDownFromISR:00000044 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:201    .text.FreeRTOS_GetUDPPayloadBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:207    .text.FreeRTOS_GetUDPPayloadBuffer:00000000 FreeRTOS_GetUDPPayloadBuffer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:245    .text.pxDuplicateNetworkBufferWithDescriptor:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:251    .text.pxDuplicateNetworkBufferWithDescriptor:00000000 pxDuplicateNetworkBufferWithDescriptor
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:307    .text.pxUDPPayloadBuffer_to_NetworkBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:313    .text.pxUDPPayloadBuffer_to_NetworkBuffer:00000000 pxUDPPayloadBuffer_to_NetworkBuffer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:339    .text.FreeRTOS_ReleaseUDPPayloadBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:345    .text.FreeRTOS_ReleaseUDPPayloadBuffer:00000000 FreeRTOS_ReleaseUDPPayloadBuffer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:371    .text.FreeRTOS_IPInit:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:377    .text.FreeRTOS_IPInit:00000000 FreeRTOS_IPInit
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:557    .text.FreeRTOS_IPInit:0000017c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1496   .text.prvIPTask:00000000 prvIPTask
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:571    .text.FreeRTOS_GetAddressConfiguration:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:577    .text.FreeRTOS_GetAddressConfiguration:00000000 FreeRTOS_GetAddressConfiguration
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:616    .text.FreeRTOS_GetAddressConfiguration:00000044 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:622    .text.FreeRTOS_SetAddressConfiguration:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:628    .text.FreeRTOS_SetAddressConfiguration:00000000 FreeRTOS_SetAddressConfiguration
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:668    .text.FreeRTOS_SetAddressConfiguration:00000044 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:674    .text.xSendEventStructToIPTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:680    .text.xSendEventStructToIPTask:00000000 xSendEventStructToIPTask
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:785    .text.xSendEventStructToIPTask:00000088 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:792    .text.FreeRTOS_NetworkDown:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:798    .text.FreeRTOS_NetworkDown:00000000 FreeRTOS_NetworkDown
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:825    .text.FreeRTOS_NetworkDown:00000028 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:831    .text.xSendEventToIPTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:837    .text.xSendEventToIPTask:00000000 xSendEventToIPTask
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:868    .text.eConsiderFrameForProcessing:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:874    .text.eConsiderFrameForProcessing:00000000 eConsiderFrameForProcessing
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:932    .text.eConsiderFrameForProcessing:00000068 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:938    .text.vIPNetworkUpCalls:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:944    .text.vIPNetworkUpCalls:00000000 vIPNetworkUpCalls
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1007   .text.vIPNetworkUpCalls:00000044 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1017   .text.usGenerateChecksum:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1023   .text.usGenerateChecksum:00000000 usGenerateChecksum
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1220   .text.usGenerateChecksum:0000014c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1225   .text.usGenerateProtocolChecksum:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1231   .text.usGenerateProtocolChecksum:00000000 usGenerateProtocolChecksum
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1424   .text.vReturnEthernetFrame:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1430   .text.vReturnEthernetFrame:00000000 vReturnEthernetFrame
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1486   .text.vReturnEthernetFrame:00000044 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1491   .text.prvIPTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1719   .text.prvIPTask:0000016c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:1734   .text.prvIPTask:00000194 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2282   .text.prvIPTask:00000604 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2299   .text.FreeRTOS_GetIPAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2305   .text.FreeRTOS_GetIPAddress:00000000 FreeRTOS_GetIPAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2319   .text.FreeRTOS_GetIPAddress:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2324   .text.FreeRTOS_SetIPAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2330   .text.FreeRTOS_SetIPAddress:00000000 FreeRTOS_SetIPAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2345   .text.FreeRTOS_SetIPAddress:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2350   .text.FreeRTOS_GetGatewayAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2356   .text.FreeRTOS_GetGatewayAddress:00000000 FreeRTOS_GetGatewayAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2370   .text.FreeRTOS_GetGatewayAddress:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2375   .text.FreeRTOS_GetDNSServerAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2381   .text.FreeRTOS_GetDNSServerAddress:00000000 FreeRTOS_GetDNSServerAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2395   .text.FreeRTOS_GetDNSServerAddress:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2400   .text.FreeRTOS_GetNetmask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2406   .text.FreeRTOS_GetNetmask:00000000 FreeRTOS_GetNetmask
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2420   .text.FreeRTOS_GetNetmask:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2425   .text.FreeRTOS_UpdateMACAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2431   .text.FreeRTOS_UpdateMACAddress:00000000 FreeRTOS_UpdateMACAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2449   .text.FreeRTOS_UpdateMACAddress:00000010 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2454   .text.FreeRTOS_GetMACAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2460   .text.FreeRTOS_GetMACAddress:00000000 FreeRTOS_GetMACAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2473   .text.FreeRTOS_GetMACAddress:00000008 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2478   .text.FreeRTOS_SetNetmask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2484   .text.FreeRTOS_SetNetmask:00000000 FreeRTOS_SetNetmask
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2499   .text.FreeRTOS_SetNetmask:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2504   .text.FreeRTOS_SetGatewayAddress:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2510   .text.FreeRTOS_SetGatewayAddress:00000000 FreeRTOS_SetGatewayAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2525   .text.FreeRTOS_SetGatewayAddress:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2530   .text.vIPSetDHCPTimerEnableState:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2536   .text.vIPSetDHCPTimerEnableState:00000000 vIPSetDHCPTimerEnableState
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2557   .text.vIPSetDHCPTimerEnableState:0000001c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2562   .text.vIPReloadDHCPTimer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2568   .text.vIPReloadDHCPTimer:00000000 vIPReloadDHCPTimer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2615   .text.vIPReloadDHCPTimer:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2624   .text.xIPIsNetworkTaskReady:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2630   .text.xIPIsNetworkTaskReady:00000000 xIPIsNetworkTaskReady
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2644   .text.xIPIsNetworkTaskReady:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2649   .text.FreeRTOS_IsNetworkUp:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2655   .text.FreeRTOS_IsNetworkUp:00000000 FreeRTOS_IsNetworkUp
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2669   .text.FreeRTOS_IsNetworkUp:0000000c $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2710   .bss.xDefaultAddressing:00000000 xDefaultAddressing
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2731   .bss.xNetworkAddressing:00000000 xNetworkAddressing
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2777   .rodata.xBroadcastMACAddress:00000000 xBroadcastMACAddress
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2682   .bss.usPacketIdentifier:00000000 usPacketIdentifier
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2745   .bss.xNetworkEventQueue:00000000 xNetworkEventQueue
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2679   .bss.usPacketIdentifier:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2685   .bss.xARPTimer:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2689   .bss.xARPTimer:00000000 xARPTimer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2692   .bss.xCallEventHook.72622:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2696   .bss.xCallEventHook.72622:00000000 xCallEventHook.72622
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2699   .bss.xDHCPTimer:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2703   .bss.xDHCPTimer:00000000 xDHCPTimer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2706   .bss.xDefaultAddressing:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2713   .bss.xIPTaskHandle:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2717   .bss.xIPTaskHandle:00000000 xIPTaskHandle
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2720   .bss.xIPTaskInitialised:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2724   .bss.xIPTaskInitialised:00000000 xIPTaskInitialised
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2727   .bss.xNetworkAddressing:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2734   .bss.xNetworkDownEventPending:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2738   .bss.xNetworkDownEventPending:00000000 xNetworkDownEventPending
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2741   .bss.xNetworkEventQueue:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2748   .bss.xNetworkUp:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2752   .bss.xNetworkUp:00000000 xNetworkUp
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2755   .bss.xProcessedTCPMessage:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2759   .bss.xProcessedTCPMessage:00000000 xProcessedTCPMessage
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2762   .bss.xTCPTimer:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2766   .bss.xTCPTimer:00000000 xTCPTimer
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2785   .rodata.xNetworkDownEvent.72556:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2789   .rodata.xNetworkDownEvent.72556:00000000 xNetworkDownEvent.72556
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2792   .rodata.xNetworkDownEvent.72561:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccjrySsw.s:2796   .rodata.xNetworkDownEvent.72561:00000000 xNetworkDownEvent.72561
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vTaskSetTimeOutState
xTaskCheckForTimeOut
xTaskGetCurrentTaskHandle
xQueueGenericSendFromISR
pxGetNetworkBufferWithDescriptor
memcpy
vReleaseNetworkBufferAndDescriptor
longjmp
xQueueGenericCreate
vQueueAddToRegistry
xNetworkBuffersInitialise
vNetworkSocketsInit
xTaskCreate
vQueueDelete
Unity
xDefaultPartUDPPacketHeader
uxQueueMessagesWaiting
xQueueGenericSend
memcmp
vApplicationIPNetworkEventHook
xNetworkInterfaceOutput
xTCPTimerCheck
xQueueReceive
FreeRTOS_ClearARP
xNetworkInterfaceInitialise
vTaskDelay
vDHCPProcess
eARPProcessPacket
memmove
vARPRefreshCacheEntry
xProcessReceivedUDPPacket
xProcessReceivedTCPPacket
vARPAgeCache
vSocketBind
vSocketWakeUpUser
vSocketClose
vProcessGeneratedUDPPacket
xTCPCheckNewClient
vTCPNetStat
