   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"stream_buffer.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvBytesInBuffer,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	prvBytesInBuffer:
  23              	.LFB20:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS/stream_buffer.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * FreeRTOS Kernel V10.1.1
   3:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * http://www.FreeRTOS.org
  23:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * http://aws.amazon.com/freertos
  24:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  *
  25:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * 1 tab == 4 spaces!
  26:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
  27:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  28:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* Standard includes. */
  29:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #include <stdint.h>
  30:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #include <string.h>
  31:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  32:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** task.h is included from an application file. */
  35:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  37:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* FreeRTOS includes. */
  38:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #include "FreeRTOS.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #include "task.h"
  40:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #include "stream_buffer.h"
  41:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  42:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if( configUSE_TASK_NOTIFICATIONS != 1 )
  43:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  44:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif
  45:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  46:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  47:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  48:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** for the header files above, but not in this file, in order to generate the
  49:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** correct privileged Vs unprivileged linkage and placement. */
  50:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  51:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  52:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  53:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** or #defined the notification macros away, them provide default implementations
  54:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** that uses task notifications. */
  55:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overidden. */
  56:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  57:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#define sbRECEIVE_COMPLETED( pxStreamBuffer )										\
  58:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		vTaskSuspendAll();																\
  59:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{																				\
  60:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  61:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{																			\
  62:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend,			\
  63:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  ( uint32_t ) 0,									\
  64:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  eNoAction );										\
  65:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  66:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}																			\
  67:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}																				\
  68:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) xTaskResumeAll();
  69:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  70:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  71:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  72:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,								\
  73:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  pxHigherPriorityTaskWoken )					\
  74:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{																					\
  75:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
  76:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 																						\
  77:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
  78:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{																				\
  79:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  80:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{																			\
  81:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,	\
  82:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											 ( uint32_t ) 0,							\
  83:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											 eNoAction,									\
  84:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
  85:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  86:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}																			\
  87:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}																				\
  88:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
  89:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
  90:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
  91:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  92:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
  93:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** or #defined the notification macro away, them provide a default implementation
  94:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** that uses task notifications. */
  95:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #ifndef sbSEND_COMPLETED
  96:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#define sbSEND_COMPLETED( pxStreamBuffer )											\
  97:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		vTaskSuspendAll();																\
  98:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{																				\
  99:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{																			\
 101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive,		\
 102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  ( uint32_t ) 0,									\
 103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  eNoAction );										\
 104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}																			\
 106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}																				\
 107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) xTaskResumeAll();
 108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )		\
 112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{																					\
 113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
 114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 																						\
 115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
 116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{																				\
 117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{																			\
 119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,	\
 120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											 ( uint32_t ) 0,							\
 121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											 eNoAction,									\
 122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
 123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}																			\
 125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}																				\
 126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
 127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*lint -restore (9026) */
 130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER		( ( uint8_t ) 1 ) /* Set if the stream buffer was created as a m
 136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED ( ( uint8_t ) 2 ) /* Set if the stream buffer was created u
 137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* Structure that hold state information on the buffer. */
 141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** typedef struct StreamBufferDef_t /*lint !e9058 Style convention uses tag. */
 142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	volatile size_t xTail;				/* Index to the next item to read within the buffer. */
 144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	volatile size_t xHead;				/* Index to the next item to write within the buffer. */
 145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	size_t xLength;						/* The length of the buffer pointed to by pucBuffer. */
 146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	size_t xTriggerLevelBytes;			/* The number of bytes that must be in the stream buffer before a tas
 147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or NU
 148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToSend;	/* Holds the handle of a task waiting to send data to a 
 149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t *pucBuffer;					/* Points to the buffer itself - that is - the RAM that stores the data pa
 150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t ucFlags;
 151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		UBaseType_t uxStreamBufferNumber;		/* Used for tracing purposes. */
 154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#endif
 155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** } StreamBuffer_t;
 156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
 158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
 160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
 163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer message buffer.
 164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * Returns the number of bytes written, which will either equal xCount in the
 165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * success case, or 0 if there was not enough space in the buffer (in which case
 166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * no data is written into the buffer).
 167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
 168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
 169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
 171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * buffer's data storage area.
 176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
 177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										void *pvRxData,
 179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xBufferLengthBytes,
 180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xBytesAvailable,
 181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xBytesToStoreMessageLength ) PRIVILEGED_FUNCTION;
 182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
 184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * data storage area.
 189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
 190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvWriteMessageToBuffer(  StreamBuffer_t * const pxStreamBuffer,
 191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										const void * pvTxData,
 192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xDataLengthBytes,
 193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xSpace,
 194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
 197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * Read xMaxCount bytes from the pxStreamBuffer message buffer and write them
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * to pucData.
 199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
 200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer,
 201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  uint8_t *pucData,
 202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  size_t xMaxCount,
 203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									  size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
 204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*
 206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c ****  */
 209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  uint8_t * const pucBuffer,
 211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  size_t xBufferSizeBytes,
 212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  size_t xTriggerLevelBytes,
 213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  uint8_t ucFlags ) PRIVILEGED_FUNCTION;
 214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevelByte
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t ucFlags;
 223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		to hold at least one message. */
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xIsMessageBuffer == pdTRUE )
 229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Is a message buffer but not statically allocated. */
 231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Not a message buffer and not statically allocated. */
 237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			ucFlags = 0;
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
 239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		the buffer was empty. */
 244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* A stream buffer requires a StreamBuffer_t structure and a buffer.
 250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		Both are allocated in a single call to pvPortMalloc().  The
 251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		StreamBuffer_t structure is placed at the start of the allocated memory
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		and the buffer follows immediately after.  The requested size is
 253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		incremented so the free space is returned as the user would expect -
 254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		this is a quirk of the implementation that means otherwise the free
 255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		space would be reported as one byte smaller than would be logically
 256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		expected. */
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBufferSizeBytes++;
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( pucAllocatedMemory != NULL )
 261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory, /* Structure at the start
 263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										   xBufferSizeBytes,
 265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										   xTriggerLevelBytes,
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										   ucFlags );
 267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffer );
 269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as allocated me
 276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 														   size_t xTriggerLevelBytes,
 285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 														   BaseType_t xIsMessageBuffer,
 286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 														   uint8_t * const pucStreamBufferStorageArea,
 287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 														   StaticStreamBuffer_t * const pxStaticStreamBuffer )
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBufferHandle_t xReturn;
 291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t ucFlags;
 292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( pucStreamBufferStorageArea );
 294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		the buffer was empty. */
 299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xIsMessageBuffer != pdFALSE )
 305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Statically allocated message buffer. */
 307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Statically allocated stream buffer. */
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		to hold at least one message. */
 319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		#if( configASSERT_DEFINED == 1 )
 322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Sanity check that the size of the structure used to declare a
 324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			variable of type StaticStreamBuffer_t equals the size of the real
 325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			message buffer structure. */
 326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xSize == sizeof( StreamBuffer_t ) );
 328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		} /*lint !e529 xSize is referenced is configASSERT() is defined. */
 329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		#endif /* configASSERT_DEFINED */
 330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			prvInitialiseNewStreamBuffer( pxStreamBuffer,
 334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  pucStreamBufferStorageArea,
 335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  xBufferSizeBytes,
 336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  xTriggerLevelBytes,
 337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  ucFlags );
 338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Remember this was statically allocated in case it is ever deleted
 340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			again. */
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requires cast
 346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = NULL;
 350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		return xReturn;
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Both the structure and the buffer were allocated using a single call
 372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			to pvPortMalloc(), hence only one call to vPortFree() is required. */
 373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics require void *, 
 374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		#else
 376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Should not be possible to get here, ucFlags must be corrupt.
 378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			Force an assert. */
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		#endif
 382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* The structure and buffer were not allocated dynamically and cannot be
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		freed - just scrub the structure so future use will assert. */
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn = pdFAIL;
 396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if( configUSE_TRACE_FACILITY == 1 )
 398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	UBaseType_t uxStreamBufferNumber;
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Store the stream buffer number so it can be restored after the
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		reset. */
 407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#endif
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Can only reset a message buffer if there are no tasks blocked on it. */
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	taskENTER_CRITICAL();
 413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( pxStreamBuffer->xTaskWaitingToReceive == NULL )
 415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			if( pxStreamBuffer->xTaskWaitingToSend == NULL )
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				prvInitialiseNewStreamBuffer( pxStreamBuffer,
 419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											  pxStreamBuffer->xLength,
 421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											  pxStreamBuffer->xTriggerLevelBytes,
 422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											  pxStreamBuffer->ucFlags );
 423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				xReturn = pdPASS;
 424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				#if( configUSE_TRACE_FACILITY == 1 )
 426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				{
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				}
 429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				#endif
 430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				traceSTREAM_BUFFER_RESET( xStreamBuffer );
 432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	taskEXIT_CRITICAL();
 436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel )
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
 445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* It is not valid for the trigger level to be 0. */
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xTriggerLevel == ( size_t ) 0 )
 450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xTriggerLevel = ( size_t ) 1;
 452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* The trigger level is the number of bytes that must be in the stream
 455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	buffer before a task that is waiting for data is unblocked. */
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xTriggerLevel <= pxStreamBuffer->xLength )
 457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdPASS;
 460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdFALSE;
 464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xSpace;
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xSpace >= pxStreamBuffer->xLength )
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xSpace -= pxStreamBuffer->xLength;
 484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xSpace;
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xReturn;
 498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xReturn = prvBytesInBuffer( pxStreamBuffer );
 502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 						  const void *pvTxData,
 508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 						  size_t xDataLengthBytes,
 509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 						  TickType_t xTicksToWait )
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xReturn, xSpace = 0;
 513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** TimeOut_t xTimeOut;
 515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pvTxData );
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	message. */
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Overflow? */
 528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( xRequiredSpace > xDataLengthBytes );
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		vTaskSetTimeOutState( &xTimeOut );
 538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		do
 540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Wait until the required number of bytes are free in the message
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			buffer. */
 543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			taskENTER_CRITICAL();
 544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				if( xSpace < xRequiredSpace )
 548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				{
 549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					/* Clear notification state as going to wait for space. */
 550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					( void ) xTaskNotifyStateClear( NULL );
 551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					/* Should only be one writer. */
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				}
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				else
 557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				{
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					taskEXIT_CRITICAL();
 559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					break;
 560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				}
 561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			taskEXIT_CRITICAL();
 563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		} while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
 589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Was a task waiting for the data? */
 591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			sbSEND_COMPLETED( pxStreamBuffer );
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
 611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 								 const void *pvTxData,
 612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 								 size_t xDataLengthBytes,
 613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 								 BaseType_t * const pxHigherPriorityTaskWoken )
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xReturn, xSpace;
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pvTxData );
 620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	message. */
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Was a task waiting for the data? */
 641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									   const void * pvTxData,
 663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									   size_t xDataLengthBytes,
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									   size_t xSpace,
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									   size_t xRequiredSpace )
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	BaseType_t xShouldWrite;
 668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	size_t xReturn;
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Doesn't matter if this is a stream buffer or a message buffer, there
 673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		is no space to write. */
 674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xShouldWrite = pdFALSE;
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) == ( uint8_t ) 0 )
 677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* This is a stream buffer, as opposed to a message buffer, so writing a
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		stream of bytes rather than discrete messages.  Write as many bytes as
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		possible. */
 681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xShouldWrite = pdTRUE;
 682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else if( xSpace >= xRequiredSpace )
 685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* This is a message buffer, as opposed to a stream buffer, and there
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		is enough space to write both the message length and the message itself
 688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		into the buffer.  Start by writing the length of the data, the data
 689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		itself will be written later in this function. */
 690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xShouldWrite = pdTRUE;
 691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), sbBYTE
 692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* There is space available, but not enough space. */
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xShouldWrite = pdFALSE;
 697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xShouldWrite != pdFALSE )
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 701:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Writes the data itself. */
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData, xDataLengthBytes )
 703:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 705:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = 0;
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 709:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 711:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 							 void *pvRxData,
 715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 							 size_t xBufferLengthBytes,
 716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 							 TickType_t xTicksToWait )
 717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 720:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pvRxData );
 722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 723:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 724:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 726:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	bytes.  Discrete messages include an additional
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 728:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	message. */
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 730:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 737:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 740:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Checking if there is data and clearing the notification state must be
 741:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		performed atomically. */
 742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		taskENTER_CRITICAL();
 743:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 745:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* If this function was invoked by a message buffer read then
 747:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xBytesToStoreMessageLength holds the number of bytes used to hold
 748:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			the length of the next discrete message.  If this function was
 749:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			invoked by a stream buffer read then xBytesToStoreMessageLength will
 750:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			be 0. */
 751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			if( xBytesAvailable <= xBytesToStoreMessageLength )
 752:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 753:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				/* Clear notification state as going to wait for data. */
 754:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				( void ) xTaskNotifyStateClear( NULL );
 755:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				/* Should only be one reader. */
 757:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 758:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 759:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}
 760:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			else
 761:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 762:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				mtCOVERAGE_TEST_MARKER();
 763:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}
 764:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 765:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		taskEXIT_CRITICAL();
 766:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 767:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xBytesAvailable <= xBytesToStoreMessageLength )
 768:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Wait for data to be available. */
 770:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 772:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 773:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 774:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* Recheck the data available after blocking. */
 775:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 777:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 778:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 779:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 780:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 781:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 782:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 783:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 785:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 787:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 788:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 789:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 790:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	read bytes from the buffer. */
 792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 793:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 794:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 795:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 796:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 797:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 799:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			sbRECEIVE_COMPLETED( pxStreamBuffer );
 801:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 803:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 805:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 806:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 807:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 808:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 809:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 810:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 813:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReceivedLength;
 814:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 815:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 817:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 818:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 819:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 820:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xReturn, xBytesAvailable, xOriginalTail;
 821:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 822:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 824:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Ensure the stream buffer is being used as a message buffer. */
 826:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 830:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 831:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* The number of bytes available is greater than the number of bytes
 832:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			required to hold the length of the next message, so another message
 833:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			is available.  Return its length without removing the length bytes
 834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			from the buffer.  A copy of the tail is stored so the buffer can be
 835:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			returned to its prior state as the message is not actually being
 836:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			removed from the buffer. */
 837:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xOriginalTail = pxStreamBuffer->xTail;
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 841:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 842:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 843:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 844:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* The minimum amount of bytes in a message buffer is
 845:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
 846:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
 847:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			value is 0. */
 848:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xBytesAvailable == 0 );
 849:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = 0;
 850:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 851:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 852:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 853:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 854:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = 0;
 855:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 856:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 858:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 860:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 861:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
 862:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									void *pvRxData,
 863:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									size_t xBufferLengthBytes,
 864:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 									BaseType_t * const pxHigherPriorityTaskWoken )
 865:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 866:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 867:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 868:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pvRxData );
 870:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 871:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 872:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 873:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	bytes.  Discrete messages include an additional
 875:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 876:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	message. */
 877:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 878:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 879:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 880:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 881:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 882:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 883:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 884:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 885:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 887:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 888:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 889:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 890:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 891:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 892:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	read bytes from the buffer. */
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 894:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 895:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 899:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 902:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 903:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 904:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 905:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 906:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 907:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 908:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 909:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 910:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 911:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 912:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
 913:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReceivedLength;
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 918:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 919:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										void *pvRxData,
 920:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xBufferLengthBytes,
 921:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xBytesAvailable,
 922:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										size_t xBytesToStoreMessageLength )
 923:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 924:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 925:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xBytesToStoreMessageLength != ( size_t ) 0 )
 928:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 929:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* A discrete message is being received.  First receive the length
 930:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		of the message.  A copy of the tail is stored so the buffer can be
 931:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		returned to its prior state if the length of the message is too
 932:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		large for the provided buffer. */
 933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xOriginalTail = pxStreamBuffer->xTail;
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 936:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Reduce the number of bytes available by the number of bytes just
 938:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		read out. */
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesAvailable -= xBytesToStoreMessageLength;
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 941:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Check there is enough space in the buffer provided by the
 942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		user. */
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xNextMessageLength > xBufferLengthBytes )
 944:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/* The user has provided insufficient space to read the message
 946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			so return the buffer to its previous state (so the length of
 947:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			the message is in the buffer again). */
 948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xNextMessageLength = 0;
 950:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 951:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
 952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 954:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 955:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 956:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 957:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 958:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* A stream of bytes is being received (as opposed to a discrete
 959:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		message), so read as many bytes as possible. */
 960:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextMessageLength = xBufferLengthBytes;
 961:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 962:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 963:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Read the actual data. */
 964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xReceivedLength = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xNextMessageLeng
 965:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 966:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReceivedLength;
 967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 968:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 970:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
 974:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xTail;
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 977:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 978:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* True if no bytes are available. */
 979:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xTail = pxStreamBuffer->xTail;
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 981:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 982:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdTRUE;
 983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 984:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
 985:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 986:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdFALSE;
 987:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 989:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 990:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 991:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 992:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 993:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
 994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
 996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xBytesToStoreMessageLength;
 997:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1000:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1001:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* This generic version of the receive function is used by both message
1002:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	buffers, which store discrete messages, and stream buffers, which store a
1003:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	continuous stream of bytes.  Discrete messages include an additional
1004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1005:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1006:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1007:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
1008:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1009:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
1012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1013:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1014:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* True if the available space equals zero. */
1015:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
1016:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1017:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdTRUE;
1018:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
1020:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdFALSE;
1022:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1023:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1024:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
1026:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHig
1029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
1030:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1031:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
1032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1037:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
1039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
1041:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 ( uint32_t ) 0,
1042:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 eNoAction,
1043:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1044:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
1045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = pdTRUE;
1046:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1047:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
1048:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1049:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = pdFALSE;
1050:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1051:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1053:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
1055:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
1056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1057:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1058:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *px
1059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
1060:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
1062:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1065:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
1069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
1071:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 ( uint32_t ) 0,
1072:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 eNoAction,
1073:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1074:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToSend = NULL;
1075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = pdTRUE;
1076:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1077:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
1078:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = pdFALSE;
1080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1081:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1083:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1084:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
1085:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
1086:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1088:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
1089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
1090:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xNextHead, xFirstLength;
1091:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( xCount > ( size_t ) 0 );
1093:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xNextHead = pxStreamBuffer->xHead;
1095:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1096:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Calculate the number of bytes that can be added in the first write -
1097:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	which may be less than the total number of bytes that need to be added if
1098:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	the buffer will wrap back to the beginning. */
1099:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xFirstLength = configMIN( pxStreamBuffer->xLength - xNextHead, xCount );
1100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Write as many bytes as can be written in the first write. */
1102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( ( xNextHead + xFirstLength ) <= pxStreamBuffer->xLength );
1103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
1104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* If the number of bytes written was less than the number that could be
1106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	written in the first write... */
1107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xCount > xFirstLength )
1108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* ...then write the remaining bytes to the start of the buffer. */
1110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
1111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
1112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
1114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xNextHead += xCount;
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
1120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextHead -= pxStreamBuffer->xLength;
1122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
1124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->xHead = xNextHead;
1129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xCount;
1131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
1132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer, uint8_t *pucData, size_t xMax
1135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
1136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
1137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Use the minimum of the wanted bytes and the available bytes. */
1139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xCount = configMIN( xBytesAvailable, xMaxCount );
1140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xCount > ( size_t ) 0 )
1142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextTail = pxStreamBuffer->xTail;
1144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Calculate the number of bytes that can be read - which may be
1146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		less than the number wanted if the data wraps around to the start of
1147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		the buffer. */
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xFirstLength = configMIN( pxStreamBuffer->xLength - xNextTail, xCount );
1149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Obtain the number of bytes it is possible to obtain in the first
1151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		read.  Asserts check bounds of read and write. */
1152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( xFirstLength <= xMaxCount );
1153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
1154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
1155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* If the total number of wanted bytes is greater than the number
1157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		that could be read in the first read... */
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xCount > xFirstLength )
1159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			/*...then read the remaining bytes from the start of the buffer. */
1161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xCount <= xMaxCount );
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
1163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		else
1165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
1167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* Move the tail pointer to effectively remove the data read from
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		the buffer. */
1171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextTail += xCount;
1172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xNextTail >= pxStreamBuffer->xLength )
1174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xNextTail -= pxStreamBuffer->xLength;
1176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
1177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		pxStreamBuffer->xTail = xNextTail;
1179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
1181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xCount;
1186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
1187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
  25              		.loc 1 1190 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
1191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xCount;
1193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
  31              		.loc 1 1194 0
  32 0000 082090E5 		ldr	r2, [r0, #8]
  33 0004 043090E5 		ldr	r3, [r0, #4]
1195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xCount -= pxStreamBuffer->xTail;
  34              		.loc 1 1195 0
  35 0008 000090E5 		ldr	r0, [r0]
  36              	.LVL1:
1194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xCount -= pxStreamBuffer->xTail;
  37              		.loc 1 1194 0
  38 000c 033082E0 		add	r3, r2, r3
  39              	.LVL2:
  40              		.loc 1 1195 0
  41 0010 000043E0 		sub	r0, r3, r0
  42              	.LVL3:
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if ( xCount >= pxStreamBuffer->xLength )
  43              		.loc 1 1196 0
  44 0014 000052E1 		cmp	r2, r0
1197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xCount -= pxStreamBuffer->xLength;
  45              		.loc 1 1198 0
  46 0018 02004090 		subls	r0, r0, r2
  47              	.LVL4:
1199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	else
1201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xCount;
1206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
  48              		.loc 1 1206 0
  49 001c 1EFF2FE1 		bx	lr
  50              		.cfi_endproc
  51              	.LFE20:
  53              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
  54              		.align	2
  55              		.syntax unified
  56              		.arm
  57              		.fpu neon
  59              	prvWriteBytesToBuffer:
  60              	.LFB18:
1089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xNextHead, xFirstLength;
  61              		.loc 1 1089 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              	.LVL5:
  66 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
  67              		.cfi_def_cfa_offset 24
  68              		.cfi_offset 4, -24
  69              		.cfi_offset 5, -20
  70              		.cfi_offset 6, -16
  71              		.cfi_offset 7, -12
  72              		.cfi_offset 8, -8
  73              		.cfi_offset 14, -4
1092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  74              		.loc 1 1092 0
  75 0004 007052E2 		subs	r7, r2, #0
  76 0008 0200001A 		bne	.L4
  77              	.LVL6:
  78              	.L5:
1092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  79              		.loc 1 1092 0 is_stmt 0 discriminator 1
  80 000c 0110A0E3 		mov	r1, #1
  81 0010 78009FE5 		ldr	r0, .L9
  82 0014 FEFFFFEB 		bl	longjmp
  83              	.LVL7:
  84              	.L4:
1094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  85              		.loc 1 1094 0 is_stmt 1
  86 0018 044090E5 		ldr	r4, [r0, #4]
  87              	.LVL8:
  88 001c 0060A0E1 		mov	r6, r0
1099:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
  89              		.loc 1 1099 0
  90 0020 083090E5 		ldr	r3, [r0, #8]
  91 0024 045043E0 		sub	r5, r3, r4
  92 0028 070055E1 		cmp	r5, r7
  93 002c 0750A021 		movcs	r5, r7
  94              	.LVL9:
1102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
  95              		.loc 1 1102 0
  96 0030 052084E0 		add	r2, r4, r5
  97              	.LVL10:
  98 0034 020053E1 		cmp	r3, r2
  99 0038 F3FFFF3A 		bcc	.L5
1103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 100              		.loc 1 1103 0
 101 003c 180090E5 		ldr	r0, [r0, #24]
 102              	.LVL11:
 103 0040 0520A0E1 		mov	r2, r5
 104 0044 0180A0E1 		mov	r8, r1
 105 0048 040080E0 		add	r0, r0, r4
 106 004c FEFFFFEB 		bl	memcpy
 107              	.LVL12:
1107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 108              		.loc 1 1107 0
 109 0050 050057E1 		cmp	r7, r5
 110 0054 0600009A 		bls	.L6
1110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
 111              		.loc 1 1110 0
 112 0058 083096E5 		ldr	r3, [r6, #8]
 113 005c 052047E0 		sub	r2, r7, r5
 114 0060 030052E1 		cmp	r2, r3
 115 0064 E8FFFF8A 		bhi	.L5
1111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 116              		.loc 1 1111 0
 117 0068 051088E0 		add	r1, r8, r5
 118 006c 180096E5 		ldr	r0, [r6, #24]
 119 0070 FEFFFFEB 		bl	memcpy
 120              	.LVL13:
 121              	.L6:
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 122              		.loc 1 1119 0
 123 0074 083096E5 		ldr	r3, [r6, #8]
1118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
 124              		.loc 1 1118 0
 125 0078 044087E0 		add	r4, r7, r4
 126              	.LVL14:
1131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 127              		.loc 1 1131 0
 128 007c 0700A0E1 		mov	r0, r7
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 129              		.loc 1 1119 0
 130 0080 030054E1 		cmp	r4, r3
1121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 131              		.loc 1 1121 0
 132 0084 03404420 		subcs	r4, r4, r3
 133              	.LVL15:
1128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 134              		.loc 1 1128 0
 135 0088 044086E5 		str	r4, [r6, #4]
1131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 136              		.loc 1 1131 0
 137 008c F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 138              	.L10:
 139              		.align	2
 140              	.L9:
 141 0090 28000000 		.word	Unity+40
 142              		.cfi_endproc
 143              	.LFE18:
 145              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 146              		.align	2
 147              		.syntax unified
 148              		.arm
 149              		.fpu neon
 151              	prvWriteMessageToBuffer:
 152              	.LFB9:
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	BaseType_t xShouldWrite;
 153              		.loc 1 666 0
 154              		.cfi_startproc
 155              		@ args = 4, pretend = 0, frame = 8
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              	.LVL16:
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 158              		.loc 1 670 0
 159 0000 000053E3 		cmp	r3, #0
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	BaseType_t xShouldWrite;
 160              		.loc 1 666 0
 161 0004 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
 162              		.cfi_def_cfa_offset 24
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	BaseType_t xShouldWrite;
 166              		.loc 1 666 0
 167 0008 04208DE5 		str	r2, [sp, #4]
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 168              		.loc 1 670 0
 169 000c 0C00000A 		beq	.L17
 170 0010 0150A0E1 		mov	r5, r1
 676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 171              		.loc 1 676 0
 172 0014 1C10D0E5 		ldrb	r1, [r0, #28]	@ zero_extendqisi2
 173              	.LVL17:
 174 0018 0040A0E1 		mov	r4, r0
 175 001c 010011E3 		tst	r1, #1
 176 0020 0A00001A 		bne	.L13
 177              	.LVL18:
 682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 178              		.loc 1 682 0
 179 0024 030052E1 		cmp	r2, r3
 180 0028 04208D95 		strls	r2, [sp, #4]
 181 002c 04308D85 		strhi	r3, [sp, #4]
 182              	.LVL19:
 183              	.L14:
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 184              		.loc 1 702 0
 185 0030 04209DE5 		ldr	r2, [sp, #4]
 186 0034 0510A0E1 		mov	r1, r5
 187 0038 0400A0E1 		mov	r0, r4
 188 003c FEFFFFEB 		bl	prvWriteBytesToBuffer
 189              	.LVL20:
 190 0040 0030A0E1 		mov	r3, r0
 191              	.LVL21:
 192              	.L17:
 710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 193              		.loc 1 710 0
 194 0044 0300A0E1 		mov	r0, r3
 195 0048 0CD08DE2 		add	sp, sp, #12
 196              		.cfi_remember_state
 197              		.cfi_def_cfa_offset 12
 198              		@ sp needed
 199 004c 3080BDE8 		pop	{r4, r5, pc}
 200              	.LVL22:
 201              	.L13:
 202              		.cfi_restore_state
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 203              		.loc 1 684 0
 204 0050 18209DE5 		ldr	r2, [sp, #24]
 205              	.LVL23:
 206 0054 020053E1 		cmp	r3, r2
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 207              		.loc 1 706 0
 208 0058 0030A033 		movcc	r3, #0
 209              	.LVL24:
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 210              		.loc 1 684 0
 211 005c F8FFFF3A 		bcc	.L17
 212              	.LVL25:
 691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 213              		.loc 1 691 0
 214 0060 0420A0E3 		mov	r2, #4
 215 0064 02108DE0 		add	r1, sp, r2
 216 0068 FEFFFFEB 		bl	prvWriteBytesToBuffer
 217              	.LVL26:
 218 006c EFFFFFEA 		b	.L14
 219              		.cfi_endproc
 220              	.LFE9:
 222              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
 223              		.align	2
 224              		.syntax unified
 225              		.arm
 226              		.fpu neon
 228              	prvReadBytesFromBuffer:
 229              	.LFB19:
1135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
 230              		.loc 1 1135 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL27:
1139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 235              		.loc 1 1139 0
 236 0000 030052E1 		cmp	r2, r3
1135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
 237              		.loc 1 1135 0
 238 0004 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 4, -24
 241              		.cfi_offset 5, -20
 242              		.cfi_offset 6, -16
 243              		.cfi_offset 7, -12
 244              		.cfi_offset 8, -8
 245              		.cfi_offset 14, -4
1139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 246              		.loc 1 1139 0
 247 0008 0260A031 		movcc	r6, r2
 248 000c 0360A021 		movcs	r6, r3
 249              	.LVL28:
1141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 250              		.loc 1 1141 0
 251 0010 000056E3 		cmp	r6, #0
 252 0014 2100000A 		beq	.L21
 253 0018 0280A0E1 		mov	r8, r2
1143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 254              		.loc 1 1143 0
 255 001c 004090E5 		ldr	r4, [r0]
 256              	.LVL29:
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 257              		.loc 1 1148 0
 258 0020 082090E5 		ldr	r2, [r0, #8]
 259              	.LVL30:
 260 0024 0130A0E1 		mov	r3, r1
 261              	.LVL31:
 262 0028 0070A0E1 		mov	r7, r0
 263 002c 045042E0 		sub	r5, r2, r4
 264 0030 060055E1 		cmp	r5, r6
 265 0034 0650A021 		movcs	r5, r6
 266              	.LVL32:
1152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 267              		.loc 1 1152 0
 268 0038 050058E1 		cmp	r8, r5
 269 003c 0200002A 		bcs	.L23
 270              	.LVL33:
 271              	.L24:
1152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 272              		.loc 1 1152 0 is_stmt 0 discriminator 1
 273 0040 0110A0E3 		mov	r1, #1
 274 0044 5C009FE5 		ldr	r0, .L31
 275 0048 FEFFFFEB 		bl	longjmp
 276              	.LVL34:
 277              	.L23:
1153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
 278              		.loc 1 1153 0 is_stmt 1
 279 004c 051084E0 		add	r1, r4, r5
 280              	.LVL35:
 281 0050 010052E1 		cmp	r2, r1
 282 0054 F9FFFF3A 		bcc	.L24
1154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 283              		.loc 1 1154 0
 284 0058 181090E5 		ldr	r1, [r0, #24]
 285 005c 0520A0E1 		mov	r2, r5
 286 0060 0300A0E1 		mov	r0, r3
 287              	.LVL36:
 288 0064 041081E0 		add	r1, r1, r4
 289 0068 FEFFFFEB 		bl	memcpy
 290              	.LVL37:
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 291              		.loc 1 1158 0
 292 006c 050056E1 		cmp	r6, r5
 293 0070 0500009A 		bls	.L25
1161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
 294              		.loc 1 1161 0
 295 0074 060058E1 		cmp	r8, r6
 296 0078 F0FFFF3A 		bcc	.L24
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 297              		.loc 1 1162 0
 298 007c 052046E0 		sub	r2, r6, r5
 299 0080 181097E5 		ldr	r1, [r7, #24]
 300 0084 050080E0 		add	r0, r0, r5
 301 0088 FEFFFFEB 		bl	memcpy
 302              	.LVL38:
 303              	.L25:
1173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 304              		.loc 1 1173 0
 305 008c 083097E5 		ldr	r3, [r7, #8]
1171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 306              		.loc 1 1171 0
 307 0090 044086E0 		add	r4, r6, r4
 308              	.LVL39:
1173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 309              		.loc 1 1173 0
 310 0094 030054E1 		cmp	r4, r3
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 311              		.loc 1 1175 0
 312 0098 03404420 		subcs	r4, r4, r3
 313              	.LVL40:
1178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 314              		.loc 1 1178 0
 315 009c 004087E5 		str	r4, [r7]
 316              	.LVL41:
 317              	.L21:
1186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 318              		.loc 1 1186 0
 319 00a0 0600A0E1 		mov	r0, r6
 320 00a4 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 321              	.L32:
 322              		.align	2
 323              	.L31:
 324 00a8 28000000 		.word	Unity+40
 325              		.cfi_endproc
 326              	.LFE19:
 328              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
 329              		.align	2
 330              		.syntax unified
 331              		.arm
 332              		.fpu neon
 334              	prvInitialiseNewStreamBuffer:
 335              	.LFB21:
1207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  uint8_t * const pucBuffer,
1211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  size_t xBufferSizeBytes,
1212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  size_t xTriggerLevelBytes,
1213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  uint8_t ucFlags )
1214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** {
 336              		.loc 1 1214 0
 337              		.cfi_startproc
 338              		@ args = 4, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL42:
 341 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 342              		.cfi_def_cfa_offset 24
 343              		.cfi_offset 4, -24
 344              		.cfi_offset 5, -20
 345              		.cfi_offset 6, -16
 346              		.cfi_offset 7, -12
 347              		.cfi_offset 8, -8
 348              		.cfi_offset 14, -4
 349              		.loc 1 1214 0
 350 0004 0150A0E1 		mov	r5, r1
 351 0008 0040A0E1 		mov	r4, r0
 352              	.LBB6:
1215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Assert here is deliberately writing to the entire buffer to ensure it can
1216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	be written to without generating exceptions, and is setting the buffer to a
1217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	known value to assist in development/debugging. */
1218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#if( configASSERT_DEFINED == 1 )
1219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
1220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		/* The value written just has to be identifiable when looking at the
1221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		memory.  Don't use 0xA5 as that is the stack fill value and could
1222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		result in confusion as to what is actually being observed. */
1223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		const BaseType_t xWriteValue = 0x55;
1224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer );
 353              		.loc 1 1224 0
 354 000c 5510A0E3 		mov	r1, #85
 355              	.LVL43:
 356 0010 0500A0E1 		mov	r0, r5
 357              	.LVL44:
 358              	.LBE6:
1214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	/* Assert here is deliberately writing to the entire buffer to ensure it can
 359              		.loc 1 1214 0
 360 0014 0270A0E1 		mov	r7, r2
 361 0018 0360A0E1 		mov	r6, r3
 362              	.LVL45:
 363              	.LBB7:
 364              		.loc 1 1224 0
 365 001c FEFFFFEB 		bl	memset
 366              	.LVL46:
 367 0020 000055E1 		cmp	r5, r0
 368 0024 0200000A 		beq	.L34
 369              	.LVL47:
 370              	.LBE7:
 371              	.LBB8:
 372              	.LBB9:
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 373              		.loc 1 475 0
 374 0028 0110A0E3 		mov	r1, #1
 375 002c 28009FE5 		ldr	r0, .L36
 376 0030 FEFFFFEB 		bl	longjmp
 377              	.LVL48:
 378              	.L34:
 379              	.LBE9:
 380              	.LBE8:
1225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	} /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	#endif
1227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 memset
 381              		.loc 1 1228 0
 382 0034 2420A0E3 		mov	r2, #36
 383 0038 0010A0E3 		mov	r1, #0
 384 003c 0400A0E1 		mov	r0, r4
 385 0040 FEFFFFEB 		bl	memset
 386              	.LVL49:
1229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->pucBuffer = pucBuffer;
1230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->xLength = xBufferSizeBytes;
1231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
1232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->ucFlags = ucFlags;
 387              		.loc 1 1232 0
 388 0044 1830DDE5 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
1229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->pucBuffer = pucBuffer;
 389              		.loc 1 1229 0
 390 0048 185084E5 		str	r5, [r4, #24]
1230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 391              		.loc 1 1230 0
 392 004c 087084E5 		str	r7, [r4, #8]
1231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	pxStreamBuffer->ucFlags = ucFlags;
 393              		.loc 1 1231 0
 394 0050 0C6084E5 		str	r6, [r4, #12]
 395              		.loc 1 1232 0
 396 0054 1C30C4E5 		strb	r3, [r4, #28]
 397 0058 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 398              	.L37:
 399              		.align	2
 400              	.L36:
 401 005c 28000000 		.word	Unity+40
 402              		.cfi_endproc
 403              	.LFE21:
 405              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
 406              		.align	2
 407              		.global	xStreamBufferGenericCreate
 408              		.syntax unified
 409              		.arm
 410              		.fpu neon
 412              	xStreamBufferGenericCreate:
 413              	.LFB0:
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 414              		.loc 1 220 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              	.LVL50:
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 419              		.loc 1 228 0
 420 0000 010052E3 		cmp	r2, #1
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 421              		.loc 1 220 0
 422 0004 F7402DE9 		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 423              		.cfi_def_cfa_offset 32
 424              		.cfi_offset 4, -20
 425              		.cfi_offset 5, -16
 426              		.cfi_offset 6, -12
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 429              		.loc 1 220 0
 430 0008 0140A0E1 		mov	r4, r1
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 431              		.loc 1 228 0
 432 000c 0500001A 		bne	.L39
 433              	.LVL51:
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 434              		.loc 1 232 0
 435 0010 040050E3 		cmp	r0, #4
 231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 436              		.loc 1 231 0
 437 0014 0250A081 		movhi	r5, r2
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 438              		.loc 1 232 0
 439 0018 0500008A 		bhi	.L40
 440              	.LVL52:
 441              	.L41:
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 442              		.loc 1 232 0 is_stmt 0 discriminator 1
 443 001c 0110A0E3 		mov	r1, #1
 444              	.LVL53:
 445 0020 50009FE5 		ldr	r0, .L52
 446              	.LVL54:
 447 0024 FEFFFFEB 		bl	longjmp
 448              	.LVL55:
 449              	.L39:
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 450              		.loc 1 238 0 is_stmt 1
 451 0028 000050E3 		cmp	r0, #0
 237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
 452              		.loc 1 237 0
 453 002c 0050A013 		movne	r5, #0
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 454              		.loc 1 238 0
 455 0030 F9FFFF0A 		beq	.L41
 456              	.LVL56:
 457              	.L40:
 240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 458              		.loc 1 240 0
 459 0034 040050E1 		cmp	r0, r4
 460 0038 F7FFFF3A 		bcc	.L41
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 461              		.loc 1 246 0
 462 003c 000054E3 		cmp	r4, #0
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 463              		.loc 1 257 0
 464 0040 017080E2 		add	r7, r0, #1
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 465              		.loc 1 258 0
 466 0044 250080E2 		add	r0, r0, #37
 467              	.LVL57:
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 468              		.loc 1 246 0
 469 0048 0140A003 		moveq	r4, #1
 470              	.LVL58:
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 471              		.loc 1 258 0
 472 004c FEFFFFEB 		bl	pvPortMalloc
 473              	.LVL59:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 474              		.loc 1 260 0
 475 0050 006050E2 		subs	r6, r0, #0
 476 0054 0400000A 		beq	.L43
 262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 477              		.loc 1 262 0
 478 0058 00508DE5 		str	r5, [sp]
 479 005c 0430A0E1 		mov	r3, r4
 480 0060 0720A0E1 		mov	r2, r7
 481 0064 241086E2 		add	r1, r6, #36
 482 0068 FEFFFFEB 		bl	prvInitialiseNewStreamBuffer
 483              	.LVL60:
 484              	.L43:
 276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 485              		.loc 1 276 0
 486 006c 0600A0E1 		mov	r0, r6
 487 0070 0CD08DE2 		add	sp, sp, #12
 488              		.cfi_def_cfa_offset 20
 489              		@ sp needed
 490 0074 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 491              	.LVL61:
 492              	.L53:
 493              		.align	2
 494              	.L52:
 495 0078 28000000 		.word	Unity+40
 496              		.cfi_endproc
 497              	.LFE0:
 499              		.section	.text.xStreamBufferGenericCreateStatic,"ax",%progbits
 500              		.align	2
 501              		.global	xStreamBufferGenericCreateStatic
 502              		.syntax unified
 503              		.arm
 504              		.fpu neon
 506              	xStreamBufferGenericCreateStatic:
 507              	.LFB1:
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 508              		.loc 1 288 0
 509              		.cfi_startproc
 510              		@ args = 4, pretend = 0, frame = 8
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              	.LVL62:
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 513              		.loc 1 293 0
 514 0000 00C053E2 		subs	ip, r3, #0
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 515              		.loc 1 288 0
 516 0004 1F402DE9 		push	{r0, r1, r2, r3, r4, lr}
 517              		.cfi_def_cfa_offset 24
 518              		.cfi_offset 4, -8
 519              		.cfi_offset 14, -4
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 520              		.loc 1 288 0
 521 0008 18409DE5 		ldr	r4, [sp, #24]
 522              	.LVL63:
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 523              		.loc 1 293 0
 524 000c 0200001A 		bne	.L55
 525              	.LVL64:
 526              	.L56:
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 527              		.loc 1 293 0 is_stmt 0 discriminator 1
 528 0010 0110A0E3 		mov	r1, #1
 529              	.LVL65:
 530 0014 70009FE5 		ldr	r0, .L64
 531              	.LVL66:
 532 0018 FEFFFFEB 		bl	longjmp
 533              	.LVL67:
 534              	.L55:
 294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 535              		.loc 1 294 0 is_stmt 1
 536 001c 000054E3 		cmp	r4, #0
 537 0020 FAFFFF0A 		beq	.L56
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 538              		.loc 1 295 0
 539 0024 000051E1 		cmp	r1, r0
 540 0028 F8FFFF8A 		bhi	.L56
 301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 541              		.loc 1 301 0
 542 002c 000051E3 		cmp	r1, #0
 543 0030 0110A003 		moveq	r1, #1
 544              	.LVL68:
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 545              		.loc 1 312 0
 546 0034 000052E3 		cmp	r2, #0
 547 0038 0330A013 		movne	r3, #3
 548              	.LVL69:
 549 003c 0230A003 		moveq	r3, #2
 550              	.LVL70:
 319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 551              		.loc 1 319 0
 552 0040 040050E3 		cmp	r0, #4
 553 0044 F1FFFF9A 		bls	.L56
 554              	.LBB10:
 326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			configASSERT( xSize == sizeof( StreamBuffer_t ) );
 555              		.loc 1 326 0
 556 0048 2420A0E3 		mov	r2, #36
 557              	.LVL71:
 558 004c 0C208DE5 		str	r2, [sp, #12]
 327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		} /*lint !e529 xSize is referenced is configASSERT() is defined. */
 559              		.loc 1 327 0
 560 0050 0C209DE5 		ldr	r2, [sp, #12]
 561 0054 240052E3 		cmp	r2, #36
 562 0058 ECFFFF1A 		bne	.L56
 563              	.LBE10:
 333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										  pucStreamBufferStorageArea,
 564              		.loc 1 333 0
 565 005c 00308DE5 		str	r3, [sp]
 566 0060 0020A0E1 		mov	r2, r0
 567 0064 0130A0E1 		mov	r3, r1
 568              	.LVL72:
 569 0068 0400A0E1 		mov	r0, r4
 570              	.LVL73:
 571 006c 0C10A0E1 		mov	r1, ip
 572              	.LVL74:
 573 0070 FEFFFFEB 		bl	prvInitialiseNewStreamBuffer
 574              	.LVL75:
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 575              		.loc 1 341 0
 576 0074 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 577              		.loc 1 354 0
 578 0078 0400A0E1 		mov	r0, r4
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 579              		.loc 1 341 0
 580 007c 023083E3 		orr	r3, r3, #2
 581 0080 1C30C4E5 		strb	r3, [r4, #28]
 582              	.LVL76:
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 583              		.loc 1 354 0
 584 0084 10D08DE2 		add	sp, sp, #16
 585              		.cfi_def_cfa_offset 8
 586              		@ sp needed
 587 0088 1080BDE8 		pop	{r4, pc}
 588              	.LVL77:
 589              	.L65:
 590              		.align	2
 591              	.L64:
 592 008c 28000000 		.word	Unity+40
 593              		.cfi_endproc
 594              	.LFE1:
 596              		.section	.text.vStreamBufferDelete,"ax",%progbits
 597              		.align	2
 598              		.global	vStreamBufferDelete
 599              		.syntax unified
 600              		.arm
 601              		.fpu neon
 603              	vStreamBufferDelete:
 604              	.LFB2:
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 605              		.loc 1 360 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL78:
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 610              		.loc 1 363 0
 611 0000 003050E2 		subs	r3, r0, #0
 612 0004 0300001A 		bne	.L67
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 613              		.loc 1 360 0 discriminator 1
 614 0008 10402DE9 		push	{r4, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 618              		.loc 1 363 0 discriminator 1
 619 000c 0110A0E3 		mov	r1, #1
 620 0010 1C009FE5 		ldr	r0, .L72
 621              	.LVL79:
 622 0014 FEFFFFEB 		bl	longjmp
 623              	.LVL80:
 624              	.L67:
 625              		.cfi_def_cfa_offset 0
 626              		.cfi_restore 4
 627              		.cfi_restore 14
 367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 628              		.loc 1 367 0
 629 0018 1C30D3E5 		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 630 001c 020013E3 		tst	r3, #2
 631 0020 0000001A 		bne	.L68
 373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 632              		.loc 1 373 0
 633 0024 FEFFFFEA 		b	vPortFree
 634              	.LVL81:
 635              	.L68:
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 636              		.loc 1 387 0
 637 0028 2420A0E3 		mov	r2, #36
 638 002c 0010A0E3 		mov	r1, #0
 639 0030 FEFFFFEA 		b	memset
 640              	.LVL82:
 641              	.L73:
 642              		.align	2
 643              	.L72:
 644 0034 28000000 		.word	Unity+40
 645              		.cfi_endproc
 646              	.LFE2:
 648              		.section	.text.xStreamBufferReset,"ax",%progbits
 649              		.align	2
 650              		.global	xStreamBufferReset
 651              		.syntax unified
 652              		.arm
 653              		.fpu neon
 655              	xStreamBufferReset:
 656              	.LFB3:
 393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 657              		.loc 1 393 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL83:
 662 0000 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
 663              		.cfi_def_cfa_offset 24
 664              		.cfi_offset 4, -12
 665              		.cfi_offset 5, -8
 666              		.cfi_offset 14, -4
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 667              		.loc 1 401 0
 668 0004 004050E2 		subs	r4, r0, #0
 669 0008 0200001A 		bne	.L75
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 670              		.loc 1 401 0 is_stmt 0 discriminator 1
 671 000c 0110A0E3 		mov	r1, #1
 672 0010 5C009FE5 		ldr	r0, .L80
 673              	.LVL84:
 674 0014 FEFFFFEB 		bl	longjmp
 675              	.LVL85:
 676              	.L75:
 407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 677              		.loc 1 407 0 is_stmt 1
 678 0018 205094E5 		ldr	r5, [r4, #32]
 679              	.LVL86:
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 680              		.loc 1 412 0
 681 001c FEFFFFEB 		bl	vPortEnterCritical
 682              	.LVL87:
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 683              		.loc 1 414 0
 684 0020 100094E5 		ldr	r0, [r4, #16]
 685 0024 000050E3 		cmp	r0, #0
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 686              		.loc 1 395 0
 687 0028 0040A013 		movne	r4, #0
 688              	.LVL88:
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 689              		.loc 1 414 0
 690 002c 0C00001A 		bne	.L76
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 691              		.loc 1 416 0
 692 0030 143094E5 		ldr	r3, [r4, #20]
 693 0034 000053E3 		cmp	r3, #0
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 694              		.loc 1 395 0
 695 0038 0040A011 		movne	r4, r0
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 696              		.loc 1 416 0
 697 003c 0800001A 		bne	.L76
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 698              		.loc 1 418 0
 699 0040 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 700 0044 0400A0E1 		mov	r0, r4
 701 0048 00308DE5 		str	r3, [sp]
 702 004c 0C3094E5 		ldr	r3, [r4, #12]
 703 0050 082094E5 		ldr	r2, [r4, #8]
 704 0054 181094E5 		ldr	r1, [r4, #24]
 705 0058 FEFFFFEB 		bl	prvInitialiseNewStreamBuffer
 706              	.LVL89:
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				}
 707              		.loc 1 427 0
 708 005c 205084E5 		str	r5, [r4, #32]
 423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 709              		.loc 1 423 0
 710 0060 0140A0E3 		mov	r4, #1
 711              	.LVL90:
 712              	.L76:
 435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 713              		.loc 1 435 0
 714 0064 FEFFFFEB 		bl	vPortExitCritical
 715              	.LVL91:
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 716              		.loc 1 438 0
 717 0068 0400A0E1 		mov	r0, r4
 718 006c 0CD08DE2 		add	sp, sp, #12
 719              		.cfi_def_cfa_offset 12
 720              		@ sp needed
 721 0070 3080BDE8 		pop	{r4, r5, pc}
 722              	.LVL92:
 723              	.L81:
 724              		.align	2
 725              	.L80:
 726 0074 28000000 		.word	Unity+40
 727              		.cfi_endproc
 728              	.LFE3:
 730              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 731              		.align	2
 732              		.global	xStreamBufferSetTriggerLevel
 733              		.syntax unified
 734              		.arm
 735              		.fpu neon
 737              	xStreamBufferSetTriggerLevel:
 738              	.LFB4:
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 739              		.loc 1 442 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              	.LVL93:
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 744              		.loc 1 446 0
 745 0000 000050E3 		cmp	r0, #0
 746 0004 0300001A 		bne	.L83
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 747              		.loc 1 442 0 discriminator 1
 748 0008 10402DE9 		push	{r4, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 4, -8
 751              		.cfi_offset 14, -4
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 752              		.loc 1 446 0 discriminator 1
 753 000c 0110A0E3 		mov	r1, #1
 754              	.LVL94:
 755 0010 20009FE5 		ldr	r0, .L90
 756              	.LVL95:
 757 0014 FEFFFFEB 		bl	longjmp
 758              	.LVL96:
 759              	.L83:
 760              		.cfi_def_cfa_offset 0
 761              		.cfi_restore 4
 762              		.cfi_restore 14
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 763              		.loc 1 456 0
 764 0018 083090E5 		ldr	r3, [r0, #8]
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 765              		.loc 1 449 0
 766 001c 000051E3 		cmp	r1, #0
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 767              		.loc 1 451 0
 768 0020 0110A003 		moveq	r1, #1
 769              	.LVL97:
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 770              		.loc 1 456 0
 771 0024 030051E1 		cmp	r1, r3
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xReturn = pdPASS;
 772              		.loc 1 458 0
 773 0028 0C108095 		strls	r1, [r0, #12]
 774              	.LVL98:
 463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 775              		.loc 1 463 0
 776 002c 0000A083 		movhi	r0, #0
 777              	.LVL99:
 459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 778              		.loc 1 459 0
 779 0030 0100A093 		movls	r0, #1
 467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 780              		.loc 1 467 0
 781 0034 1EFF2FE1 		bx	lr
 782              	.L91:
 783              		.align	2
 784              	.L90:
 785 0038 28000000 		.word	Unity+40
 786              		.cfi_endproc
 787              	.LFE4:
 789              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 790              		.align	2
 791              		.global	xStreamBufferSpacesAvailable
 792              		.syntax unified
 793              		.arm
 794              		.fpu neon
 796              	xStreamBufferSpacesAvailable:
 797              	.LFB5:
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 798              		.loc 1 471 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL100:
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 803              		.loc 1 475 0
 804 0000 002050E2 		subs	r2, r0, #0
 805 0004 0300001A 		bne	.L93
 806              	.LVL101:
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 807              		.loc 1 471 0
 808 0008 10402DE9 		push	{r4, lr}
 809              		.cfi_def_cfa_offset 8
 810              		.cfi_offset 4, -8
 811              		.cfi_offset 14, -4
 812              	.LBB13:
 813              	.LBB14:
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 814              		.loc 1 475 0
 815 000c 0110A0E3 		mov	r1, #1
 816 0010 24009FE5 		ldr	r0, .L98
 817              	.LVL102:
 818 0014 FEFFFFEB 		bl	longjmp
 819              	.LVL103:
 820              	.L93:
 821              		.cfi_def_cfa_offset 0
 822              		.cfi_restore 4
 823              		.cfi_restore 14
 824              	.LBE14:
 825              	.LBE13:
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 826              		.loc 1 477 0
 827 0018 083092E5 		ldr	r3, [r2, #8]
 828 001c 000092E5 		ldr	r0, [r2]
 829              	.LVL104:
 478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 830              		.loc 1 478 0
 831 0020 042092E5 		ldr	r2, [r2, #4]
 832              	.LVL105:
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 833              		.loc 1 477 0
 834 0024 000083E0 		add	r0, r3, r0
 835              	.LVL106:
 836 0028 010040E2 		sub	r0, r0, #1
 837              	.LVL107:
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 838              		.loc 1 479 0
 839 002c 020040E0 		sub	r0, r0, r2
 840              	.LVL108:
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 841              		.loc 1 481 0
 842 0030 000053E1 		cmp	r3, r0
 483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 843              		.loc 1 483 0
 844 0034 03004090 		subls	r0, r0, r3
 845              	.LVL109:
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 846              		.loc 1 491 0
 847 0038 1EFF2FE1 		bx	lr
 848              	.L99:
 849              		.align	2
 850              	.L98:
 851 003c 28000000 		.word	Unity+40
 852              		.cfi_endproc
 853              	.LFE5:
 855              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 856              		.align	2
 857              		.global	xStreamBufferBytesAvailable
 858              		.syntax unified
 859              		.arm
 860              		.fpu neon
 862              	xStreamBufferBytesAvailable:
 863              	.LFB6:
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 864              		.loc 1 495 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              	.LVL110:
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 869              		.loc 1 499 0
 870 0000 000050E3 		cmp	r0, #0
 871 0004 0300001A 		bne	.L101
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 872              		.loc 1 495 0 discriminator 1
 873 0008 10402DE9 		push	{r4, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 4, -8
 876              		.cfi_offset 14, -4
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 877              		.loc 1 499 0 discriminator 1
 878 000c 0110A0E3 		mov	r1, #1
 879 0010 04009FE5 		ldr	r0, .L105
 880              	.LVL111:
 881 0014 FEFFFFEB 		bl	longjmp
 882              	.LVL112:
 883              	.L101:
 884              		.cfi_def_cfa_offset 0
 885              		.cfi_restore 4
 886              		.cfi_restore 14
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	return xReturn;
 887              		.loc 1 501 0
 888 0018 FEFFFFEA 		b	prvBytesInBuffer
 889              	.LVL113:
 890              	.L106:
 891              		.align	2
 892              	.L105:
 893 001c 28000000 		.word	Unity+40
 894              		.cfi_endproc
 895              	.LFE6:
 897              		.section	.text.xStreamBufferSend,"ax",%progbits
 898              		.align	2
 899              		.global	xStreamBufferSend
 900              		.syntax unified
 901              		.arm
 902              		.fpu neon
 904              	xStreamBufferSend:
 905              	.LFB7:
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 906              		.loc 1 510 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 16
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              	.LVL114:
 911 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 912              		.cfi_def_cfa_offset 28
 913              		.cfi_offset 4, -28
 914              		.cfi_offset 5, -24
 915              		.cfi_offset 6, -20
 916              		.cfi_offset 7, -16
 917              		.cfi_offset 8, -12
 918              		.cfi_offset 9, -8
 919              		.cfi_offset 14, -4
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 920              		.loc 1 516 0
 921 0004 009051E2 		subs	r9, r1, #0
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 922              		.loc 1 510 0
 923 0008 1CD04DE2 		sub	sp, sp, #28
 924              		.cfi_def_cfa_offset 56
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 925              		.loc 1 510 0
 926 000c 0C308DE5 		str	r3, [sp, #12]
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 927              		.loc 1 516 0
 928 0010 0200001A 		bne	.L108
 929              	.LVL115:
 930              	.L109:
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 931              		.loc 1 516 0 is_stmt 0 discriminator 1
 932 0014 0110A0E3 		mov	r1, #1
 933 0018 38019FE5 		ldr	r0, .L134
 934 001c FEFFFFEB 		bl	longjmp
 935              	.LVL116:
 936              	.L108:
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 937              		.loc 1 517 0 is_stmt 1
 938 0020 000050E3 		cmp	r0, #0
 939 0024 0040A0E1 		mov	r4, r0
 940 0028 F9FFFF0A 		beq	.L109
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 941              		.loc 1 523 0
 942 002c 1C30D0E5 		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 943              	.LVL117:
 944 0030 0260A0E1 		mov	r6, r2
 945 0034 010013E3 		tst	r3, #1
 946 0038 2400000A 		beq	.L121
 525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 947              		.loc 1 525 0
 948 003c 048082E2 		add	r8, r2, #4
 949              	.LVL118:
 528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 950              		.loc 1 528 0
 951 0040 080052E1 		cmp	r2, r8
 952 0044 F2FFFF2A 		bcs	.L109
 953              	.LVL119:
 954              	.L110:
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 955              		.loc 1 535 0
 956 0048 0C309DE5 		ldr	r3, [sp, #12]
 957 004c 000053E3 		cmp	r3, #0
 958 0050 2000001A 		bne	.L111
 959              	.LVL120:
 960              	.L116:
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 961              		.loc 1 577 0
 962 0054 0400A0E1 		mov	r0, r4
 963 0058 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 964              	.LVL121:
 965 005c 0070A0E1 		mov	r7, r0
 966              	.LVL122:
 967              	.L112:
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 968              		.loc 1 584 0
 969 0060 00808DE5 		str	r8, [sp]
 970 0064 0730A0E1 		mov	r3, r7
 971 0068 0620A0E1 		mov	r2, r6
 972 006c 0910A0E1 		mov	r1, r9
 973 0070 0400A0E1 		mov	r0, r4
 974 0074 FEFFFFEB 		bl	prvWriteMessageToBuffer
 975              	.LVL123:
 586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 976              		.loc 1 586 0
 977 0078 005050E2 		subs	r5, r0, #0
 978 007c 1000000A 		beq	.L107
 591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 979              		.loc 1 591 0
 980 0080 0400A0E1 		mov	r0, r4
 981              	.LVL124:
 982 0084 FEFFFFEB 		bl	prvBytesInBuffer
 983              	.LVL125:
 984 0088 0C3094E5 		ldr	r3, [r4, #12]
 985 008c 030050E1 		cmp	r0, r3
 986 0090 0B00003A 		bcc	.L107
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 987              		.loc 1 593 0
 988 0094 FEFFFFEB 		bl	vTaskSuspendAll
 989              	.LVL126:
 990 0098 103094E5 		ldr	r3, [r4, #16]
 991 009c 000053E3 		cmp	r3, #0
 992 00a0 0600000A 		beq	.L120
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 993              		.loc 1 593 0 is_stmt 0 discriminator 1
 994 00a4 0030A0E3 		mov	r3, #0
 995 00a8 100094E5 		ldr	r0, [r4, #16]
 996 00ac 0320A0E1 		mov	r2, r3
 997 00b0 0310A0E1 		mov	r1, r3
 998 00b4 FEFFFFEB 		bl	xTaskGenericNotify
 999              	.LVL127:
 1000 00b8 0030A0E3 		mov	r3, #0
 1001 00bc 103084E5 		str	r3, [r4, #16]
 1002              	.L120:
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1003              		.loc 1 593 0 discriminator 3
 1004 00c0 FEFFFFEB 		bl	xTaskResumeAll
 1005              	.LVL128:
 1006              	.L107:
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1007              		.loc 1 607 0 is_stmt 1
 1008 00c4 0500A0E1 		mov	r0, r5
 1009 00c8 1CD08DE2 		add	sp, sp, #28
 1010              		.cfi_remember_state
 1011              		.cfi_def_cfa_offset 28
 1012              		@ sp needed
 1013 00cc F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1014              	.LVL129:
 1015              	.L121:
 1016              		.cfi_restore_state
 1017 00d0 0280A0E1 		mov	r8, r2
 1018 00d4 DBFFFFEA 		b	.L110
 1019              	.LVL130:
 1020              	.L111:
 537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1021              		.loc 1 537 0
 1022 00d8 10008DE2 		add	r0, sp, #16
 1023              	.LVL131:
 1024 00dc FEFFFFEB 		bl	vTaskSetTimeOutState
 1025              	.LVL132:
 1026              	.L114:
 543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 1027              		.loc 1 543 0
 1028 00e0 FEFFFFEB 		bl	vPortEnterCritical
 1029              	.LVL133:
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1030              		.loc 1 545 0
 1031 00e4 0400A0E1 		mov	r0, r4
 1032 00e8 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 1033              	.LVL134:
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				{
 1034              		.loc 1 547 0
 1035 00ec 000058E1 		cmp	r8, r0
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1036              		.loc 1 545 0
 1037 00f0 0070A0E1 		mov	r7, r0
 1038              	.LVL135:
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				{
 1039              		.loc 1 547 0
 1040 00f4 1500009A 		bls	.L113
 550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1041              		.loc 1 550 0
 1042 00f8 0000A0E3 		mov	r0, #0
 1043              	.LVL136:
 1044 00fc FEFFFFEB 		bl	xTaskNotifyStateClear
 1045              	.LVL137:
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1046              		.loc 1 553 0
 1047 0100 145094E5 		ldr	r5, [r4, #20]
 1048 0104 000055E3 		cmp	r5, #0
 1049 0108 C1FFFF1A 		bne	.L109
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				}
 1050              		.loc 1 554 0
 1051 010c FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 1052              	.LVL138:
 1053 0110 140084E5 		str	r0, [r4, #20]
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1054              		.loc 1 562 0
 1055 0114 FEFFFFEB 		bl	vPortExitCritical
 1056              	.LVL139:
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 1057              		.loc 1 565 0
 1058 0118 0C309DE5 		ldr	r3, [sp, #12]
 1059 011c 0520A0E1 		mov	r2, r5
 1060 0120 0510A0E1 		mov	r1, r5
 1061 0124 0500A0E1 		mov	r0, r5
 1062 0128 FEFFFFEB 		bl	xTaskNotifyWait
 1063              	.LVL140:
 566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1064              		.loc 1 566 0
 1065 012c 145084E5 		str	r5, [r4, #20]
 568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1066              		.loc 1 568 0
 1067 0130 0C108DE2 		add	r1, sp, #12
 1068 0134 10008DE2 		add	r0, sp, #16
 1069 0138 FEFFFFEB 		bl	xTaskCheckForTimeOut
 1070              	.LVL141:
 1071 013c 000050E3 		cmp	r0, #0
 1072 0140 E6FFFF0A 		beq	.L114
 1073              	.L115:
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1074              		.loc 1 575 0
 1075 0144 000057E3 		cmp	r7, #0
 1076 0148 C4FFFF1A 		bne	.L112
 1077 014c C0FFFFEA 		b	.L116
 1078              	.LVL142:
 1079              	.L113:
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 					break;
 1080              		.loc 1 558 0
 1081 0150 FEFFFFEB 		bl	vPortExitCritical
 1082              	.LVL143:
 559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				}
 1083              		.loc 1 559 0
 1084 0154 FAFFFFEA 		b	.L115
 1085              	.L135:
 1086              		.align	2
 1087              	.L134:
 1088 0158 28000000 		.word	Unity+40
 1089              		.cfi_endproc
 1090              	.LFE7:
 1092              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1093              		.align	2
 1094              		.global	xStreamBufferSendFromISR
 1095              		.syntax unified
 1096              		.arm
 1097              		.fpu neon
 1099              	xStreamBufferSendFromISR:
 1100              	.LFB8:
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1101              		.loc 1 614 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              	.LVL144:
 1106 0000 F3412DE9 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 1107              		.cfi_def_cfa_offset 32
 1108              		.cfi_offset 4, -24
 1109              		.cfi_offset 5, -20
 1110              		.cfi_offset 6, -16
 1111              		.cfi_offset 7, -12
 1112              		.cfi_offset 8, -8
 1113              		.cfi_offset 14, -4
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1114              		.loc 1 619 0
 1115 0004 008051E2 		subs	r8, r1, #0
 1116 0008 0200001A 		bne	.L137
 1117              	.L138:
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1118              		.loc 1 619 0 is_stmt 0 discriminator 1
 1119 000c 0110A0E3 		mov	r1, #1
 1120              	.LVL145:
 1121 0010 A4009FE5 		ldr	r0, .L152
 1122              	.LVL146:
 1123 0014 FEFFFFEB 		bl	longjmp
 1124              	.LVL147:
 1125              	.L137:
 620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1126              		.loc 1 620 0 is_stmt 1
 1127 0018 000050E3 		cmp	r0, #0
 1128 001c 0040A0E1 		mov	r4, r0
 1129 0020 F9FFFF0A 		beq	.L138
 1130 0024 0370A0E1 		mov	r7, r3
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1131              		.loc 1 626 0
 1132 0028 1C30D0E5 		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1133              	.LVL148:
 1134 002c 0250A0E1 		mov	r5, r2
 1135 0030 010013E3 		tst	r3, #1
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1136              		.loc 1 628 0
 1137 0034 04608212 		addne	r6, r2, #4
 1138              	.LVL149:
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1139              		.loc 1 617 0
 1140 0038 0260A001 		moveq	r6, r2
 1141              	.LVL150:
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1142              		.loc 1 635 0
 1143 003c FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 1144              	.LVL151:
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1145              		.loc 1 636 0
 1146 0040 0520A0E1 		mov	r2, r5
 1147 0044 0030A0E1 		mov	r3, r0
 1148 0048 00608DE5 		str	r6, [sp]
 1149 004c 0810A0E1 		mov	r1, r8
 1150 0050 0400A0E1 		mov	r0, r4
 1151              	.LVL152:
 1152 0054 FEFFFFEB 		bl	prvWriteMessageToBuffer
 1153              	.LVL153:
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1154              		.loc 1 638 0
 1155 0058 005050E2 		subs	r5, r0, #0
 1156              	.LVL154:
 1157 005c 1300000A 		beq	.L136
 641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1158              		.loc 1 641 0
 1159 0060 0400A0E1 		mov	r0, r4
 1160              	.LVL155:
 1161 0064 FEFFFFEB 		bl	prvBytesInBuffer
 1162              	.LVL156:
 1163 0068 0C3094E5 		ldr	r3, [r4, #12]
 1164 006c 030050E1 		cmp	r0, r3
 1165 0070 0E00003A 		bcc	.L136
 1166              	.LBB15:
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1167              		.loc 1 643 0
 1168 0074 FEFFFFEB 		bl	ulPortSetInterruptMask
 1169              	.LVL157:
 1170 0078 103094E5 		ldr	r3, [r4, #16]
 1171 007c 0060A0E1 		mov	r6, r0
 1172              	.LVL158:
 1173 0080 000053E3 		cmp	r3, #0
 1174 0084 0700000A 		beq	.L143
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1175              		.loc 1 643 0 is_stmt 0 discriminator 1
 1176 0088 0030A0E3 		mov	r3, #0
 1177 008c 100094E5 		ldr	r0, [r4, #16]
 1178              	.LVL159:
 1179 0090 0320A0E1 		mov	r2, r3
 1180 0094 0310A0E1 		mov	r1, r3
 1181 0098 00708DE5 		str	r7, [sp]
 1182 009c FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1183              	.LVL160:
 1184 00a0 0030A0E3 		mov	r3, #0
 1185 00a4 103084E5 		str	r3, [r4, #16]
 1186              	.L143:
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1187              		.loc 1 643 0 discriminator 3
 1188 00a8 0600A0E1 		mov	r0, r6
 1189 00ac FEFFFFEB 		bl	vPortClearInterruptMask
 1190              	.LVL161:
 1191              	.L136:
 1192              	.LBE15:
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1193              		.loc 1 658 0 is_stmt 1
 1194 00b0 0500A0E1 		mov	r0, r5
 1195 00b4 08D08DE2 		add	sp, sp, #8
 1196              		.cfi_def_cfa_offset 24
 1197              		@ sp needed
 1198 00b8 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1199              	.LVL162:
 1200              	.L153:
 1201              		.align	2
 1202              	.L152:
 1203 00bc 28000000 		.word	Unity+40
 1204              		.cfi_endproc
 1205              	.LFE8:
 1207              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1208              		.align	2
 1209              		.global	xStreamBufferReceive
 1210              		.syntax unified
 1211              		.arm
 1212              		.fpu neon
 1214              	xStreamBufferReceive:
 1215              	.LFB10:
 717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1216              		.loc 1 717 0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 8
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              	.LVL163:
 1221 0000 F7432DE9 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 1222              		.cfi_def_cfa_offset 40
 1223              		.cfi_offset 4, -28
 1224              		.cfi_offset 5, -24
 1225              		.cfi_offset 6, -20
 1226              		.cfi_offset 7, -16
 1227              		.cfi_offset 8, -12
 1228              		.cfi_offset 9, -8
 1229              		.cfi_offset 14, -4
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1230              		.loc 1 721 0
 1231 0004 009051E2 		subs	r9, r1, #0
 1232 0008 0200001A 		bne	.L155
 1233              	.LVL164:
 1234              	.L156:
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1235              		.loc 1 721 0 is_stmt 0 discriminator 1
 1236 000c 0110A0E3 		mov	r1, #1
 1237 0010 34019FE5 		ldr	r0, .L181
 1238 0014 FEFFFFEB 		bl	longjmp
 1239              	.LVL165:
 1240              	.L155:
 722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1241              		.loc 1 722 0 is_stmt 1
 1242 0018 000050E3 		cmp	r0, #0
 1243 001c 0040A0E1 		mov	r4, r0
 1244 0020 F9FFFF0A 		beq	.L156
 1245 0024 0380A0E1 		mov	r8, r3
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1246              		.loc 1 729 0
 1247 0028 1C30D0E5 		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1248              	.LVL166:
 1249 002c 0270A0E1 		mov	r7, r2
 735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1250              		.loc 1 735 0
 1251 0030 010013E3 		tst	r3, #1
 1252 0034 0460A013 		movne	r6, #4
 1253 0038 0060A003 		moveq	r6, #0
 1254              	.LVL167:
 738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1255              		.loc 1 738 0
 1256 003c 000058E3 		cmp	r8, #0
 1257 0040 1700000A 		beq	.L158
 742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1258              		.loc 1 742 0
 1259 0044 FEFFFFEB 		bl	vPortEnterCritical
 1260              	.LVL168:
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1261              		.loc 1 744 0
 1262 0048 0400A0E1 		mov	r0, r4
 1263 004c FEFFFFEB 		bl	prvBytesInBuffer
 1264              	.LVL169:
 751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 1265              		.loc 1 751 0
 1266 0050 000056E1 		cmp	r6, r0
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1267              		.loc 1 744 0
 1268 0054 0050A0E1 		mov	r5, r0
 1269              	.LVL170:
 751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			{
 1270              		.loc 1 751 0
 1271 0058 0600003A 		bcc	.L159
 754:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1272              		.loc 1 754 0
 1273 005c 0000A0E3 		mov	r0, #0
 1274              	.LVL171:
 1275 0060 FEFFFFEB 		bl	xTaskNotifyStateClear
 1276              	.LVL172:
 757:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1277              		.loc 1 757 0
 1278 0064 103094E5 		ldr	r3, [r4, #16]
 1279 0068 000053E3 		cmp	r3, #0
 1280 006c E6FFFF1A 		bne	.L156
 758:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			}
 1281              		.loc 1 758 0
 1282 0070 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 1283              	.LVL173:
 1284 0074 100084E5 		str	r0, [r4, #16]
 1285              	.L159:
 765:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1286              		.loc 1 765 0
 1287 0078 FEFFFFEB 		bl	vPortExitCritical
 1288              	.LVL174:
 767:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1289              		.loc 1 767 0
 1290 007c 050056E1 		cmp	r6, r5
 1291 0080 0F00003A 		bcc	.L160
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1292              		.loc 1 771 0
 1293 0084 0020A0E3 		mov	r2, #0
 1294 0088 0830A0E1 		mov	r3, r8
 1295 008c 0210A0E1 		mov	r1, r2
 1296 0090 0200A0E1 		mov	r0, r2
 1297 0094 FEFFFFEB 		bl	xTaskNotifyWait
 1298              	.LVL175:
 775:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1299              		.loc 1 775 0
 1300 0098 0400A0E1 		mov	r0, r4
 772:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1301              		.loc 1 772 0
 1302 009c 0030A0E3 		mov	r3, #0
 1303 00a0 103084E5 		str	r3, [r4, #16]
 1304              	.LVL176:
 1305              	.L158:
 784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1306              		.loc 1 784 0
 1307 00a4 FEFFFFEB 		bl	prvBytesInBuffer
 1308              	.LVL177:
 792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1309              		.loc 1 792 0
 1310 00a8 060050E1 		cmp	r0, r6
 784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1311              		.loc 1 784 0
 1312 00ac 0050A0E1 		mov	r5, r0
 1313              	.LVL178:
 792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1314              		.loc 1 792 0
 1315 00b0 0300008A 		bhi	.L160
 1316              	.LVL179:
 1317              	.L164:
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1318              		.loc 1 719 0
 1319 00b4 0050A0E3 		mov	r5, #0
 1320              	.L154:
 814:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1321              		.loc 1 814 0
 1322 00b8 0500A0E1 		mov	r0, r5
 1323 00bc 0CD08DE2 		add	sp, sp, #12
 1324              		.cfi_remember_state
 1325              		.cfi_def_cfa_offset 28
 1326              		@ sp needed
 1327 00c0 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1328              	.LVL180:
 1329              	.L160:
 1330              		.cfi_restore_state
 1331              	.LBB18:
 1332              	.LBB19:
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1333              		.loc 1 927 0
 1334 00c4 000056E3 		cmp	r6, #0
 1335 00c8 0B00000A 		beq	.L163
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 1336              		.loc 1 934 0
 1337 00cc 0530A0E1 		mov	r3, r5
 1338 00d0 0620A0E1 		mov	r2, r6
 1339 00d4 04108DE2 		add	r1, sp, #4
 1340 00d8 0400A0E1 		mov	r0, r4
 933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 1341              		.loc 1 933 0
 1342 00dc 008094E5 		ldr	r8, [r4]
 1343              	.LVL181:
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1344              		.loc 1 939 0
 1345 00e0 065045E0 		sub	r5, r5, r6
 1346              	.LVL182:
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 1347              		.loc 1 934 0
 1348 00e4 FEFFFFEB 		bl	prvReadBytesFromBuffer
 1349              	.LVL183:
 935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1350              		.loc 1 935 0
 1351 00e8 04309DE5 		ldr	r3, [sp, #4]
 1352              	.LVL184:
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1353              		.loc 1 943 0
 1354 00ec 030057E1 		cmp	r7, r3
 949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1355              		.loc 1 949 0
 1356 00f0 0070A033 		movcc	r7, #0
 1357              	.LVL185:
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1358              		.loc 1 943 0
 1359 00f4 0370A021 		movcs	r7, r3
 948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xNextMessageLength = 0;
 1360              		.loc 1 948 0
 1361 00f8 00808435 		strcc	r8, [r4]
 1362              	.LVL186:
 1363              	.L163:
 964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1364              		.loc 1 964 0
 1365 00fc 0530A0E1 		mov	r3, r5
 1366 0100 0720A0E1 		mov	r2, r7
 1367 0104 0910A0E1 		mov	r1, r9
 1368 0108 0400A0E1 		mov	r0, r4
 1369 010c FEFFFFEB 		bl	prvReadBytesFromBuffer
 1370              	.LVL187:
 1371              	.LBE19:
 1372              	.LBE18:
 797:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1373              		.loc 1 797 0
 1374 0110 005050E2 		subs	r5, r0, #0
 1375 0114 E6FFFF0A 		beq	.L164
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1376              		.loc 1 800 0
 1377 0118 FEFFFFEB 		bl	vTaskSuspendAll
 1378              	.LVL188:
 1379 011c 143094E5 		ldr	r3, [r4, #20]
 1380 0120 000053E3 		cmp	r3, #0
 1381 0124 0600000A 		beq	.L165
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1382              		.loc 1 800 0 is_stmt 0 discriminator 1
 1383 0128 0030A0E3 		mov	r3, #0
 1384 012c 140094E5 		ldr	r0, [r4, #20]
 1385 0130 0320A0E1 		mov	r2, r3
 1386 0134 0310A0E1 		mov	r1, r3
 1387 0138 FEFFFFEB 		bl	xTaskGenericNotify
 1388              	.LVL189:
 1389 013c 0030A0E3 		mov	r3, #0
 1390 0140 143084E5 		str	r3, [r4, #20]
 1391              	.L165:
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1392              		.loc 1 800 0 discriminator 3
 1393 0144 FEFFFFEB 		bl	xTaskResumeAll
 1394              	.LVL190:
 813:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 1395              		.loc 1 813 0 is_stmt 1 discriminator 3
 1396 0148 DAFFFFEA 		b	.L154
 1397              	.L182:
 1398              		.align	2
 1399              	.L181:
 1400 014c 28000000 		.word	Unity+40
 1401              		.cfi_endproc
 1402              	.LFE10:
 1404              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1405              		.align	2
 1406              		.global	xStreamBufferNextMessageLengthBytes
 1407              		.syntax unified
 1408              		.arm
 1409              		.fpu neon
 1411              	xStreamBufferNextMessageLengthBytes:
 1412              	.LFB11:
 818:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1413              		.loc 1 818 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 8
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              	.LVL191:
 1418 0000 37402DE9 		push	{r0, r1, r2, r4, r5, lr}
 1419              		.cfi_def_cfa_offset 24
 1420              		.cfi_offset 4, -12
 1421              		.cfi_offset 5, -8
 1422              		.cfi_offset 14, -4
 823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1423              		.loc 1 823 0
 1424 0004 004050E2 		subs	r4, r0, #0
 1425 0008 0200001A 		bne	.L184
 1426              	.LVL192:
 1427              	.L188:
 823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1428              		.loc 1 823 0 is_stmt 0 discriminator 1
 1429 000c 0110A0E3 		mov	r1, #1
 1430 0010 50009FE5 		ldr	r0, .L193
 1431 0014 FEFFFFEB 		bl	longjmp
 1432              	.LVL193:
 1433              	.L184:
 826:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1434              		.loc 1 826 0 is_stmt 1
 1435 0018 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 1436 001c 010013E3 		tst	r3, #1
 1437 0020 0E00000A 		beq	.L185
 828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1438              		.loc 1 828 0
 1439 0024 FEFFFFEB 		bl	prvBytesInBuffer
 1440              	.LVL194:
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1441              		.loc 1 829 0
 1442 0028 040050E3 		cmp	r0, #4
 828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1443              		.loc 1 828 0
 1444 002c 0030A0E1 		mov	r3, r0
 1445              	.LVL195:
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1446              		.loc 1 829 0
 1447 0030 0800009A 		bls	.L186
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1448              		.loc 1 838 0
 1449 0034 0420A0E3 		mov	r2, #4
 1450 0038 0400A0E1 		mov	r0, r4
 1451              	.LVL196:
 1452 003c 02108DE0 		add	r1, sp, r2
 837:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 1453              		.loc 1 837 0
 1454 0040 005094E5 		ldr	r5, [r4]
 1455              	.LVL197:
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1456              		.loc 1 838 0
 1457 0044 FEFFFFEB 		bl	prvReadBytesFromBuffer
 1458              	.LVL198:
 839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 1459              		.loc 1 839 0
 1460 0048 04009DE5 		ldr	r0, [sp, #4]
 1461              	.LVL199:
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1462              		.loc 1 840 0
 1463 004c 005084E5 		str	r5, [r4]
 1464              	.LVL200:
 1465              	.L183:
 858:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1466              		.loc 1 858 0
 1467 0050 0CD08DE2 		add	sp, sp, #12
 1468              		.cfi_remember_state
 1469              		.cfi_def_cfa_offset 12
 1470              		@ sp needed
 1471 0054 3080BDE8 		pop	{r4, r5, pc}
 1472              	.LVL201:
 1473              	.L186:
 1474              		.cfi_restore_state
 848:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = 0;
 1475              		.loc 1 848 0
 1476 0058 000050E3 		cmp	r0, #0
 1477 005c EAFFFF1A 		bne	.L188
 1478              	.LVL202:
 1479              	.L185:
 854:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1480              		.loc 1 854 0
 1481 0060 0000A0E3 		mov	r0, #0
 1482              	.LVL203:
 857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 1483              		.loc 1 857 0
 1484 0064 F9FFFFEA 		b	.L183
 1485              	.L194:
 1486              		.align	2
 1487              	.L193:
 1488 0068 28000000 		.word	Unity+40
 1489              		.cfi_endproc
 1490              	.LFE11:
 1492              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1493              		.align	2
 1494              		.global	xStreamBufferReceiveFromISR
 1495              		.syntax unified
 1496              		.arm
 1497              		.fpu neon
 1499              	xStreamBufferReceiveFromISR:
 1500              	.LFB12:
 865:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1501              		.loc 1 865 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 8
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505              	.LVL204:
 1506 0000 FF472DE9 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 1507              		.cfi_def_cfa_offset 48
 1508              		.cfi_offset 4, -32
 1509              		.cfi_offset 5, -28
 1510              		.cfi_offset 6, -24
 1511              		.cfi_offset 7, -20
 1512              		.cfi_offset 8, -16
 1513              		.cfi_offset 9, -12
 1514              		.cfi_offset 10, -8
 1515              		.cfi_offset 14, -4
 869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1516              		.loc 1 869 0
 1517 0004 009051E2 		subs	r9, r1, #0
 1518 0008 0200001A 		bne	.L196
 1519              	.L197:
 869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1520              		.loc 1 869 0 is_stmt 0 discriminator 1
 1521 000c 0110A0E3 		mov	r1, #1
 1522              	.LVL205:
 1523 0010 D8009FE5 		ldr	r0, .L219
 1524              	.LVL206:
 1525 0014 FEFFFFEB 		bl	longjmp
 1526              	.LVL207:
 1527              	.L196:
 870:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1528              		.loc 1 870 0 is_stmt 1
 1529 0018 000050E3 		cmp	r0, #0
 1530 001c 0040A0E1 		mov	r4, r0
 1531 0020 F9FFFF0A 		beq	.L197
 1532 0024 0380A0E1 		mov	r8, r3
 877:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1533              		.loc 1 877 0
 1534 0028 1C30D0E5 		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1535              	.LVL208:
 1536 002c 0260A0E1 		mov	r6, r2
 883:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1537              		.loc 1 883 0
 1538 0030 010013E3 		tst	r3, #1
 1539 0034 0470A013 		movne	r7, #4
 1540 0038 0070A003 		moveq	r7, #0
 1541              	.LVL209:
 886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1542              		.loc 1 886 0
 1543 003c FEFFFFEB 		bl	prvBytesInBuffer
 1544              	.LVL210:
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1545              		.loc 1 893 0
 1546 0040 000057E1 		cmp	r7, r0
 886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1547              		.loc 1 886 0
 1548 0044 0050A0E1 		mov	r5, r0
 1549              	.LVL211:
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1550              		.loc 1 893 0
 1551 0048 0300003A 		bcc	.L199
 1552              	.LVL212:
 1553              	.L202:
 867:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1554              		.loc 1 867 0
 1555 004c 0050A0E3 		mov	r5, #0
 1556              	.L195:
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1557              		.loc 1 915 0
 1558 0050 0500A0E1 		mov	r0, r5
 1559 0054 10D08DE2 		add	sp, sp, #16
 1560              		.cfi_remember_state
 1561              		.cfi_def_cfa_offset 32
 1562              		@ sp needed
 1563 0058 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1564              	.LVL213:
 1565              	.L199:
 1566              		.cfi_restore_state
 1567              	.LBB23:
 1568              	.LBB24:
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1569              		.loc 1 927 0
 1570 005c 000057E3 		cmp	r7, #0
 1571 0060 0B00000A 		beq	.L201
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 1572              		.loc 1 934 0
 1573 0064 0030A0E1 		mov	r3, r0
 1574 0068 0720A0E1 		mov	r2, r7
 1575 006c 0C108DE2 		add	r1, sp, #12
 1576              	.LVL214:
 1577 0070 0400A0E1 		mov	r0, r4
 1578              	.LVL215:
 933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 1579              		.loc 1 933 0
 1580 0074 00A094E5 		ldr	r10, [r4]
 1581              	.LVL216:
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1582              		.loc 1 939 0
 1583 0078 075045E0 		sub	r5, r5, r7
 1584              	.LVL217:
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 1585              		.loc 1 934 0
 1586 007c FEFFFFEB 		bl	prvReadBytesFromBuffer
 1587              	.LVL218:
 935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1588              		.loc 1 935 0
 1589 0080 0C309DE5 		ldr	r3, [sp, #12]
 1590              	.LVL219:
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1591              		.loc 1 943 0
 1592 0084 030056E1 		cmp	r6, r3
 949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1593              		.loc 1 949 0
 1594 0088 0060A033 		movcc	r6, #0
 1595              	.LVL220:
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1596              		.loc 1 943 0
 1597 008c 0360A021 		movcs	r6, r3
 948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xNextMessageLength = 0;
 1598              		.loc 1 948 0
 1599 0090 00A08435 		strcc	r10, [r4]
 1600              	.LVL221:
 1601              	.L201:
 964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1602              		.loc 1 964 0
 1603 0094 0530A0E1 		mov	r3, r5
 1604 0098 0620A0E1 		mov	r2, r6
 1605 009c 0910A0E1 		mov	r1, r9
 1606 00a0 0400A0E1 		mov	r0, r4
 1607 00a4 FEFFFFEB 		bl	prvReadBytesFromBuffer
 1608              	.LVL222:
 1609              	.LBE24:
 1610              	.LBE23:
 898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1611              		.loc 1 898 0
 1612 00a8 005050E2 		subs	r5, r0, #0
 1613 00ac E6FFFF0A 		beq	.L202
 1614              	.LBB25:
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1615              		.loc 1 900 0
 1616 00b0 FEFFFFEB 		bl	ulPortSetInterruptMask
 1617              	.LVL223:
 1618 00b4 143094E5 		ldr	r3, [r4, #20]
 1619 00b8 0060A0E1 		mov	r6, r0
 1620              	.LVL224:
 1621 00bc 000053E3 		cmp	r3, #0
 1622 00c0 0700000A 		beq	.L203
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1623              		.loc 1 900 0 is_stmt 0 discriminator 1
 1624 00c4 0030A0E3 		mov	r3, #0
 1625 00c8 140094E5 		ldr	r0, [r4, #20]
 1626              	.LVL225:
 1627 00cc 0320A0E1 		mov	r2, r3
 1628 00d0 0310A0E1 		mov	r1, r3
 1629 00d4 00808DE5 		str	r8, [sp]
 1630 00d8 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1631              	.LVL226:
 1632 00dc 0030A0E3 		mov	r3, #0
 1633 00e0 143084E5 		str	r3, [r4, #20]
 1634              	.L203:
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1635              		.loc 1 900 0 discriminator 3
 1636 00e4 0600A0E1 		mov	r0, r6
 1637 00e8 FEFFFFEB 		bl	vPortClearInterruptMask
 1638              	.LVL227:
 1639              	.LBE25:
 914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
 1640              		.loc 1 914 0 is_stmt 1 discriminator 3
 1641 00ec D7FFFFEA 		b	.L195
 1642              	.L220:
 1643              		.align	2
 1644              	.L219:
 1645 00f0 28000000 		.word	Unity+40
 1646              		.cfi_endproc
 1647              	.LFE12:
 1649              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 1650              		.align	2
 1651              		.global	xStreamBufferIsEmpty
 1652              		.syntax unified
 1653              		.arm
 1654              		.fpu neon
 1656              	xStreamBufferIsEmpty:
 1657              	.LFB14:
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1658              		.loc 1 971 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              	.LVL228:
 976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1663              		.loc 1 976 0
 1664 0000 003050E2 		subs	r3, r0, #0
 1665 0004 0300001A 		bne	.L222
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1666              		.loc 1 971 0 discriminator 1
 1667 0008 10402DE9 		push	{r4, lr}
 1668              		.cfi_def_cfa_offset 8
 1669              		.cfi_offset 4, -8
 1670              		.cfi_offset 14, -4
 976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1671              		.loc 1 976 0 discriminator 1
 1672 000c 0110A0E3 		mov	r1, #1
 1673 0010 18009FE5 		ldr	r0, .L226
 1674              	.LVL229:
 1675 0014 FEFFFFEB 		bl	longjmp
 1676              	.LVL230:
 1677              	.L222:
 1678              		.cfi_def_cfa_offset 0
 1679              		.cfi_restore 4
 1680              		.cfi_restore 14
 979:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 1681              		.loc 1 979 0
 1682 0018 000093E5 		ldr	r0, [r3]
 1683              	.LVL231:
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1684              		.loc 1 980 0
 1685 001c 043093E5 		ldr	r3, [r3, #4]
 1686              	.LVL232:
 990:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1687              		.loc 1 990 0
 1688 0020 030040E0 		sub	r0, r0, r3
 1689              	.LVL233:
 1690 0024 100F6FE1 		clz	r0, r0
 1691 0028 A002A0E1 		lsr	r0, r0, #5
 1692 002c 1EFF2FE1 		bx	lr
 1693              	.L227:
 1694              		.align	2
 1695              	.L226:
 1696 0030 28000000 		.word	Unity+40
 1697              		.cfi_endproc
 1698              	.LFE14:
 1700              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 1701              		.align	2
 1702              		.global	xStreamBufferIsFull
 1703              		.syntax unified
 1704              		.arm
 1705              		.fpu neon
 1707              	xStreamBufferIsFull:
 1708              	.LFB15:
 994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
 1709              		.loc 1 994 0
 1710              		.cfi_startproc
 1711              		@ args = 0, pretend = 0, frame = 0
 1712              		@ frame_needed = 0, uses_anonymous_args = 0
 1713              	.LVL234:
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1714              		.loc 1 999 0
 1715 0000 003050E2 		subs	r3, r0, #0
 994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** BaseType_t xReturn;
 1716              		.loc 1 994 0
 1717 0004 10402DE9 		push	{r4, lr}
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 4, -8
 1720              		.cfi_offset 14, -4
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1721              		.loc 1 999 0
 1722 0008 0200001A 		bne	.L229
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1723              		.loc 1 999 0 is_stmt 0 discriminator 1
 1724 000c 0110A0E3 		mov	r1, #1
 1725 0010 24009FE5 		ldr	r0, .L233
 1726              	.LVL235:
 1727 0014 FEFFFFEB 		bl	longjmp
 1728              	.LVL236:
 1729              	.L229:
1005:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1730              		.loc 1 1005 0 is_stmt 1
 1731 0018 1C30D3E5 		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1732 001c 010013E3 		tst	r3, #1
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1733              		.loc 1 1011 0
 1734 0020 0440A013 		movne	r4, #4
 1735 0024 0040A003 		moveq	r4, #0
 1736              	.LVL237:
1015:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1737              		.loc 1 1015 0
 1738 0028 FEFFFFEB 		bl	xStreamBufferSpacesAvailable
 1739              	.LVL238:
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1740              		.loc 1 1025 0
 1741 002c 000054E1 		cmp	r4, r0
 1742 0030 0000A033 		movcc	r0, #0
 1743              	.LVL239:
 1744 0034 0100A023 		movcs	r0, #1
 1745 0038 1080BDE8 		pop	{r4, pc}
 1746              	.L234:
 1747              		.align	2
 1748              	.L233:
 1749 003c 28000000 		.word	Unity+40
 1750              		.cfi_endproc
 1751              	.LFE15:
 1753              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1754              		.align	2
 1755              		.global	xStreamBufferSendCompletedFromISR
 1756              		.syntax unified
 1757              		.arm
 1758              		.fpu neon
 1760              	xStreamBufferSendCompletedFromISR:
 1761              	.LFB16:
1029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1762              		.loc 1 1029 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              	.LVL240:
 1767 0000 F7402DE9 		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1768              		.cfi_def_cfa_offset 32
 1769              		.cfi_offset 4, -20
 1770              		.cfi_offset 5, -16
 1771              		.cfi_offset 6, -12
 1772              		.cfi_offset 7, -8
 1773              		.cfi_offset 14, -4
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1774              		.loc 1 1034 0
 1775 0004 005050E2 		subs	r5, r0, #0
 1776 0008 0200001A 		bne	.L236
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1777              		.loc 1 1034 0 is_stmt 0 discriminator 1
 1778 000c 0110A0E3 		mov	r1, #1
 1779              	.LVL241:
 1780 0010 50009FE5 		ldr	r0, .L240
 1781              	.LVL242:
 1782 0014 FEFFFFEB 		bl	longjmp
 1783              	.LVL243:
 1784              	.L236:
 1785 0018 0170A0E1 		mov	r7, r1
1036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1786              		.loc 1 1036 0 is_stmt 1
 1787 001c FEFFFFEB 		bl	ulPortSetInterruptMask
 1788              	.LVL244:
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1789              		.loc 1 1038 0
 1790 0020 104095E5 		ldr	r4, [r5, #16]
1036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1791              		.loc 1 1036 0
 1792 0024 0060A0E1 		mov	r6, r0
 1793              	.LVL245:
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1794              		.loc 1 1038 0
 1795 0028 000054E3 		cmp	r4, #0
 1796 002c 0800000A 		beq	.L237
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 ( uint32_t ) 0,
 1797              		.loc 1 1040 0
 1798 0030 0030A0E3 		mov	r3, #0
 1799 0034 100095E5 		ldr	r0, [r5, #16]
 1800              	.LVL246:
 1801 0038 0320A0E1 		mov	r2, r3
 1802 003c 0310A0E1 		mov	r1, r3
 1803 0040 00708DE5 		str	r7, [sp]
1045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1804              		.loc 1 1045 0
 1805 0044 0140A0E3 		mov	r4, #1
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 ( uint32_t ) 0,
 1806              		.loc 1 1040 0
 1807 0048 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1808              	.LVL247:
1044:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = pdTRUE;
 1809              		.loc 1 1044 0
 1810 004c 0030A0E3 		mov	r3, #0
 1811 0050 103085E5 		str	r3, [r5, #16]
 1812              	.LVL248:
 1813              	.L237:
1052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1814              		.loc 1 1052 0
 1815 0054 0600A0E1 		mov	r0, r6
 1816 0058 FEFFFFEB 		bl	vPortClearInterruptMask
 1817              	.LVL249:
1055:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1818              		.loc 1 1055 0
 1819 005c 0400A0E1 		mov	r0, r4
 1820 0060 0CD08DE2 		add	sp, sp, #12
 1821              		.cfi_def_cfa_offset 20
 1822              		@ sp needed
 1823 0064 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1824              	.LVL250:
 1825              	.L241:
 1826              		.align	2
 1827              	.L240:
 1828 0068 28000000 		.word	Unity+40
 1829              		.cfi_endproc
 1830              	.LFE16:
 1832              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 1833              		.align	2
 1834              		.global	xStreamBufferReceiveCompletedFromISR
 1835              		.syntax unified
 1836              		.arm
 1837              		.fpu neon
 1839              	xStreamBufferReceiveCompletedFromISR:
 1840              	.LFB17:
1059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1841              		.loc 1 1059 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              	.LVL251:
 1846 0000 F7402DE9 		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1847              		.cfi_def_cfa_offset 32
 1848              		.cfi_offset 4, -20
 1849              		.cfi_offset 5, -16
 1850              		.cfi_offset 6, -12
 1851              		.cfi_offset 7, -8
 1852              		.cfi_offset 14, -4
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1853              		.loc 1 1064 0
 1854 0004 005050E2 		subs	r5, r0, #0
 1855 0008 0200001A 		bne	.L243
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1856              		.loc 1 1064 0 is_stmt 0 discriminator 1
 1857 000c 0110A0E3 		mov	r1, #1
 1858              	.LVL252:
 1859 0010 50009FE5 		ldr	r0, .L247
 1860              	.LVL253:
 1861 0014 FEFFFFEB 		bl	longjmp
 1862              	.LVL254:
 1863              	.L243:
 1864 0018 0170A0E1 		mov	r7, r1
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1865              		.loc 1 1066 0 is_stmt 1
 1866 001c FEFFFFEB 		bl	ulPortSetInterruptMask
 1867              	.LVL255:
1068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1868              		.loc 1 1068 0
 1869 0020 144095E5 		ldr	r4, [r5, #20]
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1870              		.loc 1 1066 0
 1871 0024 0060A0E1 		mov	r6, r0
 1872              	.LVL256:
1068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		{
 1873              		.loc 1 1068 0
 1874 0028 000054E3 		cmp	r4, #0
 1875 002c 0800000A 		beq	.L244
1070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 ( uint32_t ) 0,
 1876              		.loc 1 1070 0
 1877 0030 0030A0E3 		mov	r3, #0
 1878 0034 140095E5 		ldr	r0, [r5, #20]
 1879              	.LVL257:
 1880 0038 0320A0E1 		mov	r2, r3
 1881 003c 0310A0E1 		mov	r1, r3
 1882 0040 00708DE5 		str	r7, [sp]
1075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		}
 1883              		.loc 1 1075 0
 1884 0044 0140A0E3 		mov	r4, #1
1070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 										 ( uint32_t ) 0,
 1885              		.loc 1 1070 0
 1886 0048 FEFFFFEB 		bl	xTaskGenericNotifyFromISR
 1887              	.LVL258:
1074:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 			xReturn = pdTRUE;
 1888              		.loc 1 1074 0
 1889 004c 0030A0E3 		mov	r3, #0
 1890 0050 143085E5 		str	r3, [r5, #20]
 1891              	.LVL259:
 1892              	.L244:
1082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
 1893              		.loc 1 1082 0
 1894 0054 0600A0E1 		mov	r0, r6
 1895 0058 FEFFFFEB 		bl	vPortClearInterruptMask
 1896              	.LVL260:
1085:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
 1897              		.loc 1 1085 0
 1898 005c 0400A0E1 		mov	r0, r4
 1899 0060 0CD08DE2 		add	sp, sp, #12
 1900              		.cfi_def_cfa_offset 20
 1901              		@ sp needed
 1902 0064 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1903              	.LVL261:
 1904              	.L248:
 1905              		.align	2
 1906              	.L247:
 1907 0068 28000000 		.word	Unity+40
 1908              		.cfi_endproc
 1909              	.LFE17:
 1911              		.section	.text.uxStreamBufferGetStreamBufferNumber,"ax",%progbits
 1912              		.align	2
 1913              		.global	uxStreamBufferGetStreamBufferNumber
 1914              		.syntax unified
 1915              		.arm
 1916              		.fpu neon
 1918              	uxStreamBufferGetStreamBufferNumber:
 1919              	.LFB22:
1233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** }
1234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	UBaseType_t uxStreamBufferGetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer )
1238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1920              		.loc 1 1238 0
 1921              		.cfi_startproc
 1922              		@ args = 0, pretend = 0, frame = 0
 1923              		@ frame_needed = 0, uses_anonymous_args = 0
 1924              		@ link register save eliminated.
 1925              	.LVL262:
1239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		return xStreamBuffer->uxStreamBufferNumber;
1240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1926              		.loc 1 1240 0
 1927 0000 200090E5 		ldr	r0, [r0, #32]
 1928              	.LVL263:
 1929 0004 1EFF2FE1 		bx	lr
 1930              		.cfi_endproc
 1931              	.LFE22:
 1933              		.section	.text.vStreamBufferSetStreamBufferNumber,"ax",%progbits
 1934              		.align	2
 1935              		.global	vStreamBufferSetStreamBufferNumber
 1936              		.syntax unified
 1937              		.arm
 1938              		.fpu neon
 1940              	vStreamBufferSetStreamBufferNumber:
 1941              	.LFB23:
1241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* configUSE_TRACE_FACILITY */
1243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	void vStreamBufferSetStreamBufferNumber( StreamBufferHandle_t xStreamBuffer, UBaseType_t uxStreamB
1248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1942              		.loc 1 1248 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946              		@ link register save eliminated.
 1947              	.LVL264:
1249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		xStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 1948              		.loc 1 1249 0
 1949 0000 201080E5 		str	r1, [r0, #32]
 1950 0004 1EFF2FE1 		bx	lr
 1951              		.cfi_endproc
 1952              	.LFE23:
 1954              		.section	.text.ucStreamBufferGetStreamBufferType,"ax",%progbits
 1955              		.align	2
 1956              		.global	ucStreamBufferGetStreamBufferType
 1957              		.syntax unified
 1958              		.arm
 1959              		.fpu neon
 1961              	ucStreamBufferGetStreamBufferType:
 1962              	.LFB24:
1250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
1251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #endif /* configUSE_TRACE_FACILITY */
1253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** /*-----------------------------------------------------------*/
1254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 
1257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	uint8_t ucStreamBufferGetStreamBufferType( StreamBufferHandle_t xStreamBuffer )
1258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	{
 1963              		.loc 1 1258 0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 0
 1966              		@ frame_needed = 0, uses_anonymous_args = 0
 1967              		@ link register save eliminated.
 1968              	.LVL265:
1259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 		return ( xStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER );
 1969              		.loc 1 1259 0
 1970 0000 1C00D0E5 		ldrb	r0, [r0, #28]	@ zero_extendqisi2
 1971              	.LVL266:
1260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\stream_buffer.c **** 	}
 1972              		.loc 1 1260 0
 1973 0004 010000E2 		and	r0, r0, #1
 1974 0008 1EFF2FE1 		bx	lr
 1975              		.cfi_endproc
 1976              	.LFE24:
 1978              		.text
 1979              	.Letext0:
 1980              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1981              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1982              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 1983              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1984              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1985              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1986              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1987              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1988              		.file 10 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 1989              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 1990              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/FreeRTOS.h"
 1991              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 1992              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/stream_buffer.h"
 1993              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1994              		.file 16 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/portable.h"
 1995              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 stream_buffer.c
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:17     .text.prvBytesInBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:22     .text.prvBytesInBuffer:00000000 prvBytesInBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:54     .text.prvWriteBytesToBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:59     .text.prvWriteBytesToBuffer:00000000 prvWriteBytesToBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:141    .text.prvWriteBytesToBuffer:00000090 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:146    .text.prvWriteMessageToBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:151    .text.prvWriteMessageToBuffer:00000000 prvWriteMessageToBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:223    .text.prvReadBytesFromBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:228    .text.prvReadBytesFromBuffer:00000000 prvReadBytesFromBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:324    .text.prvReadBytesFromBuffer:000000a8 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:329    .text.prvInitialiseNewStreamBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:334    .text.prvInitialiseNewStreamBuffer:00000000 prvInitialiseNewStreamBuffer
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:401    .text.prvInitialiseNewStreamBuffer:0000005c $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:406    .text.xStreamBufferGenericCreate:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:412    .text.xStreamBufferGenericCreate:00000000 xStreamBufferGenericCreate
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:495    .text.xStreamBufferGenericCreate:00000078 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:500    .text.xStreamBufferGenericCreateStatic:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:506    .text.xStreamBufferGenericCreateStatic:00000000 xStreamBufferGenericCreateStatic
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:592    .text.xStreamBufferGenericCreateStatic:0000008c $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:597    .text.vStreamBufferDelete:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:603    .text.vStreamBufferDelete:00000000 vStreamBufferDelete
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:644    .text.vStreamBufferDelete:00000034 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:649    .text.xStreamBufferReset:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:655    .text.xStreamBufferReset:00000000 xStreamBufferReset
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:726    .text.xStreamBufferReset:00000074 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:731    .text.xStreamBufferSetTriggerLevel:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:737    .text.xStreamBufferSetTriggerLevel:00000000 xStreamBufferSetTriggerLevel
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:785    .text.xStreamBufferSetTriggerLevel:00000038 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:790    .text.xStreamBufferSpacesAvailable:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:796    .text.xStreamBufferSpacesAvailable:00000000 xStreamBufferSpacesAvailable
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:851    .text.xStreamBufferSpacesAvailable:0000003c $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:856    .text.xStreamBufferBytesAvailable:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:862    .text.xStreamBufferBytesAvailable:00000000 xStreamBufferBytesAvailable
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:893    .text.xStreamBufferBytesAvailable:0000001c $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:898    .text.xStreamBufferSend:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:904    .text.xStreamBufferSend:00000000 xStreamBufferSend
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1088   .text.xStreamBufferSend:00000158 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1093   .text.xStreamBufferSendFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1099   .text.xStreamBufferSendFromISR:00000000 xStreamBufferSendFromISR
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1203   .text.xStreamBufferSendFromISR:000000bc $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1208   .text.xStreamBufferReceive:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1214   .text.xStreamBufferReceive:00000000 xStreamBufferReceive
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1400   .text.xStreamBufferReceive:0000014c $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1405   .text.xStreamBufferNextMessageLengthBytes:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1411   .text.xStreamBufferNextMessageLengthBytes:00000000 xStreamBufferNextMessageLengthBytes
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1488   .text.xStreamBufferNextMessageLengthBytes:00000068 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1493   .text.xStreamBufferReceiveFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1499   .text.xStreamBufferReceiveFromISR:00000000 xStreamBufferReceiveFromISR
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1645   .text.xStreamBufferReceiveFromISR:000000f0 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1650   .text.xStreamBufferIsEmpty:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1656   .text.xStreamBufferIsEmpty:00000000 xStreamBufferIsEmpty
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1696   .text.xStreamBufferIsEmpty:00000030 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1701   .text.xStreamBufferIsFull:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1707   .text.xStreamBufferIsFull:00000000 xStreamBufferIsFull
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1749   .text.xStreamBufferIsFull:0000003c $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1754   .text.xStreamBufferSendCompletedFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1760   .text.xStreamBufferSendCompletedFromISR:00000000 xStreamBufferSendCompletedFromISR
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1828   .text.xStreamBufferSendCompletedFromISR:00000068 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1833   .text.xStreamBufferReceiveCompletedFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1839   .text.xStreamBufferReceiveCompletedFromISR:00000000 xStreamBufferReceiveCompletedFromISR
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1907   .text.xStreamBufferReceiveCompletedFromISR:00000068 $d
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1912   .text.uxStreamBufferGetStreamBufferNumber:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1918   .text.uxStreamBufferGetStreamBufferNumber:00000000 uxStreamBufferGetStreamBufferNumber
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1934   .text.vStreamBufferSetStreamBufferNumber:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1940   .text.vStreamBufferSetStreamBufferNumber:00000000 vStreamBufferSetStreamBufferNumber
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1955   .text.ucStreamBufferGetStreamBufferType:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccIZlXLs.s:1961   .text.ucStreamBufferGetStreamBufferType:00000000 ucStreamBufferGetStreamBufferType
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
longjmp
memcpy
Unity
memset
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
vTaskSetTimeOutState
xTaskNotifyStateClear
xTaskGetCurrentTaskHandle
xTaskNotifyWait
xTaskCheckForTimeOut
ulPortSetInterruptMask
xTaskGenericNotifyFromISR
vPortClearInterruptMask
