   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"aws_mqtt_agent.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvRetrieveNotificationData,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	prvRetrieveNotificationData:
  23              	.LFB6:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/mqtt/aws_mqtt_agent.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Amazon FreeRTOS MQTT Agent V1.1.4
   3:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  27:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
  28:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @file aws_mqtt_agent.c
  29:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief MQTT Agent implementation.
  30:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
  31:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  32:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /* MQTT agent includes. */
  33:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "aws_mqtt_agent.h"
  34:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "aws_mqtt_agent_config.h"
  35:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "aws_mqtt_agent_config_defaults.h"
  36:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  37:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /* Buffer Pool includes. */
  38:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "aws_bufferpool.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  40:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /* FreeRTOS includes. */
  41:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "FreeRTOS.h"
  42:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "task.h"
  43:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "queue.h"
  44:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "semphr.h"
  45:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  46:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /* Secure sockets include. */
  47:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include "aws_secure_sockets.h"
  48:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  49:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /* Standard includes. */
  50:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #include <string.h>
  51:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  52:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
  53:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief The length of the command queue used to send commands from application
  54:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * tasks to the MQTT task.
  55:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  56:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The queue can have a maximum of mqttconfigMAX_PARALLEL_OPS parallel operations
  57:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * for each broker connection at any one time. The socket wake callback will only
  58:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * post to the queue if the queue is empty, so there is no need to leave space for
  59:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * that.
  60:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
  61:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttCOMMAND_QUEUE_LENGTH    ( ( UBaseType_t ) ( mqttconfigMAX_BROKERS * mqttconfigMAX_PARAL
  62:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  63:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
  64:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @defgroup MessageIdentifer Macros related to message identifier.
  65:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  66:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The message identifier is used to match Connect, Publish, Subscribe etc.
  67:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * requests from an application task to the MQTT task with the response sent
  68:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * from the MQTT task back to the application task. It must only use the top
  69:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * 16-bits of a 32-bit value as the bottom 16-bits pass additional information,
  70:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * for example bit 0 is set to 1 to indicate success (pdPASS) and 0 to indicate
  71:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * a failure (pdFAIL). The value contained in the top 16 bits is also passed as
  72:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * MQTT packet identifier to the MQTT Core Library. The Core library returns this
  73:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * value with ACK or timeout to inform which packet the ACK or timeout response
  74:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * corresponds to.
  75:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
  76:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /** @{ */
  77:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttMESSAGE_IDENTIFIER_MIN     ( 0x00010000UL )
  78:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttMESSAGE_IDENTIFIER_MAX     ( 0xFFFF0000UL )
  79:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttMESSAGE_IDENTIFIER_MASK    ( 0xFFFF0000UL )
  80:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  81:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
  82:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Extracts the message identifier from the 32-bit notification value.
  83:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  84:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] x The 32-bit notification value.
  85:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
  86:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttMESSAGE_IDENTIFIER_EXTRACT( x )    ( x >> 16 )
  87:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /** @} */
  88:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  89:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
  90:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @defgroup Notification Macros related to notification code and status.
  91:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
  92:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The notification value sent from the MQTT task to the application task contains
  93:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * a code  and status ( pdPASS/pdFAIL ) about the requested operation. Bit 0 contains
  94:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the status of the requested operation and is 1 in case of success ( pdPASS ) and 0
  95:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * in case of failure ( pdFAIL ). Bit 1 to Bit 15 contain one of the MQTTNotifyCodes_t
  96:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * value and provide more information about the requested operation. The below macros
  97:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * help to extract the status and code from the received notification value.
  98:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @see MQTTNotifyCodes_t.
  99:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /** @{ */
 101:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttNOTIFICATION_CODE_MASK      ( 0x0000FFFEUL )
 102:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttNOTIFICATION_STATUS_MASK    ( 0x00000001UL )
 103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /** @} */
 104:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @defgroup ConnectionFlags Flags to identify different properties of a connection.
 107:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /** @{ */
 109:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttCONNECTION_SECURED    ( ( UBaseType_t ) 1 << ( UBaseType_t ) 0 )
 110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /** @} */
 111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 112:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 113:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Encodes the broker number returned to the user.
 114:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Adding one ensures that the user does not ever get a
 116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * NULL handle.
 117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 118:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttENCODE_BROKER_NUMBER( xBrokerNumber )    ( ( UBaseType_t ) xBrokerNumber + ( UBaseType_
 119:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Decodes the broker number supplied by the user.
 122:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 123:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Subtracting one ensures that we index the correct MQTTBrokerConnection_t
 124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * in the xMQTTConnections array since we added one to the index before giving
 125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * it to the user as an opaque handle.
 126:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #define mqttDECODE_BROKER_NUMBER( xBrokerNumber )    ( ( UBaseType_t ) xBrokerNumber - ( UBaseType_
 128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 130:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Type of the message sent from an application task to the MQTT task.
 132:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 133:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** typedef enum
 134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTServiceSocket = 0,  /**< See if any of the active connections need servicing. */
 136:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTConnectRequest,     /**< Initiate a connection to an MQTT broker. */
 137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTDisconnectRequest,  /**< Disconnect the connection to an MQTT broker. */
 138:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTSubscribeRequest,   /**< Initiate a subscribe to a topic.  _TODO_ Currently limited to one
 139:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTUnsubscribeRequest, /**< Initiate unsubscribe from a topic.  _TODO_ Currently limited to o
 140:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTPublishRequest      /**< Initiate a publish to a topic.  _TODO_ Currently limited to one t
 141:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** } MQTTAction_t;
 142:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 143:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 144:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Status codes sent in notifications passed from the MQTT task to application tasks.
 145:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The last bit of the status code is used to indicate pass (bit set) or fail (bit clear),
 147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * so the status codes defined below must have bit 0 clear.
 148:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** typedef enum
 150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTCONNCouldNotBeSent = 2,          /**< CONNECT message could not be sent. */
 152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTCONNACKConnectionAccepted = 4,   /**< CONNACK received and the broker has accepted the con
 153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTCONNACKConnectionRejected = 6,   /**< CONNACK received but the broker has rejected the con
 154:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTDISCONNSent = 8,                 /**< DISCONNECT message sent successfully. */
 155:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTDISCONNCouldNotBeSent = 10,      /**< DISCONNECT message could not be sent. */
 156:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTPUBCouldNotBeSent = 12,          /**< PUBLISH message could not be sent. */
 157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTPUBSent = 14,                    /**< PUBLISH message sent successfully. */
 158:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTPUBACKReceived = 16,             /**< PUBACK received. */
 159:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTSUBCouldNotBeSent = 18,          /**< SUBSCRIBE message could not be sent. */
 160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTSUBACKSubscriptionAccepted = 20, /**< SUBACK received and the broker has accepted the subs
 161:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTSUBACKSubscriptionRejected = 22, /**< SUBACK received but the broker has rejected the subs
 162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTUNSUBCouldNotBeSent = 24,        /**< UNSUBSCRIBE message could not be sent. */
 163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTUNSUBACKReceived = 26,           /**< UNSUBACK received. */
 164:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTBufferAdded = 28,                /**< Provided buffer was successfully added to the MQTT c
 165:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTBufferCouldNotBeAdded = 30,      /**< Provided buffer could not be added to the MQTT libra
 166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTOperationTimedOut = 32,          /**< The requested operation could not be completed withi
 167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     eMQTTClientGotDisconnected = 34       /**< The MQTT client got disconnect in the middle of an o
 168:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** } MQTTNotifyCodes_t;
 169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Stores the information required to send a pass/fail notification
 172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * to whichever task initiated the operation.
 173:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** typedef struct MQTTNotificationData
 175:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 176:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TaskHandle_t xTaskToNotify;   /**< The handle of the task to notify. */
 177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint32_t ulMessageIdentifier; /**< Used to match a request going from application task to MQTT 
 178:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** } MQTTNotificationData_t;
 179:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 181:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Contents of the message sent from an application task to the MQTT task to
 182:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * initiate an MQTT operation.
 183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Application task creates an object of this type and posts it to the command queue
 185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * in order to initiate an MQTT operation.
 186:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** typedef struct MQTTEventData
 188:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t uxBrokerNumber;               /**< The broker this command is for, indexed from 0. 
 190:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAction_t xEventType;                  /**< The operation to initiate. */
 191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t xNotificationData; /**< Information used to notify the task that initiat
 192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xEventCreationTimestamp;        /**< Timestamp when this event was created. */
 193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TickType_t xTicksToWait;                  /**< Time in tick counts after which the operation sh
 194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Only one of the following is relevant based on the value of xEventType. */
 195:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     union
 196:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 197:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         const MQTTAgentConnectParams_t * pxConnectParams;         /**< Connect Parameters. */
 198:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         const MQTTAgentSubscribeParams_t * pxSubscribeParams;     /**< Subscribe Parameters. */
 199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         const MQTTAgentUnsubscribeParams_t * pxUnsubscribeParams; /**< Unsubscribe Parameters. */
 200:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         const MQTTAgentPublishParams_t * pxPublishParams;         /**< Publish Parameters. */
 201:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     } u;
 202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** } MQTTEventData_t;
 203:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 204:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Contains the state of a connection to MQTT broker.
 206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 207:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The MQTT task can connect to maximum mqttconfigMAX_BROKERS brokers at any
 208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * one time. The state of each connection is contained in a
 209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * MQTTBrokerConnection_t structure.
 210:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 211:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** typedef struct MQTTBrokerConnection
 212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 213:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     Socket_t xSocket;                                                   /**< TCP socket connected t
 214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTContext_t xMQTTContext;                                         /**< MQTT Core library cont
 215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t xWaitingTasks[ mqttconfigMAX_PARALLEL_OPS ]; /**< Notification data to n
 216:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     void * pvUserData;                                                  /**< User data to be suppli
 217:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentCallback_t pxCallback;                                     /**< The callback to notify
 218:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t uxFlags;                                                /**< Various properties of 
 219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xConnectionInUse;                                        /**< Tracks whether or not 
 220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint8_t ucRxBuffer[ mqttconfigRX_BUFFER_SIZE ];                     /**< Buffers incoming messa
 221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** } MQTTBrokerConnection_t;
 222:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 223:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 225:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief The user name used by all the MQTT connections. AWS IoT uses the user
 226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * name for collecting anonymous metrics on SDK usage. Metrics default to on.
 227:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #if ( mqttconfigENABLE_METRICS == 1 )
 229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     #ifndef configPLATFORM_NAME
 230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         #define configPLATFORM_NAME    "Unknown"
 231:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     #endif
 232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     static const char cUserName[] = "?SDK=AmazonFreeRTOS"
 234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     "&Version="tskKERNEL_VERSION_NUMBER
 235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     "&Platform="configPLATFORM_NAME;
 236:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 237:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #else
 238:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     static const char cUserName[] = "";
 239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** #endif
 240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 242:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief The length of the above username.
 243:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static const uint16_t usUserNameLength = ( uint16_t ) ( sizeof( cUserName ) - 1U );
 245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 247:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief State of connections to MQTT brokers.
 248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Each MQTTBrokerConnection_t structure maintains the state of one connection
 250:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * to an MQTT broker. The maximum number of simultaneous connections is set by
 251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * mqttconfigMAX_BROKERS.
 252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 253:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTBrokerConnection_t xMQTTConnections[ mqttconfigMAX_BROKERS ];
 254:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Handle of the command queue used to pass commands from application
 257:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * tasks to the MQTT task.
 258:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static QueueHandle_t xCommandQueue = NULL;
 260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 261:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Handle of the MQTT task.
 263:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static TaskHandle_t xMQTTTaskHandle = NULL;
 265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 267:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Used to match commands sent to the MQTT task to replies coming from the
 268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * MQTT task.
 269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static uint32_t ulQueueMessageIdentifier = 0;
 271:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief The callback registered with the core MQTT library to transmit bytes over wire.
 275:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The MQTT core library calls this function whenever it needs to transmit any bytes.
 277:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pvSendContext The send context is broker number in our case.
 278:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pucData The data to transmit.
 280:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] ulDataLength Length of the data.
 281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 282:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return The number of actually transmitted bytes. Can be less than ulDataLength if
 283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * transmission fails for some reason.
 284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 285:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static uint32_t prvMQTTSendCallback( void * pvSendContext,
 286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      const uint8_t * const pucData,
 287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      uint32_t ulDataLength );
 288:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 290:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief The callback registered with the core MQTT library to receive various MQTT events.
 291:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 292:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * The core MQTT library notifies about various events (acknowledgments, publishes, unexpected pack
 293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * in this callback. Each MQTT core library operation requires a packet identifier which is sent ba
 294:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * with ACK or timeout.
 295:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 296:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Whenever we initiate an MQTT operation for which we expect an ACK, we store the MQTTNotification
 297:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * for the task that initiates the operation. The notification data contains a message identifier, 
 298:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * of which are used as packet identifier. Upon receiving ACK or timeout, we match the packet ident
 299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the top 16 bits of message identifier in MQTTNotificationData_t to figure out the task which ini
 300:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * operation. The task is then notified of the result.
 301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 302:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pvCallbackContext The callback context is broker number in our case.
 303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The event type and related data.
 304:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return The return value is significant only in the case of publish messages. We return eMQTTTru
 306:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * if the user wants to take the ownership of the buffer (indicated by the user by returning pdTRUE
 307:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * from the callback), otherwise we return eMQTTFalse. For all other messages than publish, we retu
 308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * eMQTTFalse (which is ignored by the Core library anyways).
 309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTBool_t prvMQTTEventCallback( void * pvCallbackContext,
 311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         const MQTTEventCallbackParams_t * const pxParams );
 312:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 313:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Returns the current tick count.
 315:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * This function is also registered with the MQTT Core library and gets called by the Core
 317:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * library whenever it needs the current tick count.
 318:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 319:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[out] pxCurrentTickCount The output parameter to receive the current tick count.
 320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 321:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvMQTTGetTicks( uint64_t * pxCurrentTickCount );
 322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 324:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Gets an unused connection.
 325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 326:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * This functions iterates over xMQTTConnections array and tries to find a free connection (i.e. on
 327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * mqttCONNECTION_IN_USE bit in uxFlags cleared). If it finds one, it returns its index in the xMQT
 328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * array otherwise it returns -1 to indicate failure.
 329:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return The index of a free connection in xMQTTConnections array if one is available, -1 otherwi
 331:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static BaseType_t prvGetFreeConnection( void );
 333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Returns the connection to the unused pool by marking it "not in use".
 336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] uxBrokerNumber Index of the connection in the xMQTTConnections array.
 338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvReturnConnection( UBaseType_t uxBrokerNumber );
 340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 342:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Stores the notification data in one of the available buffers in MQTTBrokerConnection_t.
 343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Finds an empty buffer from xWaitingTasks in MQTTBrokerConnection_t to store the notification dat
 345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * (empty buffer is identified by the NULL value of xTaskToNotify). If it finds a buffer, it stores
 346:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * notification data from the event data and returns the pointer to the buffer. If it fails to find
 347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * empty buffer, it returns NULL.
 348:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 349:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the MQTT broker connection t
 350:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 351:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 352:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return Pointer to the buffer used to store notification data or NULL if all buffers are in use.
 353:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTNotificationData_t * prvStoreNotificationData( MQTTBrokerConnection_t * const pxConnecti
 355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                                           const MQTTEventData_t * const pxEventData
 356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 357:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 358:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Retrieves the notification data matching the given packet identifier.
 359:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Whenever we receive a message from the MQTT Core library, we need to check if any task is waitin
 361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * for it and accordingly notify it. This functions iterates over all the waiting tasks ( i.e. xWai
 362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * in MQTTBrokerConnection_t and tries to find a notification data having message identifier with t
 363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * bits matching the received packet identifier from the Core library.
 364:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 365:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t
 366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] usPacketIdentifier The packet identifier.
 367:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return Pointer to the buffer containing the notification data if a task is waiting, NULL otherw
 369:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 370:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTNotificationData_t * prvRetrieveNotificationData( MQTTBrokerConnection_t * const pxConne
 371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                                              uint16_t usPacketIdentifier );
 372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 374:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Sets up the connection as per the parameters in event data.
 375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Establishes the TCP connection with the broker and sets up the appropriate options
 377:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * for the socket.
 378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 380:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 381:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return pdPASS if connection succeeds, pdFAIL otherwise.
 382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static BaseType_t prvSetupConnection( const MQTTEventData_t * const pxEventData );
 384:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 385:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Gracefully terminates the connection.
 387:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 388:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Cleanup the TLS context. Shuts the socket for both read and write and then tries
 389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * to read all the available data (bounded by a certain timeout) after which it closes
 390:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the socket.
 391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 392:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection MQTTBrokerConnection_t structure specifying the connection to terminate.
 393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 394:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvGracefulSocketClose( MQTTBrokerConnection_t * const pxConnection );
 395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief The callback registered with the socket to get notified of the available data to read on 
 398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * This function just posts a eMQTTServiceSocket request to the MQTT command queue to
 400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * unblock the MQTT task in order to ensure that the available data is read and processed.
 401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxSocket The socket on which the data is available for reading.
 403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvMQTTClientSocketWakeupCallback( Socket_t pxSocket );
 405:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 407:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the application task about the received CONNACK message.
 408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Retrieves the notification data corresponding to the task which initiated the Connect operation.
 410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * there is a task waiting for the CONNACK, notifies the task otherwise silently ignores the CONNAC
 411:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which CONN
 413:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 414:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedCONNACK( MQTTBrokerConnection_t * const pxConnection,
 416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                        const MQTTEventCallbackParams_t * const pxParams );
 417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 418:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 419:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the application task about the received SUBACK message.
 420:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 421:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Retrieves the notification data corresponding to the task which initiated the Subscribe operatio
 422:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * If there is a task waiting for the SUBACK, notifies the task otherwise silently ignores the SUBA
 423:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which SUBA
 425:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 426:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 427:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedSUBACK( MQTTBrokerConnection_t * const pxConnection,
 428:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                       const MQTTEventCallbackParams_t * const pxParams );
 429:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 430:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 431:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the application task about the received UNSUBACK message.
 432:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 433:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Retrieves the notification data corresponding to the task which initiated the Unsubscribe operat
 434:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * If there is a task waiting for the UNSUBACK, notifies the task otherwise silently ignores the UN
 435:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 436:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which UNSU
 437:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 438:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 439:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedUNSUBACK( MQTTBrokerConnection_t * const pxConnection,
 440:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         const MQTTEventCallbackParams_t * const pxParams );
 441:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 442:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 443:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the application task about the received PUBACK message.
 444:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 445:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Retrieves the notification data corresponding to the task which initiated the Publish operation.
 446:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * If there is a task waiting for the PUBACK, notifies the task otherwise silently ignores the PUBA
 447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which PUBA
 449:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 450:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedPUBACK( MQTTBrokerConnection_t * const pxConnection,
 452:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                       const MQTTEventCallbackParams_t * const pxParams );
 453:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 454:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the user about the received Publish message.
 456:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 457:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * If the user has registered a callback, invokes the callback to inform the user about the Publish
 458:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * otherwise silently ignores the message.
 459:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 460:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which Publ
 461:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 462:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 463:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return The value returned by the callback if the user has registered one, pdFALSE otherwise.
 464:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 465:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static BaseType_t prvProcessReceivedPublish( MQTTBrokerConnection_t * const pxConnection,
 466:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              const MQTTEventCallbackParams_t * const pxParams );
 467:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 468:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 469:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the application task about the timeout.
 470:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 471:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Retrieves the notification data corresponding to the task which initiated the operation. If ther
 472:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * task waiting for ACK matching the packet identifier supplied by the Core library, notifies the t
 473:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * otherwise silently ignores the event.
 474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 475:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which Time
 476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 478:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedTimeout( MQTTBrokerConnection_t * const pxConnection,
 479:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                        const MQTTEventCallbackParams_t * const pxParams );
 480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 481:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the user about the disconnect and unblocks all the waiting tasks.
 483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 484:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * If the user has registered a callback, invokes the callback to inform the user about the disconn
 485:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * event. Also closes the socket connection.
 486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 487:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxConnection The MQTTBrokerConnection_t corresponding to the connection on which Disc
 488:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxParams The parameters received in the callback form the MQTT Core library containin
 489:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 490:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedDisconnect( MQTTBrokerConnection_t * const pxConnection,
 491:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                           const MQTTEventCallbackParams_t * const pxParams );
 492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 493:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Notifies the task by encoding the packet identifier, notification code and status in the 
 495:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 496:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * If notification data is not NULL, notification value is encoded as follows: Most significant 16
 497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * bits contain the packet identifier same as set by the application task while posting to the comm
 498:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * queue. Next 15 bits contain the status code. Last bit contains the status - 1 for pdPASS and 0
 499:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * for pdFAIL.
 500:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 501:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxNotificationData Notification data containing the information about the task to be 
 502:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] eNotificationCode Notification code about the result of the operation.
 503:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] uxStatus Status of the operation (pdPASS/pdFAIL).
 504:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvNotifyRequestingTask( MQTTNotificationData_t * const pxNotificationData,
 506:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      MQTTNotifyCodes_t xNotificationCode,
 507:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      UBaseType_t uxStatus );
 508:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 509:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 510:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Called on each iteration of the MQTT task to service connected sockets.
 511:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 512:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * For all the connected sockets, it reads the available data and passes it to the
 513:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * MQTT Core library. It also invokes the MQTT_Periodic function of the core library
 514:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * to ensure regular timeout and keep alive processing.
 515:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 516:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return Time in ticks when the next invocation of MQTT_Periodic is required.
 517:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static TickType_t prvManageConnections( void );
 519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 520:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 521:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Initiates the MQTT Connect operation.
 522:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * First, it stores the notification data corresponding to the task which initiated the
 524:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * operation in one of the available buffers in MQTTBrokerConnection_t. If it fails to
 525:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * find a free buffer, it fails immediately and notifies the application task. Upon
 526:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * successfully storing the notification data, it sets up the connect parameters and
 527:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * calls the MQTT_Connect function of the core MQTT library. If that fails, it informs
 528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the application task and frees the buffer used to store the notification data.
 529:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 530:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 531:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTConnect( MQTTEventData_t * const pxEventData );
 533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 535:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Initiates the MQTT Disconnect operation.
 536:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * Invokes the MQTT_Disconnect function of the core MQTT library and informs the application
 538:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * task about the result.
 539:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 541:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 542:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTDisconnect( MQTTEventData_t * const pxEventData );
 543:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 544:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 545:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Initiates the MQTT Subscribe operation.
 546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 547:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * First, it stores the notification data corresponding to the task which initiated the
 548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * operation in one of the available buffers in MQTTBrokerConnection_t. If it fails to
 549:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * find a free buffer, it fails immediately and notifies the application task. Upon
 550:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * successfully storing the notification data, it sets up the subscribe parameters and
 551:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * calls the MQTT_Subscribe function of the core MQTT library. If that fails, it informs
 552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the application task and frees the buffer used to store the notification data.
 553:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 554:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 556:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTSubscribe( MQTTEventData_t * const pxEventData );
 557:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Initiates the MQTT Unsubscribe operation.
 560:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 561:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * First, it stores the notification data corresponding to the task which initiated the
 562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * operation in one of the available buffers in MQTTBrokerConnection_t. If it fails to
 563:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * find a free buffer, it fails immediately and notifies the application task. Upon
 564:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * successfully storing the notification data, it sets up the unsubscribe parameters and
 565:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * calls the MQTT_Unsubscribe function of the core MQTT library. If that fails, it informs
 566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the application task and frees the buffer used to store the notification data.
 567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 568:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 569:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 570:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTUnSubscribe( MQTTEventData_t * const pxEventData );
 571:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 572:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 573:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Initiates the MQTT Publish operation.
 574:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * In case of QoS0, it sets up the publish parameters and calls the MQTT_Publish function
 576:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * of the core MQTT library. It informs the success or failure to the application task
 577:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * immediately. In non QoS0 case, first it stores the notification data corresponding to
 578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * the task which initiated the operation in one of the available buffers in
 579:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * MQTTBrokerConnection_t. If it fails to find a free buffer, it fails immediately and
 580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * notifies the application task. Upon successfully storing the notification data, it
 581:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * sets up the publish parameters and calls the MQTT_Publish function of the core MQTT
 582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * library. If that fails, it informs the application task and frees the buffer used to
 583:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * store the notification data.
 584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The event data as posted by application task to the command queue.
 586:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTPublish( MQTTEventData_t * const pxEventData );
 588:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 589:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*
 590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Posts the event to the command queue and waits for the notification from the MQTT task.
 591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 592:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * This function interfaces application tasks to the MQTT task. Connect, Publish, Subscribe
 593:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * and other requests are packed up into a structure then send over a command queue
 594:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * to the MQTT task. After posting to the command queue, it puts the calling task in
 595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * blocked state (bounded by a certain timeout) waiting for the notification from the
 596:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * MQTT task. Upon receiving the notification, decodes the notification value and returns
 597:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * eMQTTAgentSuccess if the operation succeeded, eMQTTAgentFailure if the operation
 598:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * failed or eMQTTAgentTimeout if the operation timed out.
 599:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * NOTE that this function sets the packet identifier field of notification data in
 600:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * pxEventData before posting it to the command queue.
 601:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 602:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pxEventData The Event to be sent to the command queue.
 603:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @return eMQTTAgentSuccess if the command sent to the MQTT task was successful,
 605:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * eMQTTAgentTimeout if it timed out, eMQTTAgentFailure to indicate any other
 606:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * failure.
 607:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTAgentReturnCode_t prvSendCommandToMQTTTask( MQTTEventData_t * pxEventData );
 609:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 610:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /**
 611:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @brief Implements the task that manages the MQTT protocol.
 612:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 613:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * This function reads messages from the command queue and processes them.
 614:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * It wakes up periodically and calls prvManageConnections() in order to
 615:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * ensure regular timeout and keep alive processing by the MQTT Core library.
 616:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  *
 617:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  * @param[in] pvParameters The parameters as specified when creating the task, NULL in this case.
 618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****  */
 619:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvMQTTTask( void * pvParameters );
 620:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 621:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 622:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static uint32_t prvMQTTSendCallback( void * pvSendContext,
 623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      const uint8_t * const pucData,
 624:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      uint32_t ulDataLength )
 625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 626:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
 627:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t uxBrokerNumber = ( UBaseType_t ) pvSendContext; /*lint !e923 The cast is ok as we p
 628:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     int32_t lSendRetVal;
 629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint32_t ulBytesSent = 0;
 630:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimestamp;
 631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TickType_t xTicksToWait = pdMS_TO_TICKS( mqttconfigTCP_SEND_TIMEOUT_MS );
 632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 633:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Broker number must be valid. */
 634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     configASSERT( uxBrokerNumber < ( UBaseType_t ) mqttconfigMAX_BROKERS );
 635:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 636:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Record the timestamp when this function was called. */
 637:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     vTaskSetTimeOutState( &( xTimestamp ) );
 638:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Get the actual connection to the broker. */
 640:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxConnection = &( xMQTTConnections[ uxBrokerNumber ] );
 641:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Keep re-trying until timeout or any error
 643:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * other than SOCKETS_EWOULDBLOCK occurs. */
 644:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     while( ulBytesSent < ulDataLength )
 645:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Check for timeout and if timeout has occurred, stop retrying. */
 647:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( xTaskCheckForTimeOut( &( xTimestamp ), &( xTicksToWait ) ) == pdTRUE )
 648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 649:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 652:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Try sending the remaining data. */
 653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         lSendRetVal = SOCKETS_Send( pxConnection->xSocket,
 654:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     &( pucData[ ulBytesSent ] ),               /* Only send the rem
 655:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     ( size_t ) ( ulDataLength - ulBytesSent ), /* Only send the rem
 656:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     0 );
 657:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 658:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* A negative return value from SOCKETS_Send
 659:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * means some error occurred. */
 660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( lSendRetVal < 0 )
 661:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 662:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Since the socket is non-blocking, send can return
 663:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * SOCKETS_EWOULDBLOCK, in which case we retry again until
 664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * timeout. In case of any other error, we stop re-trying. */
 665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( lSendRetVal != SOCKETS_EWOULDBLOCK )
 666:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 667:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 break;
 668:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 670:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
 671:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 672:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Update the count of sent bytes. */
 673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ulBytesSent += ( uint32_t ) lSendRetVal;
 674:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 675:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 676:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 677:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return ulBytesSent;
 678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 679:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 680:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTBool_t prvMQTTEventCallback( void * pvCallbackContext,
 681:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         const MQTTEventCallbackParams_t * const pxParams )
 682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBool_t xReturn = eMQTTFalse;
 684:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
 685:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t uxBrokerNumber = ( UBaseType_t ) pvCallbackContext; /*lint !e923 The cast is ok as 
 686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Broker number must be valid. */
 688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     configASSERT( uxBrokerNumber < ( UBaseType_t ) mqttconfigMAX_BROKERS );
 689:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 690:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Get the actual connection to the broker. */
 691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxConnection = &( xMQTTConnections[ uxBrokerNumber ] );
 692:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     switch( pxParams->xEventType )
 694:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 695:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTConnACK:
 696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvProcessReceivedCONNACK( pxConnection, pxParams );
 697:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 699:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTSubACK:
 700:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvProcessReceivedSUBACK( pxConnection, pxParams );
 701:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 702:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTUnSubACK:
 704:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvProcessReceivedUNSUBACK( pxConnection, pxParams );
 705:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 706:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTPubACK:
 708:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvProcessReceivedPUBACK( pxConnection, pxParams );
 709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 711:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTPublish:
 712:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 713:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Inform the core library if the user wants to take
 714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * the ownership of the provided buffer. */
 715:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( prvProcessReceivedPublish( pxConnection, pxParams ) == pdTRUE )
 716:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 717:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 xReturn = eMQTTTrue;
 718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 719:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 721:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 722:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTTimeout:
 723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvProcessReceivedTimeout( pxConnection, pxParams );
 724:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 725:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 726:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTClientDisconnected:
 727:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvProcessReceivedDisconnect( pxConnection, pxParams );
 728:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 730:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         case eMQTTPacketDropped:
 731:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "[WARN] MQTT Agent dropped a packet. No buffer available.\r\n" )
 732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "Consider adjusting parameters in aws_bufferpool_config.h.\r\n" 
 733:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 734:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         default:
 736:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* _TODO_ Handle the remaining events. */
 737:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 738:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 739:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturn;
 741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 742:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 743:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvMQTTGetTicks( uint64_t * pxCurrentTickCount )
 745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 746:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimeout;
 747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 748:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Get the current time-stamp and pack it in uint64_t. */
 749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     vTaskSetTimeOutState( &xTimeout );
 750:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* _TODO_ - Might need to change for port. */
 752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     *pxCurrentTickCount = ( uint64_t ) xTimeout.xOverflowCount;
 753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     *pxCurrentTickCount <<= 32;
 754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     *pxCurrentTickCount |= xTimeout.xTimeOnEntering;
 755:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 756:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 757:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 758:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static BaseType_t prvGetFreeConnection( void )
 759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 760:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t x;
 761:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Iterate over all connections to check if a free connection is available.
 763:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * Since this function is called from application tasks, many tasks can be
 764:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * touching the xConnectionInUse simultaneously and therefore it has to be
 765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * in critical section. */
 766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     taskENTER_CRITICAL();
 767:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     for( x = 0; x < mqttconfigMAX_BROKERS; x++ )
 769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 770:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* If we find a free connection... */
 771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( xMQTTConnections[ x ].xConnectionInUse == pdFALSE )
 772:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* ...mark the connection "in use" and stop. */
 774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].xConnectionInUse = pdTRUE;
 775:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 776:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 779:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     taskEXIT_CRITICAL();
 780:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 781:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If we could not find a free connection, return -1 to indicate failure. */
 782:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( x == mqttconfigMAX_BROKERS )
 783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 784:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         x = -1;
 785:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 786:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return x;
 788:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 791:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvReturnConnection( UBaseType_t uxBrokerNumber )
 792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 793:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     configASSERT( uxBrokerNumber < ( UBaseType_t ) mqttconfigMAX_BROKERS );
 794:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 795:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Since this function is called from application tasks, many tasks can
 796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * be touching the xConnectionInUse simultaneously and therefore it has to
 797:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * be in critical section. */
 798:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     taskENTER_CRITICAL();
 799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Mark the connection as "not in use". */
 800:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xMQTTConnections[ uxBrokerNumber ].xConnectionInUse = pdFALSE;
 801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     taskEXIT_CRITICAL();
 802:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 803:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 804:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 805:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTNotificationData_t * prvStoreNotificationData( MQTTBrokerConnection_t * const pxConnecti
 806:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                                           const MQTTEventData_t * const pxEventData
 807:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 808:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x;
 809:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData = NULL;
 810:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Iterate over all the buffers to find an unused one. Unused
 812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     * buffer is identified by the NULL value of xTaskToNotify. */
 813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     for( x = 0; x < ( UBaseType_t ) mqttconfigMAX_PARALLEL_OPS; x++ )
 814:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 815:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxConnection->xWaitingTasks[ x ].xTaskToNotify == NULL )
 816:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 817:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* We found one unused buffer - copy the notification data
 818:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * and return. */
 819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxNotificationData = &( pxConnection->xWaitingTasks[ x ] );
 820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             memcpy( pxNotificationData, &( pxEventData->xNotificationData ), sizeof( MQTTNotificati
 821:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 822:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 823:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 825:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return pxNotificationData;
 826:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 827:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 829:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTNotificationData_t * prvRetrieveNotificationData( MQTTBrokerConnection_t * const pxConne
 830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                                              uint16_t usPacketIdentifier )
 831:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
  25              		.loc 1 831 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
  31 0000 0020A0E1 		mov	r2, r0
 832:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x;
 833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData = NULL;
 834:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 835:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Iterate over all the buffers to see if there is one matching the
 836:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * packet identifier. Note that the packet identifier constitutes of the
 837:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * top 16 bits of the message identifier stored in the notification data. */
 838:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     for( x = 0; x < ( UBaseType_t ) mqttconfigMAX_PARALLEL_OPS; x++ )
  32              		.loc 1 838 0
  33 0004 0030A0E3 		mov	r3, #0
  34              	.LVL1:
  35              	.L4:
 839:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 840:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( ( pxConnection->xWaitingTasks[ x ].xTaskToNotify != NULL ) &&
  36              		.loc 1 840 0
  37 0008 E8C492E5 		ldr	ip, [r2, #1256]
  38 000c 00005CE3 		cmp	ip, #0
  39 0010 0500000A 		beq	.L2
 841:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( usPacketIdentifier == ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxConnection->xW
  40              		.loc 1 841 0 discriminator 1
  41 0014 ECC492E5 		ldr	ip, [r2, #1260]
 840:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( usPacketIdentifier == ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxConnection->xW
  42              		.loc 1 840 0 discriminator 1
  43 0018 2C0851E1 		cmp	r1, ip, lsr #16
  44 001c 0200001A 		bne	.L2
 842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* We found the notification data, return it. */
 844:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxNotificationData = &( pxConnection->xWaitingTasks[ x ] );
  45              		.loc 1 844 0
  46 0020 9D3083E2 		add	r3, r3, #157
  47              	.LVL2:
  48 0024 830180E0 		add	r0, r0, r3, lsl #3
  49              	.LVL3:
 845:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
  50              		.loc 1 845 0
  51 0028 1EFF2FE1 		bx	lr
  52              	.LVL4:
  53              	.L2:
 838:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
  54              		.loc 1 838 0 discriminator 2
  55 002c 013083E2 		add	r3, r3, #1
  56              	.LVL5:
  57 0030 082082E2 		add	r2, r2, #8
  58 0034 050053E3 		cmp	r3, #5
  59 0038 F2FFFF1A 		bne	.L4
 833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
  60              		.loc 1 833 0
  61 003c 0000A0E3 		mov	r0, #0
  62              	.LVL6:
 846:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 847:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 848:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return pxNotificationData;
 850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
  63              		.loc 1 850 0
  64 0040 1EFF2FE1 		bx	lr
  65              		.cfi_endproc
  66              	.LFE6:
  68              		.section	.text.prvNotifyRequestingTask,"ax",%progbits
  69              		.align	2
  70              		.syntax unified
  71              		.arm
  72              		.fpu neon
  74              	prvNotifyRequestingTask:
  75              	.LFB17:
 851:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 853:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static BaseType_t prvSetupConnection( const MQTTEventData_t * const pxEventData )
 854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     SocketsSockaddr_t xMQTTServerAddress = { 0 };
 856:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdPASS;
 857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     size_t xURLLength;
 858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection = &( xMQTTConnections[ pxEventData->uxBrokerNumber ] );
 859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     char * ppcAlpns[] = { socketsAWS_IOT_ALPN_MQTT };
 860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Should not get here if the socket used to communicate with the
 862:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * broker is already connected. */
 863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     configASSERT( pxConnection->xSocket == SOCKETS_INVALID_SOCKET );
 864:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Calculate the length of the supplied URL. */
 866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xURLLength = strlen( pxEventData->u.pxConnectParams->pcURL );
 867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 868:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Ensure that the length of the specified URL is
 869:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * within the permitted limits. */
 870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xURLLength <= ( size_t ) securesocketsMAX_DNS_NAME_LENGTH )
 871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( ( pxEventData->u.pxConnectParams->xFlags & mqttagentUSE_AWS_IOT_ALPN_443 ) != 0 )
 873:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 874:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* The AWS IoT ALPN feature implies the default TLS server port. */
 875:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTServerAddress.usPort = SOCKETS_htons( securesocketsDEFAULT_TLS_DESTINATION_PORT );
 876:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 877:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
 878:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTServerAddress.usPort = SOCKETS_htons( pxEventData->u.pxConnectParams->usPort );
 880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 881:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xMQTTServerAddress.ulAddress = SOCKETS_GetHostByName( pxEventData->u.pxConnectParams->pcURL
 883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xMQTTServerAddress.ucSocketDomain = SOCKETS_AF_INET;
 884:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Create the socket. */
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxConnection->xSocket = SOCKETS_Socket( SOCKETS_AF_INET, SOCKETS_SOCK_STREAM, SOCKETS_IPPRO
 887:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxConnection->xSocket != SOCKETS_INVALID_SOCKET )
 889:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Set a callback function that will unblock the MQTT task when data
 891:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * is received on a socket. */
 892:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( void ) SOCKETS_SetSockOpt( pxConnection->xSocket,
 893:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                          0,                                            /* Level - U
 894:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                          SOCKETS_SO_WAKEUP_CALLBACK,
 895:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                          ( void * ) prvMQTTClientSocketWakeupCallback, /*lint !e908
 896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                          sizeof( &( prvMQTTClientSocketWakeupCallback ) ) );
 897:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 898:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Set secure socket option if it is a secured connection. */
 899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( ( pxConnection->uxFlags & mqttCONNECTION_SECURED ) == mqttCONNECTION_SECURED )
 900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 901:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( SOCKETS_SetSockOpt( pxConnection->xSocket,
 902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         0, /* Level - Unused. */
 903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         SOCKETS_SO_REQUIRE_TLS,
 904:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         NULL,
 905:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         0 ) != SOCKETS_ERROR_NONE )
 906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 907:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     xStatus = pdFAIL;
 908:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 909:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* If a certificate is supplied, set it. */
 911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( ( xStatus == pdPASS ) &&
 912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( pxEventData->u.pxConnectParams->pcCertificate != NULL ) )
 913:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 914:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     if( SOCKETS_SetSockOpt( pxConnection->xSocket,
 915:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             0, /* Level - Unused. */
 916:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             SOCKETS_SO_TRUSTED_SERVER_CERTIFICATE,
 917:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             pxEventData->u.pxConnectParams->pcCertificate,
 918:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             pxEventData->u.pxConnectParams->ulCertificateSize ) != 
 919:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     {
 920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         xStatus = pdFAIL;
 921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
 922:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 923:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Use SNI if the provided URL is not IP address. */
 925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( ( xStatus == pdPASS ) &&
 926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentURL_IS_IP_ADDRESS ) == 0 
 927:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( pxEventData->u.pxConnectParams->xURLIsIPAddress == pdFALSE ) )
 928:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     if( SOCKETS_SetSockOpt( pxConnection->xSocket,
 930:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             0, /* Level - Unused. */
 931:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             SOCKETS_SO_SERVER_NAME_INDICATION,
 932:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             pxEventData->u.pxConnectParams->pcURL,
 933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             ( size_t ) 1 + xURLLength ) != SOCKETS_ERROR_NONE )
 934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     {
 935:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         xStatus = pdFAIL;
 936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
 937:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 938:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 939:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Negotiate ALPN if requested. */
 940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( ( xStatus == pdPASS ) &&
 941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentUSE_AWS_IOT_ALPN_443 ) 
 942:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 943:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     if( SOCKETS_SetSockOpt( pxConnection->xSocket,
 944:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             0, /* Level - Unused. */
 945:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             SOCKETS_SO_ALPN_PROTOCOLS,
 946:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             ppcAlpns,
 947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             sizeof( ppcAlpns ) / sizeof( ppcAlpns[ 0 ] ) ) != SOCKE
 948:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     {
 949:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         xStatus = pdFAIL;
 950:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
 951:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 953:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 954:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Establish the connection. */
 955:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( xStatus == pdPASS )
 956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( SOCKETS_Connect( pxConnection->xSocket, &xMQTTServerAddress, sizeof( xMQTTServe
 958:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 959:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     xStatus = pdFAIL;
 960:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 961:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 962:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 963:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( xStatus == pdPASS )
 964:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 965:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Do not block now onwards. */
 966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 ( void ) SOCKETS_SetSockOpt( pxConnection->xSocket,
 967:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              0 /* Unused. */,
 968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              SOCKETS_SO_NONBLOCK,
 969:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              NULL /* Unused. */,
 970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              0 /* Unused. */ );
 971:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 972:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             else
 973:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 974:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Connection Failed. */
 975:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 prvGracefulSocketClose( pxConnection );
 976:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 977:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 978:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
 979:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 980:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xStatus = pdFAIL;
 981:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 982:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 983:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
 984:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 985:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Malformed URL %s.\r\n", pxEventData->u.pxConnectParams->pcURL ) );
 986:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xStatus = pdFAIL;
 987:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 988:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 989:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xStatus;
 990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 991:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 992:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvGracefulSocketClose( MQTTBrokerConnection_t * const pxConnection )
 994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xShortDelay = pdMS_TO_TICKS( 10 );
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TickType_t xTicksToWait = xShortDelay * ( TickType_t ) 100;
 997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimeOut;
 998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     mqttconfigDEBUG_LOG( ( "About to close socket.\r\n" ) );
1000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1001:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Initialize xTimeOut.  This records the time at which this function was
1002:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * entered. */
1003:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     vTaskSetTimeOutState( &xTimeOut );
1004:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Shutdown the connection. */
1006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     ( void ) SOCKETS_Shutdown( pxConnection->xSocket, SOCKETS_SHUT_RDWR );
1007:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Wait for the socket to disconnect gracefully (indicated by a
1009:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * SOCKETS_ERRNO_EINVAL error) before closing the socket. */
1010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     while( SOCKETS_Recv( pxConnection->xSocket, pxConnection->ucRxBuffer, sizeof( pxConnection->ucR
1011:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1012:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         vTaskDelay( xShortDelay );
1013:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) != pdFALSE )
1015:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1016:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Timed out before the wanted number of bytes were available, exit
1017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * the loop. */
1018:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
1019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Close the socket. */
1023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     ( void ) SOCKETS_Close( pxConnection->xSocket );
1024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxConnection->xSocket = SOCKETS_INVALID_SOCKET;
1025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     mqttconfigDEBUG_LOG( ( "Socket closed.\r\n" ) );
1026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1027:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
1028:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1029:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Print the stack high watermark for the MQTT task. */
1030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "Stack high watermark for MQTT task: %u\r\n", uxTaskGetStackHigh
1031:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1032:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     #endif
1033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1035:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1036:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvMQTTClientSocketWakeupCallback( Socket_t pxSocket )
1037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xTicksToWait = pdMS_TO_TICKS( 20 );
1039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
1040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1041:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Just to avoid compiler warnings.  The socket is not used but the function
1042:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * prototype cannot be changed because this is a callback function. */
1043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     ( void ) pxSocket;
1044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1045:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Should not be possible to get here without the task having been
1046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * created! */
1047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     configASSERT( xMQTTTaskHandle );
1048:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1049:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* A socket used by the MQTT task may need attention.  Send an event
1050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * to the MQTT task to make sure the task is not blocked on xCommandQueue.
1051:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * There is only any need to do this if there are no messages already in the
1052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * queue, as if there are, the task won't block anyway. */
1053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( uxQueueMessagesWaiting( xCommandQueue ) == ( UBaseType_t ) 0 )
1054:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1055:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The eMQTTServiceSocket event is not handled directly, it is only used
1056:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * to unblock the MQTT task, so only the xEventType needs to be set. */
1057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         memset( &xEventData, 0x00, sizeof( MQTTEventData_t ) );
1058:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xEventData.xEventType = eMQTTServiceSocket;
1059:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Socket sending wakeup to MQTT task.\r\n" ) );
1060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         ( void ) xQueueSendToBack( xCommandQueue, &xEventData, xTicksToWait );
1061:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1063:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1064:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1065:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedCONNACK( MQTTBrokerConnection_t * const pxConnection,
1066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                        const MQTTEventCallbackParams_t * const pxParams )
1067:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1068:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1069:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Retrieve the notification data for the task which initiated the Connect operation.*/
1071:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvRetrieveNotificationData( pxConnection, pxParams->u.xMQTTConnACKData.us
1072:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1073:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If there is no task waiting for it, ignore it. */
1074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1076:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxParams->u.xMQTTConnACKData.xConnACKReturnCode == eMQTTConnACKConnectionAccepted )
1077:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1078:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT Connect was accepted. Connection established.\r\n" ) );
1079:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( pxNotificationData, eMQTTCONNACKConnectionAccepted, pdPASS );
1080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1081:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1082:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1083:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* We must not unblock the task which initiated the connect
1084:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * operation from here. The reason is that TCP socket is
1085:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * still connected and if the task re-tries the connect
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * operation it will attempt to call connect on an already
1087:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * connected socket. If the broker rejects the connection,
1088:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * we get a disconnect from the core library also which is
1089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * when we unblock the task. This ensures the connect is not
1090:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * re-tried until the socket is closed. */
1091:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT Connect was rejected with error %d.\r\n", pxParams->u.xMQT
1092:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1093:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1094:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1095:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1096:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1097:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedSUBACK( MQTTBrokerConnection_t * const pxConnection,
1098:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                       const MQTTEventCallbackParams_t * const pxParams )
1099:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1101:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1102:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Retrieve the notification data for the task which initiated the Subscribe operation.*/
1103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvRetrieveNotificationData( pxConnection, pxParams->u.xMQTTSubACKData.usP
1104:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If there is no task waiting for it, ignore it. */
1106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1107:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxParams->u.xMQTTSubACKData.xSubACKReturnCode != eMQTTSubACKFailure )
1109:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT Subscribe was accepted. Subscribed.\r\n" ) );
1111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( pxNotificationData, eMQTTSUBACKSubscriptionAccepted, pdPASS );
1112:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1113:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1114:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT Subscribe was rejected.\r\n" ) );
1116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( pxNotificationData, eMQTTSUBACKSubscriptionRejected, pdFAIL );
1117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1118:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1119:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1122:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedUNSUBACK( MQTTBrokerConnection_t * const pxConnection,
1123:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         const MQTTEventCallbackParams_t * const pxParams )
1124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1126:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Retrieve the notification data for the task which initiated the Unsubscribe operation.*/
1128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvRetrieveNotificationData( pxConnection, pxParams->u.xMQTTUnSubACKData.u
1129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1130:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If there is no task waiting for it, ignore it. */
1131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1132:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1133:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Otherwise inform the task. */
1134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "MQTT Unsubscribe was successful.\r\n" ) );
1135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( pxNotificationData, eMQTTUNSUBACKReceived, pdPASS );
1136:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1138:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1139:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1140:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedPUBACK( MQTTBrokerConnection_t * const pxConnection,
1141:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                       const MQTTEventCallbackParams_t * const pxParams )
1142:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1143:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1144:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1145:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Retrieve the notification data for the task which initiated the Publish operation.*/
1146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvRetrieveNotificationData( pxConnection, pxParams->u.xMQTTPubACKData.usP
1147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1148:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If there is no task waiting for it, ignore it. */
1149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Otherwise inform the task. */
1152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "MQTT Publish was successful.\r\n" ) );
1153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( pxNotificationData, eMQTTPUBACKReceived, pdPASS );
1154:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1155:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1156:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1158:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static BaseType_t prvProcessReceivedPublish( MQTTBrokerConnection_t * const pxConnection,
1159:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              const MQTTEventCallbackParams_t * const pxParams )
1160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1161:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xReturn = pdFALSE;
1162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentCallbackParams_t xCallbackParams;
1163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1164:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Either the user has not enabled subscription management, or the
1165:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * publish message was received on a topic for which the user has not
1166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * registered any topic specific callback. If the user has registered
1167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * a generic callback, invoke it otherwise the user is not interested
1168:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * in the messages and therefore ignore it. */
1169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxConnection->pxCallback != NULL )
1170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xCallbackParams.xMQTTEvent = eMQTTAgentPublish;
1172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xCallbackParams.u.xPublishData = pxParams->u.xPublishData;
1173:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturn = pxConnection->pxCallback( pxConnection->pvUserData, &( xCallbackParams ) );
1175:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1176:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturn;
1178:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1179:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1181:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedTimeout( MQTTBrokerConnection_t * const pxConnection,
1182:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                        const MQTTEventCallbackParams_t * const pxParams )
1183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1186:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Try to see if there is a task waiting for the operation which just timed out. */
1187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvRetrieveNotificationData( pxConnection, pxParams->u.xTimeoutData.usPack
1188:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If there is no task waiting, just ignore. Otherwise
1190:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * inform the task about the timeout. */
1191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "MQTT Timeout.\r\n" ) );
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( pxNotificationData, eMQTTOperationTimedOut, pdFAIL );
1195:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1196:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1197:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1198:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvProcessReceivedDisconnect( MQTTBrokerConnection_t * const pxConnection,
1200:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                           const MQTTEventCallbackParams_t * const pxParams )
1201:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x;
1203:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentCallbackParams_t xCallbackParams;
1204:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Remove compiler warnings about unused parameters. */
1206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     ( void ) pxParams;
1207:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Only process the disconnect event if the client is connected. */
1209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxConnection->xSocket != SOCKETS_INVALID_SOCKET )
1210:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1211:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Inform the user about the disconnect, if a callback is registered. */
1212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxConnection->pxCallback != NULL )
1213:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xCallbackParams.xMQTTEvent = eMQTTAgentDisconnect;
1215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( void ) pxConnection->pxCallback( pxConnection->pvUserData, &( xCallbackParams ) );
1216:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1217:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1218:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Close the connection. */
1219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvGracefulSocketClose( pxConnection );
1220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1222:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Unblock all the tasks which are waiting for ACKs because
1223:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * we won't get any ACK after getting disconnected. Note that
1224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * if a user calls MQTT_AGENT_Disconnect, we do not store
1225:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * the notification data (see prvInitiateMQTTDisconnect) and
1226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * therefore we won't unblock the task from here. Instead the
1227:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * task calling MQTT_AGENT_Disconnect gets unblocked from
1228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * prvInitiateMQTTDisconnect and therefore receives a success
1229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * return code. */
1230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     for( x = 0; x < ( UBaseType_t ) mqttconfigMAX_PARALLEL_OPS; x++ )
1231:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxConnection->xWaitingTasks[ x ].xTaskToNotify != NULL )
1233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( &( pxConnection->xWaitingTasks[ x ] ),
1235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      eMQTTClientGotDisconnected,
1236:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      pdFAIL );
1237:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1238:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1242:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvNotifyRequestingTask( MQTTNotificationData_t * const pxNotificationData,
1243:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      MQTTNotifyCodes_t xNotificationCode,
1244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      UBaseType_t uxStatus )
1245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
  76              		.loc 1 1245 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL7:
1246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData->xTaskToNotify != NULL )
  81              		.loc 1 1246 0
  82 0000 003090E5 		ldr	r3, [r0]
  83 0004 000053E3 		cmp	r3, #0
  84 0008 1EFF2F01 		bxeq	lr
1245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData->xTaskToNotify != NULL )
  85              		.loc 1 1245 0
  86 000c 70402DE9 		push	{r4, r5, r6, lr}
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 4, -16
  89              		.cfi_offset 5, -12
  90              		.cfi_offset 6, -8
  91              		.cfi_offset 14, -4
  92 0010 0050A0E1 		mov	r5, r0
1247:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* ulMessageIdentifier only uses the top 16-bits.  The status code uses
1249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * the low 16-bits, of which the least significant bit is used to indicate
1250:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * if the operation passed or failed. */
1251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Notifying task.\r\n" ) );
  93              		.loc 1 1251 0
  94 0014 34009FE5 		ldr	r0, .L18
  95              	.LVL8:
  96 0018 0260A0E1 		mov	r6, r2
  97 001c 0140A0E1 		mov	r4, r1
  98 0020 FEFFFFEB 		bl	vLoggingPrintf
  99              	.LVL9:
1252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1253:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Encode the notification code and status in the notification value. */
1254:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxNotificationData->ulMessageIdentifier |= ( UBaseType_t ) xNotificationCode;
1255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxNotificationData->ulMessageIdentifier |= uxStatus;
 100              		.loc 1 1255 0
 101 0024 042095E5 		ldr	r2, [r5, #4]
 102 0028 061084E1 		orr	r1, r4, r6
1256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1257:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Notify the task. */
1258:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         ( void ) xTaskNotify( pxNotificationData->xTaskToNotify, pxNotificationData->ulMessageIdent
 103              		.loc 1 1258 0
 104 002c 0030A0E3 		mov	r3, #0
 105 0030 000095E5 		ldr	r0, [r5]
1255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 106              		.loc 1 1255 0
 107 0034 021081E1 		orr	r1, r1, r2
 108              		.loc 1 1258 0
 109 0038 0420A0E3 		mov	r2, #4
1255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 110              		.loc 1 1255 0
 111 003c 041085E5 		str	r1, [r5, #4]
 112              		.loc 1 1258 0
 113 0040 FEFFFFEB 		bl	xTaskGenericNotify
 114              	.LVL10:
1259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Free up the buffer for further use. */
1261:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxNotificationData->xTaskToNotify = NULL;
 115              		.loc 1 1261 0
 116 0044 0030A0E3 		mov	r3, #0
 117 0048 003085E5 		str	r3, [r5]
 118 004c 7080BDE8 		pop	{r4, r5, r6, pc}
 119              	.L19:
 120              		.align	2
 121              	.L18:
 122 0050 00000000 		.word	.LC0
 123              		.cfi_endproc
 124              	.LFE17:
 126              		.section	.text.prvStoreNotificationData,"ax",%progbits
 127              		.align	2
 128              		.syntax unified
 129              		.arm
 130              		.fpu neon
 132              	prvStoreNotificationData:
 133              	.LFB5:
 807:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x;
 134              		.loc 1 807 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL11:
 813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 140              		.loc 1 813 0
 141 0000 0030A0E3 		mov	r3, #0
 142              	.LVL12:
 143              	.L23:
 815:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 144              		.loc 1 815 0
 145 0004 832180E0 		add	r2, r0, r3, lsl #3
 146 0008 E82492E5 		ldr	r2, [r2, #1256]
 147 000c 000052E3 		cmp	r2, #0
 148 0010 0600001A 		bne	.L21
 819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             memcpy( pxNotificationData, &( pxEventData->xNotificationData ), sizeof( MQTTNotificati
 149              		.loc 1 819 0
 150 0014 9D3083E2 		add	r3, r3, #157
 151              	.LVL13:
 820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 152              		.loc 1 820 0
 153 0018 081081E2 		add	r1, r1, #8
 154              	.LVL14:
 819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             memcpy( pxNotificationData, &( pxEventData->xNotificationData ), sizeof( MQTTNotificati
 155              		.loc 1 819 0
 156 001c 833180E0 		add	r3, r0, r3, lsl #3
 157              	.LVL15:
 820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 158              		.loc 1 820 0
 159 0020 030091E8 		ldm	r1, {r0, r1}
 160              	.LVL16:
 161 0024 030083E8 		stm	r3, {r0, r1}
 162              	.LVL17:
 163              	.L20:
 826:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 164              		.loc 1 826 0
 165 0028 0300A0E1 		mov	r0, r3
 166 002c 1EFF2FE1 		bx	lr
 167              	.LVL18:
 168              	.L21:
 813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 169              		.loc 1 813 0 discriminator 2
 170 0030 013083E2 		add	r3, r3, #1
 171              	.LVL19:
 172 0034 050053E3 		cmp	r3, #5
 173 0038 F1FFFF1A 		bne	.L23
 809:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 174              		.loc 1 809 0
 175 003c 0030A0E3 		mov	r3, #0
 176              	.LVL20:
 825:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 177              		.loc 1 825 0
 178 0040 F8FFFFEA 		b	.L20
 179              		.cfi_endproc
 180              	.LFE5:
 182              		.section	.text.prvMQTTGetTicks,"ax",%progbits
 183              		.align	2
 184              		.syntax unified
 185              		.arm
 186              		.fpu neon
 188              	prvMQTTGetTicks:
 189              	.LFB2:
 745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimeout;
 190              		.loc 1 745 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 8
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              	.LVL21:
 195 0000 13402DE9 		push	{r0, r1, r4, lr}
 196              		.cfi_def_cfa_offset 16
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 14, -4
 745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimeout;
 199              		.loc 1 745 0
 200 0004 0040A0E1 		mov	r4, r0
 749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 201              		.loc 1 749 0
 202 0008 0D00A0E1 		mov	r0, sp
 203              	.LVL22:
 204 000c FEFFFFEB 		bl	vTaskSetTimeOutState
 205              	.LVL23:
 752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     *pxCurrentTickCount <<= 32;
 206              		.loc 1 752 0
 207 0010 00309DE5 		ldr	r3, [sp]
 754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 208              		.loc 1 754 0
 209 0014 04109DE5 		ldr	r1, [sp, #4]
 752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     *pxCurrentTickCount <<= 32;
 210              		.loc 1 752 0
 211 0018 903B80EE 		vdup.32	d16, r3
 212 001c B000E0F2 		vshr.s64	d16, d16, #32
 753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     *pxCurrentTickCount |= xTimeout.xTimeOnEntering;
 213              		.loc 1 753 0
 214 0020 B015E0F2 		vshl.u64	d17, d16, #32
 215 0024 312B53EC 		vmov	r2, r3, d17	@ int
 754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 216              		.loc 1 754 0
 217 0028 012082E1 		orr	r2, r2, r1
 218 002c F020C4E1 		strd	r2, [r4]
 755:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 219              		.loc 1 755 0
 220 0030 08D08DE2 		add	sp, sp, #8
 221              		.cfi_def_cfa_offset 8
 222              		@ sp needed
 223 0034 1080BDE8 		pop	{r4, pc}
 224              		.cfi_endproc
 225              	.LFE2:
 227              		.section	.text.prvGracefulSocketClose,"ax",%progbits
 228              		.align	2
 229              		.syntax unified
 230              		.arm
 231              		.fpu neon
 233              	prvGracefulSocketClose:
 234              	.LFB8:
 994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xShortDelay = pdMS_TO_TICKS( 10 );
 235              		.loc 1 994 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 16
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL24:
 240 0000 30402DE9 		push	{r4, r5, lr}
 241              		.cfi_def_cfa_offset 12
 242              		.cfi_offset 4, -12
 243              		.cfi_offset 5, -8
 244              		.cfi_offset 14, -4
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimeOut;
 245              		.loc 1 996 0
 246 0004 FA3FA0E3 		mov	r3, #1000
 994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xShortDelay = pdMS_TO_TICKS( 10 );
 247              		.loc 1 994 0
 248 0008 14D04DE2 		sub	sp, sp, #20
 249              		.cfi_def_cfa_offset 32
 994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xShortDelay = pdMS_TO_TICKS( 10 );
 250              		.loc 1 994 0
 251 000c 0040A0E1 		mov	r4, r0
1006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 252              		.loc 1 1006 0
 253 0010 0450A0E1 		mov	r5, r4
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 254              		.loc 1 999 0
 255 0014 84009FE5 		ldr	r0, .L35
 256              	.LVL25:
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimeOut;
 257              		.loc 1 996 0
 258 0018 04308DE5 		str	r3, [sp, #4]
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 259              		.loc 1 999 0
 260 001c FEFFFFEB 		bl	vLoggingPrintf
 261              	.LVL26:
1003:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 262              		.loc 1 1003 0
 263 0020 08008DE2 		add	r0, sp, #8
 264 0024 FEFFFFEB 		bl	vTaskSetTimeOutState
 265              	.LVL27:
1006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 266              		.loc 1 1006 0
 267 0028 0210A0E3 		mov	r1, #2
 268 002c 200595E4 		ldr	r0, [r5], #1312
 269 0030 FEFFFFEB 		bl	SOCKETS_Shutdown
 270              	.LVL28:
 271              	.L28:
1010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 272              		.loc 1 1010 0
 273 0034 0030A0E3 		mov	r3, #0
 274 0038 012BA0E3 		mov	r2, #1024
 275 003c 0510A0E1 		mov	r1, r5
 276 0040 000094E5 		ldr	r0, [r4]
 277 0044 FEFFFFEB 		bl	SOCKETS_Recv
 278              	.LVL29:
 279 0048 000050E3 		cmp	r0, #0
 280 004c 060000BA 		blt	.L30
1012:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 281              		.loc 1 1012 0
 282 0050 0A00A0E3 		mov	r0, #10
 283 0054 FEFFFFEB 		bl	vTaskDelay
 284              	.LVL30:
1014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 285              		.loc 1 1014 0
 286 0058 04108DE2 		add	r1, sp, #4
 287 005c 08008DE2 		add	r0, sp, #8
 288 0060 FEFFFFEB 		bl	xTaskCheckForTimeOut
 289              	.LVL31:
 290 0064 000050E3 		cmp	r0, #0
 291 0068 F1FFFF0A 		beq	.L28
 292              	.L30:
1023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxConnection->xSocket = SOCKETS_INVALID_SOCKET;
 293              		.loc 1 1023 0
 294 006c 000094E5 		ldr	r0, [r4]
 295 0070 FEFFFFEB 		bl	SOCKETS_Close
 296              	.LVL32:
1024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     mqttconfigDEBUG_LOG( ( "Socket closed.\r\n" ) );
 297              		.loc 1 1024 0
 298 0074 0030E0E3 		mvn	r3, #0
1025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 299              		.loc 1 1025 0
 300 0078 24009FE5 		ldr	r0, .L35+4
1024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     mqttconfigDEBUG_LOG( ( "Socket closed.\r\n" ) );
 301              		.loc 1 1024 0
 302 007c 003084E5 		str	r3, [r4]
1025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 303              		.loc 1 1025 0
 304 0080 FEFFFFEB 		bl	vLoggingPrintf
 305              	.LVL33:
1030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 306              		.loc 1 1030 0
 307 0084 0000A0E3 		mov	r0, #0
 308 0088 FEFFFFEB 		bl	uxTaskGetStackHighWaterMark
 309              	.LVL34:
 310 008c 0010A0E1 		mov	r1, r0
 311 0090 10009FE5 		ldr	r0, .L35+8
 312 0094 FEFFFFEB 		bl	vLoggingPrintf
 313              	.LVL35:
1033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 314              		.loc 1 1033 0
 315 0098 14D08DE2 		add	sp, sp, #20
 316              		.cfi_def_cfa_offset 12
 317              		@ sp needed
 318 009c 3080BDE8 		pop	{r4, r5, pc}
 319              	.LVL36:
 320              	.L36:
 321              		.align	2
 322              	.L35:
 323 00a0 00000000 		.word	.LC1
 324 00a4 19000000 		.word	.LC2
 325 00a8 2A000000 		.word	.LC3
 326              		.cfi_endproc
 327              	.LFE8:
 329              		.section	.text.prvMQTTTask,"ax",%progbits
 330              		.align	2
 331              		.syntax unified
 332              		.arm
 333              		.fpu neon
 335              	prvMQTTTask:
 336              	.LFB25:
1262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1263:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static TickType_t prvManageConnections( void )
1267:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t uxBrokerNumber;
1269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
1270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xAnyConnectedClient = pdFALSE;
1271:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     int32_t lBytesReceived;
1272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TickType_t xNextMQTTPeriodicInvokeTicks, xNextTimeoutTicks = portMAX_DELAY;
1273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint64_t xTickCount = 0;
1274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1275:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* For each broker the MQTT task might be connected to. */
1276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     for( uxBrokerNumber = 0; uxBrokerNumber < ( UBaseType_t ) mqttconfigMAX_BROKERS; uxBrokerNumber
1277:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1278:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxConnection = &( xMQTTConnections[ uxBrokerNumber ] );
1279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1280:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Process only the connected clients. */
1281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxConnection->xSocket != SOCKETS_INVALID_SOCKET )
1282:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Read data from the socket. */
1284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             lBytesReceived = SOCKETS_Recv( pxConnection->xSocket, pxConnection->ucRxBuffer, mqttcon
1285:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* If data was read, pass it to the MQTT Core library. */
1287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( lBytesReceived > 0 )
1288:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 ( void ) MQTT_ParseReceivedData( &( pxConnection->xMQTTContext ), pxConnection->ucR
1290:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1291:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Some data was received on this socket and we do not
1292:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * know if there is more data available. Therefore we
1293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * set xNextTimeoutTicks to zero which ensures that we
1294:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * do not block on the command queue and try to read
1295:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * again from this socket on the next invocation of
1296:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * prvManageConnections. This way we ensure that we keep
1297:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * processing commands received on the command queue
1298:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * between calls to SOCKETS_Recv. As a result, a socket
1299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * receiving lots of data continuously does not starve
1300:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * the command processing. */
1301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 xNextTimeoutTicks = 0;
1302:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             else if( lBytesReceived < 0 )
1304:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* A negative return value from SOCKETS_Recv indicates error.
1306:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * Since the socket is marked non-blocking, read can potentially
1307:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * return SOCKETS_EWOULDBLOCK in which case we will re-try to
1308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * read on the next execution of this function. In case of any
1309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * other error, we disconnect. */
1310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( lBytesReceived != SOCKETS_EWOULDBLOCK )
1311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
1312:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     /* Disconnect from the broker. Note that the socket close
1313:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                      * and cleanup will happen in the disconnect callback
1314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                      * ( prvProcessReceivedDisconnect function ) from the core
1315:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                      * MQTT library. */
1316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( void ) MQTT_Disconnect( &( pxConnection->xMQTTContext ) );
1317:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
1318:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1319:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             else
1320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1321:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* If no data was received on this socket, we continue
1322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * to call MQTT_Periodic and calculate xNextTimeoutTicks
1323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * accordingly. */
1324:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1326:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Is the client connected? */
1328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( ( xAnyConnectedClient == pdFALSE ) && ( pxConnection->xSocket != SOCKETS_INVALID_SOCKET
1329:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xAnyConnectedClient = pdTRUE;
1331:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Get the current tick count. */
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvMQTTGetTicks( &xTickCount );
1335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Invoke MQTT_Periodic. */
1337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xNextMQTTPeriodicInvokeTicks = ( TickType_t ) MQTT_Periodic( &( pxConnection->xMQTTContext 
1338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Update the next timeout value. */
1340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xNextTimeoutTicks = configMIN( xNextTimeoutTicks, xNextMQTTPeriodicInvokeTicks );
1341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1342:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The MQTT task must not block for more than mqttconfigMQTT_TASK_MAX_BLOCK_TICKS
1344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * ticks if any client is connected. */
1345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xAnyConnectedClient == pdTRUE )
1346:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xNextTimeoutTicks = configMIN( xNextTimeoutTicks, ( TickType_t ) mqttconfigMQTT_TASK_MAX_BL
1348:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1349:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1350:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The return value indicates when the MQTT task should wake up next. */
1351:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xNextTimeoutTicks;
1352:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1353:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTConnect( MQTTEventData_t * const pxEventData )
1356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1357:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdFAIL;
1358:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1359:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTConnectParams_t xConnectParams;
1360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection = &( xMQTTConnections[ pxEventData->uxBrokerNumber ] );
1361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Store notification data. */
1363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvStoreNotificationData( pxConnection, pxEventData );
1364:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1365:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If a free buffer was not available to store the  notification data
1366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * (i.e. mqttconfigMAX_PARALLEL_OPS tasks are already in progress), fail
1367:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * immediately. */
1368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1369:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1370:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Store the user data and callback. */
1371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxConnection->pvUserData = pxEventData->u.pxConnectParams->pvUserData;
1372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxConnection->pxCallback = pxEventData->u.pxConnectParams->pxCallback;
1373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1374:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Check if the connection is to be secured. */
1375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( ( pxEventData->u.pxConnectParams->xSecuredConnection == pdFALSE ) &&
1376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentREQUIRE_TLS ) == 0 ) )
1377:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxConnection->uxFlags &= ~mqttCONNECTION_SECURED;
1379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1380:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1381:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxConnection->uxFlags |= mqttCONNECTION_SECURED;
1383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1384:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1385:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Establish the TCP connection. */
1386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xStatus = prvSetupConnection( pxEventData );
1387:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1388:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( xStatus == pdPASS )
1389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1390:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             #if ( mqttconfigENABLE_METRICS == 1 )
1391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 mqttconfigDEBUG_LOG( ( "Anonymous metrics will be collected. Recompile with"
1392:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                 "mqttconfigENABLE_METRICS set to 0 to disable.\r\n" ) );
1393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             #endif
1394:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Setup connect parameters and call the Core library connect function. */
1396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.pucClientId = pxEventData->u.pxConnectParams->pucClientId;
1397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usClientIdLength = pxEventData->u.pxConnectParams->usClientIdLength;
1398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.pucUserName = ( const uint8_t * ) cUserName;
1399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usUserNameLength = usUserNameLength;
1400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usKeepAliveIntervalSeconds = mqttconfigKEEP_ALIVE_INTERVAL_SECONDS;
1401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.ulKeepAliveActualIntervalTicks = mqttconfigKEEP_ALIVE_ACTUAL_INTERVAL_TI
1402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.ulPingRequestTimeoutTicks = mqttconfigKEEP_ALIVE_TIMEOUT_TICKS;
1403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEv
1404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.ulTimeoutTicks = pxEventData->xTicksToWait;
1405:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( MQTT_Connect( &( pxConnection->xMQTTContext ), &( xConnectParams ) ) != eMQTTSucces
1407:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 mqttconfigDEBUG_LOG( ( "MQTT_Connect failed!\r\n" ) );
1409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* The TCP connection was successful but we failed to send
1411:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * the MQTT Connect message. This could happen because of
1412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * multiple reasons like a free buffer from the buffer pool
1413:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * was not available to construct the MQTT Connect message
1414:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * or the network send failed. The TCP Connection must be
1415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * closed in this case to avoid leaking sockets. */
1416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 prvGracefulSocketClose( pxConnection );
1417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1418:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Set the status to fail. */
1419:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 xStatus = pdFAIL;
1420:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1421:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1422:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1423:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xStatus == pdFAIL )
1425:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1426:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The Connect request was never sent.  Inform the task that initiated
1427:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * the Connect operation. */
1428:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTCONNCouldNotBeSent, pdFA
1429:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1430:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* If a buffer was used to store notification data, return it. */
1431:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxNotificationData != NULL )
1432:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1433:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxNotificationData->xTaskToNotify = NULL;
1434:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1435:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1436:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1437:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1438:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1439:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTDisconnect( MQTTEventData_t * const pxEventData )
1440:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1441:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection = &( xMQTTConnections[ pxEventData->uxBrokerNumber ] );
1442:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1443:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* There is no need to store notification data as we will
1444:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * not get any ACK. Try to send MQTT Disconnect message and
1445:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * inform the application task about the result. Note that
1446:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * the socket is closed when we receive disconnect event from
1447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * the MQTT core library in the registered callback (see
1448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * prvProcessReceivedDisconnect). */
1449:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( MQTT_Disconnect( &( pxConnection->xMQTTContext ) ) == eMQTTSuccess )
1450:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTDISCONNSent, pdPASS );
1452:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1453:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
1454:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTDISCONNCouldNotBeSent, p
1456:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1457:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1458:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1459:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1460:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTSubscribe( MQTTEventData_t * const pxEventData )
1461:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1462:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdFAIL;
1463:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1464:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTSubscribeParams_t xSubscribeParams;
1465:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection = &( xMQTTConnections[ pxEventData->uxBrokerNumber ] );
1466:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1467:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Store notification data. */
1468:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvStoreNotificationData( pxConnection, pxEventData );
1469:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1470:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If a free buffer was not available to store the	notification data
1471:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * (i.e. mqttconfigMAX_PARALLEL_OPS tasks are already in progress), fail
1472:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * immediately. */
1473:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1475:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Setup subscribe parameters and call the Core library subscribe function. */
1476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.pucTopic = pxEventData->u.pxSubscribeParams->pucTopic;
1477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.usTopicLength = pxEventData->u.pxSubscribeParams->usTopicLength;
1478:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.xQos = pxEventData->u.pxSubscribeParams->xQoS;
1479:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEven
1480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.ulTimeoutTicks = pxEventData->xTicksToWait;
1481:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xSubscribeParams.pvPublishCallbackContext = pxEventData->u.pxSubscribeParams->pvPublish
1483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xSubscribeParams.pxPublishCallback = pxEventData->u.pxSubscribeParams->pxPublishCallbac
1484:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1485:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( MQTT_Subscribe( &( pxConnection->xMQTTContext ), &( xSubscribeParams ) ) == eMQTTSucces
1487:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1488:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xStatus = pdPASS;
1489:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1490:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1491:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT_Subscribe failed!\r\n" ) );
1493:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1495:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
1496:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Could not get a buffer to store notification data. Too many paralle
1498:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1499:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1500:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xStatus == pdFAIL )
1501:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1502:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The Subscribe request was never sent.  Inform the task that initiated
1503:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * the Subscribe operation. */
1504:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTSUBCouldNotBeSent, pdFAI
1505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1506:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* If a buffer was used to store notification data, return it. */
1507:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxNotificationData != NULL )
1508:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1509:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxNotificationData->xTaskToNotify = NULL;
1510:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1511:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1512:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1513:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1514:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1515:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTUnSubscribe( MQTTEventData_t * const pxEventData )
1516:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1517:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdFAIL;
1518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData;
1519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTUnsubscribeParams_t xUnsubscribeParams;
1520:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection = &( xMQTTConnections[ pxEventData->uxBrokerNumber ] );
1521:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1522:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Store notification data. */
1523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxNotificationData = prvStoreNotificationData( pxConnection, pxEventData );
1524:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1525:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If a free buffer was not available to store the	notification data
1526:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * (i.e. mqttconfigMAX_PARALLEL_OPS tasks are already in progress), fail
1527:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * immediately. */
1528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxNotificationData != NULL )
1529:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1530:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Setup unsubscribe parameters and call the Core library unsubscribe
1531:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * function. */
1532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.pucTopic = pxEventData->u.pxUnsubscribeParams->pucTopic;
1533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usTopicLength = pxEventData->u.pxUnsubscribeParams->usTopicLength;
1534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEv
1535:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.ulTimeoutTicks = pxEventData->xTicksToWait;
1536:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( MQTT_Unsubscribe( &( pxConnection->xMQTTContext ), &( xUnsubscribeParams ) ) == eMQTTSu
1538:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1539:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xStatus = pdPASS;
1540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1541:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1542:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1543:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT_Unsubscribe failed!\r\n" ) );
1544:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1545:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
1547:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Could not get a buffer to store notification data. Too many paralle
1549:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1550:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1551:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xStatus == pdFAIL )
1552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1553:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The Unsubscribe request was never sent.  Inform the task that initiated
1554:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * the Unsubscribe operation. */
1555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTUNSUBCouldNotBeSent, pdF
1556:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1557:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* If a buffer was used to store notification data, return it. */
1558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxNotificationData != NULL )
1559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1560:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxNotificationData->xTaskToNotify = NULL;
1561:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1563:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1564:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1565:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvInitiateMQTTPublish( MQTTEventData_t * const pxEventData )
1567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1568:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdFAIL;
1569:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTNotificationData_t * pxNotificationData = NULL;
1570:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTPublishParams_t xPublishParams;
1571:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection = &( xMQTTConnections[ pxEventData->uxBrokerNumber ] );
1572:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1573:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* No need to store  notification data in case of QoS0 because
1574:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * there will not be any ACK. */
1575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxEventData->u.pxPublishParams->xQoS != eMQTTQoS0 )
1576:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1577:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxNotificationData = prvStoreNotificationData( pxConnection, pxEventData );
1578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1579:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If a free buffer was not available to store the notification data
1581:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * (i.e. mqttconfigMAX_PARALLEL_OPS tasks are already in progress), fail
1582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * immediately. We don't store notification data in case of QoS0, so
1583:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * proceed anyways. */
1584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( ( pxNotificationData != NULL ) || ( pxEventData->u.pxPublishParams->xQoS == eMQTTQoS0 ) )
1585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1586:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Setup publish parameters and call the Core library publish function. */
1587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.pucTopic = pxEventData->u.pxPublishParams->pucTopic;
1588:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.usTopicLength = pxEventData->u.pxPublishParams->usTopicLength;
1589:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.xQos = pxEventData->u.pxPublishParams->xQoS;
1590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.pvData = pxEventData->u.pxPublishParams->pvData;
1591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.ulDataLength = pxEventData->u.pxPublishParams->ulDataLength;
1592:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEventD
1593:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.ulTimeoutTicks = pxEventData->xTicksToWait;
1594:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( MQTT_Publish( &( pxConnection->xMQTTContext ), &( xPublishParams ) ) == eMQTTSuccess )
1596:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1597:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xStatus = pdPASS;
1598:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1599:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1600:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1601:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "MQTT_Publish failed!\r\n" ) );
1602:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1603:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
1605:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1606:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Could not get a buffer to store notification data. Too many paralle
1607:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1609:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* In case of QoS0 successful publish, inform and unblock the task that
1610:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * initiated the publish operation as no PUBACK is expected. */
1611:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( ( xStatus == pdPASS ) && ( pxEventData->u.pxPublishParams->xQoS == eMQTTQoS0 ) )
1612:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1613:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTPUBSent, pdPASS );
1614:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1615:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1616:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xStatus == pdFAIL )
1617:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The Publish was not successful.  Inform the task that initiated
1619:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * the Publish operation. */
1620:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( &( pxEventData->xNotificationData ), eMQTTPUBCouldNotBeSent, pdFAI
1621:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1622:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* If a buffer was used to store notification data, return it. */
1623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( pxNotificationData != NULL )
1624:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxNotificationData->xTaskToNotify = NULL;
1626:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1627:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1628:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1630:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static MQTTAgentReturnCode_t prvSendCommandToMQTTTask( MQTTEventData_t * pxEventData )
1632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
1633:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xReturn;
1634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode = eMQTTAgentFailure;
1635:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint32_t ulReceivedMessageIdentifier;
1636:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1637:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Should not try to send commands until after the MQTT task has been
1638:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * initialized, in which case the command queue will have been created. */
1639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     configASSERT( xCommandQueue );
1640:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1641:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Setup notification data. */
1642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     pxEventData->xNotificationData.xTaskToNotify = xTaskGetCurrentTaskHandle();
1643:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1644:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Commands must not be sent from the MQTT task itself (which could be
1645:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * the case if a command is sent from a callback function).  Otherwise
1646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * there is the possibility that the task could end up waiting for itself
1647:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * resulting in deadlock. */
1648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( pxEventData->xNotificationData.xTaskToNotify != xMQTTTaskHandle )
1649:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         taskENTER_CRITICAL();
1651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1652:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* The message identifier is used to know which message is being
1653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * acknowledged.  A critical region is used as a single message identifier
1654:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * variable is used by all connections. The identifier uses the top 16-bits
1655:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * of the 32-bit word, leaving the lowest 16-bits free for use by the MQTT
1656:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * task to return a status code. */
1657:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             pxEventData->xNotificationData.ulMessageIdentifier = ulQueueMessageIdentifier;
1658:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ulQueueMessageIdentifier += mqttMESSAGE_IDENTIFIER_MIN;
1659:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( ulQueueMessageIdentifier >= mqttMESSAGE_IDENTIFIER_MAX )
1661:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1662:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 ulQueueMessageIdentifier = mqttMESSAGE_IDENTIFIER_MIN;
1663:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         taskEXIT_CRITICAL();
1666:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1667:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Record the time at which this event is created. */
1668:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         vTaskSetTimeOutState( &( pxEventData->xEventCreationTimestamp ) );
1669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1670:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The calling task is going to wait for a notification, so clear the
1671:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * notifications state first.  This is probably not necessary as the task will
1672:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * wait for a particular notification value, but is for maximum robustness. */
1673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         ( void ) xTaskNotifyStateClear( NULL );
1674:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1675:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The MQTT protocol is running in a separate task, to which commands
1676:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * are sent on a queue, and a signal is sent back using a task
1677:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * notification. */
1678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "Sending command to MQTT task.\r\n" ) );
1679:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturn = xQueueSendToBack( xCommandQueue, pxEventData, pxEventData->xTicksToWait );
1680:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1681:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( xReturn != pdFALSE )
1682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Ensure ulReceivedMessageIdentifier does not accidentally equal
1684:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * xEventData.ulMessageIdentifier as it will be checked to see if the
1685:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * message being acknowledged is that just sent. */
1686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ulReceivedMessageIdentifier = ~( pxEventData->xNotificationData.ulMessageIdentifier );
1687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             for( ; ; )
1689:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1690:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* The message identifier is used as the notification value so it is
1691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * known which message is being acknowledged (in case the message is
1692:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * one this task previously didn't wait long enough to receive). We
1693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * block here forever and rely on the notification from the MQTT task
1694:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * to unblock us. Return value is ignored because in case of portMAX_DELAY
1695:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * the function will return only when a notification is received. */
1696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 ( void ) xTaskNotifyWait( 0UL, 0UL, &ulReceivedMessageIdentifier, portMAX_DELAY );
1697:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 if( pxEventData->xNotificationData.ulMessageIdentifier == ( ulReceivedMessageIdenti
1699:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
1700:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     /* A reply to the message was received.  The low 16-bits
1701:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                      * contain a status code, of which the least significant it
1702:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                      * is 1 (pdPASS) if the status code indicates a pass, and
1703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                      * 0 (pdFAIL) if the status code indicates a fail. */
1704:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1705:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     if( ( ulReceivedMessageIdentifier & mqttNOTIFICATION_STATUS_MASK ) != ( uint32_
1706:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     {
1707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         /* A reply to the message was received, but the operation
1708:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                          * failed. Check if the failure reason was timeout. */
1709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         if( ( ulReceivedMessageIdentifier & mqttNOTIFICATION_CODE_MASK ) == ( uint3
1710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         {
1711:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                             xReturnCode = eMQTTAgentTimeout;
1712:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         }
1713:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         mqttconfigDEBUG_LOG( ( "Command sent to MQTT task failed.\r\n" ) );
1715:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
1716:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     else
1717:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     {
1718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         /* A reply to the message was received and the operation
1719:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                          * passed. */
1720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         mqttconfigDEBUG_LOG( ( "Command sent to MQTT task passed.\r\n" ) );
1721:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         xReturnCode = eMQTTAgentSuccess;
1722:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
1723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1724:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     break;
1725:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
1726:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 else
1727:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
1728:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     /* Don't know what the notification was from, keep waiting. */
1729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     mqttconfigDEBUG_LOG( ( "Unexpected notification received.\r\n" ) );
1730:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
1731:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1733:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         else
1734:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "Attempt to write to the MQTT command queue failed.\r\n" ) );
1736:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1737:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1738:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
1739:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "MQTT Agent API called from MQTT task ( possibly from callback ) !!.
1741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturnCode = eMQTTAgentAPICalledFromCallback;
1742:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1743:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
1745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1746:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1748:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** static void prvMQTTTask( void * pvParameters )
1749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 337              		.loc 1 1749 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 72
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL37:
 342 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 343              		.cfi_def_cfa_offset 36
 344              		.cfi_offset 4, -36
 345              		.cfi_offset 5, -32
 346              		.cfi_offset 6, -28
 347              		.cfi_offset 7, -24
 348              		.cfi_offset 8, -20
 349              		.cfi_offset 9, -16
 350              		.cfi_offset 10, -12
 351              		.cfi_offset 11, -8
 352              		.cfi_offset 14, -4
1750:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xMQTTCommand;
1751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TickType_t xNextTimeoutTicks = 0;
 353              		.loc 1 1751 0
 354 0004 0020A0E3 		mov	r2, #0
 355              	.LBB16:
 356              	.LBB17:
1595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 357              		.loc 1 1595 0
 358 0008 C0469FE5 		ldr	r4, .L134
 359              	.LBE17:
 360              	.LBE16:
1749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xMQTTCommand;
 361              		.loc 1 1749 0
 362 000c 54D04DE2 		sub	sp, sp, #84
 363              		.cfi_def_cfa_offset 120
 364              	.LVL38:
 365              	.L86:
1752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Remove compiler warnings about unused parameters. */
1754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     ( void ) pvParameters;
1755:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1756:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     for( ; ; )
1757:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1758:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         if( xQueueReceive( xCommandQueue, &xMQTTCommand, xNextTimeoutTicks ) != pdFALSE )
 366              		.loc 1 1758 0
 367 0010 10108DE2 		add	r1, sp, #16
 368 0014 B8369FE5 		ldr	r3, .L134+4
 369 0018 000093E5 		ldr	r0, [r3]
 370 001c FEFFFFEB 		bl	xQueueReceive
 371              	.LVL39:
 372 0020 000050E3 		cmp	r0, #0
 373 0024 BE00000A 		beq	.L38
1759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1760:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "Received message %x from queue.\r\n", xMQTTCommand.xNotificatio
 374              		.loc 1 1760 0
 375 0028 1C109DE5 		ldr	r1, [sp, #28]
 376 002c A4069FE5 		ldr	r0, .L134+8
 377 0030 FEFFFFEB 		bl	vLoggingPrintf
 378              	.LVL40:
1761:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* The connection index identifies the broker to communicate with -
1763:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * starting from an index of 0.  Check the index is valid here so
1764:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * functions further down the call tree don't have to.  A check is
1765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * performed before messages are sent to the command queue anyway. */
1766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             configASSERT( xMQTTCommand.uxBrokerNumber < ( UBaseType_t ) mqttconfigMAX_BROKERS );
 379              		.loc 1 1766 0
 380 0034 10309DE5 		ldr	r3, [sp, #16]
 381 0038 010053E3 		cmp	r3, #1
 382 003c 0200009A 		bls	.L39
 383              	.L51:
 384              		.loc 1 1766 0 is_stmt 0 discriminator 1
 385 0040 0110A0E3 		mov	r1, #1
 386 0044 90069FE5 		ldr	r0, .L134+12
 387 0048 FEFFFFEB 		bl	longjmp
 388              	.LVL41:
 389              	.L39:
1767:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Check if the timeout for the event has been reached.
1769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * It means that the MQTT task picked up this command for
1770:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * processing too late and there is no point in proceeding.
1771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * Fail the operation with timeout and unblock the waiting
1772:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****              * task. */
1773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( xTaskCheckForTimeOut( &( xMQTTCommand.xEventCreationTimestamp ), &( xMQTTCommand.xT
 390              		.loc 1 1773 0 is_stmt 1
 391 004c 28108DE2 		add	r1, sp, #40
 392 0050 20008DE2 		add	r0, sp, #32
 393 0054 FEFFFFEB 		bl	xTaskCheckForTimeOut
 394              	.LVL42:
 395 0058 010050E3 		cmp	r0, #1
1774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1775:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Note that in case of eMQTTServiceSocket event, the
1776:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * xMQTTCommand.xNotificationData.xTaskToNotify happens to
1777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * be NULL and therefore prvNotifyRequestingTask returns
1778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * without doing anything. */
1779:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 prvNotifyRequestingTask( &( xMQTTCommand.xNotificationData ), eMQTTOperationTimedOu
 396              		.loc 1 1779 0
 397 005c 0020A003 		moveq	r2, #0
 398 0060 2010A003 		moveq	r1, #32
1773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 399              		.loc 1 1773 0
 400 0064 AC00000A 		beq	.L129
1780:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1781:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             else
1782:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 /* Process the received command. Note that the xTicksToWait
1784:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * has been updated in the previous call to xTaskCheckForTimeout
1785:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * to ensure that we block only for the duration specified by the
1786:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                  * user. */
1787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 switch( xMQTTCommand.xEventType )
 401              		.loc 1 1787 0
 402 0068 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 403 006c 013043E2 		sub	r3, r3, #1
 404 0070 040053E3 		cmp	r3, #4
 405 0074 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 406 0078 360100EA 		b	.L41
 407              	.L43:
 408 007c 90000000 		.word	.L42
 409 0080 F4020000 		.word	.L44
 410 0084 6C030000 		.word	.L45
 411 0088 10040000 		.word	.L46
 412 008c 8C040000 		.word	.L47
 413              	.L42:
 414              	.LVL43:
 415              	.LBB20:
 416              	.LBB21:
1360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 417              		.loc 1 1360 0
 418 0090 10709DE5 		ldr	r7, [sp, #16]
 419 0094 926EA0E3 		mov	r6, #2336
1363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 420              		.loc 1 1363 0
 421 0098 10108DE2 		add	r1, sp, #16
 422              	.LVL44:
 423 009c 960706E0 		mul	r6, r6, r7
1360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 424              		.loc 1 1360 0
 425 00a0 065084E0 		add	r5, r4, r6
 426              	.LVL45:
1363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 427              		.loc 1 1363 0
 428 00a4 0500A0E1 		mov	r0, r5
 429 00a8 FEFFFFEB 		bl	prvStoreNotificationData
 430              	.LVL46:
1368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 431              		.loc 1 1368 0
 432 00ac 00A050E2 		subs	r10, r0, #0
 433 00b0 8700000A 		beq	.L48
1371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         pxConnection->pxCallback = pxEventData->u.pxConnectParams->pxCallback;
 434              		.loc 1 1371 0
 435 00b4 2C809DE5 		ldr	r8, [sp, #44]
 436 00b8 1C3098E5 		ldr	r3, [r8, #28]
 437 00bc 103585E5 		str	r3, [r5, #1296]
1372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 438              		.loc 1 1372 0
 439 00c0 203098E5 		ldr	r3, [r8, #32]
 440 00c4 143585E5 		str	r3, [r5, #1300]
1375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentREQUIRE_TLS ) == 0 ) )
 441              		.loc 1 1375 0
 442 00c8 183098E5 		ldr	r3, [r8, #24]
 443 00cc 000053E3 		cmp	r3, #0
 444 00d0 0500001A 		bne	.L49
1376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 445              		.loc 1 1376 0
 446 00d4 043098E5 		ldr	r3, [r8, #4]
1375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentREQUIRE_TLS ) == 0 ) )
 447              		.loc 1 1375 0
 448 00d8 020013E3 		tst	r3, #2
1378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 449              		.loc 1 1378 0
 450 00dc 18359505 		ldreq	r3, [r5, #1304]
 451 00e0 0130C303 		biceq	r3, r3, #1
 452 00e4 18358505 		streq	r3, [r5, #1304]
1375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentREQUIRE_TLS ) == 0 ) )
 453              		.loc 1 1375 0
 454 00e8 0400000A 		beq	.L50
 455              	.L49:
1382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 456              		.loc 1 1382 0
 457 00ec 923EA0E3 		mov	r3, #2336
 458 00f0 934727E0 		mla	r7, r3, r7, r4
 459 00f4 183597E5 		ldr	r3, [r7, #1304]
 460 00f8 013083E3 		orr	r3, r3, #1
 461 00fc 183587E5 		str	r3, [r7, #1304]
 462              	.L50:
 463              	.LVL47:
 464              	.LBB22:
 465              	.LBB23:
 855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdPASS;
 466              		.loc 1 855 0
 467 0100 0030A0E3 		mov	r3, #0
 858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     char * ppcAlpns[] = { socketsAWS_IOT_ALPN_MQTT };
 468              		.loc 1 858 0
 469 0104 10709DE5 		ldr	r7, [sp, #16]
 855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xStatus = pdPASS;
 470              		.loc 1 855 0
 471 0108 30308DE5 		str	r3, [sp, #48]
 472 010c 34308DE5 		str	r3, [sp, #52]
 473              	.LVL48:
 859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 474              		.loc 1 859 0
 475 0110 C8359FE5 		ldr	r3, .L134+16
 476 0114 0C308DE5 		str	r3, [sp, #12]
 863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 477              		.loc 1 863 0
 478 0118 923EA0E3 		mov	r3, #2336
 479 011c 930703E0 		mul	r3, r3, r7
 480              	.LVL49:
 481 0120 033094E7 		ldr	r3, [r4, r3]
 482              	.LVL50:
 483 0124 010073E3 		cmn	r3, #1
 484 0128 C4FFFF1A 		bne	.L51
 866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 485              		.loc 1 866 0
 486 012c 00B098E5 		ldr	fp, [r8]
 487 0130 0B00A0E1 		mov	r0, fp
 488              	.LVL51:
 489 0134 FEFFFFEB 		bl	strlen
 490              	.LVL52:
 870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 491              		.loc 1 870 0
 492 0138 FD0050E3 		cmp	r0, #253
 866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 493              		.loc 1 866 0
 494 013c 0090A0E1 		mov	r9, r0
 495              	.LVL53:
 870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 496              		.loc 1 870 0
 497 0140 6000008A 		bhi	.L52
 872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 498              		.loc 1 872 0
 499 0144 043098E5 		ldr	r3, [r8, #4]
 882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xMQTTServerAddress.ucSocketDomain = SOCKETS_AF_INET;
 500              		.loc 1 882 0
 501 0148 0B00A0E1 		mov	r0, fp
 502              	.LVL54:
 872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 503              		.loc 1 872 0
 504 014c 040013E3 		tst	r3, #4
 879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 505              		.loc 1 879 0
 506 0150 BC20D801 		ldrheq	r2, [r8, #12]
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 507              		.loc 1 886 0
 508 0154 928EA0E3 		mov	r8, #2336
 875:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 509              		.loc 1 875 0
 510 0158 84359F15 		ldrne	r3, .L134+20
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 511              		.loc 1 886 0
 512 015c 980708E0 		mul	r8, r8, r7
 513              	.LVL55:
 879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 514              		.loc 1 879 0
 515 0160 2234A001 		lsreq	r3, r2, #8
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 516              		.loc 1 886 0
 517 0164 08B084E0 		add	fp, r4, r8
 879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 518              		.loc 1 879 0
 519 0168 02348301 		orreq	r3, r3, r2, lsl #8
 520 016c B233CDE1 		strh	r3, [sp, #50]	@ movhi
 882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xMQTTServerAddress.ucSocketDomain = SOCKETS_AF_INET;
 521              		.loc 1 882 0
 522 0170 FEFFFFEB 		bl	SOCKETS_GetHostByName
 523              	.LVL56:
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 524              		.loc 1 886 0
 525 0174 0620A0E3 		mov	r2, #6
 882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xMQTTServerAddress.ucSocketDomain = SOCKETS_AF_INET;
 526              		.loc 1 882 0
 527 0178 34008DE5 		str	r0, [sp, #52]
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 528              		.loc 1 886 0
 529 017c 0110A0E3 		mov	r1, #1
 883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 530              		.loc 1 883 0
 531 0180 0200A0E3 		mov	r0, #2
 532 0184 3100CDE5 		strb	r0, [sp, #49]
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 533              		.loc 1 886 0
 534 0188 FEFFFFEB 		bl	SOCKETS_Socket
 535              	.LVL57:
 888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 536              		.loc 1 888 0
 537 018c 010070E3 		cmn	r0, #1
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 538              		.loc 1 886 0
 539 0190 080084E7 		str	r0, [r4, r8]
 888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 540              		.loc 1 888 0
 541 0194 4E00000A 		beq	.L48
 892:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                          0,                                            /* Level - U
 542              		.loc 1 892 0
 543 0198 0430A0E3 		mov	r3, #4
 544 019c 1120A0E3 		mov	r2, #17
 545 01a0 00308DE5 		str	r3, [sp]
 546 01a4 0010A0E3 		mov	r1, #0
 547 01a8 38359FE5 		ldr	r3, .L134+24
 548 01ac FEFFFFEB 		bl	SOCKETS_SetSockOpt
 549              	.LVL58:
 899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 550              		.loc 1 899 0
 551 01b0 18359BE5 		ldr	r3, [fp, #1304]
 552 01b4 010013E3 		tst	r3, #1
 553 01b8 2B00001A 		bne	.L56
 554              	.LVL59:
 555              	.L63:
 957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 556              		.loc 1 957 0
 557 01bc 928EA0E3 		mov	r8, #2336
 558              	.LVL60:
 559 01c0 0820A0E3 		mov	r2, #8
 560 01c4 980708E0 		mul	r8, r8, r7
 561 01c8 30108DE2 		add	r1, sp, #48
 562 01cc 080094E7 		ldr	r0, [r4, r8]
 563 01d0 FEFFFFEB 		bl	SOCKETS_Connect
 564              	.LVL61:
 565 01d4 003050E2 		subs	r3, r0, #0
 566 01d8 2B00001A 		bne	.L57
 966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              0 /* Unused. */,
 567              		.loc 1 966 0
 568 01dc 0310A0E1 		mov	r1, r3
 569 01e0 00308DE5 		str	r3, [sp]
 570 01e4 0920A0E3 		mov	r2, #9
 571 01e8 080094E7 		ldr	r0, [r4, r8]
 572 01ec FEFFFFEB 		bl	SOCKETS_SetSockOpt
 573              	.LVL62:
 574              	.LBE23:
 575              	.LBE22:
1391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                 "mqttconfigENABLE_METRICS set to 0 to disable.\r\n" ) );
 576              		.loc 1 1391 0
 577 01f0 F4049FE5 		ldr	r0, .L134+28
 578 01f4 FEFFFFEB 		bl	vLoggingPrintf
 579              	.LVL63:
1396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usClientIdLength = pxEventData->u.pxConnectParams->usClientIdLength;
 580              		.loc 1 1396 0
 581 01f8 2C309DE5 		ldr	r3, [sp, #44]
1406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 582              		.loc 1 1406 0
 583 01fc 080086E2 		add	r0, r6, #8
 584 0200 30108DE2 		add	r1, sp, #48
 585 0204 000084E0 		add	r0, r4, r0
1396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usClientIdLength = pxEventData->u.pxConnectParams->usClientIdLength;
 586              		.loc 1 1396 0
 587 0208 102093E5 		ldr	r2, [r3, #16]
1397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.pucUserName = ( const uint8_t * ) cUserName;
 588              		.loc 1 1397 0
 589 020c B431D3E1 		ldrh	r3, [r3, #20]
1396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usClientIdLength = pxEventData->u.pxConnectParams->usClientIdLength;
 590              		.loc 1 1396 0
 591 0210 3C208DE5 		str	r2, [sp, #60]
1397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.pucUserName = ( const uint8_t * ) cUserName;
 592              		.loc 1 1397 0
 593 0214 B034CDE1 		strh	r3, [sp, #64]	@ movhi
1398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usUserNameLength = usUserNameLength;
 594              		.loc 1 1398 0
 595 0218 D0349FE5 		ldr	r3, .L134+32
 596 021c 44308DE5 		str	r3, [sp, #68]
1399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usKeepAliveIntervalSeconds = mqttconfigKEEP_ALIVE_INTERVAL_SECONDS;
 597              		.loc 1 1399 0
 598 0220 3930A0E3 		mov	r3, #57
 599 0224 B834CDE1 		strh	r3, [sp, #72]	@ movhi
1400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.ulKeepAliveActualIntervalTicks = mqttconfigKEEP_ALIVE_ACTUAL_INTERVAL_TI
 600              		.loc 1 1400 0
 601 0228 6430A0E3 		mov	r3, #100
 602 022c B033CDE1 		strh	r3, [sp, #48]	@ movhi
1401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.ulPingRequestTimeoutTicks = mqttconfigKEEP_ALIVE_TIMEOUT_TICKS;
 603              		.loc 1 1401 0
 604 0230 BC349FE5 		ldr	r3, .L134+36
 605 0234 34308DE5 		str	r3, [sp, #52]
1402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEv
 606              		.loc 1 1402 0
 607 0238 FA3FA0E3 		mov	r3, #1000
 608 023c 38308DE5 		str	r3, [sp, #56]
1403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xConnectParams.ulTimeoutTicks = pxEventData->xTicksToWait;
 609              		.loc 1 1403 0
 610 0240 BE31DDE1 		ldrh	r3, [sp, #30]
 611 0244 BA34CDE1 		strh	r3, [sp, #74]	@ movhi
1404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 612              		.loc 1 1404 0
 613 0248 28309DE5 		ldr	r3, [sp, #40]
 614 024c 4C308DE5 		str	r3, [sp, #76]
1406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 615              		.loc 1 1406 0
 616 0250 FEFFFFEB 		bl	MQTT_Connect
 617              	.LVL64:
 618 0254 000050E3 		cmp	r0, #0
 619 0258 3100000A 		beq	.L38
1408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 620              		.loc 1 1408 0
 621 025c 94049FE5 		ldr	r0, .L134+40
 622 0260 FEFFFFEB 		bl	vLoggingPrintf
 623              	.LVL65:
1416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 624              		.loc 1 1416 0
 625 0264 0500A0E1 		mov	r0, r5
 626 0268 090000EA 		b	.L130
 627              	.LVL66:
 628              	.L56:
 629              	.LBB27:
 630              	.LBB24:
 901:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                         0, /* Level - Unused. */
 631              		.loc 1 901 0
 632 026c 0030A0E3 		mov	r3, #0
 633 0270 0820A0E3 		mov	r2, #8
 634 0274 0310A0E1 		mov	r1, r3
 635 0278 00308DE5 		str	r3, [sp]
 636 027c 080094E7 		ldr	r0, [r4, r8]
 637 0280 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 638              	.LVL67:
 639 0284 001050E2 		subs	r1, r0, #0
 640 0288 E700000A 		beq	.L59
 641              	.LVL68:
 642              	.L57:
 975:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 643              		.loc 1 975 0
 644 028c 920EA0E3 		mov	r0, #2336
 645 0290 904720E0 		mla	r0, r0, r7, r4
 646              	.LVL69:
 647              	.L130:
 648              	.LBE24:
 649              	.LBE27:
1416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 650              		.loc 1 1416 0
 651 0294 FEFFFFEB 		bl	prvGracefulSocketClose
 652              	.LVL70:
 653 0298 0D0000EA 		b	.L48
 654              	.LVL71:
 655              	.L61:
 656              	.LBB28:
 657              	.LBB25:
 929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             0, /* Level - Unused. */
 658              		.loc 1 929 0
 659 029c 920EA0E3 		mov	r0, #2336
 660 02a0 019089E2 		add	r9, r9, #1
 661              	.LVL72:
 662 02a4 900700E0 		mul	r0, r0, r7
 663 02a8 00908DE5 		str	r9, [sp]
 664 02ac 0620A0E3 		mov	r2, #6
 665 02b0 003093E5 		ldr	r3, [r3]
 666 02b4 000094E7 		ldr	r0, [r4, r0]
 667 02b8 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 668              	.LVL73:
 669 02bc 000050E3 		cmp	r0, #0
 670 02c0 F1FFFF1A 		bne	.L57
 671 02c4 EA0000EA 		b	.L60
 672              	.LVL74:
 673              	.L52:
 985:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xStatus = pdFAIL;
 674              		.loc 1 985 0
 675 02c8 0B10A0E1 		mov	r1, fp
 676 02cc 28049FE5 		ldr	r0, .L134+44
 677              	.LVL75:
 678 02d0 FEFFFFEB 		bl	vLoggingPrintf
 679              	.LVL76:
 680              	.L48:
 681              	.LBE25:
 682              	.LBE28:
1428:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 683              		.loc 1 1428 0
 684 02d4 0020A0E3 		mov	r2, #0
 685 02d8 0210A0E3 		mov	r1, #2
 686 02dc 18008DE2 		add	r0, sp, #24
 687 02e0 FEFFFFEB 		bl	prvNotifyRequestingTask
 688              	.LVL77:
1431:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 689              		.loc 1 1431 0
 690 02e4 00005AE3 		cmp	r10, #0
1433:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 691              		.loc 1 1433 0
 692 02e8 0030A013 		movne	r3, #0
 693 02ec 00308A15 		strne	r3, [r10]
 694 02f0 0B0000EA 		b	.L38
 695              	.LVL78:
 696              	.L44:
 697              	.LBE21:
 698              	.LBE20:
 699              	.LBB31:
 700              	.LBB32:
1449:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 701              		.loc 1 1449 0
 702 02f4 10009DE5 		ldr	r0, [sp, #16]
 703 02f8 923EA0E3 		mov	r3, #2336
 704 02fc 934020E0 		mla	r0, r3, r0, r4
 705 0300 080080E2 		add	r0, r0, #8
 706 0304 FEFFFFEB 		bl	MQTT_Disconnect
 707              	.LVL79:
 708 0308 000050E3 		cmp	r0, #0
1455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 709              		.loc 1 1455 0
 710 030c 0020A013 		movne	r2, #0
 711 0310 0A10A013 		movne	r1, #10
1451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 712              		.loc 1 1451 0
 713 0314 0120A003 		moveq	r2, #1
 714 0318 0810A003 		moveq	r1, #8
 715              	.LVL80:
 716              	.L129:
 717 031c 18008DE2 		add	r0, sp, #24
 718 0320 FEFFFFEB 		bl	prvNotifyRequestingTask
 719              	.LVL81:
 720              	.L38:
 721              	.LBE32:
 722              	.LBE31:
 723              	.LBB33:
 724              	.LBB34:
1281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 725              		.loc 1 1281 0
 726 0324 000094E5 		ldr	r0, [r4]
1273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 727              		.loc 1 1273 0
 728 0328 1000C0F2 		vmov.i32	d16, #0  @ di
1281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 729              		.loc 1 1281 0
 730 032c 010070E3 		cmn	r0, #1
1273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 731              		.loc 1 1273 0
 732 0330 0C0BCDED 		vstr.64	d16, [sp, #48]	@ int
 733              	.LVL82:
1281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 734              		.loc 1 1281 0
 735 0334 0A00000A 		beq	.L102
1284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 736              		.loc 1 1284 0
 737 0338 012BA0E3 		mov	r2, #1024
 738 033c 0030A0E3 		mov	r3, #0
 739 0340 B8139FE5 		ldr	r1, .L134+48
 740 0344 FEFFFFEB 		bl	SOCKETS_Recv
 741              	.LVL83:
1287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 742              		.loc 1 1287 0
 743 0348 002050E2 		subs	r2, r0, #0
 744 034c 840000CA 		bgt	.L81
1310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 745              		.loc 1 1310 0
 746 0350 000052E3 		cmp	r2, #0
 747 0354 0B007213 		cmnne	r2, #11
 748 0358 0100000A 		beq	.L102
1316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 749              		.loc 1 1316 0
 750 035c A0039FE5 		ldr	r0, .L134+52
 751              	.LVL84:
 752 0360 FEFFFFEB 		bl	MQTT_Disconnect
 753              	.LVL85:
 754              	.L102:
1272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint64_t xTickCount = 0;
 755              		.loc 1 1272 0
 756 0364 0050E0E3 		mvn	r5, #0
 757 0368 810000EA 		b	.L80
 758              	.LVL86:
 759              	.L45:
 760 036c 10009DE5 		ldr	r0, [sp, #16]
 761 0370 925EA0E3 		mov	r5, #2336
 762              	.LBE34:
 763              	.LBE33:
 764              	.LBB37:
 765              	.LBB38:
1468:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 766              		.loc 1 1468 0
 767 0374 10108DE2 		add	r1, sp, #16
 768              	.LVL87:
 769 0378 950005E0 		mul	r5, r5, r0
 770              	.LVL88:
 771 037c 050084E0 		add	r0, r4, r5
 772 0380 FEFFFFEB 		bl	prvStoreNotificationData
 773              	.LVL89:
1473:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 774              		.loc 1 1473 0
 775 0384 006050E2 		subs	r6, r0, #0
 776 0388 1E00000A 		beq	.L65
1476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.usTopicLength = pxEventData->u.pxSubscribeParams->usTopicLength;
 777              		.loc 1 1476 0
 778 038c 2C309DE5 		ldr	r3, [sp, #44]
1486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 779              		.loc 1 1486 0
 780 0390 080085E2 		add	r0, r5, #8
 781              	.LVL90:
 782 0394 30108DE2 		add	r1, sp, #48
 783 0398 000084E0 		add	r0, r4, r0
1476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.usTopicLength = pxEventData->u.pxSubscribeParams->usTopicLength;
 784              		.loc 1 1476 0
 785 039c 002093E5 		ldr	r2, [r3]
 786 03a0 30208DE5 		str	r2, [sp, #48]
1477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.xQos = pxEventData->u.pxSubscribeParams->xQoS;
 787              		.loc 1 1477 0
 788 03a4 B420D3E1 		ldrh	r2, [r3, #4]
 789 03a8 B423CDE1 		strh	r2, [sp, #52]	@ movhi
1478:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEven
 790              		.loc 1 1478 0
 791 03ac 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 792 03b0 3620CDE5 		strb	r2, [sp, #54]
1479:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xSubscribeParams.ulTimeoutTicks = pxEventData->xTicksToWait;
 793              		.loc 1 1479 0
 794 03b4 BE21DDE1 		ldrh	r2, [sp, #30]
 795 03b8 B823CDE1 		strh	r2, [sp, #56]	@ movhi
1480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 796              		.loc 1 1480 0
 797 03bc 28209DE5 		ldr	r2, [sp, #40]
 798 03c0 3C208DE5 		str	r2, [sp, #60]
1482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xSubscribeParams.pxPublishCallback = pxEventData->u.pxSubscribeParams->pxPublishCallbac
 799              		.loc 1 1482 0
 800 03c4 082093E5 		ldr	r2, [r3, #8]
1483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 801              		.loc 1 1483 0
 802 03c8 0C3093E5 		ldr	r3, [r3, #12]
1482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xSubscribeParams.pxPublishCallback = pxEventData->u.pxSubscribeParams->pxPublishCallbac
 803              		.loc 1 1482 0
 804 03cc 40208DE5 		str	r2, [sp, #64]
1483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 805              		.loc 1 1483 0
 806 03d0 44308DE5 		str	r3, [sp, #68]
1486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 807              		.loc 1 1486 0
 808 03d4 FEFFFFEB 		bl	MQTT_Subscribe
 809              	.LVL91:
 810 03d8 000050E3 		cmp	r0, #0
1492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 811              		.loc 1 1492 0
 812 03dc 24039F15 		ldrne	r0, .L134+56
1486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 813              		.loc 1 1486 0
 814 03e0 CFFFFF0A 		beq	.L38
 815              	.L131:
1497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 816              		.loc 1 1497 0
 817 03e4 FEFFFFEB 		bl	vLoggingPrintf
 818              	.LVL92:
1504:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 819              		.loc 1 1504 0
 820 03e8 0020A0E3 		mov	r2, #0
 821 03ec 1210A0E3 		mov	r1, #18
 822 03f0 18008DE2 		add	r0, sp, #24
 823              	.LVL93:
 824              	.L133:
 825              	.LBE38:
 826              	.LBE37:
 827              	.LBB40:
 828              	.LBB41:
1555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 829              		.loc 1 1555 0
 830 03f4 FEFFFFEB 		bl	prvNotifyRequestingTask
 831              	.LVL94:
1558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 832              		.loc 1 1558 0
 833 03f8 000056E3 		cmp	r6, #0
1560:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 834              		.loc 1 1560 0
 835 03fc 0030A013 		movne	r3, #0
 836 0400 00308615 		strne	r3, [r6]
 837 0404 C6FFFFEA 		b	.L38
 838              	.LVL95:
 839              	.L65:
 840              	.LBE41:
 841              	.LBE40:
 842              	.LBB43:
 843              	.LBB39:
1497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 844              		.loc 1 1497 0
 845 0408 FC029FE5 		ldr	r0, .L134+60
 846              	.LVL96:
 847 040c F4FFFFEA 		b	.L131
 848              	.LVL97:
 849              	.L46:
 850 0410 10009DE5 		ldr	r0, [sp, #16]
 851 0414 925EA0E3 		mov	r5, #2336
 852              	.LBE39:
 853              	.LBE43:
 854              	.LBB44:
 855              	.LBB42:
1523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 856              		.loc 1 1523 0
 857 0418 10108DE2 		add	r1, sp, #16
 858              	.LVL98:
 859 041c 950005E0 		mul	r5, r5, r0
 860              	.LVL99:
 861 0420 050084E0 		add	r0, r4, r5
 862 0424 FEFFFFEB 		bl	prvStoreNotificationData
 863              	.LVL100:
1528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 864              		.loc 1 1528 0
 865 0428 006050E2 		subs	r6, r0, #0
 866 042c 1400000A 		beq	.L69
1532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usTopicLength = pxEventData->u.pxUnsubscribeParams->usTopicLength;
 867              		.loc 1 1532 0
 868 0430 2C309DE5 		ldr	r3, [sp, #44]
1537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 869              		.loc 1 1537 0
 870 0434 080085E2 		add	r0, r5, #8
 871              	.LVL101:
 872 0438 30108DE2 		add	r1, sp, #48
 873 043c 000084E0 		add	r0, r4, r0
1532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usTopicLength = pxEventData->u.pxUnsubscribeParams->usTopicLength;
 874              		.loc 1 1532 0
 875 0440 002093E5 		ldr	r2, [r3]
1533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEv
 876              		.loc 1 1533 0
 877 0444 B430D3E1 		ldrh	r3, [r3, #4]
1532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usTopicLength = pxEventData->u.pxUnsubscribeParams->usTopicLength;
 878              		.loc 1 1532 0
 879 0448 30208DE5 		str	r2, [sp, #48]
1533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEv
 880              		.loc 1 1533 0
 881 044c B433CDE1 		strh	r3, [sp, #52]	@ movhi
1534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xUnsubscribeParams.ulTimeoutTicks = pxEventData->xTicksToWait;
 882              		.loc 1 1534 0
 883 0450 BE31DDE1 		ldrh	r3, [sp, #30]
 884 0454 B633CDE1 		strh	r3, [sp, #54]	@ movhi
1535:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 885              		.loc 1 1535 0
 886 0458 28309DE5 		ldr	r3, [sp, #40]
 887 045c 38308DE5 		str	r3, [sp, #56]
1537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 888              		.loc 1 1537 0
 889 0460 FEFFFFEB 		bl	MQTT_Unsubscribe
 890              	.LVL102:
 891 0464 000050E3 		cmp	r0, #0
1543:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 892              		.loc 1 1543 0
 893 0468 A0029F15 		ldrne	r0, .L134+64
1537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 894              		.loc 1 1537 0
 895 046c ACFFFF0A 		beq	.L38
 896              	.L132:
1548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 897              		.loc 1 1548 0
 898 0470 FEFFFFEB 		bl	vLoggingPrintf
 899              	.LVL103:
1555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 900              		.loc 1 1555 0
 901 0474 1810A0E3 		mov	r1, #24
 902 0478 0020A0E3 		mov	r2, #0
 903 047c 01008DE0 		add	r0, sp, r1
 904 0480 DBFFFFEA 		b	.L133
 905              	.LVL104:
 906              	.L69:
1548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 907              		.loc 1 1548 0
 908 0484 80029FE5 		ldr	r0, .L134+60
 909              	.LVL105:
 910 0488 F8FFFFEA 		b	.L132
 911              	.LVL106:
 912              	.L47:
 913              	.LBE42:
 914              	.LBE44:
 915              	.LBB45:
 916              	.LBB18:
1575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 917              		.loc 1 1575 0
 918 048c 2C309DE5 		ldr	r3, [sp, #44]
 919 0490 926EA0E3 		mov	r6, #2336
 920 0494 10009DE5 		ldr	r0, [sp, #16]
 921 0498 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 922 049c 960006E0 		mul	r6, r6, r0
 923              	.LVL107:
 924 04a0 000053E3 		cmp	r3, #0
 925 04a4 0700001A 		bne	.L73
 926              	.LVL108:
 927              	.L76:
1584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 928              		.loc 1 1584 0
 929 04a8 2C309DE5 		ldr	r3, [sp, #44]
 930 04ac 0650D3E5 		ldrb	r5, [r3, #6]	@ zero_extendqisi2
 931 04b0 000055E3 		cmp	r5, #0
 932 04b4 0800000A 		beq	.L74
1606:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 933              		.loc 1 1606 0
 934 04b8 4C029FE5 		ldr	r0, .L134+60
 935 04bc 0050A0E3 		mov	r5, #0
 936 04c0 FEFFFFEB 		bl	vLoggingPrintf
 937              	.LVL109:
 938 04c4 1B0000EA 		b	.L78
 939              	.L73:
1577:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 940              		.loc 1 1577 0
 941 04c8 10108DE2 		add	r1, sp, #16
 942              	.LVL110:
 943 04cc 060084E0 		add	r0, r4, r6
 944 04d0 FEFFFFEB 		bl	prvStoreNotificationData
 945              	.LVL111:
1584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 946              		.loc 1 1584 0
 947 04d4 005050E2 		subs	r5, r0, #0
 948 04d8 F2FFFF0A 		beq	.L76
 949              	.LVL112:
 950              	.L74:
1587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.usTopicLength = pxEventData->u.pxPublishParams->usTopicLength;
 951              		.loc 1 1587 0
 952 04dc 2C309DE5 		ldr	r3, [sp, #44]
1595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 953              		.loc 1 1595 0
 954 04e0 080086E2 		add	r0, r6, #8
 955 04e4 30108DE2 		add	r1, sp, #48
 956 04e8 000084E0 		add	r0, r4, r0
1587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.usTopicLength = pxEventData->u.pxPublishParams->usTopicLength;
 957              		.loc 1 1587 0
 958 04ec 002093E5 		ldr	r2, [r3]
 959 04f0 30208DE5 		str	r2, [sp, #48]
1588:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.xQos = pxEventData->u.pxPublishParams->xQoS;
 960              		.loc 1 1588 0
 961 04f4 B420D3E1 		ldrh	r2, [r3, #4]
 962 04f8 B423CDE1 		strh	r2, [sp, #52]	@ movhi
1589:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.pvData = pxEventData->u.pxPublishParams->pvData;
 963              		.loc 1 1589 0
 964 04fc 0620D3E5 		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 965 0500 3620CDE5 		strb	r2, [sp, #54]
1590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.ulDataLength = pxEventData->u.pxPublishParams->ulDataLength;
 966              		.loc 1 1590 0
 967 0504 082093E5 		ldr	r2, [r3, #8]
1591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEventD
 968              		.loc 1 1591 0
 969 0508 0C3093E5 		ldr	r3, [r3, #12]
1590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.ulDataLength = pxEventData->u.pxPublishParams->ulDataLength;
 970              		.loc 1 1590 0
 971 050c 38208DE5 		str	r2, [sp, #56]
1591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.usPacketIdentifier = ( uint16_t ) ( mqttMESSAGE_IDENTIFIER_EXTRACT( pxEventD
 972              		.loc 1 1591 0
 973 0510 3C308DE5 		str	r3, [sp, #60]
1592:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xPublishParams.ulTimeoutTicks = pxEventData->xTicksToWait;
 974              		.loc 1 1592 0
 975 0514 BE31DDE1 		ldrh	r3, [sp, #30]
 976 0518 B034CDE1 		strh	r3, [sp, #64]	@ movhi
1593:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 977              		.loc 1 1593 0
 978 051c 28309DE5 		ldr	r3, [sp, #40]
 979 0520 44308DE5 		str	r3, [sp, #68]
1595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 980              		.loc 1 1595 0
 981 0524 FEFFFFEB 		bl	MQTT_Publish
 982              	.LVL113:
 983 0528 000050E3 		cmp	r0, #0
 984 052c 6000000A 		beq	.L77
1601:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 985              		.loc 1 1601 0
 986 0530 DC019FE5 		ldr	r0, .L134+68
 987 0534 FEFFFFEB 		bl	vLoggingPrintf
 988              	.LVL114:
 989              	.L78:
1620:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 990              		.loc 1 1620 0
 991 0538 0020A0E3 		mov	r2, #0
 992 053c 0C10A0E3 		mov	r1, #12
 993 0540 18008DE2 		add	r0, sp, #24
 994 0544 FEFFFFEB 		bl	prvNotifyRequestingTask
 995              	.LVL115:
1623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 996              		.loc 1 1623 0
 997 0548 000055E3 		cmp	r5, #0
1625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 998              		.loc 1 1625 0
 999 054c 0030A013 		movne	r3, #0
 1000 0550 00308515 		strne	r3, [r5]
 1001 0554 72FFFFEA 		b	.L38
 1002              	.LVL116:
 1003              	.L41:
 1004              	.LBE18:
 1005              	.LBE45:
1788:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
1789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     case eMQTTConnectRequest:
1790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         prvInitiateMQTTConnect( &( xMQTTCommand ) );
1791:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         break;
1792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1793:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     case eMQTTDisconnectRequest:
1794:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         prvInitiateMQTTDisconnect( &( xMQTTCommand ) );
1795:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         break;
1796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1797:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     case eMQTTSubscribeRequest:
1798:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         prvInitiateMQTTSubscribe( &( xMQTTCommand ) );
1799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         break;
1800:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     case eMQTTUnsubscribeRequest:
1802:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         prvInitiateMQTTUnSubscribe( &( xMQTTCommand ) );
1803:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         break;
1804:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1805:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     case eMQTTPublishRequest:
1806:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         prvInitiateMQTTPublish( &( xMQTTCommand ) );
1807:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         break;
1808:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1809:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     default:
1810:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         /* Anything else is illegal. */
1811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         mqttconfigDEBUG_LOG( ( "Unknown request received on command queue.\r\n" ) )
 1006              		.loc 1 1811 0
 1007 0558 B8019FE5 		ldr	r0, .L134+72
 1008 055c FEFFFFEB 		bl	vLoggingPrintf
 1009              	.LVL117:
1812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         break;
 1010              		.loc 1 1812 0
 1011 0560 6FFFFFEA 		b	.L38
 1012              	.LVL118:
 1013              	.L81:
 1014              	.LBB46:
 1015              	.LBB35:
1301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 1016              		.loc 1 1301 0
 1017 0564 0050A0E3 		mov	r5, #0
1289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1018              		.loc 1 1289 0
 1019 0568 90119FE5 		ldr	r1, .L134+48
 1020 056c 90019FE5 		ldr	r0, .L134+52
 1021              	.LVL119:
 1022 0570 FEFFFFEB 		bl	MQTT_ParseReceivedData
 1023              	.LVL120:
 1024              	.L80:
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1025              		.loc 1 1334 0
 1026 0574 30008DE2 		add	r0, sp, #48
1328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1027              		.loc 1 1328 0
 1028 0578 006094E5 		ldr	r6, [r4]
 1029              	.LVL121:
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1030              		.loc 1 1334 0
 1031 057c FEFFFFEB 		bl	prvMQTTGetTicks
 1032              	.LVL122:
1337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1033              		.loc 1 1337 0
 1034 0580 D023CDE1 		ldrd	r2, [sp, #48]
 1035 0584 78019FE5 		ldr	r0, .L134+52
 1036 0588 FEFFFFEB 		bl	MQTT_Periodic
 1037              	.LVL123:
1340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1038              		.loc 1 1340 0
 1039 058c 050050E1 		cmp	r0, r5
 1040 0590 0050A031 		movcc	r5, r0
 1041              	.LVL124:
1281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1042              		.loc 1 1281 0
 1043 0594 200994E5 		ldr	r0, [r4, #2336]
 1044              	.LVL125:
 1045 0598 010070E3 		cmn	r0, #1
 1046 059c 0900000A 		beq	.L82
1284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1047              		.loc 1 1284 0
 1048 05a0 012BA0E3 		mov	r2, #1024
 1049 05a4 0030A0E3 		mov	r3, #0
 1050 05a8 6C119FE5 		ldr	r1, .L134+76
 1051 05ac FEFFFFEB 		bl	SOCKETS_Recv
 1052              	.LVL126:
1287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 1053              		.loc 1 1287 0
 1054 05b0 002050E2 		subs	r2, r0, #0
 1055 05b4 160000DA 		ble	.L83
1301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 1056              		.loc 1 1301 0
 1057 05b8 0050A0E3 		mov	r5, #0
 1058              	.LVL127:
1289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1059              		.loc 1 1289 0
 1060 05bc 58119FE5 		ldr	r1, .L134+76
 1061 05c0 58019FE5 		ldr	r0, .L134+80
 1062              	.LVL128:
 1063 05c4 FEFFFFEB 		bl	MQTT_ParseReceivedData
 1064              	.LVL129:
 1065              	.L82:
1328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1066              		.loc 1 1328 0
 1067 05c8 010076E3 		cmn	r6, #1
 1068 05cc 0160A013 		movne	r6, #1
 1069              	.LVL130:
 1070 05d0 0200001A 		bne	.L84
 1071 05d4 206994E5 		ldr	r6, [r4, #2336]
 1072 05d8 016096E2 		adds	r6, r6, #1
 1073 05dc 0160A013 		movne	r6, #1
 1074              	.L84:
 1075              	.LVL131:
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1076              		.loc 1 1334 0
 1077 05e0 30008DE2 		add	r0, sp, #48
 1078 05e4 FEFFFFEB 		bl	prvMQTTGetTicks
 1079              	.LVL132:
1337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1080              		.loc 1 1337 0
 1081 05e8 D023CDE1 		ldrd	r2, [sp, #48]
 1082 05ec 2C019FE5 		ldr	r0, .L134+80
 1083 05f0 FEFFFFEB 		bl	MQTT_Periodic
 1084              	.LVL133:
1340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1085              		.loc 1 1340 0
 1086 05f4 050050E1 		cmp	r0, r5
 1087 05f8 0020A031 		movcc	r2, r0
 1088 05fc 0520A021 		movcs	r2, r5
 1089              	.LVL134:
1345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1090              		.loc 1 1345 0
 1091 0600 000056E3 		cmp	r6, #0
 1092 0604 81FEFF0A 		beq	.L86
 1093              	.LVL135:
1347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1094              		.loc 1 1347 0
 1095 0608 640052E3 		cmp	r2, #100
 1096 060c 6420A023 		movcs	r2, #100
 1097              	.LVL136:
 1098              	.LBE35:
 1099              	.LBE46:
1758:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1100              		.loc 1 1758 0
 1101 0610 7EFEFFEA 		b	.L86
 1102              	.LVL137:
 1103              	.L83:
 1104              	.LBB47:
 1105              	.LBB36:
1310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 1106              		.loc 1 1310 0
 1107 0614 000052E3 		cmp	r2, #0
 1108 0618 0B007213 		cmnne	r2, #11
 1109 061c E9FFFF0A 		beq	.L82
1316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 1110              		.loc 1 1316 0
 1111 0620 F8009FE5 		ldr	r0, .L134+80
 1112              	.LVL138:
 1113 0624 FEFFFFEB 		bl	MQTT_Disconnect
 1114              	.LVL139:
 1115 0628 E6FFFFEA 		b	.L82
 1116              	.LVL140:
 1117              	.L59:
 1118              	.LBE36:
 1119              	.LBE47:
 1120              	.LBB48:
 1121              	.LBB30:
 1122              	.LBB29:
 1123              	.LBB26:
 912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 1124              		.loc 1 912 0
 1125 062c 2C209DE5 		ldr	r2, [sp, #44]
 1126 0630 243092E5 		ldr	r3, [r2, #36]
 911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( pxEventData->u.pxConnectParams->pcCertificate != NULL ) )
 1127              		.loc 1 911 0
 1128 0634 000053E3 		cmp	r3, #0
 1129 0638 0600000A 		beq	.L88
 914:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             0, /* Level - Unused. */
 1130              		.loc 1 914 0
 1131 063c 282092E5 		ldr	r2, [r2, #40]
 1132 0640 080094E7 		ldr	r0, [r4, r8]
 1133 0644 00208DE5 		str	r2, [sp]
 1134 0648 0720A0E3 		mov	r2, #7
 1135 064c FEFFFFEB 		bl	SOCKETS_SetSockOpt
 1136              	.LVL141:
 1137 0650 000050E3 		cmp	r0, #0
 1138 0654 0CFFFF1A 		bne	.L57
 1139              	.L88:
 926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( pxEventData->u.pxConnectParams->xURLIsIPAddress == pdFALSE ) )
 1140              		.loc 1 926 0
 1141 0658 2C309DE5 		ldr	r3, [sp, #44]
 1142 065c 042093E5 		ldr	r2, [r3, #4]
 925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentURL_IS_IP_ADDRESS ) == 0 
 1143              		.loc 1 925 0
 1144 0660 010012E3 		tst	r2, #1
 1145 0664 0200001A 		bne	.L60
 926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( pxEventData->u.pxConnectParams->xURLIsIPAddress == pdFALSE ) )
 1146              		.loc 1 926 0
 1147 0668 081093E5 		ldr	r1, [r3, #8]
 1148 066c 000051E3 		cmp	r1, #0
 1149 0670 09FFFF0A 		beq	.L61
 1150              	.LVL142:
 1151              	.L60:
 941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 1152              		.loc 1 941 0
 1153 0674 2C309DE5 		ldr	r3, [sp, #44]
 1154 0678 043093E5 		ldr	r3, [r3, #4]
 940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     ( ( ( pxEventData->u.pxConnectParams->xFlags & mqttagentUSE_AWS_IOT_ALPN_443 ) 
 1155              		.loc 1 940 0
 1156 067c 040013E3 		tst	r3, #4
 1157 0680 CDFEFF0A 		beq	.L63
 943:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             0, /* Level - Unused. */
 1158              		.loc 1 943 0
 1159 0684 920EA0E3 		mov	r0, #2336
 1160 0688 0130A0E3 		mov	r3, #1
 1161 068c 900700E0 		mul	r0, r0, r7
 1162 0690 00308DE5 		str	r3, [sp]
 1163 0694 0A20A0E3 		mov	r2, #10
 1164 0698 0C308DE2 		add	r3, sp, #12
 1165 069c 0010A0E3 		mov	r1, #0
 1166 06a0 000094E7 		ldr	r0, [r4, r0]
 1167 06a4 FEFFFFEB 		bl	SOCKETS_SetSockOpt
 1168              	.LVL143:
 1169 06a8 000050E3 		cmp	r0, #0
 1170 06ac F6FEFF1A 		bne	.L57
 1171 06b0 C1FEFFEA 		b	.L63
 1172              	.LVL144:
 1173              	.L77:
 1174              	.LBE26:
 1175              	.LBE29:
 1176              	.LBE30:
 1177              	.LBE48:
 1178              	.LBB49:
 1179              	.LBB19:
1611:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1180              		.loc 1 1611 0
 1181 06b4 2C309DE5 		ldr	r3, [sp, #44]
 1182 06b8 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1183 06bc 000053E3 		cmp	r3, #0
 1184 06c0 17FFFF1A 		bne	.L38
1613:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1185              		.loc 1 1613 0
 1186 06c4 0120A0E3 		mov	r2, #1
 1187 06c8 0E10A0E3 		mov	r1, #14
 1188 06cc 12FFFFEA 		b	.L129
 1189              	.L135:
 1190              		.align	2
 1191              	.L134:
 1192 06d0 00000000 		.word	.LANCHOR1
 1193 06d4 00000000 		.word	.LANCHOR0
 1194 06d8 00000000 		.word	.LC4
 1195 06dc 28000000 		.word	Unity+40
 1196 06e0 22000000 		.word	.LC5
 1197 06e4 01BBFFFF 		.word	-17663
 1198 06e8 00000000 		.word	prvMQTTClientSocketWakeupCallback
 1199 06ec 22010000 		.word	.LC13
 1200 06f0 00000000 		.word	.LANCHOR2
 1201 06f4 E0930400 		.word	300000
 1202 06f8 45000000 		.word	.LC7
 1203 06fc 31000000 		.word	.LC6
 1204 0700 20050000 		.word	.LANCHOR1+1312
 1205 0704 08000000 		.word	.LANCHOR1+8
 1206 0708 5C000000 		.word	.LC8
 1207 070c 75000000 		.word	.LC9
 1208 0710 C3000000 		.word	.LC10
 1209 0714 DE000000 		.word	.LC11
 1210 0718 F5000000 		.word	.LC12
 1211 071c 400E0000 		.word	.LANCHOR1+3648
 1212 0720 28090000 		.word	.LANCHOR1+2344
 1213              	.LBE19:
 1214              	.LBE49:
 1215              		.cfi_endproc
 1216              	.LFE25:
 1218              		.section	.text.prvSendCommandToMQTTTask,"ax",%progbits
 1219              		.align	2
 1220              		.syntax unified
 1221              		.arm
 1222              		.fpu neon
 1224              	prvSendCommandToMQTTTask:
 1225              	.LFB24:
1632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xReturn;
 1226              		.loc 1 1632 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 8
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL145:
1639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1231              		.loc 1 1639 0
 1232 0000 40319FE5 		ldr	r3, .L150
1632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xReturn;
 1233              		.loc 1 1632 0
 1234 0004 F7402DE9 		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1235              		.cfi_def_cfa_offset 32
 1236              		.cfi_offset 4, -20
 1237              		.cfi_offset 5, -16
 1238              		.cfi_offset 6, -12
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
1639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1241              		.loc 1 1639 0
 1242 0008 002093E5 		ldr	r2, [r3]
 1243 000c 000052E3 		cmp	r2, #0
 1244 0010 0200001A 		bne	.L137
1639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1245              		.loc 1 1639 0 is_stmt 0 discriminator 1
 1246 0014 0110A0E3 		mov	r1, #1
 1247 0018 2C019FE5 		ldr	r0, .L150+4
 1248              	.LVL146:
 1249 001c FEFFFFEB 		bl	longjmp
 1250              	.LVL147:
 1251              	.L137:
 1252 0020 0040A0E1 		mov	r4, r0
 1253 0024 0350A0E1 		mov	r5, r3
1642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1254              		.loc 1 1642 0 is_stmt 1
 1255 0028 FEFFFFEB 		bl	xTaskGetCurrentTaskHandle
 1256              	.LVL148:
1648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1257              		.loc 1 1648 0
 1258 002c 1C319FE5 		ldr	r3, .L150+8
1642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1259              		.loc 1 1642 0
 1260 0030 080084E5 		str	r0, [r4, #8]
1648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1261              		.loc 1 1648 0
 1262 0034 003093E5 		ldr	r3, [r3]
 1263 0038 030050E1 		cmp	r0, r3
 1264 003c 3D00000A 		beq	.L138
1650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1265              		.loc 1 1650 0
 1266 0040 FEFFFFEB 		bl	vPortEnterCritical
 1267              	.LVL149:
1657:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ulQueueMessageIdentifier += mqttMESSAGE_IDENTIFIER_MIN;
 1268              		.loc 1 1657 0
 1269 0044 08219FE5 		ldr	r2, .L150+12
 1270 0048 003092E5 		ldr	r3, [r2]
 1271 004c 0C3084E5 		str	r3, [r4, #12]
1658:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1272              		.loc 1 1658 0
 1273 0050 013883E2 		add	r3, r3, #65536
1660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 1274              		.loc 1 1660 0
 1275 0054 010873E3 		cmn	r3, #65536
1662:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
 1276              		.loc 1 1662 0
 1277 0058 0138A023 		movcs	r3, #65536
 1278 005c 003082E5 		str	r3, [r2]
1665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1279              		.loc 1 1665 0
 1280 0060 FEFFFFEB 		bl	vPortExitCritical
 1281              	.LVL150:
1668:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1282              		.loc 1 1668 0
 1283 0064 100084E2 		add	r0, r4, #16
 1284 0068 FEFFFFEB 		bl	vTaskSetTimeOutState
 1285              	.LVL151:
1673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1286              		.loc 1 1673 0
 1287 006c 0000A0E3 		mov	r0, #0
 1288 0070 FEFFFFEB 		bl	xTaskNotifyStateClear
 1289              	.LVL152:
1678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturn = xQueueSendToBack( xCommandQueue, pxEventData, pxEventData->xTicksToWait );
 1290              		.loc 1 1678 0
 1291 0074 DC009FE5 		ldr	r0, .L150+16
 1292 0078 FEFFFFEB 		bl	vLoggingPrintf
 1293              	.LVL153:
1679:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1294              		.loc 1 1679 0
 1295 007c 0030A0E3 		mov	r3, #0
 1296 0080 182094E5 		ldr	r2, [r4, #24]
 1297 0084 0410A0E1 		mov	r1, r4
 1298 0088 000095E5 		ldr	r0, [r5]
 1299 008c FEFFFFEB 		bl	xQueueGenericSend
 1300              	.LVL154:
1681:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1301              		.loc 1 1681 0
 1302 0090 000050E3 		cmp	r0, #0
 1303 0094 2300000A 		beq	.L141
1686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1304              		.loc 1 1686 0
 1305 0098 0C3094E5 		ldr	r3, [r4, #12]
 1306 009c 08508DE2 		add	r5, sp, #8
1698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 1307              		.loc 1 1698 0
 1308 00a0 B4709FE5 		ldr	r7, .L150+20
1729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 1309              		.loc 1 1729 0
 1310 00a4 B4609FE5 		ldr	r6, .L150+24
1686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1311              		.loc 1 1686 0
 1312 00a8 0330E0E1 		mvn	r3, r3
 1313 00ac 043025E5 		str	r3, [r5, #-4]!
 1314              	.LVL155:
 1315              	.L146:
1696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1316              		.loc 1 1696 0
 1317 00b0 0010A0E3 		mov	r1, #0
 1318 00b4 0030E0E3 		mvn	r3, #0
 1319 00b8 0520A0E1 		mov	r2, r5
 1320 00bc 0100A0E1 		mov	r0, r1
 1321 00c0 FEFFFFEB 		bl	xTaskNotifyWait
 1322              	.LVL156:
1698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 {
 1323              		.loc 1 1698 0
 1324 00c4 04309DE5 		ldr	r3, [sp, #4]
 1325 00c8 0C1094E5 		ldr	r1, [r4, #12]
 1326 00cc 072003E0 		and	r2, r3, r7
 1327 00d0 020051E1 		cmp	r1, r2
 1328 00d4 1000001A 		bne	.L142
1705:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     {
 1329              		.loc 1 1705 0
 1330 00d8 010013E3 		tst	r3, #1
 1331 00dc 0A00001A 		bne	.L143
1709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         {
 1332              		.loc 1 1709 0
 1333 00e0 0130C3E3 		bic	r3, r3, #1
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
 1334              		.loc 1 1714 0
 1335 00e4 78009FE5 		ldr	r0, .L150+28
1709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         {
 1336              		.loc 1 1709 0
 1337 00e8 0338A0E1 		lsl	r3, r3, #16
 1338 00ec 2338A0E1 		lsr	r3, r3, #16
1711:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         }
 1339              		.loc 1 1711 0
 1340 00f0 200053E3 		cmp	r3, #32
 1341 00f4 0140A013 		movne	r4, #1
 1342              	.LVL157:
 1343 00f8 0240A003 		moveq	r4, #2
 1344              	.LVL158:
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
 1345              		.loc 1 1714 0
 1346 00fc FEFFFFEB 		bl	vLoggingPrintf
 1347              	.LVL159:
 1348              	.L145:
1745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 1349              		.loc 1 1745 0
 1350 0100 0400A0E1 		mov	r0, r4
 1351 0104 0CD08DE2 		add	sp, sp, #12
 1352              		.cfi_remember_state
 1353              		.cfi_def_cfa_offset 20
 1354              		@ sp needed
 1355 0108 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1356              	.LVL160:
 1357              	.L143:
 1358              		.cfi_restore_state
1720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         xReturnCode = eMQTTAgentSuccess;
 1359              		.loc 1 1720 0
 1360 010c 54009FE5 		ldr	r0, .L150+32
1721:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                     }
 1361              		.loc 1 1721 0
 1362 0110 0040A0E3 		mov	r4, #0
 1363              	.LVL161:
1720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                         xReturnCode = eMQTTAgentSuccess;
 1364              		.loc 1 1720 0
 1365 0114 FEFFFFEB 		bl	vLoggingPrintf
 1366              	.LVL162:
 1367 0118 F8FFFFEA 		b	.L145
 1368              	.LVL163:
 1369              	.L142:
1729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
 1370              		.loc 1 1729 0
 1371 011c 0600A0E1 		mov	r0, r6
 1372 0120 FEFFFFEB 		bl	vLoggingPrintf
 1373              	.LVL164:
1696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1374              		.loc 1 1696 0
 1375 0124 E1FFFFEA 		b	.L146
 1376              	.LVL165:
 1377              	.L141:
1735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1378              		.loc 1 1735 0
 1379 0128 3C009FE5 		ldr	r0, .L150+36
 1380              	.LVL166:
1634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     uint32_t ulReceivedMessageIdentifier;
 1381              		.loc 1 1634 0
 1382 012c 0140A0E3 		mov	r4, #1
 1383              	.LVL167:
1735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1384              		.loc 1 1735 0
 1385 0130 FEFFFFEB 		bl	vLoggingPrintf
 1386              	.LVL168:
 1387 0134 F1FFFFEA 		b	.L145
 1388              	.LVL169:
 1389              	.L138:
1740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturnCode = eMQTTAgentAPICalledFromCallback;
 1390              		.loc 1 1740 0
 1391 0138 30009FE5 		ldr	r0, .L150+40
1741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1392              		.loc 1 1741 0
 1393 013c 0340A0E3 		mov	r4, #3
 1394              	.LVL170:
1740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturnCode = eMQTTAgentAPICalledFromCallback;
 1395              		.loc 1 1740 0
 1396 0140 FEFFFFEB 		bl	vLoggingPrintf
 1397              	.LVL171:
 1398 0144 EDFFFFEA 		b	.L145
 1399              	.L151:
 1400              		.align	2
 1401              	.L150:
 1402 0148 00000000 		.word	.LANCHOR0
 1403 014c 28000000 		.word	Unity+40
 1404 0150 00000000 		.word	.LANCHOR3
 1405 0154 00000000 		.word	.LANCHOR4
 1406 0158 00000000 		.word	.LC14
 1407 015c 0000FFFF 		.word	-65536
 1408 0160 68000000 		.word	.LC17
 1409 0164 20000000 		.word	.LC15
 1410 0168 44000000 		.word	.LC16
 1411 016c 8C000000 		.word	.LC18
 1412 0170 C1000000 		.word	.LC19
 1413              		.cfi_endproc
 1414              	.LFE24:
 1416              		.section	.text.prvMQTTEventCallback,"ax",%progbits
 1417              		.align	2
 1418              		.syntax unified
 1419              		.arm
 1420              		.fpu neon
 1422              	prvMQTTEventCallback:
 1423              	.LFB1:
 682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBool_t xReturn = eMQTTFalse;
 1424              		.loc 1 682 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 32
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              	.LVL172:
 688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1429              		.loc 1 688 0
 1430 0000 010050E3 		cmp	r0, #1
 682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBool_t xReturn = eMQTTFalse;
 1431              		.loc 1 682 0
 1432 0004 F0402DE9 		push	{r4, r5, r6, r7, lr}
 1433              		.cfi_def_cfa_offset 20
 1434              		.cfi_offset 4, -20
 1435              		.cfi_offset 5, -16
 1436              		.cfi_offset 6, -12
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0008 24D04DE2 		sub	sp, sp, #36
 1440              		.cfi_def_cfa_offset 56
 688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1441              		.loc 1 688 0
 1442 000c 0200009A 		bls	.L153
 688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1443              		.loc 1 688 0 is_stmt 0 discriminator 1
 1444 0010 0110A0E3 		mov	r1, #1
 1445              	.LVL173:
 1446 0014 44029FE5 		ldr	r0, .L190
 1447              	.LVL174:
 1448 0018 FEFFFFEB 		bl	longjmp
 1449              	.LVL175:
 1450              	.L153:
 1451 001c 92CEA0E3 		mov	ip, #2336
 691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1452              		.loc 1 691 0 is_stmt 1
 1453 0020 3C529FE5 		ldr	r5, .L190+4
 1454 0024 900C06E0 		mul	r6, r0, ip
 693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1455              		.loc 1 693 0
 1456 0028 0020D1E5 		ldrb	r2, [r1]	@ zero_extendqisi2
 691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1457              		.loc 1 691 0
 1458 002c 064085E0 		add	r4, r5, r6
 1459              	.LVL176:
 693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1460              		.loc 1 693 0
 1461 0030 0B0052E3 		cmp	r2, #11
 1462 0034 02F19F97 		ldrls	pc, [pc, r2, asl #2]
 1463 0038 1D0000EA 		b	.L171
 1464              	.L156:
 1465 003c 54010000 		.word	.L155
 1466 0040 6C000000 		.word	.L157
 1467 0044 B4000000 		.word	.L171
 1468 0048 2C010000 		.word	.L158
 1469 004c B4000000 		.word	.L171
 1470 0050 BC000000 		.word	.L159
 1471 0054 B4000000 		.word	.L171
 1472 0058 04010000 		.word	.L160
 1473 005c B4000000 		.word	.L171
 1474 0060 D0010000 		.word	.L161
 1475 0064 4C020000 		.word	.L162
 1476 0068 A8010000 		.word	.L163
 1477              	.L157:
 1478              	.LBB64:
 1479              	.LBB65:
1071:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1480              		.loc 1 1071 0
 1481 006c 0400A0E1 		mov	r0, r4
 1482              	.LVL177:
 1483 0070 0450D1E5 		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 1484              	.LVL178:
 1485 0074 B610D1E1 		ldrh	r1, [r1, #6]
 1486              	.LVL179:
 1487 0078 FEFFFFEB 		bl	prvRetrieveNotificationData
 1488              	.LVL180:
1074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1489              		.loc 1 1074 0
 1490 007c 004050E2 		subs	r4, r0, #0
 1491              	.LVL181:
 1492 0080 4500000A 		beq	.L187
1076:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1493              		.loc 1 1076 0
 1494 0084 000055E3 		cmp	r5, #0
 1495 0088 0600001A 		bne	.L164
1078:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( pxNotificationData, eMQTTCONNACKConnectionAccepted, pdPASS );
 1496              		.loc 1 1078 0
 1497 008c D4019FE5 		ldr	r0, .L190+8
 1498              	.LVL182:
 1499 0090 FEFFFFEB 		bl	vLoggingPrintf
 1500              	.LVL183:
1079:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1501              		.loc 1 1079 0
 1502 0094 0120A0E3 		mov	r2, #1
 1503 0098 0410A0E3 		mov	r1, #4
 1504              	.LVL184:
 1505              	.L189:
 1506              	.LBE65:
 1507              	.LBE64:
 1508              	.LBB67:
 1509              	.LBB68:
1111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1510              		.loc 1 1111 0
 1511 009c 0400A0E1 		mov	r0, r4
 1512 00a0 FEFFFFEB 		bl	prvNotifyRequestingTask
 1513              	.LVL185:
 1514 00a4 020000EA 		b	.L171
 1515              	.LVL186:
 1516              	.L164:
 1517              	.LBE68:
 1518              	.LBE67:
 1519              	.LBB70:
 1520              	.LBB66:
1091:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1521              		.loc 1 1091 0
 1522 00a8 0510A0E1 		mov	r1, r5
 1523 00ac B8019FE5 		ldr	r0, .L190+12
 1524              	.LVL187:
 1525 00b0 FEFFFFEB 		bl	vLoggingPrintf
 1526              	.LVL188:
 1527              	.L171:
 1528              	.LBE66:
 1529              	.LBE70:
 683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
 1530              		.loc 1 683 0
 1531 00b4 0040A0E3 		mov	r4, #0
 1532 00b8 370000EA 		b	.L187
 1533              	.LVL189:
 1534              	.L159:
 1535              	.LBB71:
 1536              	.LBB69:
1103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1537              		.loc 1 1103 0
 1538 00bc 0400A0E1 		mov	r0, r4
 1539              	.LVL190:
 1540 00c0 0450D1E5 		ldrb	r5, [r1, #4]	@ zero_extendqisi2
 1541              	.LVL191:
 1542 00c4 B610D1E1 		ldrh	r1, [r1, #6]
 1543              	.LVL192:
 1544 00c8 FEFFFFEB 		bl	prvRetrieveNotificationData
 1545              	.LVL193:
1106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1546              		.loc 1 1106 0
 1547 00cc 004050E2 		subs	r4, r0, #0
 1548              	.LVL194:
 1549 00d0 3100000A 		beq	.L187
1108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1550              		.loc 1 1108 0
 1551 00d4 800055E3 		cmp	r5, #128
 1552 00d8 0400000A 		beq	.L165
1110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( pxNotificationData, eMQTTSUBACKSubscriptionAccepted, pdPASS );
 1553              		.loc 1 1110 0
 1554 00dc 8C019FE5 		ldr	r0, .L190+16
 1555              	.LVL195:
 1556 00e0 FEFFFFEB 		bl	vLoggingPrintf
 1557              	.LVL196:
1111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1558              		.loc 1 1111 0
 1559 00e4 0120A0E3 		mov	r2, #1
 1560 00e8 1410A0E3 		mov	r1, #20
 1561 00ec EAFFFFEA 		b	.L189
 1562              	.LVL197:
 1563              	.L165:
1115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             prvNotifyRequestingTask( pxNotificationData, eMQTTSUBACKSubscriptionRejected, pdFAIL );
 1564              		.loc 1 1115 0
 1565 00f0 7C019FE5 		ldr	r0, .L190+20
 1566              	.LVL198:
 1567 00f4 FEFFFFEB 		bl	vLoggingPrintf
 1568              	.LVL199:
1116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1569              		.loc 1 1116 0
 1570 00f8 0020A0E3 		mov	r2, #0
 1571 00fc 1610A0E3 		mov	r1, #22
 1572 0100 E5FFFFEA 		b	.L189
 1573              	.LVL200:
 1574              	.L160:
 1575              	.LBE69:
 1576              	.LBE71:
 1577              	.LBB72:
 1578              	.LBB73:
1128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1579              		.loc 1 1128 0
 1580 0104 0400A0E1 		mov	r0, r4
 1581              	.LVL201:
 1582 0108 B410D1E1 		ldrh	r1, [r1, #4]
 1583              	.LVL202:
 1584 010c FEFFFFEB 		bl	prvRetrieveNotificationData
 1585              	.LVL203:
1131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1586              		.loc 1 1131 0
 1587 0110 004050E2 		subs	r4, r0, #0
 1588              	.LVL204:
 1589 0114 2000000A 		beq	.L187
1134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( pxNotificationData, eMQTTUNSUBACKReceived, pdPASS );
 1590              		.loc 1 1134 0
 1591 0118 58019FE5 		ldr	r0, .L190+24
 1592              	.LVL205:
 1593 011c FEFFFFEB 		bl	vLoggingPrintf
 1594              	.LVL206:
1135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1595              		.loc 1 1135 0
 1596 0120 0120A0E3 		mov	r2, #1
 1597 0124 1A10A0E3 		mov	r1, #26
 1598 0128 DBFFFFEA 		b	.L189
 1599              	.LVL207:
 1600              	.L158:
 1601              	.LBE73:
 1602              	.LBE72:
 1603              	.LBB74:
 1604              	.LBB75:
1146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1605              		.loc 1 1146 0
 1606 012c 0400A0E1 		mov	r0, r4
 1607              	.LVL208:
 1608 0130 B410D1E1 		ldrh	r1, [r1, #4]
 1609              	.LVL209:
 1610 0134 FEFFFFEB 		bl	prvRetrieveNotificationData
 1611              	.LVL210:
1149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1612              		.loc 1 1149 0
 1613 0138 004050E2 		subs	r4, r0, #0
 1614              	.LVL211:
 1615 013c 1600000A 		beq	.L187
1152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( pxNotificationData, eMQTTPUBACKReceived, pdPASS );
 1616              		.loc 1 1152 0
 1617 0140 34019FE5 		ldr	r0, .L190+28
 1618              	.LVL212:
 1619 0144 FEFFFFEB 		bl	vLoggingPrintf
 1620              	.LVL213:
1153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1621              		.loc 1 1153 0
 1622 0148 0120A0E3 		mov	r2, #1
 1623 014c 1010A0E3 		mov	r1, #16
 1624 0150 D1FFFFEA 		b	.L189
 1625              	.LVL214:
 1626              	.L155:
 1627              	.LBE75:
 1628              	.LBE74:
 1629              	.LBB76:
 1630              	.LBB77:
1169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1631              		.loc 1 1169 0
 1632 0154 905C2CE0 		mla	ip, r0, ip, r5
 1633 0158 14459CE5 		ldr	r4, [ip, #1300]
 1634              	.LVL215:
 1635 015c 000054E3 		cmp	r4, #0
 1636 0160 0D00000A 		beq	.L187
1171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xCallbackParams.u.xPublishData = pxParams->u.xPublishData;
 1637              		.loc 1 1171 0
 1638 0164 0030A0E3 		mov	r3, #0
1172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1639              		.loc 1 1172 0
 1640 0168 045081E2 		add	r5, r1, #4
1171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xCallbackParams.u.xPublishData = pxParams->u.xPublishData;
 1641              		.loc 1 1171 0
 1642 016c 0430CDE5 		strb	r3, [sp, #4]
1172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1643              		.loc 1 1172 0
 1644 0170 08E08DE2 		add	lr, sp, #8
 1645 0174 0F00B5E8 		ldmia	r5!, {r0, r1, r2, r3}
 1646              	.LVL216:
 1647 0178 0F00AEE8 		stmia	lr!, {r0, r1, r2, r3}
 1648 017c 030095E8 		ldm	r5, {r0, r1}
 1649 0180 03008EE8 		stm	lr, {r0, r1}
1174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1650              		.loc 1 1174 0
 1651 0184 04108DE2 		add	r1, sp, #4
 1652 0188 10059CE5 		ldr	r0, [ip, #1296]
 1653 018c 34FF2FE1 		blx	r4
 1654              	.LVL217:
 1655              	.LBE77:
 1656              	.LBE76:
 683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
 1657              		.loc 1 683 0
 1658 0190 014040E2 		sub	r4, r0, #1
 1659 0194 144F6FE1 		clz	r4, r4
 1660 0198 A442A0E1 		lsr	r4, r4, #5
 1661              	.LVL218:
 1662              	.L187:
 741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 1663              		.loc 1 741 0
 1664 019c 0400A0E1 		mov	r0, r4
 1665 01a0 24D08DE2 		add	sp, sp, #36
 1666              		.cfi_remember_state
 1667              		.cfi_def_cfa_offset 20
 1668              		@ sp needed
 1669 01a4 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1670              	.LVL219:
 1671              	.L163:
 1672              		.cfi_restore_state
 1673              	.LBB78:
 1674              	.LBB79:
1187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1675              		.loc 1 1187 0
 1676 01a8 0400A0E1 		mov	r0, r4
 1677              	.LVL220:
 1678 01ac B410D1E1 		ldrh	r1, [r1, #4]
 1679              	.LVL221:
 1680 01b0 FEFFFFEB 		bl	prvRetrieveNotificationData
 1681              	.LVL222:
1191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1682              		.loc 1 1191 0
 1683 01b4 004050E2 		subs	r4, r0, #0
 1684              	.LVL223:
 1685 01b8 F7FFFF0A 		beq	.L187
1193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         prvNotifyRequestingTask( pxNotificationData, eMQTTOperationTimedOut, pdFAIL );
 1686              		.loc 1 1193 0
 1687 01bc BC009FE5 		ldr	r0, .L190+32
 1688              	.LVL224:
 1689 01c0 FEFFFFEB 		bl	vLoggingPrintf
 1690              	.LVL225:
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1691              		.loc 1 1194 0
 1692 01c4 0020A0E3 		mov	r2, #0
 1693 01c8 2010A0E3 		mov	r1, #32
 1694 01cc B2FFFFEA 		b	.L189
 1695              	.LVL226:
 1696              	.L161:
 1697              	.LBE79:
 1698              	.LBE78:
 1699              	.LBB80:
 1700              	.LBB81:
1209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1701              		.loc 1 1209 0
 1702 01d0 900C0CE0 		mul	ip, r0, ip
 1703 01d4 0C3095E7 		ldr	r3, [r5, ip]
 1704 01d8 0C2085E0 		add	r2, r5, ip
 1705 01dc 010073E3 		cmn	r3, #1
 1706 01e0 0900000A 		beq	.L167
1212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1707              		.loc 1 1212 0
 1708 01e4 143592E5 		ldr	r3, [r2, #1300]
 1709 01e8 000053E3 		cmp	r3, #0
 1710 01ec 0400000A 		beq	.L168
1214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             ( void ) pxConnection->pxCallback( pxConnection->pvUserData, &( xCallbackParams ) );
 1711              		.loc 1 1214 0
 1712 01f0 0100A0E3 		mov	r0, #1
 1713              	.LVL227:
 1714 01f4 20108DE2 		add	r1, sp, #32
 1715              	.LVL228:
 1716 01f8 1C0061E5 		strb	r0, [r1, #-28]!
1215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1717              		.loc 1 1215 0
 1718 01fc 100592E5 		ldr	r0, [r2, #1296]
 1719 0200 33FF2FE1 		blx	r3
 1720              	.LVL229:
 1721              	.L168:
1219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1722              		.loc 1 1219 0
 1723 0204 0400A0E1 		mov	r0, r4
 1724 0208 FEFFFFEB 		bl	prvGracefulSocketClose
 1725              	.LVL230:
 1726              	.L167:
1234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      eMQTTClientGotDisconnected,
 1727              		.loc 1 1234 0
 1728 020c 4E6E86E2 		add	r6, r6, #1248
 1729              	.LBE81:
 1730              	.LBE80:
 682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBool_t xReturn = eMQTTFalse;
 1731              		.loc 1 682 0
 1732 0210 0070A0E3 		mov	r7, #0
 1733              	.LBB83:
 1734              	.LBB82:
1234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      eMQTTClientGotDisconnected,
 1735              		.loc 1 1234 0
 1736 0214 086086E2 		add	r6, r6, #8
 1737              	.L170:
1232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1738              		.loc 1 1232 0
 1739 0218 073084E0 		add	r3, r4, r7
 1740 021c E83493E5 		ldr	r3, [r3, #1256]
 1741 0220 000053E3 		cmp	r3, #0
 1742 0224 0400000A 		beq	.L169
1234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                      eMQTTClientGotDisconnected,
 1743              		.loc 1 1234 0
 1744 0228 070086E0 		add	r0, r6, r7
 1745 022c 0020A0E3 		mov	r2, #0
 1746 0230 2210A0E3 		mov	r1, #34
 1747 0234 000085E0 		add	r0, r5, r0
 1748 0238 FEFFFFEB 		bl	prvNotifyRequestingTask
 1749              	.LVL231:
 1750              	.L169:
 1751 023c 087087E2 		add	r7, r7, #8
1230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1752              		.loc 1 1230 0
 1753 0240 280057E3 		cmp	r7, #40
 1754 0244 F3FFFF1A 		bne	.L170
 1755 0248 99FFFFEA 		b	.L171
 1756              	.LVL232:
 1757              	.L162:
 1758              	.LBE82:
 1759              	.LBE83:
 731:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             mqttconfigDEBUG_LOG( ( "Consider adjusting parameters in aws_bufferpool_config.h.\r\n" 
 1760              		.loc 1 731 0
 1761 024c 30009FE5 		ldr	r0, .L190+36
 1762              	.LVL233:
 1763 0250 FEFFFFEB 		bl	vLoggingPrintf
 1764              	.LVL234:
 732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 1765              		.loc 1 732 0
 1766 0254 2C009FE5 		ldr	r0, .L190+40
 1767 0258 FEFFFFEB 		bl	vLoggingPrintf
 1768              	.LVL235:
 1769 025c 94FFFFEA 		b	.L171
 1770              	.L191:
 1771              		.align	2
 1772              	.L190:
 1773 0260 28000000 		.word	Unity+40
 1774 0264 00000000 		.word	.LANCHOR1
 1775 0268 00000000 		.word	.LC20
 1776 026c 35000000 		.word	.LC21
 1777 0270 60000000 		.word	.LC22
 1778 0274 8B000000 		.word	.LC23
 1779 0278 AA000000 		.word	.LC24
 1780 027c CD000000 		.word	.LC25
 1781 0280 EC000000 		.word	.LC26
 1782 0284 FC000000 		.word	.LC27
 1783 0288 37010000 		.word	.LC28
 1784              		.cfi_endproc
 1785              	.LFE1:
 1787              		.section	.text.prvMQTTSendCallback,"ax",%progbits
 1788              		.align	2
 1789              		.syntax unified
 1790              		.arm
 1791              		.fpu neon
 1793              	prvMQTTSendCallback:
 1794              	.LFB0:
 625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
 1795              		.loc 1 625 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 16
 1798              		@ frame_needed = 0, uses_anonymous_args = 0
 1799              	.LVL236:
 634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1800              		.loc 1 634 0
 1801 0000 010050E3 		cmp	r0, #1
 625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTBrokerConnection_t * pxConnection;
 1802              		.loc 1 625 0
 1803 0004 FF412DE9 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1804              		.cfi_def_cfa_offset 40
 1805              		.cfi_offset 4, -24
 1806              		.cfi_offset 5, -20
 1807              		.cfi_offset 6, -16
 1808              		.cfi_offset 7, -12
 1809              		.cfi_offset 8, -8
 1810              		.cfi_offset 14, -4
 631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1811              		.loc 1 631 0
 1812 0008 1430A0E3 		mov	r3, #20
 1813 000c 04308DE5 		str	r3, [sp, #4]
 634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1814              		.loc 1 634 0
 1815 0010 0200009A 		bls	.L193
 1816              	.LVL237:
 1817              	.LBB86:
 1818              	.LBB87:
 1819 0014 0110A0E3 		mov	r1, #1
 1820              	.LVL238:
 1821 0018 74009FE5 		ldr	r0, .L201
 1822              	.LVL239:
 1823 001c FEFFFFEB 		bl	longjmp
 1824              	.LVL240:
 1825              	.L193:
 1826 0020 0050A0E1 		mov	r5, r0
 1827              	.LBE87:
 1828              	.LBE86:
 637:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1829              		.loc 1 637 0
 1830 0024 08008DE2 		add	r0, sp, #8
 1831              	.LVL241:
 1832 0028 0170A0E1 		mov	r7, r1
 1833 002c 0260A0E1 		mov	r6, r2
 1834 0030 FEFFFFEB 		bl	vTaskSetTimeOutState
 1835              	.LVL242:
 653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     &( pucData[ ulBytesSent ] ),               /* Only send the rem
 1836              		.loc 1 653 0
 1837 0034 923EA0E3 		mov	r3, #2336
 1838 0038 58809FE5 		ldr	r8, .L201+4
 1839 003c 950305E0 		mul	r5, r5, r3
 1840              	.LVL243:
 629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     TimeOut_t xTimestamp;
 1841              		.loc 1 629 0
 1842 0040 0040A0E3 		mov	r4, #0
 1843              	.LVL244:
 1844              	.L194:
 644:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1845              		.loc 1 644 0
 1846 0044 060054E1 		cmp	r4, r6
 1847 0048 0E00002A 		bcs	.L192
 647:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1848              		.loc 1 647 0
 1849 004c 04108DE2 		add	r1, sp, #4
 1850 0050 08008DE2 		add	r0, sp, #8
 1851 0054 FEFFFFEB 		bl	xTaskCheckForTimeOut
 1852              	.LVL245:
 1853 0058 010050E3 		cmp	r0, #1
 1854 005c 0900000A 		beq	.L192
 653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                     &( pucData[ ulBytesSent ] ),               /* Only send the rem
 1855              		.loc 1 653 0
 1856 0060 042046E0 		sub	r2, r6, r4
 1857 0064 041087E0 		add	r1, r7, r4
 1858 0068 0030A0E3 		mov	r3, #0
 1859 006c 050098E7 		ldr	r0, [r8, r5]
 1860 0070 FEFFFFEB 		bl	SOCKETS_Send
 1861              	.LVL246:
 660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1862              		.loc 1 660 0
 1863 0074 000050E3 		cmp	r0, #0
 673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
 1864              		.loc 1 673 0
 1865 0078 004084A0 		addge	r4, r4, r0
 1866              	.LVL247:
 660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 1867              		.loc 1 660 0
 1868 007c F0FFFFAA 		bge	.L194
 665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 1869              		.loc 1 665 0
 1870 0080 0B0070E3 		cmn	r0, #11
 1871 0084 EEFFFF0A 		beq	.L194
 1872              	.LVL248:
 1873              	.L192:
 678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 1874              		.loc 1 678 0
 1875 0088 0400A0E1 		mov	r0, r4
 1876 008c 10D08DE2 		add	sp, sp, #16
 1877              		.cfi_def_cfa_offset 24
 1878              		@ sp needed
 1879 0090 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1880              	.LVL249:
 1881              	.L202:
 1882              		.align	2
 1883              	.L201:
 1884 0094 28000000 		.word	Unity+40
 1885 0098 00000000 		.word	.LANCHOR1
 1886              		.cfi_endproc
 1887              	.LFE0:
 1889              		.section	.text.prvMQTTClientSocketWakeupCallback,"ax",%progbits
 1890              		.align	2
 1891              		.syntax unified
 1892              		.arm
 1893              		.fpu neon
 1895              	prvMQTTClientSocketWakeupCallback:
 1896              	.LFB9:
1037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xTicksToWait = pdMS_TO_TICKS( 20 );
 1897              		.loc 1 1037 0
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 32
 1900              		@ frame_needed = 0, uses_anonymous_args = 0
 1901              	.LVL250:
1047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1902              		.loc 1 1047 0
 1903 0000 64309FE5 		ldr	r3, .L207
1037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const TickType_t xTicksToWait = pdMS_TO_TICKS( 20 );
 1904              		.loc 1 1037 0
 1905 0004 30402DE9 		push	{r4, r5, lr}
 1906              		.cfi_def_cfa_offset 12
 1907              		.cfi_offset 4, -12
 1908              		.cfi_offset 5, -8
 1909              		.cfi_offset 14, -4
 1910 0008 24D04DE2 		sub	sp, sp, #36
 1911              		.cfi_def_cfa_offset 48
1047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1912              		.loc 1 1047 0
 1913 000c 003093E5 		ldr	r3, [r3]
 1914 0010 000053E3 		cmp	r3, #0
 1915 0014 0200001A 		bne	.L204
 1916              	.LVL251:
 1917              	.LBB90:
 1918              	.LBB91:
 634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 1919              		.loc 1 634 0
 1920 0018 0110A0E3 		mov	r1, #1
 1921 001c 4C009FE5 		ldr	r0, .L207+4
 1922              	.LVL252:
 1923 0020 FEFFFFEB 		bl	longjmp
 1924              	.LVL253:
 1925              	.L204:
 1926              	.LBE91:
 1927              	.LBE90:
1053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 1928              		.loc 1 1053 0
 1929 0024 48409FE5 		ldr	r4, .L207+8
 1930 0028 000094E5 		ldr	r0, [r4]
 1931              	.LVL254:
 1932 002c FEFFFFEB 		bl	uxQueueMessagesWaiting
 1933              	.LVL255:
 1934 0030 005050E2 		subs	r5, r0, #0
 1935 0034 0A00001A 		bne	.L203
1057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xEventData.xEventType = eMQTTServiceSocket;
 1936              		.loc 1 1057 0
 1937 0038 2020A0E3 		mov	r2, #32
 1938 003c 0510A0E1 		mov	r1, r5
 1939 0040 0D00A0E1 		mov	r0, sp
 1940 0044 FEFFFFEB 		bl	memset
 1941              	.LVL256:
1059:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         ( void ) xQueueSendToBack( xCommandQueue, &xEventData, xTicksToWait );
 1942              		.loc 1 1059 0
 1943 0048 28009FE5 		ldr	r0, .L207+12
 1944 004c FEFFFFEB 		bl	vLoggingPrintf
 1945              	.LVL257:
1060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
 1946              		.loc 1 1060 0
 1947 0050 0530A0E1 		mov	r3, r5
 1948 0054 1420A0E3 		mov	r2, #20
 1949 0058 0D10A0E1 		mov	r1, sp
 1950 005c 000094E5 		ldr	r0, [r4]
 1951 0060 FEFFFFEB 		bl	xQueueGenericSend
 1952              	.LVL258:
 1953              	.L203:
1062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
 1954              		.loc 1 1062 0
 1955 0064 24D08DE2 		add	sp, sp, #36
 1956              		.cfi_def_cfa_offset 12
 1957              		@ sp needed
 1958 0068 3080BDE8 		pop	{r4, r5, pc}
 1959              	.L208:
 1960              		.align	2
 1961              	.L207:
 1962 006c 00000000 		.word	.LANCHOR3
 1963 0070 28000000 		.word	Unity+40
 1964 0074 00000000 		.word	.LANCHOR0
 1965 0078 00000000 		.word	.LC29
 1966              		.cfi_endproc
 1967              	.LFE9:
 1969              		.section	.text.MQTT_AGENT_Init,"ax",%progbits
 1970              		.align	2
 1971              		.global	MQTT_AGENT_Init
 1972              		.syntax unified
 1973              		.arm
 1974              		.fpu neon
 1976              	MQTT_AGENT_Init:
 1977              	.LFB26:
1813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 }
1814:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1815:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1816:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1817:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Process active connections each time the queue unblocks.  It might
1818:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * be that the queue read timed out because a connection needs service. */
1819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xNextTimeoutTicks = prvManageConnections();
1820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1821:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
1822:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1823:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** BaseType_t MQTT_AGENT_Init( void )
1825:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 1978              		.loc 1 1825 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 32
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              	.LVL259:
 1983 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1984              		.cfi_def_cfa_offset 32
 1985              		.cfi_offset 4, -32
 1986              		.cfi_offset 5, -28
 1987              		.cfi_offset 6, -24
 1988              		.cfi_offset 7, -20
 1989              		.cfi_offset 8, -16
 1990              		.cfi_offset 9, -12
 1991              		.cfi_offset 10, -8
 1992              		.cfi_offset 14, -4
 1993 0004 30D04DE2 		sub	sp, sp, #48
 1994              		.cfi_def_cfa_offset 80
1826:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The following variables must be static as they hold data that is used as
1827:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * long as the MQTT application is running. */
1828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1829:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The variable used to hold the queue's data structure. */
1830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     static StaticQueue_t xStaticQueue;
1831:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1832:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The array to use as the queue's storage area.  This must be at least
1833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * uxQueueLength * uxItemSize bytes.  Again, must be static. */
1834:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     static uint8_t ucQueueStorageArea[ mqttCOMMAND_QUEUE_LENGTH * sizeof( MQTTEventData_t ) ];
1835:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1836:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The stack used by the MQTT task. */
1837:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     static StackType_t xStack[ mqttconfigMQTT_TASK_STACK_DEPTH ];
1838:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1839:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* The variable used to hold the MQTT task's data structures. */
1840:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     static StaticTask_t xStaticTask;
1841:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xReturnCode = pdPASS;
1843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x, y;
1844:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1845:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If the command queue is not NULL then the queue and task have already
1846:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * been created. */
1847:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xCommandQueue == NULL )
 1995              		.loc 1 1847 0
 1996 0008 38719FE5 		ldr	r7, .L224
 1997 000c 004097E5 		ldr	r4, [r7]
 1998 0010 000054E3 		cmp	r4, #0
1842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x, y;
 1999              		.loc 1 1842 0
 2000 0014 0150A013 		movne	r5, #1
 2001              		.loc 1 1847 0
 2002 0018 4700001A 		bne	.L209
 2003 001c 28619FE5 		ldr	r6, .L224+4
1848:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Ensure the connection structures start in a consistent state. */
1850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         memset( xMQTTConnections, 0x00, sizeof( xMQTTConnections ) );
 2004              		.loc 1 1850 0
 2005 0020 492DA0E3 		mov	r2, #4672
 2006              	.LBB92:
1851:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         for( x = 0; x < ( UBaseType_t ) mqttconfigMAX_BROKERS; x++ )
1853:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
1854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].xSocket = SOCKETS_INVALID_SOCKET;
1855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1856:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Initialize user callback and data. These are provided during connect. */
1857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].pvUserData = NULL;
1858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].pxCallback = NULL;
1859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Mark the connection "not in use". */
1861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].xConnectionInUse = pdFALSE;
1862:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Initialize the MQTT Core Library context. */
1864:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             MQTTInitParams_t xInitParams;
1865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pvCallbackContext = ( void * ) x; /*lint !e923 The cast is ok as we are pas
1866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pxCallback = prvMQTTEventCallback;
 2007              		.loc 1 1866 0
 2008 0024 24819FE5 		ldr	r8, .L224+8
 2009              	.LBE92:
1850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2010              		.loc 1 1850 0
 2011 0028 0410A0E1 		mov	r1, r4
 2012              	.LBB93:
1867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pvSendContext = ( void * ) x;     /*lint !e923 The cast is ok as we are pas
1868:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pxMQTTSendFxn = prvMQTTSendCallback;
 2013              		.loc 1 1868 0
 2014 002c 20919FE5 		ldr	r9, .L224+12
1869:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pxGetTicksFxn = prvMQTTGetTicks;
 2015              		.loc 1 1869 0
 2016 0030 20A19FE5 		ldr	r10, .L224+16
 2017              	.LBE93:
1850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2018              		.loc 1 1850 0
 2019 0034 20019FE5 		ldr	r0, .L224+20
 2020 0038 FEFFFFEB 		bl	memset
 2021              	.LVL260:
 2022              	.L214:
 2023              	.LBB94:
1854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2024              		.loc 1 1854 0
 2025 003c 0030E0E3 		mvn	r3, #0
1857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].pxCallback = NULL;
 2026              		.loc 1 1857 0
 2027 0040 0050A0E3 		mov	r5, #0
1854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2028              		.loc 1 1854 0
 2029 0044 083006E5 		str	r3, [r6, #-8]
1870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.xBufferPoolInterface.pxGetBufferFxn = mqttconfigGET_FREE_BUFFER_FXN;
1871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.xBufferPoolInterface.pxReturnBufferFxn = mqttconfigRETURN_BUFFER_FXN;
1872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1873:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             if( MQTT_Init( &xMQTTConnections[ x ].xMQTTContext, &xInitParams ) != eMQTTSuccess )
 2030              		.loc 1 1873 0
 2031 0048 14108DE2 		add	r1, sp, #20
1870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.xBufferPoolInterface.pxGetBufferFxn = mqttconfigGET_FREE_BUFFER_FXN;
 2032              		.loc 1 1870 0
 2033 004c 0C319FE5 		ldr	r3, .L224+24
 2034              		.loc 1 1873 0
 2035 0050 0600A0E1 		mov	r0, r6
1857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xMQTTConnections[ x ].pxCallback = NULL;
 2036              		.loc 1 1857 0
 2037 0054 085586E5 		str	r5, [r6, #1288]
1858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2038              		.loc 1 1858 0
 2039 0058 0C5586E5 		str	r5, [r6, #1292]
1870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.xBufferPoolInterface.pxGetBufferFxn = mqttconfigGET_FREE_BUFFER_FXN;
 2040              		.loc 1 1870 0
 2041 005c 28308DE5 		str	r3, [sp, #40]
1871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2042              		.loc 1 1871 0
 2043 0060 FC309FE5 		ldr	r3, .L224+28
1861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2044              		.loc 1 1861 0
 2045 0064 145586E5 		str	r5, [r6, #1300]
1865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pxCallback = prvMQTTEventCallback;
 2046              		.loc 1 1865 0
 2047 0068 14408DE5 		str	r4, [sp, #20]
1866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pvSendContext = ( void * ) x;     /*lint !e923 The cast is ok as we are pas
 2048              		.loc 1 1866 0
 2049 006c 18808DE5 		str	r8, [sp, #24]
1867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pxMQTTSendFxn = prvMQTTSendCallback;
 2050              		.loc 1 1867 0
 2051 0070 1C408DE5 		str	r4, [sp, #28]
1868:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.pxGetTicksFxn = prvMQTTGetTicks;
 2052              		.loc 1 1868 0
 2053 0074 20908DE5 		str	r9, [sp, #32]
1869:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             xInitParams.xBufferPoolInterface.pxGetBufferFxn = mqttconfigGET_FREE_BUFFER_FXN;
 2054              		.loc 1 1869 0
 2055 0078 24A08DE5 		str	r10, [sp, #36]
1871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2056              		.loc 1 1871 0
 2057 007c 2C308DE5 		str	r3, [sp, #44]
 2058              		.loc 1 1873 0
 2059 0080 FEFFFFEB 		bl	MQTT_Init
 2060              	.LVL261:
 2061 0084 000050E3 		cmp	r0, #0
 2062 0088 0C00001A 		bne	.L212
 2063 008c 081046E2 		sub	r1, r6, #8
1874:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1875:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 xReturnCode = pdFAIL;
1876:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 break;
1877:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1878:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             /* Initialize waiting tasks list. */
1880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             for( y = 0; y < ( UBaseType_t ) mqttconfigMAX_PARALLEL_OPS; y++ )
1881:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
1882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 xMQTTConnections[ x ].xWaitingTasks[ y ].xTaskToNotify = NULL;
 2064              		.loc 1 1882 0 discriminator 3
 2065 0090 0020A0E1 		mov	r2, r0
 2066              	.L213:
 2067 0094 003081E0 		add	r3, r1, r0
 2068 0098 080080E2 		add	r0, r0, #8
1880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 2069              		.loc 1 1880 0 discriminator 3
 2070 009c 280050E3 		cmp	r0, #40
 2071              		.loc 1 1882 0 discriminator 3
 2072 00a0 E82483E5 		str	r2, [r3, #1256]
1883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                 xMQTTConnections[ x ].xWaitingTasks[ y ].ulMessageIdentifier = 0;
 2073              		.loc 1 1883 0 discriminator 3
 2074 00a4 EC2483E5 		str	r2, [r3, #1260]
 2075              	.LVL262:
1880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             {
 2076              		.loc 1 1880 0 discriminator 3
 2077 00a8 F9FFFF1A 		bne	.L213
 2078              	.LBE94:
1852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 2079              		.loc 1 1852 0
 2080 00ac 014084E2 		add	r4, r4, #1
 2081              	.LVL263:
 2082 00b0 926E86E2 		add	r6, r6, #2336
 2083 00b4 020054E3 		cmp	r4, #2
 2084 00b8 DFFFFF1A 		bne	.L214
1842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t x, y;
 2085              		.loc 1 1842 0
 2086 00bc 0150A0E3 		mov	r5, #1
 2087              	.L212:
 2088              	.LVL264:
1884:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             }
1885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         }
1886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1887:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* ulQueueMessageIdentifier uses the top 16-bits of a 32-bit value, so
1888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * initialize it to its start value. */
1889:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         ulQueueMessageIdentifier = mqttMESSAGE_IDENTIFIER_MIN;
 2089              		.loc 1 1889 0
 2090 00c0 A0309FE5 		ldr	r3, .L224+32
 2091 00c4 0128A0E3 		mov	r2, #65536
1890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1891:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Don't create the MQTT task until the command queue has been created,
1892:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * as the task itself assumes the queue is valid. */
1893:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xCommandQueue = xQueueCreateStatic( mqttCOMMAND_QUEUE_LENGTH, sizeof( MQTTEventData_t ), uc
 2092              		.loc 1 1893 0
 2093 00c8 0040A0E3 		mov	r4, #0
 2094              	.LVL265:
 2095 00cc 2010A0E3 		mov	r1, #32
 2096 00d0 0A00A0E3 		mov	r0, #10
1889:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2097              		.loc 1 1889 0
 2098 00d4 002083E5 		str	r2, [r3]
 2099              		.loc 1 1893 0
 2100 00d8 00408DE5 		str	r4, [sp]
 2101 00dc 88309FE5 		ldr	r3, .L224+36
 2102 00e0 88209FE5 		ldr	r2, .L224+40
 2103 00e4 FEFFFFEB 		bl	xQueueGenericCreateStatic
 2104              	.LVL266:
1894:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         configASSERT( xCommandQueue );
 2105              		.loc 1 1894 0
 2106 00e8 040050E1 		cmp	r0, r4
1893:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         configASSERT( xCommandQueue );
 2107              		.loc 1 1893 0
 2108 00ec 000087E5 		str	r0, [r7]
 2109              		.loc 1 1894 0
 2110 00f0 0200001A 		bne	.L215
 2111              	.L216:
 2112              		.loc 1 1894 0 is_stmt 0 discriminator 1
 2113 00f4 0110A0E3 		mov	r1, #1
 2114 00f8 74009FE5 		ldr	r0, .L224+44
 2115 00fc FEFFFFEB 		bl	longjmp
 2116              	.LVL267:
 2117              	.L215:
1895:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xMQTTTaskHandle = xTaskCreateStatic( prvMQTTTask, "MQTT", mqttconfigMQTT_TASK_STACK_DEPTH, 
 2118              		.loc 1 1896 0 is_stmt 1
 2119 0100 70309FE5 		ldr	r3, .L224+48
 2120 0104 022BA0E3 		mov	r2, #2048
 2121 0108 6C109FE5 		ldr	r1, .L224+52
 2122 010c 6C009FE5 		ldr	r0, .L224+56
 2123 0110 08308DE5 		str	r3, [sp, #8]
 2124 0114 68309FE5 		ldr	r3, .L224+60
 2125 0118 04308DE5 		str	r3, [sp, #4]
 2126 011c 1130A0E3 		mov	r3, #17
 2127 0120 00308DE5 		str	r3, [sp]
 2128 0124 0430A0E1 		mov	r3, r4
 2129 0128 FEFFFFEB 		bl	xTaskCreateStatic
 2130              	.LVL268:
 2131 012c 54309FE5 		ldr	r3, .L224+64
1897:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         configASSERT( xMQTTTaskHandle );
 2132              		.loc 1 1897 0
 2133 0130 000050E3 		cmp	r0, #0
1896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         configASSERT( xMQTTTaskHandle );
 2134              		.loc 1 1896 0
 2135 0134 000083E5 		str	r0, [r3]
 2136              		.loc 1 1897 0
 2137 0138 EDFFFF0A 		beq	.L216
 2138              	.LVL269:
 2139              	.L209:
1898:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
1901:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2140              		.loc 1 1901 0
 2141 013c 0500A0E1 		mov	r0, r5
 2142 0140 30D08DE2 		add	sp, sp, #48
 2143              		.cfi_def_cfa_offset 32
 2144              		@ sp needed
 2145 0144 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2146              	.L225:
 2147              		.align	2
 2148              	.L224:
 2149 0148 00000000 		.word	.LANCHOR0
 2150 014c 08000000 		.word	.LANCHOR1+8
 2151 0150 00000000 		.word	prvMQTTEventCallback
 2152 0154 00000000 		.word	prvMQTTSendCallback
 2153 0158 00000000 		.word	prvMQTTGetTicks
 2154 015c 00000000 		.word	.LANCHOR1
 2155 0160 00000000 		.word	BUFFERPOOL_GetFreeBuffer
 2156 0164 00000000 		.word	BUFFERPOOL_ReturnBuffer
 2157 0168 00000000 		.word	.LANCHOR4
 2158 016c 00000000 		.word	.LANCHOR5
 2159 0170 00000000 		.word	.LANCHOR6
 2160 0174 28000000 		.word	Unity+40
 2161 0178 00000000 		.word	.LANCHOR7
 2162 017c 00000000 		.word	.LC30
 2163 0180 00000000 		.word	prvMQTTTask
 2164 0184 00000000 		.word	.LANCHOR8
 2165 0188 00000000 		.word	.LANCHOR3
 2166              		.cfi_endproc
 2167              	.LFE26:
 2169              		.section	.text.MQTT_AGENT_Create,"ax",%progbits
 2170              		.align	2
 2171              		.global	MQTT_AGENT_Create
 2172              		.syntax unified
 2173              		.arm
 2174              		.fpu neon
 2176              	MQTT_AGENT_Create:
 2177              	.LFB27:
1902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1904:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Create( MQTTAgentHandle_t * const pxMQTTHandle )
1905:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2178              		.loc 1 1905 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 0
 2181              		@ frame_needed = 0, uses_anonymous_args = 0
 2182              	.LVL270:
 2183 0000 70402DE9 		push	{r4, r5, r6, lr}
 2184              		.cfi_def_cfa_offset 16
 2185              		.cfi_offset 4, -16
 2186              		.cfi_offset 5, -12
 2187              		.cfi_offset 6, -8
 2188              		.cfi_offset 14, -4
 2189              		.loc 1 1905 0
 2190 0004 0050A0E1 		mov	r5, r0
 2191              	.LBB97:
 2192              	.LBB98:
 766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2193              		.loc 1 766 0
 2194 0008 FEFFFFEB 		bl	vPortEnterCritical
 2195              	.LVL271:
 771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 2196              		.loc 1 771 0
 2197 000c 58309FE5 		ldr	r3, .L238
 2198 0010 1C4593E5 		ldr	r4, [r3, #1308]
 2199 0014 000054E3 		cmp	r4, #0
 2200 0018 0400000A 		beq	.L227
 2201              	.LVL272:
 2202 001c 3C2E93E5 		ldr	r2, [r3, #3644]
 2203 0020 000052E3 		cmp	r2, #0
 768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 2204              		.loc 1 768 0
 2205 0024 0240A013 		movne	r4, #2
 771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         {
 2206              		.loc 1 771 0
 2207 0028 0400001A 		bne	.L228
 768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 2208              		.loc 1 768 0
 2209 002c 0140A0E3 		mov	r4, #1
 2210              	.LVL273:
 2211              	.L227:
 774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****             break;
 2212              		.loc 1 774 0
 2213 0030 922EA0E3 		mov	r2, #2336
 2214 0034 923423E0 		mla	r3, r2, r4, r3
 2215 0038 0120A0E3 		mov	r2, #1
 2216 003c 1C2583E5 		str	r2, [r3, #1308]
 2217              	.L228:
 779:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2218              		.loc 1 779 0
 2219 0040 FEFFFFEB 		bl	vPortExitCritical
 2220              	.LVL274:
 782:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
 2221              		.loc 1 782 0
 2222 0044 020054E3 		cmp	r4, #2
 2223 0048 0300000A 		beq	.L229
 2224              	.LVL275:
 2225              	.LBE98:
 2226              	.LBE97:
1906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     BaseType_t xBrokerNumber;
1907:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     UBaseType_t xEncodedBrokerNumber;
1908:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode = eMQTTAgentFailure;
1909:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Try to get a free MQTTBrokerConnection_t. */
1911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xBrokerNumber = prvGetFreeConnection();
1912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1913:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* If we cannot get a free connection, fail immediately. */
1914:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     if( xBrokerNumber >= 0 )
1915:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1916:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Encode the broker number. */
1917:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xEncodedBrokerNumber = mqttENCODE_BROKER_NUMBER( xBrokerNumber );
 2227              		.loc 1 1917 0
 2228 004c 014084E2 		add	r4, r4, #1
 2229              	.LVL276:
1918:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1919:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* Return the encoded broker number as the opaque
1920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****          * handle to the user. */
1921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         *pxMQTTHandle = ( MQTTAgentHandle_t ) ( xEncodedBrokerNumber ); /*lint !e923 Opaque pointer
1922:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1923:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         /* The create operation is successful. */
1924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         xReturnCode = eMQTTAgentSuccess;
 2230              		.loc 1 1924 0
 2231 0050 0000A0E3 		mov	r0, #0
1921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2232              		.loc 1 1921 0
 2233 0054 004085E5 		str	r4, [r5]
 2234              	.LVL277:
 2235 0058 7080BDE8 		pop	{r4, r5, r6, pc}
 2236              	.LVL278:
 2237              	.L229:
1925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     else
1927:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     {
1928:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****         mqttconfigDEBUG_LOG( ( "No free MQTTBrokerConnection_t struct available!.\r\n" ) );
 2238              		.loc 1 1928 0
 2239 005c 0C009FE5 		ldr	r0, .L238+4
 2240 0060 FEFFFFEB 		bl	vLoggingPrintf
 2241              	.LVL279:
1908:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2242              		.loc 1 1908 0
 2243 0064 0100A0E3 		mov	r0, #1
1929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     }
1930:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1931:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
1932:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2244              		.loc 1 1932 0
 2245 0068 7080BDE8 		pop	{r4, r5, r6, pc}
 2246              	.L239:
 2247              		.align	2
 2248              	.L238:
 2249 006c 00000000 		.word	.LANCHOR1
 2250 0070 00000000 		.word	.LC31
 2251              		.cfi_endproc
 2252              	.LFE27:
 2254              		.section	.text.MQTT_AGENT_Delete,"ax",%progbits
 2255              		.align	2
 2256              		.global	MQTT_AGENT_Delete
 2257              		.syntax unified
 2258              		.arm
 2259              		.fpu neon
 2261              	MQTT_AGENT_Delete:
 2262              	.LFB28:
1933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1935:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Delete( MQTTAgentHandle_t xMQTTHandle )
1936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2263              		.loc 1 1936 0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
 2267              	.LVL280:
 2268 0000 70402DE9 		push	{r4, r5, r6, lr}
 2269              		.cfi_def_cfa_offset 16
 2270              		.cfi_offset 4, -16
 2271              		.cfi_offset 5, -12
 2272              		.cfi_offset 6, -8
 2273              		.cfi_offset 14, -4
1937:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const UBaseType_t uxBrokerNumber = ( UBaseType_t ) mqttDECODE_BROKER_NUMBER( xMQTTHandle ); /*l
 2274              		.loc 1 1937 0
 2275 0004 014040E2 		sub	r4, r0, #1
 2276              	.LVL281:
 2277              	.LBB101:
 2278              	.LBB102:
 793:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2279              		.loc 1 793 0
 2280 0008 010054E3 		cmp	r4, #1
 2281 000c 0200009A 		bls	.L241
 2282 0010 0110A0E3 		mov	r1, #1
 2283 0014 24009FE5 		ldr	r0, .L243
 2284              	.LVL282:
 2285 0018 FEFFFFEB 		bl	longjmp
 2286              	.LVL283:
 2287              	.L241:
 798:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Mark the connection as "not in use". */
 2288              		.loc 1 798 0
 2289 001c FEFFFFEB 		bl	vPortEnterCritical
 2290              	.LVL284:
 800:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     taskEXIT_CRITICAL();
 2291              		.loc 1 800 0
 2292 0020 1C009FE5 		ldr	r0, .L243+4
 2293 0024 923EA0E3 		mov	r3, #2336
 2294 0028 0050A0E3 		mov	r5, #0
 2295 002c 930424E0 		mla	r4, r3, r4, r0
 2296              	.LVL285:
 2297 0030 1C5584E5 		str	r5, [r4, #1308]
 801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2298              		.loc 1 801 0
 2299 0034 FEFFFFEB 		bl	vPortExitCritical
 2300              	.LVL286:
 2301              	.LBE102:
 2302              	.LBE101:
1938:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1939:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the connection to the free connection pool. */
1940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     prvReturnConnection( uxBrokerNumber );
1941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1942:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return eMQTTAgentSuccess;
1943:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2303              		.loc 1 1943 0
 2304 0038 0500A0E1 		mov	r0, r5
 2305 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 2306              	.L244:
 2307              		.align	2
 2308              	.L243:
 2309 0040 28000000 		.word	Unity+40
 2310 0044 00000000 		.word	.LANCHOR1
 2311              		.cfi_endproc
 2312              	.LFE28:
 2314              		.section	.text.MQTT_AGENT_Connect,"ax",%progbits
 2315              		.align	2
 2316              		.global	MQTT_AGENT_Connect
 2317              		.syntax unified
 2318              		.arm
 2319              		.fpu neon
 2321              	MQTT_AGENT_Connect:
 2322              	.LFB29:
1944:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1945:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1946:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Connect( MQTTAgentHandle_t xMQTTHandle,
1947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                           const MQTTAgentConnectParams_t * const pxConnectParams,
1948:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                           TickType_t xTimeoutTicks )
1949:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2323              		.loc 1 1949 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 32
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 2327              	.LVL287:
 2328 0000 04E02DE5 		str	lr, [sp, #-4]!
 2329              		.cfi_def_cfa_offset 4
 2330              		.cfi_offset 14, -4
1950:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
1951:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode;
1952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     const UBaseType_t uxBrokerNumber = ( UBaseType_t ) mqttDECODE_BROKER_NUMBER( xMQTTHandle ); /*l
 2331              		.loc 1 1952 0
 2332 0004 010040E2 		sub	r0, r0, #1
 2333              	.LVL288:
1949:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
 2334              		.loc 1 1949 0
 2335 0008 24D04DE2 		sub	sp, sp, #36
 2336              		.cfi_def_cfa_offset 40
1953:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1954:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Setup the event to be sent to the command queue. */
1955:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.uxBrokerNumber = uxBrokerNumber;
1956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTConnectRequest;
 2337              		.loc 1 1956 0
 2338 000c 0130A0E3 		mov	r3, #1
1955:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTConnectRequest;
 2339              		.loc 1 1955 0
 2340 0010 00008DE5 		str	r0, [sp]
1957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
1958:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.u.pxConnectParams = pxConnectParams;
1959:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1960:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Note that the notification data part of xEventData and
1961:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * xEventCreationTimestamp are set in the following call. */
1962:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xReturnCode = prvSendCommandToMQTTTask( &xEventData );
 2341              		.loc 1 1962 0
 2342 0014 0D00A0E1 		mov	r0, sp
 2343              	.LVL289:
1956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2344              		.loc 1 1956 0
 2345 0018 0430CDE5 		strb	r3, [sp, #4]
1957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2346              		.loc 1 1957 0
 2347 001c 18208DE5 		str	r2, [sp, #24]
1958:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2348              		.loc 1 1958 0
 2349 0020 1C108DE5 		str	r1, [sp, #28]
 2350              		.loc 1 1962 0
 2351 0024 FEFFFFEB 		bl	prvSendCommandToMQTTTask
 2352              	.LVL290:
1963:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1964:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the code to the user. */
1965:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
1966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2353              		.loc 1 1966 0
 2354 0028 24D08DE2 		add	sp, sp, #36
 2355              		.cfi_def_cfa_offset 4
 2356              		@ sp needed
 2357 002c 04F09DE4 		ldr	pc, [sp], #4
 2358              		.cfi_endproc
 2359              	.LFE29:
 2361              		.section	.text.MQTT_AGENT_Disconnect,"ax",%progbits
 2362              		.align	2
 2363              		.global	MQTT_AGENT_Disconnect
 2364              		.syntax unified
 2365              		.arm
 2366              		.fpu neon
 2368              	MQTT_AGENT_Disconnect:
 2369              	.LFB30:
1967:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1969:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Disconnect( MQTTAgentHandle_t xMQTTHandle,
1970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                              TickType_t xTimeoutTicks )
1971:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2370              		.loc 1 1971 0
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 32
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
 2374              	.LVL291:
 2375 0000 04E02DE5 		str	lr, [sp, #-4]!
 2376              		.cfi_def_cfa_offset 4
 2377              		.cfi_offset 14, -4
1972:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
1973:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode;
1974:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1975:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Setup the event to be sent to the command queue. */
1976:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.uxBrokerNumber = ( UBaseType_t ) mqttDECODE_BROKER_NUMBER( xMQTTHandle ); /*lint !e9
 2378              		.loc 1 1976 0
 2379 0004 010040E2 		sub	r0, r0, #1
 2380              	.LVL292:
1971:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
 2381              		.loc 1 1971 0
 2382 0008 24D04DE2 		sub	sp, sp, #36
 2383              		.cfi_def_cfa_offset 40
1977:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTDisconnectRequest;
 2384              		.loc 1 1977 0
 2385 000c 0230A0E3 		mov	r3, #2
1976:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTDisconnectRequest;
 2386              		.loc 1 1976 0
 2387 0010 00008DE5 		str	r0, [sp]
1978:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
1979:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1980:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Note that the notification data part of xEventData and
1981:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * xEventCreationTimestamp are set in the following call. */
1982:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xReturnCode = prvSendCommandToMQTTTask( &xEventData );
 2388              		.loc 1 1982 0
 2389 0014 0D00A0E1 		mov	r0, sp
 2390              	.LVL293:
1977:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2391              		.loc 1 1977 0
 2392 0018 0430CDE5 		strb	r3, [sp, #4]
1978:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2393              		.loc 1 1978 0
 2394 001c 18108DE5 		str	r1, [sp, #24]
 2395              		.loc 1 1982 0
 2396 0020 FEFFFFEB 		bl	prvSendCommandToMQTTTask
 2397              	.LVL294:
1983:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1984:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the code to the user. */
1985:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
1986:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2398              		.loc 1 1986 0
 2399 0024 24D08DE2 		add	sp, sp, #36
 2400              		.cfi_def_cfa_offset 4
 2401              		@ sp needed
 2402 0028 04F09DE4 		ldr	pc, [sp], #4
 2403              		.cfi_endproc
 2404              	.LFE30:
 2406              		.section	.text.MQTT_AGENT_Subscribe,"ax",%progbits
 2407              		.align	2
 2408              		.global	MQTT_AGENT_Subscribe
 2409              		.syntax unified
 2410              		.arm
 2411              		.fpu neon
 2413              	MQTT_AGENT_Subscribe:
 2414              	.LFB31:
1987:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
1988:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1989:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Subscribe( MQTTAgentHandle_t xMQTTHandle,
1990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             const MQTTAgentSubscribeParams_t * const pxSubscribePar
1991:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                             TickType_t xTimeoutTicks )
1992:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2415              		.loc 1 1992 0
 2416              		.cfi_startproc
 2417              		@ args = 0, pretend = 0, frame = 32
 2418              		@ frame_needed = 0, uses_anonymous_args = 0
 2419              	.LVL295:
 2420 0000 04E02DE5 		str	lr, [sp, #-4]!
 2421              		.cfi_def_cfa_offset 4
 2422              		.cfi_offset 14, -4
1993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
1994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode;
1995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
1996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Setup the event to be sent to the command queue. */
1997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.uxBrokerNumber = ( UBaseType_t ) mqttDECODE_BROKER_NUMBER( xMQTTHandle ); /*lint !e9
 2423              		.loc 1 1997 0
 2424 0004 010040E2 		sub	r0, r0, #1
 2425              	.LVL296:
1992:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
 2426              		.loc 1 1992 0
 2427 0008 24D04DE2 		sub	sp, sp, #36
 2428              		.cfi_def_cfa_offset 40
1998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTSubscribeRequest;
 2429              		.loc 1 1998 0
 2430 000c 0330A0E3 		mov	r3, #3
1997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTSubscribeRequest;
 2431              		.loc 1 1997 0
 2432 0010 00008DE5 		str	r0, [sp]
1999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
2000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.u.pxSubscribeParams = pxSubscribeParams;
2001:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2002:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Note that the notification data part of xEventData and
2003:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * xEventCreationTimestamp are set in the following call. */
2004:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xReturnCode = prvSendCommandToMQTTTask( &xEventData );
 2433              		.loc 1 2004 0
 2434 0014 0D00A0E1 		mov	r0, sp
 2435              	.LVL297:
1998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2436              		.loc 1 1998 0
 2437 0018 0430CDE5 		strb	r3, [sp, #4]
1999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2438              		.loc 1 1999 0
 2439 001c 18208DE5 		str	r2, [sp, #24]
2000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2440              		.loc 1 2000 0
 2441 0020 1C108DE5 		str	r1, [sp, #28]
 2442              		.loc 1 2004 0
 2443 0024 FEFFFFEB 		bl	prvSendCommandToMQTTTask
 2444              	.LVL298:
2005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the code to the user. */
2007:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
2008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2445              		.loc 1 2008 0
 2446 0028 24D08DE2 		add	sp, sp, #36
 2447              		.cfi_def_cfa_offset 4
 2448              		@ sp needed
 2449 002c 04F09DE4 		ldr	pc, [sp], #4
 2450              		.cfi_endproc
 2451              	.LFE31:
 2453              		.section	.text.MQTT_AGENT_Unsubscribe,"ax",%progbits
 2454              		.align	2
 2455              		.global	MQTT_AGENT_Unsubscribe
 2456              		.syntax unified
 2457              		.arm
 2458              		.fpu neon
 2460              	MQTT_AGENT_Unsubscribe:
 2461              	.LFB32:
2009:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
2010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2011:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Unsubscribe( MQTTAgentHandle_t xMQTTHandle,
2012:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                               const MQTTAgentUnsubscribeParams_t * const pxUnsubscr
2013:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                               TickType_t xTimeoutTicks )
2014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2462              		.loc 1 2014 0
 2463              		.cfi_startproc
 2464              		@ args = 0, pretend = 0, frame = 32
 2465              		@ frame_needed = 0, uses_anonymous_args = 0
 2466              	.LVL299:
 2467 0000 04E02DE5 		str	lr, [sp, #-4]!
 2468              		.cfi_def_cfa_offset 4
 2469              		.cfi_offset 14, -4
2015:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
2016:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode;
2017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2018:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Setup the event to be sent to the command queue. */
2019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.uxBrokerNumber = ( UBaseType_t ) mqttDECODE_BROKER_NUMBER( xMQTTHandle ); /*lint !e9
 2470              		.loc 1 2019 0
 2471 0004 010040E2 		sub	r0, r0, #1
 2472              	.LVL300:
2014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
 2473              		.loc 1 2014 0
 2474 0008 24D04DE2 		sub	sp, sp, #36
 2475              		.cfi_def_cfa_offset 40
2020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTUnsubscribeRequest;
 2476              		.loc 1 2020 0
 2477 000c 0430A0E3 		mov	r3, #4
2019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTUnsubscribeRequest;
 2478              		.loc 1 2019 0
 2479 0010 00008DE5 		str	r0, [sp]
2021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
2022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.u.pxUnsubscribeParams = pxUnsubscribeParams;
2023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Note that the notification data part of xEventData and
2025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * xEventCreationTimestamp are set in the following call. */
2026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xReturnCode = prvSendCommandToMQTTTask( &xEventData );
 2480              		.loc 1 2026 0
 2481 0014 0D00A0E1 		mov	r0, sp
 2482              	.LVL301:
2020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2483              		.loc 1 2020 0
 2484 0018 0430CDE5 		strb	r3, [sp, #4]
2021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2485              		.loc 1 2021 0
 2486 001c 18208DE5 		str	r2, [sp, #24]
2022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2487              		.loc 1 2022 0
 2488 0020 1C108DE5 		str	r1, [sp, #28]
 2489              		.loc 1 2026 0
 2490 0024 FEFFFFEB 		bl	prvSendCommandToMQTTTask
 2491              	.LVL302:
2027:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2028:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the code to the user. */
2029:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
2030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2492              		.loc 1 2030 0
 2493 0028 24D08DE2 		add	sp, sp, #36
 2494              		.cfi_def_cfa_offset 4
 2495              		@ sp needed
 2496 002c 04F09DE4 		ldr	pc, [sp], #4
 2497              		.cfi_endproc
 2498              	.LFE32:
 2500              		.section	.text.MQTT_AGENT_Publish,"ax",%progbits
 2501              		.align	2
 2502              		.global	MQTT_AGENT_Publish
 2503              		.syntax unified
 2504              		.arm
 2505              		.fpu neon
 2507              	MQTT_AGENT_Publish:
 2508              	.LFB33:
2031:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
2032:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_Publish( MQTTAgentHandle_t xMQTTHandle,
2034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                           const MQTTAgentPublishParams_t * const pxPublishParams,
2035:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                           TickType_t xTimeoutTicks )
2036:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2509              		.loc 1 2036 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 32
 2512              		@ frame_needed = 0, uses_anonymous_args = 0
 2513              	.LVL303:
 2514 0000 04E02DE5 		str	lr, [sp, #-4]!
 2515              		.cfi_def_cfa_offset 4
 2516              		.cfi_offset 14, -4
2037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
2038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTAgentReturnCode_t xReturnCode;
2039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Setup the event to be sent to the command queue. */
2041:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.uxBrokerNumber = ( UBaseType_t ) mqttDECODE_BROKER_NUMBER( xMQTTHandle ); /*lint !e9
 2517              		.loc 1 2041 0
 2518 0004 010040E2 		sub	r0, r0, #1
 2519              	.LVL304:
2036:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     MQTTEventData_t xEventData;
 2520              		.loc 1 2036 0
 2521 0008 24D04DE2 		sub	sp, sp, #36
 2522              		.cfi_def_cfa_offset 40
2042:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTPublishRequest;
 2523              		.loc 1 2042 0
 2524 000c 0530A0E3 		mov	r3, #5
2041:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xEventType = eMQTTPublishRequest;
 2525              		.loc 1 2041 0
 2526 0010 00008DE5 		str	r0, [sp]
2043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
2044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.u.pxPublishParams = pxPublishParams;
2045:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Note that the notification data part of xEventData and
2047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * xEventCreationTimestamp are set in the following call. */
2048:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xReturnCode = prvSendCommandToMQTTTask( &xEventData );
 2527              		.loc 1 2048 0
 2528 0014 0D00A0E1 		mov	r0, sp
 2529              	.LVL305:
2042:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2530              		.loc 1 2042 0
 2531 0018 0430CDE5 		strb	r3, [sp, #4]
2043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     xEventData.xTicksToWait = xTimeoutTicks;
 2532              		.loc 1 2043 0
 2533 001c 18208DE5 		str	r2, [sp, #24]
2044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
 2534              		.loc 1 2044 0
 2535 0020 1C108DE5 		str	r1, [sp, #28]
 2536              		.loc 1 2048 0
 2537 0024 FEFFFFEB 		bl	prvSendCommandToMQTTTask
 2538              	.LVL306:
2049:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the code to the user. */
2051:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return xReturnCode;
2052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2539              		.loc 1 2052 0
 2540 0028 24D08DE2 		add	sp, sp, #36
 2541              		.cfi_def_cfa_offset 4
 2542              		@ sp needed
 2543 002c 04F09DE4 		ldr	pc, [sp], #4
 2544              		.cfi_endproc
 2545              	.LFE33:
 2547              		.section	.text.MQTT_AGENT_ReturnBuffer,"ax",%progbits
 2548              		.align	2
 2549              		.global	MQTT_AGENT_ReturnBuffer
 2550              		.syntax unified
 2551              		.arm
 2552              		.fpu neon
 2554              	MQTT_AGENT_ReturnBuffer:
 2555              	.LFB34:
2053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** /*-----------------------------------------------------------*/
2054:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2055:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** MQTTAgentReturnCode_t MQTT_AGENT_ReturnBuffer( MQTTAgentHandle_t xMQTTHandle,
2056:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****                                                MQTTBufferHandle_t xBufferHandle )
2057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** {
 2556              		.loc 1 2057 0
 2557              		.cfi_startproc
 2558              		@ args = 0, pretend = 0, frame = 0
 2559              		@ frame_needed = 0, uses_anonymous_args = 0
 2560              	.LVL307:
2058:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Remove compiler warnings about unused parameters. */
2059:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     ( void ) xMQTTHandle;
2060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2061:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return the buffer to the free buffer pool. Since this function
2062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * gets called from application tasks, we must use thread safe implementation
2063:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****      * of the buffer pool. */
2064:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     mqttconfigRETURN_BUFFER_FXN( mqttbufferGET_RAW_BUFFER_FROM_HANDLE( xBufferHandle ) );
 2561              		.loc 1 2064 0
 2562 0000 0100A0E1 		mov	r0, r1
 2563              	.LVL308:
2057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Remove compiler warnings about unused parameters. */
 2564              		.loc 1 2057 0
 2565 0004 10402DE9 		push	{r4, lr}
 2566              		.cfi_def_cfa_offset 8
 2567              		.cfi_offset 4, -8
 2568              		.cfi_offset 14, -4
 2569              		.loc 1 2064 0
 2570 0008 FEFFFFEB 		bl	BUFFERPOOL_ReturnBuffer
 2571              	.LVL309:
2065:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** 
2066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     /* Return success. */
2067:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c ****     return eMQTTAgentSuccess;
2068:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_agent.c **** }
 2572              		.loc 1 2068 0
 2573 000c 0000A0E3 		mov	r0, #0
 2574 0010 1080BDE8 		pop	{r4, pc}
 2575              		.cfi_endproc
 2576              	.LFE34:
 2578              		.section	.bss.ucQueueStorageArea.7592,"aw",%nobits
 2579              		.set	.LANCHOR6,. + 0
 2582              	ucQueueStorageArea.7592:
 2583 0000 00000000 		.space	320
 2583      00000000 
 2583      00000000 
 2583      00000000 
 2583      00000000 
 2584              		.section	.bss.ulQueueMessageIdentifier,"aw",%nobits
 2585              		.align	2
 2586              		.set	.LANCHOR4,. + 0
 2589              	ulQueueMessageIdentifier:
 2590 0000 00000000 		.space	4
 2591              		.section	.bss.xCommandQueue,"aw",%nobits
 2592              		.align	2
 2593              		.set	.LANCHOR0,. + 0
 2596              	xCommandQueue:
 2597 0000 00000000 		.space	4
 2598              		.section	.bss.xMQTTConnections,"aw",%nobits
 2599              		.align	3
 2600              		.set	.LANCHOR1,. + 0
 2603              	xMQTTConnections:
 2604 0000 00000000 		.space	4672
 2604      00000000 
 2604      00000000 
 2604      00000000 
 2604      00000000 
 2605              		.section	.bss.xMQTTTaskHandle,"aw",%nobits
 2606              		.align	2
 2607              		.set	.LANCHOR3,. + 0
 2610              	xMQTTTaskHandle:
 2611 0000 00000000 		.space	4
 2612              		.section	.bss.xStack.7593,"aw",%nobits
 2613              		.align	2
 2614              		.set	.LANCHOR8,. + 0
 2617              	xStack.7593:
 2618 0000 00000000 		.space	8192
 2618      00000000 
 2618      00000000 
 2618      00000000 
 2618      00000000 
 2619              		.section	.bss.xStaticQueue.7591,"aw",%nobits
 2620              		.align	2
 2621              		.set	.LANCHOR5,. + 0
 2624              	xStaticQueue.7591:
 2625 0000 00000000 		.space	80
 2625      00000000 
 2625      00000000 
 2625      00000000 
 2625      00000000 
 2626              		.section	.bss.xStaticTask.7594,"aw",%nobits
 2627              		.align	2
 2628              		.set	.LANCHOR7,. + 0
 2631              	xStaticTask.7594:
 2632 0000 00000000 		.space	120
 2632      00000000 
 2632      00000000 
 2632      00000000 
 2632      00000000 
 2633              		.section	.rodata.MQTT_AGENT_Create.str1.1,"aMS",%progbits,1
 2634              	.LC31:
 2635 0000 4E6F2066 		.ascii	"No free MQTTBrokerConnection_t struct available!.\015"
 2635      72656520 
 2635      4D515454 
 2635      42726F6B 
 2635      6572436F 
 2636 0032 0A00     		.ascii	"\012\000"
 2637              		.section	.rodata.MQTT_AGENT_Init.str1.1,"aMS",%progbits,1
 2638              	.LC30:
 2639 0000 4D515454 		.ascii	"MQTT\000"
 2639      00
 2640              		.section	.rodata.cUserName,"a",%progbits
 2641              		.set	.LANCHOR2,. + 0
 2644              	cUserName:
 2645 0000 3F53444B 		.ascii	"?SDK=AmazonFreeRTOS&Version=V10.1.1&Platform=Renesa"
 2645      3D416D61 
 2645      7A6F6E46 
 2645      72656552 
 2645      544F5326 
 2646 0033 73525A41 		.ascii	"sRZA2M\000"
 2646      324D00
 2647              		.section	.rodata.prvGracefulSocketClose.str1.1,"aMS",%progbits,1
 2648              	.LC1:
 2649 0000 41626F75 		.ascii	"About to close socket.\015\012\000"
 2649      7420746F 
 2649      20636C6F 
 2649      73652073 
 2649      6F636B65 
 2650              	.LC2:
 2651 0019 536F636B 		.ascii	"Socket closed.\015\012\000"
 2651      65742063 
 2651      6C6F7365 
 2651      642E0D0A 
 2651      00
 2652              	.LC3:
 2653 002a 53746163 		.ascii	"Stack high watermark for MQTT task: %u\015\012\000"
 2653      6B206869 
 2653      67682077 
 2653      61746572 
 2653      6D61726B 
 2654              		.section	.rodata.prvMQTTClientSocketWakeupCallback.str1.1,"aMS",%progbits,1
 2655              	.LC29:
 2656 0000 536F636B 		.ascii	"Socket sending wakeup to MQTT task.\015\012\000"
 2656      65742073 
 2656      656E6469 
 2656      6E672077 
 2656      616B6575 
 2657              		.section	.rodata.prvMQTTEventCallback.str1.1,"aMS",%progbits,1
 2658              	.LC20:
 2659 0000 4D515454 		.ascii	"MQTT Connect was accepted. Connection established.\015"
 2659      20436F6E 
 2659      6E656374 
 2659      20776173 
 2659      20616363 
 2660 0033 0A00     		.ascii	"\012\000"
 2661              	.LC21:
 2662 0035 4D515454 		.ascii	"MQTT Connect was rejected with error %d.\015\012\000"
 2662      20436F6E 
 2662      6E656374 
 2662      20776173 
 2662      2072656A 
 2663              	.LC22:
 2664 0060 4D515454 		.ascii	"MQTT Subscribe was accepted. Subscribed.\015\012\000"
 2664      20537562 
 2664      73637269 
 2664      62652077 
 2664      61732061 
 2665              	.LC23:
 2666 008b 4D515454 		.ascii	"MQTT Subscribe was rejected.\015\012\000"
 2666      20537562 
 2666      73637269 
 2666      62652077 
 2666      61732072 
 2667              	.LC24:
 2668 00aa 4D515454 		.ascii	"MQTT Unsubscribe was successful.\015\012\000"
 2668      20556E73 
 2668      75627363 
 2668      72696265 
 2668      20776173 
 2669              	.LC25:
 2670 00cd 4D515454 		.ascii	"MQTT Publish was successful.\015\012\000"
 2670      20507562 
 2670      6C697368 
 2670      20776173 
 2670      20737563 
 2671              	.LC26:
 2672 00ec 4D515454 		.ascii	"MQTT Timeout.\015\012\000"
 2672      2054696D 
 2672      656F7574 
 2672      2E0D0A00 
 2673              	.LC27:
 2674 00fc 5B574152 		.ascii	"[WARN] MQTT Agent dropped a packet. No buffer avail"
 2674      4E5D204D 
 2674      51545420 
 2674      4167656E 
 2674      74206472 
 2675 012f 61626C65 		.ascii	"able.\015\012\000"
 2675      2E0D0A00 
 2676              	.LC28:
 2677 0137 436F6E73 		.ascii	"Consider adjusting parameters in aws_bufferpool_con"
 2677      69646572 
 2677      2061646A 
 2677      75737469 
 2677      6E672070 
 2678 016a 6669672E 		.ascii	"fig.h.\015\012\000"
 2678      682E0D0A 
 2678      00
 2679              		.section	.rodata.prvMQTTTask.str1.1,"aMS",%progbits,1
 2680              	.LC4:
 2681 0000 52656365 		.ascii	"Received message %x from queue.\015\012\000"
 2681      69766564 
 2681      206D6573 
 2681      73616765 
 2681      20257820 
 2682              	.LC5:
 2683 0022 782D616D 		.ascii	"x-amzn-mqtt-ca\000"
 2683      7A6E2D6D 
 2683      7174742D 
 2683      636100
 2684              	.LC6:
 2685 0031 4D616C66 		.ascii	"Malformed URL %s.\015\012\000"
 2685      6F726D65 
 2685      64205552 
 2685      4C202573 
 2685      2E0D0A00 
 2686              	.LC7:
 2687 0045 4D515454 		.ascii	"MQTT_Connect failed!\015\012\000"
 2687      5F436F6E 
 2687      6E656374 
 2687      20666169 
 2687      6C656421 
 2688              	.LC8:
 2689 005c 4D515454 		.ascii	"MQTT_Subscribe failed!\015\012\000"
 2689      5F537562 
 2689      73637269 
 2689      62652066 
 2689      61696C65 
 2690              	.LC9:
 2691 0075 436F756C 		.ascii	"Could not get a buffer to store notification data. "
 2691      64206E6F 
 2691      74206765 
 2691      74206120 
 2691      62756666 
 2692 00a8 546F6F20 		.ascii	"Too many parallel tasks!\015\012\000"
 2692      6D616E79 
 2692      20706172 
 2692      616C6C65 
 2692      6C207461 
 2693              	.LC10:
 2694 00c3 4D515454 		.ascii	"MQTT_Unsubscribe failed!\015\012\000"
 2694      5F556E73 
 2694      75627363 
 2694      72696265 
 2694      20666169 
 2695              	.LC11:
 2696 00de 4D515454 		.ascii	"MQTT_Publish failed!\015\012\000"
 2696      5F507562 
 2696      6C697368 
 2696      20666169 
 2696      6C656421 
 2697              	.LC12:
 2698 00f5 556E6B6E 		.ascii	"Unknown request received on command queue.\015\012\000"
 2698      6F776E20 
 2698      72657175 
 2698      65737420 
 2698      72656365 
 2699              	.LC13:
 2700 0122 416E6F6E 		.ascii	"Anonymous metrics will be collected. Recompile with"
 2700      796D6F75 
 2700      73206D65 
 2700      74726963 
 2700      73207769 
 2701 0155 6D717474 		.ascii	"mqttconfigENABLE_METRICS set to 0 to disable.\015\012"
 2701      636F6E66 
 2701      6967454E 
 2701      41424C45 
 2701      5F4D4554 
 2702 0184 00       		.ascii	"\000"
 2703              		.section	.rodata.prvNotifyRequestingTask.str1.1,"aMS",%progbits,1
 2704              	.LC0:
 2705 0000 4E6F7469 		.ascii	"Notifying task.\015\012\000"
 2705      6679696E 
 2705      67207461 
 2705      736B2E0D 
 2705      0A00
 2706              		.section	.rodata.prvSendCommandToMQTTTask.str1.1,"aMS",%progbits,1
 2707              	.LC14:
 2708 0000 53656E64 		.ascii	"Sending command to MQTT task.\015\012\000"
 2708      696E6720 
 2708      636F6D6D 
 2708      616E6420 
 2708      746F204D 
 2709              	.LC15:
 2710 0020 436F6D6D 		.ascii	"Command sent to MQTT task failed.\015\012\000"
 2710      616E6420 
 2710      73656E74 
 2710      20746F20 
 2710      4D515454 
 2711              	.LC16:
 2712 0044 436F6D6D 		.ascii	"Command sent to MQTT task passed.\015\012\000"
 2712      616E6420 
 2712      73656E74 
 2712      20746F20 
 2712      4D515454 
 2713              	.LC17:
 2714 0068 556E6578 		.ascii	"Unexpected notification received.\015\012\000"
 2714      70656374 
 2714      6564206E 
 2714      6F746966 
 2714      69636174 
 2715              	.LC18:
 2716 008c 41747465 		.ascii	"Attempt to write to the MQTT command queue failed.\015"
 2716      6D707420 
 2716      746F2077 
 2716      72697465 
 2716      20746F20 
 2717 00bf 0A00     		.ascii	"\012\000"
 2718              	.LC19:
 2719 00c1 4D515454 		.ascii	"MQTT Agent API called from MQTT task ( possibly fro"
 2719      20416765 
 2719      6E742041 
 2719      50492063 
 2719      616C6C65 
 2720 00f4 6D206361 		.ascii	"m callback ) !!.\015\012\000"
 2720      6C6C6261 
 2720      636B2029 
 2720      2021212E 
 2720      0D0A00
 2721              		.text
 2722              	.Letext0:
 2723              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 2724              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2725              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2726              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2727              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2728              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2729              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2730              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2731              		.file 10 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 2732              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 2733              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/FreeRTOS.h"
 2734              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_doubly_linked_list.h"
 2735              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_mqtt_buffer.h"
 2736              		.file 15 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/aws_mqtt_lib.h"
 2737              		.file 16 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/aws_mqtt_agent.h"
 2738              		.file 17 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 2739              		.file 18 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/queue.h"
 2740              		.file 19 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/aws_secure_sockets.h"
 2741              		.file 20 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_bufferpool.h"
 2742              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2743              		.file 22 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_mqtt_config_defaults.
 2744              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 aws_mqtt_agent.c
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:17     .text.prvRetrieveNotificationData:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:22     .text.prvRetrieveNotificationData:00000000 prvRetrieveNotificationData
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:69     .text.prvNotifyRequestingTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:74     .text.prvNotifyRequestingTask:00000000 prvNotifyRequestingTask
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:122    .text.prvNotifyRequestingTask:00000050 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:127    .text.prvStoreNotificationData:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:132    .text.prvStoreNotificationData:00000000 prvStoreNotificationData
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:183    .text.prvMQTTGetTicks:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:188    .text.prvMQTTGetTicks:00000000 prvMQTTGetTicks
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:228    .text.prvGracefulSocketClose:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:233    .text.prvGracefulSocketClose:00000000 prvGracefulSocketClose
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:323    .text.prvGracefulSocketClose:000000a0 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:330    .text.prvMQTTTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:335    .text.prvMQTTTask:00000000 prvMQTTTask
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:408    .text.prvMQTTTask:0000007c $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:418    .text.prvMQTTTask:00000090 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1192   .text.prvMQTTTask:000006d0 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1895   .text.prvMQTTClientSocketWakeupCallback:00000000 prvMQTTClientSocketWakeupCallback
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1219   .text.prvSendCommandToMQTTTask:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1224   .text.prvSendCommandToMQTTTask:00000000 prvSendCommandToMQTTTask
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1402   .text.prvSendCommandToMQTTTask:00000148 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1417   .text.prvMQTTEventCallback:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1422   .text.prvMQTTEventCallback:00000000 prvMQTTEventCallback
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1465   .text.prvMQTTEventCallback:0000003c $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1481   .text.prvMQTTEventCallback:0000006c $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1773   .text.prvMQTTEventCallback:00000260 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1788   .text.prvMQTTSendCallback:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1793   .text.prvMQTTSendCallback:00000000 prvMQTTSendCallback
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1884   .text.prvMQTTSendCallback:00000094 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1890   .text.prvMQTTClientSocketWakeupCallback:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1962   .text.prvMQTTClientSocketWakeupCallback:0000006c $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1970   .text.MQTT_AGENT_Init:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:1976   .text.MQTT_AGENT_Init:00000000 MQTT_AGENT_Init
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2149   .text.MQTT_AGENT_Init:00000148 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2170   .text.MQTT_AGENT_Create:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2176   .text.MQTT_AGENT_Create:00000000 MQTT_AGENT_Create
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2249   .text.MQTT_AGENT_Create:0000006c $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2255   .text.MQTT_AGENT_Delete:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2261   .text.MQTT_AGENT_Delete:00000000 MQTT_AGENT_Delete
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2309   .text.MQTT_AGENT_Delete:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2315   .text.MQTT_AGENT_Connect:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2321   .text.MQTT_AGENT_Connect:00000000 MQTT_AGENT_Connect
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2362   .text.MQTT_AGENT_Disconnect:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2368   .text.MQTT_AGENT_Disconnect:00000000 MQTT_AGENT_Disconnect
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2407   .text.MQTT_AGENT_Subscribe:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2413   .text.MQTT_AGENT_Subscribe:00000000 MQTT_AGENT_Subscribe
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2454   .text.MQTT_AGENT_Unsubscribe:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2460   .text.MQTT_AGENT_Unsubscribe:00000000 MQTT_AGENT_Unsubscribe
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2501   .text.MQTT_AGENT_Publish:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2507   .text.MQTT_AGENT_Publish:00000000 MQTT_AGENT_Publish
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2548   .text.MQTT_AGENT_ReturnBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2554   .text.MQTT_AGENT_ReturnBuffer:00000000 MQTT_AGENT_ReturnBuffer
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2582   .bss.ucQueueStorageArea.7592:00000000 ucQueueStorageArea.7592
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2583   .bss.ucQueueStorageArea.7592:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2585   .bss.ulQueueMessageIdentifier:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2589   .bss.ulQueueMessageIdentifier:00000000 ulQueueMessageIdentifier
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2592   .bss.xCommandQueue:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2596   .bss.xCommandQueue:00000000 xCommandQueue
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2599   .bss.xMQTTConnections:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2603   .bss.xMQTTConnections:00000000 xMQTTConnections
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2606   .bss.xMQTTTaskHandle:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2610   .bss.xMQTTTaskHandle:00000000 xMQTTTaskHandle
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2613   .bss.xStack.7593:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2617   .bss.xStack.7593:00000000 xStack.7593
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2620   .bss.xStaticQueue.7591:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2624   .bss.xStaticQueue.7591:00000000 xStaticQueue.7591
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2627   .bss.xStaticTask.7594:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2631   .bss.xStaticTask.7594:00000000 xStaticTask.7594
C:\Users\a5089698\AppData\Local\Temp\cciqGuto.s:2644   .rodata.cUserName:00000000 cUserName
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vLoggingPrintf
xTaskGenericNotify
vTaskSetTimeOutState
SOCKETS_Shutdown
SOCKETS_Recv
vTaskDelay
xTaskCheckForTimeOut
SOCKETS_Close
uxTaskGetStackHighWaterMark
xQueueReceive
longjmp
strlen
SOCKETS_GetHostByName
SOCKETS_Socket
SOCKETS_SetSockOpt
SOCKETS_Connect
MQTT_Connect
MQTT_Disconnect
MQTT_Subscribe
MQTT_Unsubscribe
MQTT_Publish
MQTT_ParseReceivedData
MQTT_Periodic
Unity
xTaskGetCurrentTaskHandle
vPortEnterCritical
vPortExitCritical
xTaskNotifyStateClear
xQueueGenericSend
xTaskNotifyWait
SOCKETS_Send
uxQueueMessagesWaiting
memset
MQTT_Init
xQueueGenericCreateStatic
xTaskCreateStatic
BUFFERPOOL_GetFreeBuffer
BUFFERPOOL_ReturnBuffer
