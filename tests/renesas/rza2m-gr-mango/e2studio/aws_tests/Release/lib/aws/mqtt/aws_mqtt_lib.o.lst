   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"aws_mqtt_lib.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvDecodeRemainingLength,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	prvDecodeRemainingLength:
  23              	.LFB22:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/mqtt/aws_mqtt_lib.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Amazon FreeRTOS MQTT Library V1.1.4
   3:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  27:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
  28:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @file aws_mqtt_lib.c
  29:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief MQTT Core Library implementation.
  30:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
  31:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  32:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /* Interface includes. */
  33:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #include "aws_mqtt_lib.h"
  34:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  35:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /* Standard includes. */
  36:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #include <string.h>
  37:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  38:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
  39:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup ControlTypes MQTT Control Packet Type.
  40:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
  41:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Values that appear in the first nibble (hence the shift by 4)
  42:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * of the byte 1 of the MQTT fixed header.
  43:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
  44:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
  45:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_CONNECT        ( ( uint8_t ) 1 << ( uint8_t ) 4 )
  46:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_CONNACK        ( ( uint8_t ) 2 << ( uint8_t ) 4 )
  47:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PUBLISH        ( ( uint8_t ) 3 << ( uint8_t ) 4 )
  48:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PUBACK         ( ( uint8_t ) 4 << ( uint8_t ) 4 )
  49:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PUBREC         ( ( uint8_t ) 5 << ( uint8_t ) 4 )
  50:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PUBREL         ( ( uint8_t ) 6 << ( uint8_t ) 4 )
  51:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PUBCOMP        ( ( uint8_t ) 7 << ( uint8_t ) 4 )
  52:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_SUBSCRIBE      ( ( uint8_t ) 8 << ( uint8_t ) 4 )
  53:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_SUBACK         ( ( uint8_t ) 9 << ( uint8_t ) 4 )
  54:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_UNSUBSCRIBE    ( ( uint8_t ) 10 << ( uint8_t ) 4 )
  55:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_UNSUBACK       ( ( uint8_t ) 11 << ( uint8_t ) 4 )
  56:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PINGREQ        ( ( uint8_t ) 12 << ( uint8_t ) 4 )
  57:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_PINGRESP       ( ( uint8_t ) 13 << ( uint8_t ) 4 )
  58:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONTROL_DISCONNECT     ( ( uint8_t ) 14 << ( uint8_t ) 4 )
  59:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
  60:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  61:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
  62:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup Flags MQTT Control Packet Flags.
  63:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
  64:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Lower nibble in the byte 1 of the fixed header contain flags specific
  65:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * to each MQTT Control Packet. Flags marked reserved must match the
  66:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * value in the packet.
  67:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
  68:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
  69:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_CONNECT           ( ( uint8_t ) 0 )   /**< Reserved. */
  70:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_CONNACK           ( ( uint8_t ) 0 )   /**< Reserved. */
  71:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBLISH_DUP       ( ( uint8_t ) 8 )
  72:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBLISH_QOS       ( ( uint8_t ) 6 )
  73:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBLISH_RETAIN    ( ( uint8_t ) 1 )
  74:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBACK            ( ( uint8_t ) 0 )   /**< Reserved. */
  75:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBREC            ( ( uint8_t ) 0 )   /**< Reserved. */
  76:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBREL            ( ( uint8_t ) 2 )   /**< Reserved. */
  77:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PUBCOMP           ( ( uint8_t ) 0 )   /**< Reserved. */
  78:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_SUBSCRIBE         ( ( uint8_t ) 2 )   /**< Reserved. */
  79:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_SUBACK            ( ( uint8_t ) 0 )   /**< Reserved. */
  80:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_UNSUBSCRIBE       ( ( uint8_t ) 2 )   /**< Reserved. */
  81:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_UNSUBACK          ( ( uint8_t ) 0 )   /**< Reserved. */
  82:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PINGREQ           ( ( uint8_t ) 0 )   /**< Reserved. */
  83:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_PINGRESP          ( ( uint8_t ) 0 )   /**< Reserved. */
  84:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFLAGS_DISCONNECT        ( ( uint8_t ) 0 )   /**< Reserved. */
  85:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
  86:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  87:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
  88:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup ConnectFlags Connect flags present in the variable header of MQTT
  89:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * connect message.
  90:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
  91:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * These flags specify the behavior of the MQTT connection. They also indicate
  92:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the presence or absence of certain fields in the payload.
  93:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
  94:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
  95:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_CLEAN_SESSION_FLAG    ( ( uint8_t ) ( ( uint8_t ) 1 << ( uint8_t ) 1 ) )
  96:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_WILL_FLAG             ( ( uint8_t ) ( ( uint8_t ) 1 << ( uint8_t ) 2 ) )
  97:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_WILL_RETAIN_FLAG      ( ( uint8_t ) ( ( uint8_t ) 1 << ( uint8_t ) 5 ) )
  98:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_PASSWORD_FLAG         ( ( uint8_t ) ( ( uint8_t ) 1 << ( uint8_t ) 6 ) )
  99:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_USER_NAME_FLAG        ( ( uint8_t ) ( ( uint8_t ) 1 << ( uint8_t ) 7 ) )
 100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 101:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 102:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Protocol level value is 4 for version 3.1.1.
 104:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPROTOCOL_LEVEL    ( ( uint8_t ) 0x04 )
 106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 107:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Macro to calculate total message length.
 109:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucRemainingLengthFieldBytes Number of bytes the "Remaining Length"
 111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * field spans.
 112:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ulRemainingLength "Remaining Length" i.e. length of the MQTT
 113:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * packet excluding the length of fixed header.
 114:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttTOTAL_MESSAGE_LENGTH( ucRemainingLengthFieldBytes, ulRemainingLength ) \
 116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     ( ( uint32_t ) 1 /* Control Packet Type + Flags. */ +                          \
 117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****       ( uint32_t ) ucRemainingLengthFieldBytes +                                   \
 118:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****       ulRemainingLength )
 119:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup FieldLength Lengths (in bytes) of various packet specific fields.
 122:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 123:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Helpful in calculating total packet length.
 124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 126:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBSCRIBE_PACKET_IDENTIFER_LENGTH       2
 127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBSCRIBE_REQUESTED_QOS_LENGTH          1
 128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBSCRIBE_PACKET_IDENTIFER_LENGTH     2
 129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBACK_PACKET_IDENTIFER_LENGTH        2
 130:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_QOS0_PACKET_IDENTIFER_LENGTH    0 /**< QoS0 Publish packet does not contain a p
 131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_QOS1_PACKET_IDENTIFER_LENGTH    2
 132:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_QOS2_PACKET_IDENTIFER_LENGTH    2
 133:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBACK_PACKET_IDENTIFER_LENGTH          2
 134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 136:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup RemainingLength Values to help encode and decode the "Remaining Length"
 138:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * field in the MQTT fixed header.
 139:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 140:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * "Remaining Length" field starts at second byte and can comprise of 1 to 4 bytes.
 141:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 142:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 143:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttREMAINING_LENGTH_CONTINUATION_BITMASK    ( ( uint8_t ) ( ( uint8_t ) 1 << ( uint8_t ) 7
 144:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttLENGTH_BITMASK_REMAINING_LENGTH          ( ~mqttREMAINING_LENGTH_CONTINUATION_BITMASK )
 145:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttLENGTH_BITS_REMAINING_LENGTH             7                                             
 146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttONE_BYTE_MAX_REMAINING_LENGTH            127                                           
 147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttTWO_BYTES_MAX_REMAINING_LENGTH           16383                                         
 148:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttTHREE_BYTES_MAX_REMAINING_LENGTH         2097151                                       
 149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttMAX_REMAINING_LENGTH_LENGTH              268435455                                     
 150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Helper macro to convert the given string length to the length occupied by it
 154:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * in the MQTT packet.
 155:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 156:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Strings in MQTT protocol are prefixed with a two byte length field which gives the
 157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * number of bytes in the string. This macro converts the given string length to the length
 158:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * as occupied by it in the actual MQTT packet.
 159:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usStringLength The given string length.
 161:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSTRLEN( usStringLength )                                ( ( usStringLength ) + ( uint16
 163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 164:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 165:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Helper macro to adjust various offset according to the number of bytes the
 166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * "Remaining Length" in the fixed header spans.
 167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 168:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Since "Remaining Length" field can comprise of variable number of bytes ( 1 to 4 ),
 169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * all the offsets after the "Remaining Length" will vary depending on the number of
 170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * bytes taken by this field. Hence all the offsets after "Remaining Length" should
 171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * use the mqttADJUST_OFFSET macro like:
 172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @code
 173:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * mqttADJUST_OFFSET( mqttVARIABLE_LENGTH_HEADER_START_OFFSET, ucRemainingLengthFieldBytes )
 174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * mqttADJUST_OFFSET( mqttCONNECT_CLIENT_ID_OFFSET, ucRemainingLengthFieldBytes )
 175:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @endcode
 176:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * where ucRemainingLengthFieldBytes is the number of bytes, the encoded "Remaining Length"
 177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * field is comprised of.
 178:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 179:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] offset The offset to adjust.
 180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucRemainingLengthFieldBytes Number of bytes the "Remaining Length" field spans.
 181:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 182:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttADJUST_OFFSET( offset, ucRemainingLengthFieldBytes )    ( ( uint32_t ) offset + ( uint3
 183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup FixhedHeaderOffsets Offsets to data within the fixed header.
 186:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 188:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFIXED_HEADER_CONTROL_BYTE_OFFSET        0   /* Always fixed - must not use mqttADJUST_O
 189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttFIXED_HEADER_REMAINING_LENGTH_OFFSET    1   /* Always fixed - must not use mqttADJUST_O
 190:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttVARIABLE_LENGTH_HEADER_START_OFFSET     2
 191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup ConnectOffsets Offsets to data within the CONNECT packet
 195:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * variable header.
 196:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 197:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 198:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_FLAGS_OFFSET            9
 199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_KEEPALIVE_MSB_OFFSET    10
 200:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_KEEPALIVE_LSB_OFFSET    11
 201:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNECT_CLIENT_ID_OFFSET        12
 202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 203:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 204:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup PublishOffsets Offsets to data within the PUBLISH packet
 206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * variable header.
 207:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_TOPIC_OFFSET           2
 210:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_TOPIC_LENGTH_MSB       2
 211:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_TOPIC_LENGTH_LSB       3
 212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_TOPIC_STRING_OFFSET    4
 213:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 216:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup SubscribeOffsets Offsets to data within the SUBSCRIBE packet
 217:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * variable header.
 218:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBSCRIBE_PACKET_ID_MSB_OFFSET    2
 221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBSCRIBE_PACKET_ID_LSB_OFFSET    3
 222:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBSCRIBE_TOPIC_OFFSET            4
 223:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 225:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup UnsubscribeOffsets Offsets to data within the UNSUBSCRIBE packet
 227:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * variable header.
 228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBSCRIBE_PACKET_ID_MSB_OFFSET    2
 231:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBSCRIBE_PACKET_ID_LSB_OFFSET    3
 232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBSCRIBE_TOPIC_OFFSET            4
 233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 236:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup SubAckOffsets Offsets to data within the SUBACK packet.
 237:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 238:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBACK_PACKET_ID_MSB_OFFSET    2
 240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBACK_PACKET_ID_LSB_OFFSET    3
 241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttSUBACK_RETURN_CODE_OFFSET      4
 242:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 243:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup UnSubAckOffsets Offsets to data within the UNSUBACK packet.
 246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 247:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBACK_PACKET_ID_MSB_OFFSET    2
 249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttUNSUBACK_PACKET_ID_LSB_OFFSET    3
 250:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 253:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup ConnAckOffsets Offsets to data within the CONNACK packet.
 254:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNACK_SESSION_PRESENT_OFFSET    2
 257:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCONNACK_RETURN_CODE_OFFSET        3
 258:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 261:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup PubAckOffsets Offsets to data within the PUBACK packet.
 262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 263:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBACK_PACKET_ID_MSB_OFFSET    2
 265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBACK_PACKET_ID_LSB_OFFSET    3
 266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 267:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Extracts retain bit from the control byte of the PUBLISH message
 270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * received from the broker.
 271:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] x The control byte of the received publish message.
 273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_RETAIN_BIT( x )    ( x & ( uint8_t ) 0x01 )
 275:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 277:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Extracts QoS value from the control byte of the PUBLISH message
 278:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * received from the broker.
 279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 280:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] x The control byte of the received publish message.
 281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 282:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_QoS_BITS( x )      ( ( x >> ( uint8_t ) 1 ) & ( uint8_t ) 0x03 )
 283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 285:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Extracts dup bit from the control byte of the PUBLISH message
 286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * received from the broker.
 287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 288:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] x The control byte of the received publish message.
 289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 290:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttPUBLISH_DUP_BIT( x )       ( ( x >> ( uint8_t ) 3 ) & ( uint8_t ) 0x01 )
 291:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 292:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @defgroup Misc. Helper macros.
 294:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 295:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @{ */
 296:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttBITS_PER_BYTE        8
 297:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttTOP_NIBBLE_MASK      ( ( uint8_t ) 0xF0 )
 298:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttLOWER_NIBBLE_MASK    ( ( uint8_t ) 0x0F )
 299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /** @} */
 300:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 302:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Returns minimum of the two given values.
 303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 304:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] A The first value to compare.
 305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] B The second value to compare.
 306:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 307:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttMIN( A, B )    ( ( A ) < ( B ) ? ( A ) : ( B ) )
 308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Copies the given number of bytes from the source buffer to the
 311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * destination buffer.
 312:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 313:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Also, increments the srcIndex and dstIndex by the number of bytes copied.
 314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 315:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] srcBuffer The source buffer to copy from.
 316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in,out] srcIndex The index in the source buffer from where to start
 317:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * copying from. It is incremented by the number of bytes copied.
 318:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[out] dstBuffer The destination buffer to copy to.
 319:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in,out] dstIndex The index in the destination buffer where to start
 320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * copying to. It is incremented by the number of bytes copied.
 321:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] byteCount The number of bytes to copy.
 322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #define mqttCOPY_BYTES( srcBuffer, srcIndex, dstBuffer, dstIndex, byteCount )                      
 324:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {                                                                                              
 325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         memcpy( &( ( dstBuffer )[ ( dstIndex ) ] ), &( ( srcBuffer )[ ( srcIndex ) ] ), ( byteCount
 326:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( srcIndex ) = ( uint32_t ) ( srcIndex ) + ( uint32_t ) ( byteCount );                     
 327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( dstIndex ) = ( uint32_t ) ( dstIndex ) + ( uint32_t ) ( byteCount );                     
 328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 329:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 331:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Takes a buffer of the desired length from the free buffer
 333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * pool using the user supplied buffer pool interface and returns it.
 334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * The actual requested buffer length from the buffer pool is
 336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * ulBufferLength + sizeof( MQTTBufferMetadata_t ) to ensure
 337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the space for storing the metadata. It also initializes the
 338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * metadata portion of the buffer.
 339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to get the buffer.
 341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ulBufferLength The desired length of the buffer.
 342:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return Handle to a free buffer if one is available, NULL otherwise.
 344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvGetFreeBuffer( MQTTContext_t * pxMQTTContext,
 346:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint32_t ulBufferLength );
 347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 348:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 349:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Returns the given buffer back to the free buffer pool.
 350:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 351:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Removes the buffer from the Tx buffer list if it is part of that and returns
 352:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * it back to the free buffer pool using the user supplied buffer pool interface.
 353:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context to which to return the buffer.
 355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] xBuffer The buffer to return.
 356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 357:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvReturnBuffer( MQTTContext_t * pxMQTTContext,
 358:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                              MQTTBufferHandle_t xBuffer );
 359:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Finds a Tx buffer containing the MQTT message matching the given packet
 362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * type and flags.
 363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 364:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Iterates over all the buffers in the Tx buffer list to see if any buffer
 365:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * contains a message in which:
 366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 1. Top nibble of first byte matches the given packet type.
 367:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 2. Lower nibble of the first byte matches the given flags.
 368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 369:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to find the buffer.
 370:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucPacketType The packet type to match.
 371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucFlags The flags to match.
 372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The handle to the buffer if it finds one, NULL otherwise.
 374:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvPacketTypeFlagsGetTxBuffer( MQTTContext_t * pxMQTTContext,
 376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                          uint8_t ucPacketType,
 377:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                          uint8_t ucFlags );
 378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 380:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Finds a Tx buffer containing the MQTT message matching the given packet
 381:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * type, flags and identifier.
 382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Iterates over all the buffers in the Tx buffer list to see if any buffer contains
 384:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * a message in which:
 385:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 1. Top nibble of first byte matches the given packet type.
 386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 2. Lower nibble of the first byte matches the given flags.
 387:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 3. The packet identifier in the buffer matches the given one.
 388:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to find the buffer.
 390:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucPacketType The packet type to match.
 391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucFlags The flags to match.
 392:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usPacketIdentifier The packet identifier to match.
 393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 394:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The handle to the buffer if it finds one, NULL otherwise.
 395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvPacketTypeFlagsIdentifierGetTxBuffer( MQTTContext_t * pxMQTTContext,
 397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint8_t ucPacketType,
 398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint8_t ucFlags,
 399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint16_t usPacketIdentifier );
 400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Finds a Tx buffer containing the MQTT message matching the given packet
 403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * type and identifier.
 404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 405:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Iterates over all the buffers in the Tx buffer list to see if any buffer contains
 406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * a message in which:
 407:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 1. Top nibble of first byte matches the given packet type.
 408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * 2. The packet identifier in the buffer matches the given one.
 409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to find the buffer.
 411:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ucPacketType The packet type to match.
 412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usPacketIdentifier The packet identifier to match.
 413:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 414:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The handle to the buffer if it finds one, NULL otherwise.
 415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvPacketTypeIdentifierGetTxBuffer( MQTTContext_t * pxMQTTContext,
 417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                               uint8_t ucPacketType,
 418:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                               uint16_t usPacketIdentifier );
 419:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 420:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 421:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Resets the Rx message state of the context to prepare it for
 422:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * receiving the next message.
 423:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context to reset the Rx message state.
 425:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 426:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvResetRxMessageState( MQTTContext_t * pxMQTTContext );
 427:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 428:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 429:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Resets the MQTT contexts and puts in "not connected" state.
 430:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 431:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * All the buffers on the Tx buffer list and the Rx buffer are returned
 432:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * to the free buffer pool. Rx message state is reset and connection state
 433:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * is marked as "not connected". All the subscription entires in the
 434:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * subscription manager are marked as free.
 435:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 436:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context to reset.
 437:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 438:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvResetMQTTContext( MQTTContext_t * pxMQTTContext );
 439:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 440:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 441:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Gets the current tick count.
 442:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 443:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * If the user has supplied GetTicks function, it invokes it to get the
 444:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * current tick count. If not, it returns zero to indicate that the tick
 445:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * count should be stored on the next invocation of MQTT_Periodic.
 446:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context.
 448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 449:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The current tick count if the user has supplied GetTicks function,
 450:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * zero otherwise.
 451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 452:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint64_t prvGetCurrentTickCount( MQTTContext_t * pxMQTTContext );
 453:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 454:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Compares the recorded tick count with the current tick count to see
 456:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * if the remaining ticks have elapsed.
 457:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 458:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * If the recorded tick count is zero, it indicates that the user has not supplied
 459:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the get ticks function and we should update the recorded the tick count to the
 460:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * current tick count. This way the timeout processing starts from this invocation
 461:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * of MQTT_Periodic. If the recorded tick count is not zero, it compares the current
 462:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * tick count with the recorded tick count to see if the remaining ticks have elapsed.
 463:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * If remaining ticks have elapsed, it returns eMQTTTrue to indicate timeout otherwise
 464:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * it returns eMQTTFalse and updates the remaining ticks & recorded tick count.
 465:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 466:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in,out] pxRecordedTickCount The recorded tick count.
 467:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] xCurrentTickCount The current tick count.
 468:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in,out] pulRemainingTicks Remaining ticks.
 469:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 470:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return eMQTTTrue if the time has elapsed, eMQTTFalse otherwise.
 471:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 472:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBool_t prvIsTimeElapsed( uint64_t * pxRecordedTickCount,
 473:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     uint64_t xCurrentTickCount,
 474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     uint32_t * pulRemainingTicks );
 475:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Transmits the data using the user supplied callback.
 478:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 479:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It also updates the xLastSentMessageTimestamp and ulNextPeriodicInvokeTicks
 480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * in the MQTT context in case of a successful transmit to ensure that
 481:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * keep alive messages are sent when needed.
 482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context.
 484:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucData The data to transmit.
 485:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ulDataLength Length of the data.
 486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 487:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return eMQTTSuccess if send is successful, eMQTTSendFailed otherwise.
 488:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 489:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTReturnCode_t prvSendData( MQTTContext_t * pxMQTTContext,
 490:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                      const uint8_t * const pucData,
 491:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                      uint32_t ulDataLength );
 492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 493:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received MQTT message containing only fixed header.
 495:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 496:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * We always write the fixed header of the received message in a separate
 497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * fixed header buffer. Then we decode the remaining length and try to get
 498:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * a free buffer. If a free buffer is not available or the buffer is not large
 499:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * enough to hold the complete message, we drop the packet (we can do so because
 500:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * we already know the packet length and therefore we know how many next bytes to
 501:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * drop). If we get a large enough free buffer, we copy the fixed header in that
 502:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * buffer and the rest of the packet is also stored in that buffer.
 503:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Certain messages (like PINGRESP) only contain fixed header (i.e. remaining length
 504:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * is zero) and can be parsed as soon as the fixed header is received. This function
 505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * is invoked whenever a message containing only fixed header is received (for other
 506:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * messages prvProcessReceivedMQTTPacket is invoked). The message is contained in
 507:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * pxMQTTContext->ucRxFixedHeaderBuffer.
 508:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 509:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 510:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 511:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedFixedHeaderOnlyMQTTPacket( MQTTContext_t * pxMQTTContext );
 512:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 513:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 514:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received MQTT message.
 515:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 516:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * This is invoked whenever a complete MQTT message is received. Depending on
 517:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the received message it may invoke the user supplied callback to inform
 518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * about the received message. The message is contained in pxMQTTContext->xRxBuffer.
 519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 520:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 521:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 522:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedMQTTPacket( MQTTContext_t * pxMQTTContext );
 523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 524:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 525:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received CONNACK message.
 526:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 527:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It tries to find out if this is a valid and expected CONNACK i.e. a Connect
 528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * message was sent before and has not timed out yet. It invokes the user supplied
 529:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * callback to inform about the received message.
 530:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 531:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedCONNACK( MQTTContext_t * pxMQTTContext );
 534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 535:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 536:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received SUBACK message.
 537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 538:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It tries to find out if this is a valid and expected SUBACK i.e. a Subscribe
 539:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * message was sent before and has not timed out yet. It invokes the user supplied
 540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * callback to inform about the received message.
 541:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 542:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 543:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 544:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedSUBACK( MQTTContext_t * pxMQTTContext );
 545:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 547:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received UNSUBACK message.
 548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 549:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It tries to find out if this is a valid and expected UNSUBACK i.e. an Unsubscribe
 550:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * message was sent before and has not timed out yet. It invokes the user supplied
 551:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * callback to inform about the received message.
 552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 553:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 554:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedUNSUBACK( MQTTContext_t * pxMQTTContext );
 556:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 557:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received PUBACK message.
 559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 560:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It tries to find out if this is a valid and expected PUBACK i.e. a Publish
 561:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * message was sent before and has not timed out yet. It invokes the user supplied
 562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * callback to inform about the received message.
 563:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 564:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 565:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedPUBACK( MQTTContext_t * pxMQTTContext );
 567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 568:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 569:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received PINGRESP message.
 570:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 571:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It tries to find out if this is a valid PINGRESP message.
 572:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 573:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 574:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedPINGRESP( MQTTContext_t * pxMQTTContext );
 576:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 577:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes and processes the received Publish message.
 579:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Parses the message and invokes the user supplied callback to inform about
 581:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the publish message received from the broker. The buffer containing the
 582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * whole MQTT message is supplied in the callback (xBuffer member of the
 583:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * MQTTPublishData_t). The user can choose to own the buffer afterwards by
 584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * returning eMQTTTrue from the callback in which case the user should
 585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * free the buffer whenever done or supply it back for re-use by calling
 586:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * MQTT_GiveBuffer.
 587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 588:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which the message was received.
 589:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedPublish( MQTTContext_t * pxMQTTContext );
 591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 592:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 593:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Invokes the user supplied callback.
 594:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * If the event is eMQTTPublish, it tries to invoke the subscription callback.
 596:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * If the user has not registered any specific callback for this topic or
 597:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * subscription management is not enabled, it invokes the user supplied generic
 598:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * callback. For all events other than eMQTTPublish, it just invokes the user
 599:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * supplied generic callback. If user has not supplied the generic callback,
 600:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * it does nothing.
 601:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 602:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context to invoke the callback for.
 603:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxEventCallbackParams Parameters to pass in the callback.
 604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 605:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return returned value from the callback, if one was invoked, eMQTTFalse
 606:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * otherwise.
 607:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBool_t prvInvokeCallback( MQTTContext_t * pxMQTTContext,
 609:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                      MQTTEventCallbackParams_t * pxEventCallbackParams );
 610:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 611:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 612:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Writes a string in the expected MQTT format which means prefixed with
 613:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the string's length.
 614:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 615:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * First writes the string length and then copies the supplied string into the
 616:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * destination buffer. It uses the pointer to the last byte in buffer to avoid
 617:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * overflow. If it determines that the destination buffer does not have enough
 618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * space, it writes nothing in it and returns the pointer to the starting of
 619:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * destination buffer to indicate that nothing has been written to the buffer.
 620:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * In case of a successful write, it returns the address of the byte following
 621:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the string just copied to the buffer.
 622:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[out] pucDestination The destination buffer.
 624:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucLastByteInBuffer Pointer to the last byte in the destination buffer.
 625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucString The string to copy.
 626:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usStringLength The length of the string.
 627:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 628:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The address of the byte following the string just copied to the buffer
 629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * if write is successful, pucDestination otherwise.
 630:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t * prvWriteString( uint8_t * pucDestination,
 632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  const uint8_t * const pucLastByteInBuffer,
 633:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  const uint8_t * const pucString,
 634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  uint16_t usStringLength );
 635:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 636:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 637:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Returns the number of bytes required to encode the given "Remaining Length"
 638:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * using the variable length encoding scheme documented by the MQTT protocol spec.
 639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 640:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ulRemainingLength The given remaining length.
 641:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The number of bytes required to encode the given remaining length. If the
 643:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * given remaining length is not within the permissible limits as documented by the
 644:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * MQTT protocol spec, it returns 0 to indicate failure.
 645:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t prvSizeOfRemainingLength( uint32_t ulRemainingLength );
 647:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 649:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Encodes the given remaining length using the variable length encoding
 650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * scheme documented by the MQTT protocol spec.
 651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 652:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Encoded length is returned in the provided buffer which must be large enough
 653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * to hold the result. If it fails to encode the remaining length (which can happen
 654:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * if the length is more than the maximum that can be encoded in four bytes or if
 655:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the provided buffer does not have enough space), it returns zero to indicate that
 656:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * nothing was written to the buffer otherwise it returns the number of bytes
 657:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * written to the buffer. The pointer to the last byte in buffer is used to check
 658:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * for overflow.
 659:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] ulRemainingLength The remaining length to encode.
 661:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[out] pucEncodedRemainingLength The buffer to write the encoded length in.
 662:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucLastByteInBuffer Pointer to the last byte in the provided buffer.
 663:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return The number of bytes written to the buffer.
 665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 666:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t prvEncodeRemainingLength( uint32_t ulRemainingLength,
 667:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          uint8_t * const pucEncodedRemainingLength,
 668:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          const uint8_t * const pucLastByteInBuffer );
 669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 670:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 671:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Decodes the given remaining length using the variable length encoding
 672:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * scheme documented by the MQTT protocol spec.
 673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 674:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * If the user has provided an output buffer, decoded length is returned in it. The
 675:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * function returns the number of bytes read from the provided buffer. If the buffer
 676:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * does not contain a valid encoded length, it returns zero to indicate a decoding
 677:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * failure.
 678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 679:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucEncodedRemainingLength The buffer containing the encoded length.
 680:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[out] pulRemainingLength Used to return the decoded length. If the user
 681:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * is not interested in the decoded length, this should be passed as NULL.
 682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return Number of bytes read from the buffer.
 684:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 685:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t prvDecodeRemainingLength( const uint8_t * const pucEncodedRemainingLength,
 686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          uint32_t * const pulRemainingLength );
 687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 689:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Store the subscription in the subscription manager.
 690:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * This function can fail to store the subscription if all the entries in the
 692:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * subscription manager are in use or the topic name is longer than the maximum
 693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * length as specified by the mqttconfigSUBSCRIPTION_MANAGER_MAX_TOPIC_LENGTH
 694:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * macro or if the topic represents an invalid topic filter. eMQTTFalse is returned
 695:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * to indicate the failure.
 696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 697:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to store the subscription.
 698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucTopic The topic this subscription entry is for.
 699:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usTopicLength The length of the topic.
 700:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pvPublishCallbackContext The user supplied callback context.
 701:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxPublishCallback The callback to invoke whenever a publish message
 702:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * is received on this topic.
 703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 704:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return eMQTTTrue if subscription is stored successfully, eMQTTFalse otherwise.
 705:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 706:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 708:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTBool_t prvStoreSubscription( MQTTContext_t * pxMQTTContext,
 709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             const uint8_t * const pucTopic,
 710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint16_t usTopicLength,
 711:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             void * pvPublishCallbackContext,
 712:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             MQTTPublishCallback_t pxPublishCallback );
 713:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 715:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 716:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 717:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Removes the subscription entry from the subscription manager corresponding
 718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * to the provided topic.
 719:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Iterates over all the entries in the subscription manager and tries to find
 721:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the one with the matching topic. If it finds one, removes it by marking it
 722:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * free.
 723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 724:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to remove the subscription.
 725:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucTopic The topic for which the subscription entry is to be removed.
 726:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usTopicLength The length of the topic.
 727:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 728:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 730:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static void prvRemoveSubscription( MQTTContext_t * pxMQTTContext,
 731:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        const uint8_t * const pucTopic,
 732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        uint16_t usTopicLength );
 733:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 734:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 736:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 737:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Removes the subscription entry from the subscription manager corresponding
 738:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * to the topic contained in the provided MQTT subscribe or unsubscribe message.
 739:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * The provided buffer must contain a valid MQTT subscribe or unsubscribe message.
 741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It extracts the topic from the MQTT message and removes the corresponding entry
 742:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * in the subscription manager by calling prvRemoveSubscription.
 743:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to remove the subscription.
 745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] xBuffer The provided buffer containing a valid MQTT subscribe or
 746:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * unsubscribe message.
 747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 748:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 750:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static void prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer( MQTTContext_t * pxMQTTContext
 751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                       MQTTBufferHandle_t xBuffer );
 752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 755:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 756:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Invokes the subscription callbacks for the topic on which the provided
 757:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * publish message is received.
 758:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It stops as soon as the user takes the ownership of the MQTT buffer by
 760:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * returning eMQTTTrue from the callback. It follows the following sequence
 761:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * for invoking callbacks:
 762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - First it tries to find an exact match with the entries containing topic
 763:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   filters without wild-cards.
 764:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - Then it tries to find entries containing topic filters with wild-cards
 765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   which match the topic on which the publish message is received.
 766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 767:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxMQTTContext The MQTT context for which to invoke the subscription callbacks.
 768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pxPublishData The publish data containing the topic and the received message.
 769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[out] pxSubscriptionCallbackInvoked Set to eMQTTTrue if any callback was invoked,
 770:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * otherwise set to eMQTTFalse.
 771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 772:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return eMQTTTrue if the user took the ownership of the MQTT buffer, eMQTTFalse otherwise.
 773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 775:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 776:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTBool_t prvInvokeSubscriptionCallbacks( MQTTContext_t * pxMQTTContext,
 777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       const MQTTPublishData_t * pxPublishData,
 778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       MQTTBool_t * pxSubscriptionCallbackInvoked );
 779:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 780:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 781:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 782:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Infers the type of the given topic filter.
 784:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 785:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * It ensure that if the given topic filter contains wild-cards, then those
 786:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * wild-cards are valid as per the rules documented by the MQTT protocol
 787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * spec. The rules it checks are:
 788:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - '+' must either be the first character or the preceding character
 789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   must be '/'.
 790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - '+' must either be the last character or the succeeding character
 791:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   must be '/'.
 792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - '#' must either be the first character or the preceding character
 793:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   must be '/'.
 794:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - '#' must be the last character.
 795:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucTopicFilter The given topic filter.
 797:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usTopicFilterLength The length of the given topic filter.
 798:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return eMQTTTopicFilterTypeSimple if the given topic filter is valid and
 800:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * does not contain any wild-card, eMQTTTopicFilterTypeWildCard if the given
 801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * topic filter is valid and contains wild-cards, eMQTTTopicFilterTypeInvalid
 802:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * otherwise.
 803:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 804:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 805:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 806:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTTopicFilterType_t prvGetTopicFilterType( const uint8_t * const pucTopicFilter,
 807:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                         uint16_t usTopicFilterLength );
 808:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 809:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 810:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /**
 812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @brief Checks whether the given topic matches the given topic
 813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * filter.
 814:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 815:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @warning It assumes that the given topic filter is valid i.e.
 816:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * calling prvIsValidTopicFilter with the given topic will not
 817:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * return eMQTTTopicFilterTypeInvalid.
 818:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * Some corner cases as documented by the MQTT protocol spec are:
 820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - Filter of type "sport/#" also matches the singular "sport"
 821:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   since # includes the parent level.
 822:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * - Filter of type "sport/+" also matches the "sport/" but not
 823:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *   "sport".
 824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 825:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucTopic The given topic to match.
 826:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usTopicLength The length of the given topic.
 827:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] pucTopicFilter The given topic filter with which to match
 828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * the given topic.
 829:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @param[in] usTopicFilterLength The length of the given topic filter.
 830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  *
 831:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  * @return eMQTTTrue if the topic matches the filter, eMQTTFalse otherwise.
 832:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****  */
 833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 834:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 835:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTBool_t prvDoesTopicMatchTopicFilter( const uint8_t * const pucTopic,
 836:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                     uint16_t usTopicLength,
 837:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                     const uint8_t * const pucTopicFilter,
 838:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                     uint16_t usTopicFilterLength );
 839:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 840:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 841:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvGetFreeBuffer( MQTTContext_t * pxMQTTContext,
 844:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint32_t ulBufferLength )
 845:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 846:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xFreeBufferHandle = NULL;
 847:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulRequestedBufferLength = 0;
 848:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucFreeBuffer;
 849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Request a buffer enough to hold the metadata along
 851:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * with the MQTT message. */
 852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     ulRequestedBufferLength = ulBufferLength + ( uint32_t ) sizeof( MQTTBufferMetadata_t );
 853:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Try to get a buffer from the free buffer pool. */
 855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pucFreeBuffer = pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn( &ulRequestedBufferLength );
 856:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Initialize the metadata, if we got a buffer. */
 858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pucFreeBuffer != NULL )
 859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttbufferINIT_BUFFER( pucFreeBuffer, ulRequestedBufferLength );
 861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 862:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Get the handle to return. */
 863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xFreeBufferHandle = mqttbufferGET_HANDLE_FROM_RAW_BUFFER( pucFreeBuffer ); /*lint !e9087 Op
 864:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Ensure that the actual space in the buffer to store
 866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * data is at least what the user requested. */
 867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttconfigASSERT( mqttbufferGET_EFFECTIVE_BUFFER_LENGTH( xFreeBufferHandle ) >= ulBufferLen
 868:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 869:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xFreeBufferHandle;
 871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 873:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 874:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvReturnBuffer( MQTTContext_t * pxMQTTContext,
 875:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                              MQTTBufferHandle_t xBuffer )
 876:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 877:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xBuffer != NULL )
 878:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Clear the payload memory. */
 880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         memset( mqttbufferGET_DATA( xBuffer ), 0x00, mqttbufferGET_EFFECTIVE_BUFFER_LENGTH( xBuffer
 881:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the buffer is part of Tx list, remove it. */
 883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttbufferLIST_REMOVE( xBuffer );
 884:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the buffer to the free buffer pool. */
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn( mqttbufferGET_RAW_BUFFER_FROM_HANDLE
 887:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 889:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 891:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvPacketTypeFlagsGetTxBuffer( MQTTContext_t * pxMQTTContext,
 892:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                          uint8_t ucPacketType,
 893:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                          uint8_t ucFlags )
 894:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 895:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink;
 896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
 897:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xFound = eMQTTFalse;
 898:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Iterate over all buffers in the Tx buffer list. */
 900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     listFOR_EACH( pxLink, &( pxMQTTContext->xTxBufferListHead ) )
 901:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = mqttbufferGET_BUFFER_HANDLE_FROM_LINK( pxLink );
 903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 904:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Check if the first byte contains the given packet type
 905:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * and flags. */
 906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttTOP_NIB
 907:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttLOWER_N
 908:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 909:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xFound = eMQTTTrue;
 910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             break;
 911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 913:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 914:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Did we find a buffer? */
 915:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xFound == eMQTTFalse )
 916:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 917:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = NULL;
 918:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 919:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xBuffer;
 921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 922:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 923:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvPacketTypeFlagsIdentifierGetTxBuffer( MQTTContext_t * pxMQTTContext,
 925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint8_t ucPacketType,
 926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint8_t ucFlags,
 927:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint16_t usPacketIdentifier )
 928:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink;
 930:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
 931:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xFound = eMQTTFalse;
 932:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Iterate over all buffers in the Tx buffer list. */
 934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     listFOR_EACH( pxLink, &( pxMQTTContext->xTxBufferListHead ) )
 935:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = mqttbufferGET_BUFFER_HANDLE_FROM_LINK( pxLink );
 937:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 938:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Check that the first byte contains the given packet type
 939:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * and flags and the packet identifier matches the given one. */
 940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttTOP_NIB
 941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttLOWER_N
 942:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) == usPacketIdentifier ) )
 943:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 944:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xFound = eMQTTTrue;
 945:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             break;
 946:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 948:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 949:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Did we find a buffer? */
 950:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xFound == eMQTTFalse )
 951:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = NULL;
 953:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 954:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 955:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xBuffer;
 956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 958:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 959:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBufferHandle_t prvPacketTypeIdentifierGetTxBuffer( MQTTContext_t * pxMQTTContext,
 960:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                               uint8_t ucPacketType,
 961:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                               uint16_t usPacketIdentifier )
 962:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 963:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink;
 964:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
 965:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xFound = eMQTTFalse;
 966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 967:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Iterate over all buffers in the Tx buffer list. */
 968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     listFOR_EACH( pxLink, &( pxMQTTContext->xTxBufferListHead ) )
 969:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = mqttbufferGET_BUFFER_HANDLE_FROM_LINK( pxLink );
 971:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 972:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Check that the first byte contains the given packet type
 973:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * and flags and the packet identifier matches the given one. */
 974:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttTOP_NIB
 975:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) == usPacketIdentifier ) )
 976:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 977:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xFound = eMQTTTrue;
 978:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             break;
 979:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 980:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 981:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 982:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Did we find a buffer? */
 983:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xFound == eMQTTFalse )
 984:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 985:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = NULL;
 986:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 987:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 988:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xBuffer;
 989:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 991:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 992:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvResetRxMessageState( MQTTContext_t * pxMQTTContext )
 993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Prepares the context to receive the next message. */
 995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.ucRemaingingLengthFieldBytes = 0;
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.ulTotalMessageLength = 0;
 997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageStore;
 998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextBytePacketType;
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->ulRxMessageReceivedLength = 0;
1000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxBuffer = NULL;
1001:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1002:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1003:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1004:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvResetMQTTContext( MQTTContext_t * pxMQTTContext )
1005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink, * pxTempLink;
1007:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBufferHandle;
1008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1009:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
1011:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1012:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1013:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Set connection state to not connected. */
1014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xConnectionState = eMQTTNotConnected;
1015:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1016:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return all Tx buffers to the free buffer pool. */
1017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     listFOR_EACH_SAFE( pxLink, pxTempLink, &( pxMQTTContext->xTxBufferListHead ) )
1018:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBufferHandle = mqttbufferGET_BUFFER_HANDLE_FROM_LINK( pxLink );
1020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvReturnBuffer( pxMQTTContext, xBufferHandle );
1021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return Rx buffer to the free buffer pool. */
1024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
1025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Reset Rx message state. */
1027:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvResetRxMessageState( pxMQTTContext );
1028:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1029:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1031:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Mark all the subscription entires in the subscription
1032:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * manager as free. */
1033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         for( x = 0; x < ( uint32_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_SUBSCRIPTIONS; x++ )
1034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1035:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse = eMQTTFalse;
1036:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Set the number of in-use subscription entries to zero. */
1039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xSubscriptionManager.ulInUseSubscriptions = 0;
1040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1041:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1042:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint64_t prvGetCurrentTickCount( MQTTContext_t * pxMQTTContext )
1045:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint64_t uxCurrentTickCount = 0;
1047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1048:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If user has supplied get ticks function, use it to get the
1049:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * current tick count. */
1050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->pxGetTicksFxn != NULL )
1051:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->pxGetTicksFxn( &( uxCurrentTickCount ) );
1053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1054:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1055:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If user has not supplied get ticks function, we return zero
1056:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * and time-stamp is stored on the next invocation of MQTT_Periodic.
1057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * Note that in this case the time measurement will start from the
1058:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * next invocation of MQTT_Periodic( as opposed to this moment ). */
1059:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return uxCurrentTickCount;
1060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1061:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1063:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBool_t prvIsTimeElapsed( uint64_t * pxRecordedTickCount,
1064:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     uint64_t xCurrentTickCount,
1065:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     uint32_t * pulRemainingTicks )
1066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1067:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulElapsedTicks;
1068:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xTimeElasped = eMQTTFalse;
1069:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ( *pxRecordedTickCount ) == ( uint64_t ) 0 )
1071:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1072:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If recorded tick count is zero, this means that user has not
1073:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * supplied get ticks function and we should store tick count. The
1074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * timeout will be measured from this moment onwards. */
1075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         *pxRecordedTickCount = xCurrentTickCount;
1076:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1077:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1078:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1079:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Check how much time has elapsed. */
1080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulElapsedTicks = ( uint32_t ) ( xCurrentTickCount - *pxRecordedTickCount );
1081:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1082:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Update the recorded tick count to the current tick count. */
1083:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         *pxRecordedTickCount = xCurrentTickCount;
1084:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1085:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If elapsed ticks are more than remaining, return eMQTTTrue. */
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ulElapsedTicks >= *pulRemainingTicks )
1087:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1088:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xTimeElasped = eMQTTTrue;
1089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             *pulRemainingTicks = 0;
1090:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1091:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1092:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1093:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Otherwise update the remaining Ticks. */
1094:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             *pulRemainingTicks -= ulElapsedTicks;
1095:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1096:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1097:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1098:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xTimeElasped;
1099:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1101:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1102:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTReturnCode_t prvSendData( MQTTContext_t * pxMQTTContext,
1103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                      const uint8_t * const pucData,
1104:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                      uint32_t ulDataLength )
1105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSendFailed;
1107:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->pxMQTTSendFxn( pxMQTTContext->pvSendContext, pucData, ulDataLength ) == ulDa
1109:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = eMQTTSuccess;
1111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1112:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Reset the last sent message timestamp. Keep alive messages
1113:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * need to be sent only if we are not sending any message. So
1114:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * sending any message essentially delays when the next keep
1115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * alive should be sent. */
1116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xLastSentMessageTimestamp = prvGetCurrentTickCount( pxMQTTContext );
1117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
1118:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1119:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
1121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1122:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1123:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedFixedHeaderOnlyMQTTPacket( MQTTContext_t * pxMQTTContext )
1125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1126:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is this a PINGRESP? */
1129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->ucRxFixedHeaderBuffer[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] == ( uint8_t )
1130:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvProcessReceivedPINGRESP( pxMQTTContext );
1132:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1133:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Any other fixed header only packet is considered a malformed packet. */
1134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1136:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* A malformed packet has been received - disconnect. */
1137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1138:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1139:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform the user about the malformed packet. */
1140:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1141:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1142:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1143:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1144:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1145:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedMQTTPacket( MQTTContext_t * pxMQTTContext )
1148:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is this a publish message from broker? */
1152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & 
1153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1154:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvProcessReceivedPublish( pxMQTTContext );
1155:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1156:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is this a CONNACK? */
1157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ]
1158:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1159:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvProcessReceivedCONNACK( pxMQTTContext );
1160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1161:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is this a PUBACK? */
1162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ]
1163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1164:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvProcessReceivedPUBACK( pxMQTTContext );
1165:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is this a SUBACK? */
1167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ]
1168:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvProcessReceivedSUBACK( pxMQTTContext );
1170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is this an UNSUBACK? */
1172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ]
1173:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvProcessReceivedUNSUBACK( pxMQTTContext );
1175:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1176:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Any other packet is considered malformed. */
1177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1178:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1179:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* A malformed packet has been received - disconnect. */
1180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1181:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1182:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform the user about the malformed packet. */
1183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1186:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1188:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1190:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedCONNACK( MQTTContext_t * pxMQTTContext )
1191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xConnectTxBuffer;
1193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xConnectionEstablished = eMQTTFalse, xConnectionRefused = eMQTTFalse, xMalformedPack
1195:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
1196:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucDefaultCONNACKParameters[] =
1197:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1198:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_CONNACK | mqttFLAGS_CONNACK, /* Fixed header control packet type. */
1199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         2,                                       /* Fixed header remaining length - always 2 for CO
1200:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0,                                       /* Bit 0 is SP - Session Present. */
1201:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0,                                       /* Return code. */
1202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
1203:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1204:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Is there a connect message waiting for CONNACK? */
1205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     xConnectTxBuffer = prvPacketTypeFlagsGetTxBuffer( pxMQTTContext, mqttCONTROL_CONNECT, mqttFLAGS
1206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1207:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xConnectTxBuffer == NULL )
1208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Either the connect was never sent or the sender has
1210:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * timed out i.e. not waiting for CONNACK. Either case,
1211:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * it is an unexpected CONANCK. Just inform the user that
1212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * an unexpected CONNACK (which might be a delayed one from
1213:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * user's perspective) was received. */
1214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTUnexpectedConnACK;
1215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1216:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1217:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1218:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( mqttbufferGET_DATA_LENGTH( pxMQTTContext->xRxBuffer ) >= sizeof( ucDefaultCONNACKParame
1220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Received enough data for a CONNACK - does the received fixed header match
1222:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * the expected one for the CONNACK message (Fixed header is of 2 bytes for CONNACK
1223:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * message because Remaining Length is 2 which takes only one byte)? */
1224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( memcmp( ucDefaultCONNACKParameters, mqttbufferGET_DATA( pxMQTTContext->xRxBuffer ),
1225:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "CONNACK received.\r\n" ) );
1227:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTConnACK;
1229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Since AWS IoT only supports CleanSession 1, SP bit will
1231:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * always be zero. */
1232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucReturnCode = mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttCONNACK_RETURN_C
1233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ucReturnCode == ( uint8_t ) 0 ) /* Connection Accepted. */
1235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
1236:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Server has accepted the connection and we are now in
1237:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * connected state. */
1238:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.xEventType = eMQTTConnACK;
1239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTConnACKData.xConnACKReturnCode = eMQTTConnACKConnec
1240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTConnACKData.usPacketIdentifier = mqttbufferGET_PACK
1241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1242:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1243:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Connection is established. */
1244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xConnectionEstablished = eMQTTTrue;
1245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
1246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else if( ( ucReturnCode >= ( uint8_t ) 1 ) && ( ucReturnCode <= ( uint8_t ) 5 ) )
1247:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
1248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Server refused to accept the connection. */
1249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.xEventType = eMQTTConnACK;
1250:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Convert the return code to a user friendly enum value. */
1252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( ucReturnCode == ( uint8_t ) 1 )
1253:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
1254:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xEventCallbackParams.u.xMQTTConnACKData.xConnACKReturnCode = eMQTTConnACKUn
1255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
1256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else if( ucReturnCode == ( uint8_t ) 2 )
1257:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
1258:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xEventCallbackParams.u.xMQTTConnACKData.xConnACKReturnCode = eMQTTConnACKId
1259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
1260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else if( ucReturnCode == ( uint8_t ) 3 )
1261:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
1262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xEventCallbackParams.u.xMQTTConnACKData.xConnACKReturnCode = eMQTTConnACKSe
1263:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
1264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else if( ucReturnCode == ( uint8_t ) 4 )
1265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
1266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xEventCallbackParams.u.xMQTTConnACKData.xConnACKReturnCode = eMQTTConnACKBa
1267:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
1268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else
1269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
1270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xEventCallbackParams.u.xMQTTConnACKData.xConnACKReturnCode = eMQTTConnACKUn
1271:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
1272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTConnACKData.usPacketIdentifier = mqttbufferGET_PACK
1274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1275:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xConnectionRefused = eMQTTTrue;
1277:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
1278:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
1279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
1280:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Malformed packet - Reserved return code. */
1281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xMalformedPacket = eMQTTTrue;
1282:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
1283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
1285:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "Unknown messages %x %x %x %x, expected CONNACK, disconnecti
1287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ 0 ],
1288:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ 1 ],
1289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ 2 ],
1290:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ 3 ] ) );
1291:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1292:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Malformed packet - Fixed header does not match. */
1293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xMalformedPacket = eMQTTTrue;
1294:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1295:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1296:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1297:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1298:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Malformed packet - Not enough bytes. */
1299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xMalformedPacket = eMQTTTrue;
1300:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1302:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the Tx buffer to the free buffer pool. */
1303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvReturnBuffer( pxMQTTContext, xConnectTxBuffer );
1304:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1306:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If connection was refused by the server or a malformed packet
1307:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * was received, we need to disconnect and inform the user. */
1308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ( xConnectionRefused == eMQTTTrue ) || ( xMalformedPacket == eMQTTTrue ) )
1309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1312:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1313:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Set the appropriate disconnect reason. */
1314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( xMalformedPacket == eMQTTTrue )
1315:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalform
1317:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1318:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1319:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonBrokerR
1321:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1324:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1326:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Did we get an expected CONNACK from the server. */
1327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xConnectionEstablished == eMQTTTrue )
1328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1329:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Set the connection state as connected. */
1330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xConnectionState = eMQTTConnected;
1331:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Now onwards, keep alive messages should be sent regularly in
1333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * order to ensure a long lived connection. */
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xLastSentMessageTimestamp = prvGetCurrentTickCount( pxMQTTContext );
1335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
1336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* No ping has been sent yet. */
1338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xWaitingForPingResp = eMQTTFalse;
1339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return the RxBuffer to the free buffer pool. */
1342:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
1343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1346:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedSUBACK( MQTTContext_t * pxMQTTContext )
1347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1348:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xSubscribeTxBuffer;
1349:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1350:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xMalformedPacket = eMQTTFalse;
1351:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
1352:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usPacketIdentifier;
1353:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Must have enough bytes to at least read out one return code. */
1355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( mqttbufferGET_DATA_LENGTH( pxMQTTContext->xRxBuffer ) > ( uint32_t ) mqttADJUST_OFFSET( mqt
1356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                 pxM
1357:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1358:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Extract the packet identifier and see if there is a subscribe
1359:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * packet waiting for ACK. */
1360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usPacketIdentifier = ( uint16_t ) ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttADJ
1361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usPacketIdentifier <<= mqttBITS_PER_BYTE;
1363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usPacketIdentifier |= ( uint8_t ) ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttADJ
1364:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1365:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xSubscribeTxBuffer = prvPacketTypeFlagsIdentifierGetTxBuffer( pxMQTTContext, mqttCONTROL_SU
1367:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( xSubscribeTxBuffer == NULL )
1369:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1370:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Either a subscribe was never sent or the sender
1371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * timed out. Either case, this is an unexpected
1372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * SUBACK. */
1373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xEventCallbackParams.xEventType = eMQTTUnexpectedSubACK;
1374:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1377:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Extract the return code from the packet. */
1379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucReturnCode = mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttADJUST_OFFSET( mqttS
1380:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                               pxMQT
1381:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Return code must be valid. Note that QoS2 is not supported. */
1383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( ( ucReturnCode <= ( uint8_t ) 1 ) || ( ucReturnCode == ( uint8_t ) 128 ) )
1384:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1385:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Inform the user about the received SUBACK. */
1386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTSubACK;
1387:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1388:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Convert the return code to a user friendly enum value. */
1389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ucReturnCode == ( uint8_t ) 0 )
1390:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
1391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTSubACKData.xSubACKReturnCode = eMQTTSubACKSuccessQo
1392:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
1393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else if( ucReturnCode == ( uint8_t ) 1 )
1394:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
1395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTSubACKData.xSubACKReturnCode = eMQTTSubACKSuccessQo
1396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
1397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
1398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
1399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTSubACKData.xSubACKReturnCode = eMQTTSubACKFailure;
1400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
1401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTSubACKData.usPacketIdentifier = usPacketIdentifier;
1403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1405:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1407:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If the broker rejected the subscription request,
1408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * remove the subscription entry from the subscription
1409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * manager. */
1410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( ucReturnCode == ( uint8_t ) 128 ) /* Subscription failure. */
1411:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
1412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer( pxMQTTContext, xSubsc
1413:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
1414:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Return the Tx Buffer to the pool. */
1417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvReturnBuffer( pxMQTTContext, xSubscribeTxBuffer );
1418:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1419:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
1420:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1421:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Malformed packet - reserved return code. */
1422:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xMalformedPacket = eMQTTTrue;
1423:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1425:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1426:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1427:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1428:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Malformed packet - not enough bytes. */
1429:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xMalformedPacket = eMQTTTrue;
1430:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1431:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1432:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* A malformed packet should result in disconnect. Note
1433:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * that there is no need to disconnect in the case of
1434:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * unexpected SUBACK. */
1435:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xMalformedPacket == eMQTTTrue )
1436:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1437:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1438:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1439:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform user about the malformed packet received. */
1440:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1441:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1442:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1443:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1444:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1445:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return the RxBuffer to the free buffer pool. */
1446:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
1447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1449:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1450:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedUNSUBACK( MQTTContext_t * pxMQTTContext )
1451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1452:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xUnsubscribeTxBuffer;
1453:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1454:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xMalformedPacket = eMQTTFalse;
1455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usPacketIdentifier;
1456:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucUNSUBACKFixedHeader[] =
1457:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1458:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_UNSUBACK | mqttFLAGS_UNSUBACK, /* Fixed header control packet type. */
1459:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         2,                                         /* Fixed header remaining length - always 2 for 
1460:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
1461:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1462:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Must have enough bytes to form a complete UNSUBACK packet
1463:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * which contains 2 byte packet identifier other than the fixed
1464:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * header. */
1465:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( mqttbufferGET_DATA_LENGTH( pxMQTTContext->xRxBuffer ) >= ( sizeof( ucUNSUBACKFixedHeader ) 
1466:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1467:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Received enough data for an UNSUBACK - does the received fixed header match
1468:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * the expected one for the UNSUBACK message (Fixed header is of 2 bytes for UNSUBACK
1469:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * message because Remaining Length is 2 which takes only one byte)? */
1470:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( memcmp( ucUNSUBACKFixedHeader, mqttbufferGET_DATA( pxMQTTContext->xRxBuffer ), sizeof( 
1471:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1472:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Extract the packet identifier and see if there is an unsubscribe
1473:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * packet waiting for ACK. */
1474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usPacketIdentifier = ( uint8_t ) ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqtt
1475:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usPacketIdentifier <<= mqttBITS_PER_BYTE;
1477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usPacketIdentifier |= ( uint8_t ) ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqt
1478:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1479:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnsubscribeTxBuffer = prvPacketTypeFlagsIdentifierGetTxBuffer( pxMQTTContext, mqttCONT
1481:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xUnsubscribeTxBuffer == NULL )
1483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1484:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Either an unsubscribe was never sent or the sender
1485:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * timed out. Either case, this is an unexpected UNSUBACK. */
1486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTUnexpectedUnSubACK;
1487:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1488:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1489:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
1490:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1491:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Inform the user about the received UNSUBACK. */
1492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTUnSubACK;
1493:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTUnSubACKData.usPacketIdentifier = usPacketIdentifier;
1494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1495:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1496:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1498:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If we successfully unsubscribed, remove the
1499:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * corresponding subscription entry from the subscription
1500:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * manager. */
1501:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer( pxMQTTContext, xUnsubscri
1502:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1503:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1504:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Return the Tx Buffer to the pool. */
1505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvReturnBuffer( pxMQTTContext, xUnsubscribeTxBuffer );
1506:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1507:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1508:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1509:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1510:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Malformed packet - fixed header does not match the expected one. */
1511:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xMalformedPacket = eMQTTTrue;
1512:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1513:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1514:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1515:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1516:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Malformed packet - not enough bytes. */
1517:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xMalformedPacket = eMQTTTrue;
1518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1520:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* A malformed packet should result in disconnect. Note
1521:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * that there is no need to disconnect in the case of
1522:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * unexpected UNSUBACK. */
1523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xMalformedPacket == eMQTTTrue )
1524:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1525:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1526:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1527:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform user about the malformed packet received. */
1528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1529:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1530:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1531:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return the RxBuffer to the free buffer pool. */
1534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
1535:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1536:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1538:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedPUBACK( MQTTContext_t * pxMQTTContext )
1539:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xPublishTxBuffer;
1541:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1542:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xMalformedPacket = eMQTTFalse;
1543:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usPacketIdentifier;
1544:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucPUBACKFixedHeader[] =
1545:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_PUBACK | mqttFLAGS_PUBACK, /* Fixed header control packet type. */
1547:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         2,                                     /* Fixed header remaining length - always 2 for PUBA
1548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
1549:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1550:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Must have enough bytes to form a complete PUBACK packet
1551:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * which contains 2 byte packet identifier other than the fixed
1552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * header. */
1553:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( mqttbufferGET_DATA_LENGTH( pxMQTTContext->xRxBuffer ) >= ( sizeof( ucPUBACKFixedHeader ) + 
1554:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Received enough data for a PUBACK - does the received fixed header match
1556:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * the expected one for the PUBACK message (Fixed header is of 2 bytes for PUBACK
1557:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * message because Remaining Length is 2 which takes only one byte)? */
1558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( memcmp( ucPUBACKFixedHeader, mqttbufferGET_DATA( pxMQTTContext->xRxBuffer ), sizeof( uc
1559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1560:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Extract the packet identifier and see if there is a publish
1561:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * packet waiting for ACK. */
1562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usPacketIdentifier = ( uint8_t ) ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqtt
1563:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1564:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usPacketIdentifier <<= mqttBITS_PER_BYTE;
1565:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usPacketIdentifier |= ( uint8_t ) ( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqt
1566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1568:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xPublishTxBuffer = prvPacketTypeIdentifierGetTxBuffer( pxMQTTContext, mqttCONTROL_PUBLI
1569:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1570:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xPublishTxBuffer == NULL )
1571:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1572:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Either a publish was never sent or the sender
1573:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * timed out. Either case, this is an unexpected PUBACK. */
1574:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTUnexpectedPubACK;
1575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1576:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1577:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
1578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1579:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Inform the user about the received UNSUBACK. */
1580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTPubACK;
1581:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTPubACKData.usPacketIdentifier = usPacketIdentifier;
1582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1583:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Return the Tx Buffer to the pool. */
1585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvReturnBuffer( pxMQTTContext, xPublishTxBuffer );
1586:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
1587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1588:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1589:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Malformed packet - fixed header does not match the expected one. */
1591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xMalformedPacket = eMQTTTrue;
1592:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1593:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1594:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1596:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Malformed packet - not enough bytes. */
1597:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xMalformedPacket = eMQTTTrue;
1598:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1599:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1600:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* A malformed packet should result in disconnect. Note
1601:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * that there is no need to disconnect in the case of
1602:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * unexpected PUBACK. */
1603:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xMalformedPacket == eMQTTTrue )
1604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1605:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1606:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1607:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform user about the malformed packet received. */
1608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1609:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1610:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1611:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1612:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1613:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return the RxBuffer to the free buffer pool. */
1614:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
1615:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1616:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1617:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedPINGRESP( MQTTContext_t * pxMQTTContext )
1619:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1620:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1621:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xValidPingResponse = eMQTTFalse;
1622:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucPingRespPacket[] =
1623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1624:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_PINGRESP | mqttFLAGS_PINGRESP,
1625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0 /* PINGRESP packet does not have any variable header or payload. */
1626:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
1627:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1628:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Did we receive a valid PINGRESP? */
1629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->ulRxMessageReceivedLength >= sizeof( ucPingRespPacket ) )
1630:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( memcmp( pxMQTTContext->ucRxFixedHeaderBuffer, ucPingRespPacket, sizeof( ucPingRespPacke
1632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1633:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* PINGRESP packet is valid. */
1634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xValidPingResponse = eMQTTTrue;
1635:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1636:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1637:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1638:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xValidPingResponse == eMQTTTrue )
1639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1640:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If we were expecting a PINGESP, update the time-stamp
1641:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * when the next PINGREQ should be sent. Otherwise ignore
1642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * this unexpected PINRESP. */
1643:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pxMQTTContext->xWaitingForPingResp == eMQTTTrue )
1644:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1645:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Mark that we received the expected PINGRESP. */
1646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->xWaitingForPingResp = eMQTTFalse;
1647:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Reset the last sent message timestamp so that the
1649:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * next PINGREQ can be sent at appropriate time. */
1650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->xLastSentMessageTimestamp = prvGetCurrentTickCount( pxMQTTContext );
1651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTick
1652:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1654:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1655:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Unexpected PINGRESP. */
1656:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttconfigDEBUG_LOG( ( "Unexpected PINGRESP received.\r\n" ) );
1657:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1658:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1659:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1661:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* A malformed packet should result in disconnect. */
1662:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1663:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform user about the malformed packet received. */
1665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1666:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1667:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1668:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1670:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1671:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1672:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static void prvProcessReceivedPublish( MQTTContext_t * pxMQTTContext )
1673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1674:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
1675:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucPacketIdentiferLength; /* Length in bytes taken by the packet identifier field in the
1676:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucQos;
1677:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static uint8_t ucPUBACKPacket[] =
1678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1679:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_PUBACK | mqttFLAGS_PUBACK, /* Fixed header control packet type. */
1680:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         2,                                     /* Fixed header remaining length - always 2 for PUBA
1681:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0,                                     /* Packet identifier MSB. */
1682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0                                      /* Packet identifier LSB. */
1683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
1684:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1685:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* A broker has sent a message to this client.  Decode it, then pass the
1686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * decoded message into an application defined callback. */
1687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     xEventCallbackParams.xEventType = eMQTTPublish;
1688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1689:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /*_TODO_ Do we want to expose DUP and RETAIN? */
1690:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     ucQos = mqttPUBLISH_QoS_BITS( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ mqttFIXED_HEADER_
1691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1692:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* QoS2 is not supported. */
1693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ( ucQos == ( uint8_t ) 0 /* QoS0. */ ) || ( ucQos == ( uint8_t ) 1 /* QoS1. */ ) )
1694:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1695:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.xQos = ( ucQos == ( uint8_t ) 0 ) ? eMQTTQoS0 : eMQTTQo
1696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1697:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( xEventCallbackParams.u.xPublishData.xQos == eMQTTQoS0 )
1698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1699:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucPacketIdentiferLength = mqttPUBLISH_QOS0_PACKET_IDENTIFER_LENGTH;
1700:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1701:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1702:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucPacketIdentiferLength = mqttPUBLISH_QOS1_PACKET_IDENTIFER_LENGTH;
1704:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1705:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1706:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Extract Topic Length. */
1707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.usTopicLength = ( uint16_t ) mqttbufferGET_DATA( pxMQTT
1708:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.usTopicLength <<= mqttBITS_PER_BYTE;
1710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.usTopicLength |= ( uint16_t ) mqttbufferGET_DATA( pxMQT
1711:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1712:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1713:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Extract Topic. */
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.pucTopic = &( mqttbufferGET_DATA( pxMQTTContext->xRxBuf
1715:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1716:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1717:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Extract Published Data. */
1718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.pvData = ( void * ) &( mqttbufferGET_DATA( pxMQTTContex
1719:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1721:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1722:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Topic string is followed by packet identifier which is
1724:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * followed by actual data. NOte that QoS0 publishes do not
1725:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * have packet identifier. */
1726:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.ulDataLength = pxMQTTContext->xRxMessageState.ulTotalMe
1727:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1728:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1730:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1731:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Pass the handle of the buffer containing the whole MQTT message. */
1732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.xBuffer = pxMQTTContext->xRxBuffer;
1733:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1734:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If this is a QoS1 publish, send the PUBACK before invoking the
1735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * callback. */
1736:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( xEventCallbackParams.u.xPublishData.xQos == eMQTTQoS1 )
1737:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1738:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Extract the packet identifier from the publish message
1739:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * to set the same in PUBACK message. */
1740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucPUBACKPacket[ mqttPUBACK_PACKET_ID_MSB_OFFSET ] = mqttbufferGET_DATA( pxMQTTContext->
1741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1742:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1743:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucPUBACKPacket[ mqttPUBACK_PACKET_ID_LSB_OFFSET ] = mqttbufferGET_DATA( pxMQTTContext->
1744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1746:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
1747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1748:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Send a PUBACK to the broker confirming the receipt
1749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * of the publish message. If we fail to send the PUBACK,
1750:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * we will receive the same publish message again. */
1751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( void ) prvSendData( pxMQTTContext, ucPUBACKPacket, ( uint32_t ) sizeof( ucPUBACKPacke
1752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the user chooses not to take the ownership of the buffer,
1755:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * return it back to the free buffer pool. */
1756:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( prvInvokeCallback( pxMQTTContext, &xEventCallbackParams ) == eMQTTFalse )
1757:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1758:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
1759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1760:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1761:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1763:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* A publish packet with QoS2 is considered malformed and
1764:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * we disconnect. */
1765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvResetMQTTContext( pxMQTTContext );
1766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1767:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform user about the malformed packet received. */
1768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
1769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
1770:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
1771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1772:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1775:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static MQTTBool_t prvInvokeCallback( MQTTContext_t * pxMQTTContext,
1776:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                      MQTTEventCallbackParams_t * pxEventCallbackParams )
1777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xBufferOwnershipTaken = eMQTTFalse;
1779:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1780:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1781:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTBool_t xSubscriptionCallbackInvoked = eMQTTFalse;
1782:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* In case of a publish message, try to invoke
1784:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * subscription specific callback first. If the
1785:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * user has not registered any specific callback
1786:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * for this topic, invoke the generic one. */
1787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pxEventCallbackParams->xEventType == eMQTTPublish )
1788:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xBufferOwnershipTaken = prvInvokeSubscriptionCallbacks( pxMQTTContext,
1790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                     &( pxEventCallbackParams->u.xPu
1791:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                     &( xSubscriptionCallbackInvoked
1792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1793:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1794:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Invoke generic callback, if any subscription callback was
1795:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * not invoked and the user has registered a generic one. Note
1796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * that since no callback was invoked, we are sure that the user
1797:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * has not got any chance to take the buffer ownership. That's
1798:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * why no check for xBufferOwnershipTaken. */
1799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ( xSubscriptionCallbackInvoked == eMQTTFalse ) && ( pxMQTTContext->pxCallback != NULL )
1800:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xBufferOwnershipTaken = pxMQTTContext->pxCallback( pxMQTTContext->pvCallbackContext, px
1802:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1803:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #else /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1804:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Invoke the generic callback, if the user has registered one. */
1805:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pxMQTTContext->pxCallback != NULL )
1806:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1807:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xBufferOwnershipTaken = pxMQTTContext->pxCallback( pxMQTTContext->pvCallbackContext, px
1808:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1809:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
1810:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xBufferOwnershipTaken;
1812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1814:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1815:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t * prvWriteString( uint8_t * pucDestination,
1816:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  const uint8_t * const pucLastByteInBuffer,
1817:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  const uint8_t * const pucString,
1818:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  uint16_t usStringLength )
1819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucEndAddress;
1821:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1822:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Check that writing the string and the two byte length into pucDestination
1823:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * won't overflow the buffer. */
1824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pucEndAddress = &( pucDestination[ mqttSTRLEN( usStringLength ) - ( uint16_t ) 1 ] );
1825:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1826:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Check the calculated end address against the last address of the Tx
1827:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * buffer. */
1828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pucEndAddress <= pucLastByteInBuffer ) /*lint !e946 Pointer comparison is ok as we are chec
1829:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         *pucDestination = ( uint8_t ) ( usStringLength >> mqttBITS_PER_BYTE );
1831:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pucDestination++;
1832:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         *pucDestination = ( uint8_t ) usStringLength;
1833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pucDestination++;
1834:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         memcpy( pucDestination, pucString, usStringLength );
1835:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1836:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1837:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1838:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Writing the string would have overflowed the Tx buffer. */
1839:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usStringLength = ( uint16_t ) 0;
1840:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1841:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return the address of the byte following the string just copied to the
1843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * buffer. */
1844:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return &( pucDestination[ usStringLength ] );
1845:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1846:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1847:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1848:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t prvSizeOfRemainingLength( uint32_t ulRemainingLength )
1849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucRemainingLengthFieldBytes = 0;
1851:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Ensure that given length is within the limits of what can be
1853:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * encoded in 4 bytes. */
1854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( ulRemainingLength <= mqttMAX_REMAINING_LENGTH_LENGTH );
1855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1856:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* The numbers below are taken from the MQTT protocol spec. */
1857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ulRemainingLength <= ( uint32_t ) mqttONE_BYTE_MAX_REMAINING_LENGTH )
1858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = 1;
1860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( ( ulRemainingLength > ( uint32_t ) mqttONE_BYTE_MAX_REMAINING_LENGTH ) && ( ulRemainin
1862:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = 2;
1864:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( ( ulRemainingLength > ( uint32_t ) mqttTWO_BYTES_MAX_REMAINING_LENGTH ) && ( ulRemaini
1866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = 3;
1868:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1869:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else if( ( ulRemainingLength > ( uint32_t ) mqttTHREE_BYTES_MAX_REMAINING_LENGTH ) && ( ulRemai
1870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = 4;
1872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1873:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1874:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1875:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Incorrect remaining length. */
1876:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1877:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1878:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return ucRemainingLengthFieldBytes;
1879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1881:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t prvEncodeRemainingLength( uint32_t ulRemainingLength,
1883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          uint8_t * const pucEncodedRemainingLength,
1884:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          const uint8_t * const pucLastByteInBuffer )
1885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
1886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucBytesWritten = 0, ucEncodedByte;
1887:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Ensure that given length is within the limits of what can be
1889:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * encoded in 4 bytes. */
1890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( ulRemainingLength <= mqttMAX_REMAINING_LENGTH_LENGTH );
1891:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1892:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     do
1893:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1894:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Extract 7 bits from the length. */
1895:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucEncodedByte = ( ( uint8_t ) ( ulRemainingLength ) & mqttLENGTH_BITMASK_REMAINING_LENGTH )
1896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulRemainingLength >>= mqttLENGTH_BITS_REMAINING_LENGTH;
1897:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1898:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If there is more data to encode, set the continuation
1899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * bit of this byte. */
1900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ulRemainingLength > ( uint32_t ) 0 )
1901:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucEncodedByte |= mqttREMAINING_LENGTH_CONTINUATION_BITMASK;
1903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1904:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1905:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Ensure that writing this byte will not result in buffer overflow. */
1906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttconfigASSERT( &( pucEncodedRemainingLength[ ucBytesWritten ] ) <= pucLastByteInBuffer )
1907:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1908:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( &( pucEncodedRemainingLength[ ucBytesWritten ] ) <= pucLastByteInBuffer ) /*lint !e946 
1909:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Write the encoded byte to the provided buffer. */
1911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pucEncodedRemainingLength[ ucBytesWritten ] = ucEncodedByte;
1912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucBytesWritten++;
1913:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1914:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
1915:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1916:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* There is not enough space in the provided buffer. Inform the caller
1917:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * by returning zero. */
1918:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucBytesWritten = 0;
1919:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             break;
1920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     } while( ulRemainingLength > ( uint32_t ) 0 );
1922:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1923:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return ucBytesWritten;
1924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
1925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1927:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** static uint8_t prvDecodeRemainingLength( const uint8_t * const pucEncodedRemainingLength,
1928:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          uint32_t * const pulRemainingLength )
1929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
  25              		.loc 1 1929 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
1930:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucBytesRead, ucDecodedByte;
1931:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t x, ulDecodedRemainingLength = 0, ulDecodedByte;
  30              		.loc 1 1931 0
  31 0000 0020A0E3 		mov	r2, #0
1929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucBytesRead, ucDecodedByte;
  32              		.loc 1 1929 0
  33 0004 10402DE9 		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
1932:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     for( x = 0; x < ( uint32_t ) mqttREMAINING_LENGTH_MAX_BYTES; x++ )
  37              		.loc 1 1933 0
  38 0008 0230A0E1 		mov	r3, r2
  39              	.LVL1:
  40              	.L3:
1934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1935:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Extract 7 lower bits from the current byte - These bits contain the
1936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * actual length information. */
1937:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucDecodedByte = ( pucEncodedRemainingLength[ x ] & mqttLENGTH_BITMASK_REMAINING_LENGTH );
1938:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1939:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Move the extracted bits to their correct location. */
1940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulDecodedByte = ( uint32_t ) ucDecodedByte;
1941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulDecodedByte <<= ( x * ( uint32_t ) mqttLENGTH_BITS_REMAINING_LENGTH );
  41              		.loc 1 1941 0
  42 000c 83E163E0 		rsb	lr, r3, r3, lsl #3
1937:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  43              		.loc 1 1937 0
  44 0010 03C0D0E7 		ldrb	ip, [r0, r3]	@ zero_extendqisi2
  45              	.LVL2:
  46 0014 013083E2 		add	r3, r3, #1
  47              	.LVL3:
1942:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1943:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Place the extracted bits in the decoded length. */
1944:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulDecodedRemainingLength |= ulDecodedByte;
1945:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1946:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the continuation bit is not set in the current byte, decoding is
1947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * complete. */
1948:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ( pucEncodedRemainingLength[ x ] & mqttREMAINING_LENGTH_CONTINUATION_BITMASK ) == ( uin
  48              		.loc 1 1948 0
  49 0018 80001CE3 		tst	ip, #128
1940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulDecodedByte <<= ( x * ( uint32_t ) mqttLENGTH_BITS_REMAINING_LENGTH );
  50              		.loc 1 1940 0
  51 001c 7F400CE2 		and	r4, ip, #127
1944:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  52              		.loc 1 1944 0
  53 0020 142E82E1 		orr	r2, r2, r4, lsl lr
  54              	.LVL4:
  55              		.loc 1 1948 0
  56 0024 0500000A 		beq	.L2
  57              	.LVL5:
1933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
  58              		.loc 1 1933 0 discriminator 2
  59 0028 040053E3 		cmp	r3, #4
  60 002c F6FFFF1A 		bne	.L3
1949:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1950:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             break;
1951:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1953:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1954:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( x >= ( uint32_t ) mqttREMAINING_LENGTH_MAX_BYTES )
1955:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* This would happen in case 4th byte also has continuation bit set.
1957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * This indicates a malformed encoded length and we inform the caller by
1958:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * returning 0. Note that the provided output buffer pulRemainingLength
1959:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * is not modified in this case. */
1960:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucBytesRead = 0;
  61              		.loc 1 1960 0
  62 0030 0000A0E3 		mov	r0, #0
  63              	.LVL6:
  64 0034 1080BDE8 		pop	{r4, pc}
  65              	.LVL7:
  66              	.L5:
1961:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1962:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
1963:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1964:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* The decoding is successful. Inform the user by returning the number
1965:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * of bytes used in decoding from given encoded length. */
1966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucBytesRead = ( uint8_t ) x + ( uint8_t ) 1;
1967:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the user has provided output buffer, return the decoded length
1969:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * in it. */
1970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pulRemainingLength != NULL )
1971:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1972:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             *pulRemainingLength = ulDecodedRemainingLength;
  67              		.loc 1 1972 0
  68 0038 002081E5 		str	r2, [r1]
  69 003c 1080BDE8 		pop	{r4, pc}
  70              	.LVL8:
  71              	.L2:
1970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
  72              		.loc 1 1970 0
  73 0040 000051E3 		cmp	r1, #0
1966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
  74              		.loc 1 1966 0
  75 0044 7300EFE6 		uxtb	r0, r3
  76              	.LVL9:
1970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
  77              		.loc 1 1970 0
  78 0048 FAFFFF1A 		bne	.L5
1973:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
1974:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
1975:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1976:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return ucBytesRead;
1977:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
  79              		.loc 1 1977 0
  80 004c 1080BDE8 		pop	{r4, pc}
  81              		.cfi_endproc
  82              	.LFE22:
  84              		.section	.text.prvGetTopicFilterType,"ax",%progbits
  85              		.align	2
  86              		.syntax unified
  87              		.arm
  88              		.fpu neon
  90              	prvGetTopicFilterType:
  91              	.LFB27:
1978:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
1979:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1980:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
1981:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1982:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTBool_t prvStoreSubscription( MQTTContext_t * pxMQTTContext,
1983:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             const uint8_t * const pucTopic,
1984:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint16_t usTopicLength,
1985:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             void * pvPublishCallbackContext,
1986:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             MQTTPublishCallback_t pxPublishCallback )
1987:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
1988:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
1989:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTBool_t xSubscriptionStored = eMQTTFalse;
1990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTTopicFilterType_t xTopicFilterType;
1991:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
1992:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Is there a free entry in the subscription manager? */
1993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pxMQTTContext->xSubscriptionManager.ulInUseSubscriptions < ( uint32_t ) mqttconfigSUBSC
1994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
1995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Check that the topic name is not too long. */
1996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( usTopicLength <= ( uint16_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_TOPIC_LENGTH )
1997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
1998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Ensure that the topic is not invalid. */
1999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xTopicFilterType = prvGetTopicFilterType( pucTopic, usTopicLength );
2000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2001:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( xTopicFilterType != eMQTTTopicFilterTypeInvalid )
2002:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2003:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Ensure that subscription manager does not contain
2004:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * an entry for the topic filter already. */
2005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     prvRemoveSubscription( pxMQTTContext, pucTopic, usTopicLength );
2006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2007:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Find a free entry in the subscription manager. */
2008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     for( x = 0; x < ( uint32_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_SUBSCRIPTIONS; 
2009:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         if( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse == eMQTT
2011:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
2012:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Found a free entry. Mark it as used and
2013:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                              * store the subscription. */
2014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse = eMQTTT
2015:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2016:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Store the subscription. */
2017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             memcpy( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].ucTopic
2018:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     pucTopic,
2019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     usTopicLength );
2020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].usTopicFilterLe
2021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].pvPublishCallba
2022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].pxPublishCallba
2023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xTopicFilterTyp
2024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Increase the in-use subscription entries count. */
2026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.ulInUseSubscriptions += ( uint32_t 
2027:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2028:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Inform the user that the subscription was stored
2029:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                              * successfully. */
2030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             xSubscriptionStored = eMQTTTrue;
2031:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2032:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Done. */
2033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             break;
2034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         }
2035:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2036:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
2038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* The provided topic filter is invalid. */
2040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttconfigDEBUG_LOG( ( "WARN: The topic filter is invalid.\r\n" ) );
2041:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2042:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
2044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2045:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Topic too long. */
2046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "WARN: Topic is too long and cannot be stored in the subscri
2047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2048:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2049:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
2050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2051:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Subscription Manager full. */
2052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttconfigDEBUG_LOG( ( "WARN: Subscription Manager full! No space left to store new sub
2053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2054:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2055:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         return xSubscriptionStored;
2056:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2058:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2059:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2061:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2063:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static void prvRemoveSubscription( MQTTContext_t * pxMQTTContext,
2064:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        const uint8_t * const pucTopic,
2065:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        uint16_t usTopicLength )
2066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2067:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
2068:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2069:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Iterate over all the subscription entries in
2070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * the subscription manager and try to find the
2071:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * matching one. */
2072:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         for( x = 0; x < ( uint32_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_SUBSCRIPTIONS; x++ )
2073:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse == eMQTTTrue ) &&
2075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].usTopicFilterLength == us
2076:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2077:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( memcmp( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].ucTopicFilter, 
2078:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2079:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Found a matching subscription, mark it as free. */
2080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse = eMQTTFalse;
2081:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2082:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Reduce the count of in-use subscription entries
2083:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * in the subscription manager. */
2084:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxMQTTContext->xSubscriptionManager.ulInUseSubscriptions -= ( uint32_t ) 1;
2085:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Done. */
2087:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2088:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2090:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2091:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2092:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2093:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2094:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2095:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2096:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2097:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2098:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static void prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer( MQTTContext_t * pxMQTTContext
2099:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                       MQTTBufferHandle_t xBuffer )
2100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2101:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint8_t ucRemaingingLengthFieldBytes;
2102:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint16_t usTopicLength;
2103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2104:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Get the number of bytes "Remaining Length" field spans
2105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * from the subscribe or unsubscribe Tx buffer. */
2106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemaingingLengthFieldBytes = prvDecodeRemainingLength( &( mqttbufferGET_DATA( xBuffer )[ 
2107:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* We must be able to successfully decode the remaining length
2109:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * as this MQTT packet was constructed by us. */
2110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttconfigASSERT( ucRemaingingLengthFieldBytes > 0 );
2111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2112:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Read the topic length which precedes the topic name
2113:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * in the MQTT subscribe packet. Note that the topic
2114:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * happens to be at the same offset in both subscribe
2115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * and unsubscribe message and therefore there is no need
2116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * to repeat the same code with different #defines. */
2117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usTopicLength = ( uint8_t ) ( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttSUBSCRI
2118:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                         ucRemaingin
2119:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usTopicLength <<= mqttBITS_PER_BYTE;
2120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usTopicLength |= ( uint8_t ) ( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( ( mqttSUBS
2121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                          ucRemaingi
2122:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2123:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Remove the subscription entry from the subscription manager. */
2124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvRemoveSubscription( pxMQTTContext,
2125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( ( mqttSUBSCRIBE
2126:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                usTopicLength );
2127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2130:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2132:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2133:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTBool_t prvInvokeSubscriptionCallbacks( MQTTContext_t * pxMQTTContext,
2134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       const MQTTPublishData_t * pxPublishData,
2135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       MQTTBool_t * pxSubscriptionCallbackInvoked )
2136:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTBool_t xBufferOwnershipTaken = eMQTTFalse;
2138:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTSubscription_t * pxSubscription;
2139:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
2140:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2141:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Set the output parameter to eMQTTFalse. It will
2142:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * be set to eMQTTTrue if any callback is invoked. */
2143:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         *pxSubscriptionCallbackInvoked = eMQTTFalse;
2144:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2145:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Iterate over the subscription entries containing topic filters
2146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * without any wild-cards and invoke the registered callbacks. */
2147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         for( x = 0; x < ( uint32_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_SUBSCRIPTIONS; x++ )
2148:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse == eMQTTTrue ) &&
2150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xTopicFilterType == eMQTT
2151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].usTopicFilterLength == px
2152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( memcmp( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].ucTopicFilter, 
2154:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2155:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Found a matching subscription. */
2156:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxSubscription = &( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ] );
2157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2158:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If a callback is registered with the subscription,
2159:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * invoke it. */
2160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( pxSubscription->pxPublishCallback != NULL )
2161:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* Note that a callback was invoked. */
2163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         *pxSubscriptionCallbackInvoked = eMQTTTrue;
2164:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2165:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* Invoke callback. */
2166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xBufferOwnershipTaken = pxSubscription->pxPublishCallback( pxSubscription->
2167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2168:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* If the user takes the buffer ownership, do
2169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * not invoke any other callbacks. */
2170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         if( xBufferOwnershipTaken == eMQTTTrue )
2171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
2172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             break;
2173:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         }
2174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2175:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2176:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2178:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2179:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the user has not taken the buffer ownership yet (which can
2180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * happen if there is no exact matching entry in the subscription
2181:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * manager or the user does not take the ownership in the callback),
2182:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * iterate over the subscription entries containing topic filters
2183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * with wild-cards and invoke the registered callbacks for the ones
2184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * which match the topic. */
2185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( xBufferOwnershipTaken == eMQTTFalse )
2186:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             for( x = 0; x < ( uint32_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_SUBSCRIPTIONS; x++ )
2188:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse == eMQTTTrue )
2190:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xTopicFilterType == e
2191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( prvDoesTopicMatchTopicFilter( pxPublishData->pucTopic,
2193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       pxPublishData->usTopicLength,
2194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       pxMQTTContext->xSubscriptionManager.xSubscrip
2195:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       pxMQTTContext->xSubscriptionManager.xSubscrip
2196:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2197:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* Found a matching subscription. */
2198:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxSubscription = &( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ]
2199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2200:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* If a callback is registered with the subscription,
2201:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * invoke it. */
2202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         if( pxSubscription->pxPublishCallback != NULL )
2203:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
2204:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Note that a callback was invoked. */
2205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             *pxSubscriptionCallbackInvoked = eMQTTTrue;
2206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2207:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* Invoke callback. */
2208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             xBufferOwnershipTaken = pxSubscription->pxPublishCallback( pxSubscripti
2209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2210:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             /* If the user takes the buffer ownership, do
2211:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                              * not invoke any other callbacks. */
2212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             if( xBufferOwnershipTaken == eMQTTTrue )
2213:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             {
2214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                 break;
2215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             }
2216:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         }
2217:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2218:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2222:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return whether or not the user has taken the
2223:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * ownership of the MQTT buffer. */
2224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         return xBufferOwnershipTaken;
2225:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2227:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2231:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTTopicFilterType_t prvGetTopicFilterType( const uint8_t * const pucTopicFilter,
2233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                         uint16_t usTopicFilterLength )
2234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
  92              		.loc 1 2234 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              	.LVL10:
  97 0000 30402DE9 		push	{r4, r5, lr}
  98              		.cfi_def_cfa_offset 12
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 5, -8
 101              		.cfi_offset 14, -4
 102              		.loc 1 2234 0
 103 0004 00C0A0E1 		mov	ip, r0
 104 0008 0020A0E1 		mov	r2, r0
2235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTTopicFilterType_t xTopicFilterType = eMQTTTopicFilterTypeSimple;
2236:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint16_t x;
2237:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2238:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Iterate over the topic filter. */
2239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         for( x = 0; x < usTopicFilterLength; x++ )
 105              		.loc 1 2239 0
 106 000c 0030A0E3 		mov	r3, #0
2235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTTopicFilterType_t xTopicFilterType = eMQTTTopicFilterTypeSimple;
 107              		.loc 1 2235 0
 108 0010 0100A0E3 		mov	r0, #1
 109              	.LVL11:
2240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( pucTopicFilter[ x ] == ( uint8_t ) '+' )
2242:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2243:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* The topic filter contains wild-card. */
2244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xTopicFilterType = eMQTTTopicFilterTypeWildCard;
2245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Either '+' should be the first character or the
2247:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * preceding character should be '/'. */
2248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ( x == ( uint16_t ) 0 ) || ( pucTopicFilter[ x - ( uint16_t ) 1 ] == ( uint8_t 
2249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2250:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Either '+' should be the last character or the
2251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * succeeding character should be '/'. */
2252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( ( x == usTopicFilterLength - ( uint16_t ) 1 ) || ( pucTopicFilter[ x + ( ui
 110              		.loc 1 2252 0
 111 0014 015041E2 		sub	r5, r1, #1
 112              	.LVL12:
 113              	.L10:
 114 0018 73E0FFE6 		uxth	lr, r3
 115              	.LVL13:
2239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 116              		.loc 1 2239 0 discriminator 1
 117 001c 01005EE1 		cmp	lr, r1
 118 0020 0000003A 		bcc	.L16
 119 0024 3080BDE8 		pop	{r4, r5, pc}
 120              	.L16:
2241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 121              		.loc 1 2241 0
 122 0028 0140D2E4 		ldrb	r4, [r2], #1	@ zero_extendqisi2
 123 002c 2B0054E3 		cmp	r4, #43
 124 0030 0B00001A 		bne	.L11
 125              	.LVL14:
2248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 126              		.loc 1 2248 0
 127 0034 00005EE3 		cmp	lr, #0
 128 0038 0200000A 		beq	.L12
2248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 129              		.loc 1 2248 0 is_stmt 0 discriminator 1
 130 003c 020052E5 		ldrb	r0, [r2, #-2]	@ zero_extendqisi2
 131 0040 2F0050E3 		cmp	r0, #47
 132 0044 0400001A 		bne	.L20
 133              	.L12:
 134              		.loc 1 2252 0 is_stmt 1
 135 0048 030055E1 		cmp	r5, r3
 136 004c 1200000A 		beq	.L19
 137              		.loc 1 2252 0 is_stmt 0 discriminator 1
 138 0050 0000D2E5 		ldrb	r0, [r2]	@ zero_extendqisi2
 139 0054 2F0050E3 		cmp	r0, #47
 140 0058 0F00000A 		beq	.L19
 141              	.LVL15:
 142              	.L20:
2253:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2254:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* This '+' character in the given topic
2255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * filter is valid. */
2256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         continue;
2257:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2258:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else
2259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* If '+' is not the last character and the succeeding
2261:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * character is not '/', then it is not a valid topic
2262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * filter. */
2263:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xTopicFilterType = eMQTTTopicFilterTypeInvalid;
2264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         break;
2265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2267:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
2268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If '+' is not the first character and the preceding
2270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * character is not '/', then it is not a valid topic
2271:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * filter. */
2272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xTopicFilterType = eMQTTTopicFilterTypeInvalid;
2273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2275:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else if( pucTopicFilter[ x ] == ( uint8_t ) '#' )
2277:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2278:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* The topic filter contains wild-card. */
2279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xTopicFilterType = eMQTTTopicFilterTypeWildCard;
2280:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Either '#' should be the first character or the
2282:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * preceding character must be '/'. */
2283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ( x == ( uint16_t ) 0 ) || ( pucTopicFilter[ x - ( uint16_t ) 1 ] == ( uint8_t 
2284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2285:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* '#' must be the last character in the topic
2286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * string. */
2287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( x == usTopicFilterLength - ( uint16_t ) 1 )
2288:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* This '#' character in the given topic filter
2290:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * is valid. */
2291:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         break;
2292:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else
2294:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2295:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* If '#' is not the last character, then it is
2296:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * not a valid topic filter. */
2297:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         xTopicFilterType = eMQTTTopicFilterTypeInvalid;
 143              		.loc 1 2297 0 is_stmt 1
 144 005c 0000A0E3 		mov	r0, #0
 145              	.LVL16:
2298:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         break;
2299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2300:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
2302:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If '#' is not the first character and the preceding
2304:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * character is not '/', then it is not a valid topic
2305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * filter. */
2306:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xTopicFilterType = eMQTTTopicFilterTypeInvalid;
2307:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
2311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2312:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Any character other than '+' and '#' is okay. */
2313:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2315:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         return xTopicFilterType;
2317:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 146              		.loc 1 2317 0
 147 0060 3080BDE8 		pop	{r4, r5, pc}
 148              	.LVL17:
 149              	.L11:
2276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 150              		.loc 1 2276 0
 151 0064 230054E3 		cmp	r4, #35
 152 0068 0C00001A 		bne	.L14
 153              	.LVL18:
2283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 154              		.loc 1 2283 0
 155 006c 00005EE3 		cmp	lr, #0
 156 0070 0300000A 		beq	.L15
2283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 157              		.loc 1 2283 0 is_stmt 0 discriminator 1
 158 0074 03C08CE0 		add	ip, ip, r3
 159              	.LVL19:
 160 0078 01205CE5 		ldrb	r2, [ip, #-1]	@ zero_extendqisi2
 161 007c 2F0052E3 		cmp	r2, #47
 162 0080 F5FFFF1A 		bne	.L20
 163              	.L15:
2287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 164              		.loc 1 2287 0 is_stmt 1
 165 0084 7330FFE6 		uxth	r3, r3
 166 0088 010041E2 		sub	r0, r1, #1
2279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 167              		.loc 1 2279 0
 168 008c 000053E1 		cmp	r3, r0
 169 0090 0200A003 		moveq	r0, #2
 170 0094 0000A013 		movne	r0, #0
 171 0098 3080BDE8 		pop	{r4, r5, pc}
 172              	.LVL20:
 173              	.L19:
2244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 174              		.loc 1 2244 0
 175 009c 0200A0E3 		mov	r0, #2
 176              	.LVL21:
 177              	.L14:
 178 00a0 013083E2 		add	r3, r3, #1
 179              	.LVL22:
 180 00a4 DBFFFFEA 		b	.L10
 181              		.cfi_endproc
 182              	.LFE27:
 184              		.section	.text.prvDoesTopicMatchTopicFilter,"ax",%progbits
 185              		.align	2
 186              		.syntax unified
 187              		.arm
 188              		.fpu neon
 190              	prvDoesTopicMatchTopicFilter:
 191              	.LFB28:
2318:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2319:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2321:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2324:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static MQTTBool_t prvDoesTopicMatchTopicFilter( const uint8_t * const pucTopic,
2325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                     uint16_t usTopicLength,
2326:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                     const uint8_t * const pucTopicFilter,
2327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                     uint16_t usTopicFilterLength )
2328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 192              		.loc 1 2328 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL23:
 197 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 198              		.cfi_def_cfa_offset 32
 199              		.cfi_offset 4, -32
 200              		.cfi_offset 5, -28
 201              		.cfi_offset 6, -24
 202              		.cfi_offset 7, -20
 203              		.cfi_offset 8, -16
 204              		.cfi_offset 9, -12
 205              		.cfi_offset 10, -8
 206              		.cfi_offset 14, -4
2329:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTBool_t xTopicMatchesTopicFilter = eMQTTFalse;
2330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint16_t usTopicIndex = 0, usTopicFilterIndex = 0;
2331:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         while( ( usTopicIndex < usTopicLength ) && ( usTopicFilterIndex < usTopicFilterLength ) )
 207              		.loc 1 2332 0
 208 0004 00E0A0E3 		mov	lr, #0
2330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 209              		.loc 1 2330 0
 210 0008 0EC0A0E1 		mov	ip, lr
2333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Does the character in the topic string matches the
2335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * corresponding one in the topic filter string? */
2336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( pucTopic[ usTopicIndex ] == pucTopicFilter[ usTopicFilterIndex ] )
2337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Handle special corner cases as documented by
2339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * the MQTT protocol spec. */
2340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Filter of type "sport/#" also matches the singular
2342:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * "sport" since # includes the parent level. */
2343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ( usTopicIndex == usTopicLength - ( uint16_t ) 1 ) &&
 211              		.loc 1 2343 0
 212 000c 019041E2 		sub	r9, r1, #1
2344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( usTopicFilterIndex == usTopicFilterLength - ( uint16_t ) 3 ) &&
 213              		.loc 1 2344 0
 214 0010 037043E2 		sub	r7, r3, #3
2345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 1 ] == ( uint8_t ) '/' ) &&
2346:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 2 ] == ( uint8_t ) '#' ) )
2347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2348:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xTopicMatchesTopicFilter = eMQTTTrue;
2349:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2350:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2351:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2352:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Filter of type "sport/+" also matches the "sport/"
2353:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * but not "sport". */
2354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( ( usTopicIndex == usTopicLength - ( uint16_t ) 1 ) &&
2355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( usTopicFilterIndex == usTopicFilterLength - ( uint16_t ) 2 ) &&
 215              		.loc 1 2355 0
 216 0014 028043E2 		sub	r8, r3, #2
 217              	.LVL24:
 218              	.L30:
 219 0018 7E40FFE6 		uxth	r4, lr
 220              	.LVL25:
2332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 221              		.loc 1 2332 0
 222 001c 01005CE1 		cmp	ip, r1
 223 0020 03005431 		cmpcc	r4, r3
 224 0024 2700002A 		bcs	.L39
 225 0028 7E60FFE6 		uxth	r6, lr
2336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 226              		.loc 1 2336 0
 227 002c 0CA0D0E7 		ldrb	r10, [r0, ip]	@ zero_extendqisi2
 228 0030 0650D2E7 		ldrb	r5, [r2, r6]	@ zero_extendqisi2
 229 0034 05005AE1 		cmp	r10, r5
 230 0038 1200001A 		bne	.L31
2343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( usTopicFilterIndex == usTopicFilterLength - ( uint16_t ) 3 ) &&
 231              		.loc 1 2343 0
 232 003c 09005CE1 		cmp	ip, r9
 233 0040 2700001A 		bne	.L32
2343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( usTopicFilterIndex == usTopicFilterLength - ( uint16_t ) 3 ) &&
 234              		.loc 1 2343 0 is_stmt 0 discriminator 1
 235 0044 070056E1 		cmp	r6, r7
 236 0048 0600001A 		bne	.L33
2345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 2 ] == ( uint8_t ) '#' ) )
 237              		.loc 1 2345 0 is_stmt 1
 238 004c 074082E0 		add	r4, r2, r7
 239              	.LVL26:
2344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 1 ] == ( uint8_t ) '/' ) &&
 240              		.loc 1 2344 0
 241 0050 0150D4E5 		ldrb	r5, [r4, #1]	@ zero_extendqisi2
 242 0054 2F0055E3 		cmp	r5, #47
 243 0058 0200001A 		bne	.L33
2345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 2 ] == ( uint8_t ) '#' ) )
 244              		.loc 1 2345 0
 245 005c 0240D4E5 		ldrb	r4, [r4, #2]	@ zero_extendqisi2
 246 0060 230054E3 		cmp	r4, #35
 247 0064 0500000A 		beq	.L44
 248              	.L33:
2354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( usTopicFilterIndex == usTopicFilterLength - ( uint16_t ) 2 ) &&
 249              		.loc 1 2354 0 discriminator 1
 250 0068 060058E1 		cmp	r8, r6
 251 006c 1C00001A 		bne	.L32
2356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 1 ] == ( uint8_t ) '+' ) )
 252              		.loc 1 2356 0
 253 0070 084082E0 		add	r4, r2, r8
2355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pucTopicFilter[ usTopicFilterIndex + ( uint16_t ) 1 ] == ( uint8_t ) '+' ) )
 254              		.loc 1 2355 0
 255 0074 0140D4E5 		ldrb	r4, [r4, #1]	@ zero_extendqisi2
 256 0078 2B0054E3 		cmp	r4, #43
 257 007c 1800001A 		bne	.L32
 258              	.L44:
 259 0080 0100A0E3 		mov	r0, #1
 260              	.LVL27:
 261 0084 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 262              	.LVL28:
 263              	.L31:
2357:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2358:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xTopicMatchesTopicFilter = eMQTTTrue;
2359:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
2363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2364:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( pucTopicFilter[ usTopicFilterIndex ] == ( uint8_t ) '+' )
 264              		.loc 1 2364 0
 265 0088 2B0055E3 		cmp	r5, #43
 266 008c 0B00001A 		bne	.L35
 267 0090 01404CE2 		sub	r4, ip, #1
 268              	.LVL29:
 269 0094 044080E0 		add	r4, r0, r4
 270              	.L36:
2365:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Consume the current topic level which is until
2367:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * we encounter '/' in the topic string or the end
2368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * of the topic string. */
2369:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     while( usTopicIndex < usTopicLength && pucTopic[ usTopicIndex ] != ( uint8_t ) 
 271              		.loc 1 2369 0
 272 0098 01005CE1 		cmp	ip, r1
 273 009c 0200002A 		bcs	.L37
 274              		.loc 1 2369 0 is_stmt 0 discriminator 1
 275 00a0 0150F4E5 		ldrb	r5, [r4, #1]!	@ zero_extendqisi2
 276 00a4 2F0055E3 		cmp	r5, #47
 277 00a8 0100001A 		bne	.L38
 278              	.LVL30:
 279              	.L37:
 280 00ac 01E08EE2 		add	lr, lr, #1
 281 00b0 D8FFFFEA 		b	.L30
 282              	.LVL31:
 283              	.L38:
2370:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
2371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         usTopicIndex++;
 284              		.loc 1 2371 0 is_stmt 1
 285 00b4 01C08CE2 		add	ip, ip, #1
 286              	.LVL32:
 287 00b8 7CC0FFE6 		uxth	ip, ip
 288              	.LVL33:
 289 00bc F5FFFFEA 		b	.L36
 290              	.LVL34:
 291              	.L35:
2372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
2373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2374:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Since we are already at the '/' character or at
2375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * the end in the topic string, increment the topic
2376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * filter index here and skip the index increments
2377:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * at the end of the loop. */
2378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     usTopicFilterIndex++;
2379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     continue;
2380:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2381:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else if( pucTopicFilter[ usTopicFilterIndex ] == ( uint8_t ) '#' )
 292              		.loc 1 2381 0
 293 00c0 230055E3 		cmp	r5, #35
 294 00c4 EDFFFF0A 		beq	.L44
 295              	.L39:
2382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Since it is assumed that the given topic filter
2384:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * is a valid topic filter, this must be the last
2385:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * character in it. The rest of the topic string
2386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * matches this multi-level wild-card and hence this
2387:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * is a match. */
2388:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xTopicMatchesTopicFilter = eMQTTTrue;
2389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2390:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
2392:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Any character mismatch other than '+' or
2394:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * '#' means the topic does not match the
2395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * given filter. */
2396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
2397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Increment indexes. */
2401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usTopicIndex++;
2402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usTopicFilterIndex++;
2403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2405:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the topic is not matched yet and both topic
2406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * and topic filter strings are consumed, it's a match
2407:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * else we would have broken the loop in between.*/
2408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ( xTopicMatchesTopicFilter == eMQTTFalse ) &&
 296              		.loc 1 2408 0
 297 00c8 00009CE2 		adds	r0, ip, #0
 298              	.LVL35:
 299 00cc 0100A013 		movne	r0, #1
 300 00d0 01005CE1 		cmp	ip, r1
 301 00d4 0000A033 		movcc	r0, #0
 302 00d8 000050E3 		cmp	r0, #0
 303 00dc 0300001A 		bne	.L41
2409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( ( usTopicIndex > ( uint16_t ) 0 ) && ( usTopicIndex >= usTopicLength ) ) &&
2410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( ( usTopicFilterIndex > ( uint16_t ) 0 ) && ( usTopicFilterIndex >= usTopicFilterLengt
2411:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xTopicMatchesTopicFilter = eMQTTTrue;
2413:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2414:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the result. */
2416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         return xTopicMatchesTopicFilter;
2417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 304              		.loc 1 2417 0
 305 00e0 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 306              	.LVL36:
 307              	.L32:
2401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usTopicFilterIndex++;
 308              		.loc 1 2401 0
 309 00e4 01C08CE2 		add	ip, ip, #1
 310              	.LVL37:
 311 00e8 7CC0FFE6 		uxth	ip, ip
 312              	.LVL38:
 313 00ec EEFFFFEA 		b	.L37
 314              	.LVL39:
 315              	.L41:
 316 00f0 000094E2 		adds	r0, r4, #0
 317 00f4 0100A013 		movne	r0, #1
 318 00f8 030054E1 		cmp	r4, r3
 319 00fc 0000A033 		movcc	r0, #0
 320 0100 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 321              		.cfi_endproc
 322              	.LFE28:
 324              		.section	.text.prvWriteString,"ax",%progbits
 325              		.align	2
 326              		.syntax unified
 327              		.arm
 328              		.fpu neon
 330              	prvWriteString:
 331              	.LFB19:
1819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucEndAddress;
 332              		.loc 1 1819 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              	.LVL40:
 337 0000 70402DE9 		push	{r4, r5, r6, lr}
 338              		.cfi_def_cfa_offset 16
 339              		.cfi_offset 4, -16
 340              		.cfi_offset 5, -12
 341              		.cfi_offset 6, -8
 342              		.cfi_offset 14, -4
1819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucEndAddress;
 343              		.loc 1 1819 0
 344 0004 0350A0E1 		mov	r5, r3
1824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 345              		.loc 1 1824 0
 346 0008 013083E2 		add	r3, r3, #1
 347              	.LVL41:
1819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucEndAddress;
 348              		.loc 1 1819 0
 349 000c 0040A0E1 		mov	r4, r0
1824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 350              		.loc 1 1824 0
 351 0010 033080E0 		add	r3, r0, r3
1828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 352              		.loc 1 1828 0
 353 0014 030051E1 		cmp	r1, r3
1839:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 354              		.loc 1 1839 0
 355 0018 0050A033 		movcc	r5, #0
 356              	.LVL42:
1828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 357              		.loc 1 1828 0
 358 001c 0800003A 		bcc	.L48
1830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pucDestination++;
 359              		.loc 1 1830 0
 360 0020 2534A0E1 		lsr	r3, r5, #8
 361 0024 0200A0E1 		mov	r0, r2
 362              	.LVL43:
1832:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pucDestination++;
 363              		.loc 1 1832 0
 364 0028 0150C4E5 		strb	r5, [r4, #1]
1833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         memcpy( pucDestination, pucString, usStringLength );
 365              		.loc 1 1833 0
 366 002c 024084E2 		add	r4, r4, #2
 367              	.LVL44:
1830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pucDestination++;
 368              		.loc 1 1830 0
 369 0030 023044E5 		strb	r3, [r4, #-2]
 370              	.LVL45:
1834:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 371              		.loc 1 1834 0
 372 0034 0010A0E1 		mov	r1, r0
 373              	.LVL46:
 374 0038 0520A0E1 		mov	r2, r5
 375              	.LVL47:
 376 003c 0400A0E1 		mov	r0, r4
 377              	.LVL48:
 378 0040 FEFFFFEB 		bl	memcpy
 379              	.LVL49:
 380              	.L48:
1845:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 381              		.loc 1 1845 0
 382 0044 050084E0 		add	r0, r4, r5
 383 0048 7080BDE8 		pop	{r4, r5, r6, pc}
 384              		.cfi_endproc
 385              	.LFE19:
 387              		.section	.text.prvInvokeCallback,"ax",%progbits
 388              		.align	2
 389              		.syntax unified
 390              		.arm
 391              		.fpu neon
 393              	prvInvokeCallback:
 394              	.LFB18:
1777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xBufferOwnershipTaken = eMQTTFalse;
 395              		.loc 1 1777 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LVL50:
 400 0000 F74F2DE9 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 401              		.cfi_def_cfa_offset 48
 402              		.cfi_offset 4, -36
 403              		.cfi_offset 5, -32
 404              		.cfi_offset 6, -28
 405              		.cfi_offset 7, -24
 406              		.cfi_offset 8, -20
 407              		.cfi_offset 9, -16
 408              		.cfi_offset 10, -12
 409              		.cfi_offset 11, -8
 410              		.cfi_offset 14, -4
1777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xBufferOwnershipTaken = eMQTTFalse;
 411              		.loc 1 1777 0
 412 0004 0090A0E1 		mov	r9, r0
1787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 413              		.loc 1 1787 0
 414 0008 0080D1E5 		ldrb	r8, [r1]	@ zero_extendqisi2
1777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBool_t xBufferOwnershipTaken = eMQTTFalse;
 415              		.loc 1 1777 0
 416 000c 0170A0E1 		mov	r7, r1
1787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 417              		.loc 1 1787 0
 418 0010 000058E3 		cmp	r8, #0
1778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 419              		.loc 1 1778 0
 420 0014 0060A013 		movne	r6, #0
1787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 421              		.loc 1 1787 0
 422 0018 4500001A 		bne	.L52
 423 001c 585080E2 		add	r5, r0, #88
 424 0020 4DAE80E2 		add	r10, r0, #1232
 425 0024 08A08AE2 		add	r10, r10, #8
1790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                     &( xSubscriptionCallbackInvoked
 426              		.loc 1 1790 0
 427 0028 0540A0E1 		mov	r4, r5
 428              	.LBB4:
 429              	.LBB5:
2137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         MQTTSubscription_t * pxSubscription;
 430              		.loc 1 2137 0
 431 002c 0860A0E1 		mov	r6, r8
 432              	.LBE5:
 433              	.LBE4:
1790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                     &( xSubscriptionCallbackInvoked
 434              		.loc 1 1790 0
 435 0030 043081E2 		add	r3, r1, #4
 436 0034 04308DE5 		str	r3, [sp, #4]
 437              	.LVL51:
 438              	.L55:
 439              	.LBB8:
 440              	.LBB6:
2149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xTopicFilterType == eMQTT
 441              		.loc 1 2149 0
 442 0038 8C20D4E5 		ldrb	r2, [r4, #140]	@ zero_extendqisi2
 443 003c 010052E3 		cmp	r2, #1
 444 0040 1900001A 		bne	.L53
 445 0044 8DB0D4E5 		ldrb	fp, [r4, #141]	@ zero_extendqisi2
 446 0048 01005BE3 		cmp	fp, #1
 447 004c 1600001A 		bne	.L53
2151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 448              		.loc 1 2151 0
 449 0050 B018D4E1 		ldrh	r1, [r4, #128]
2150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].usTopicFilterLength == px
 450              		.loc 1 2150 0
 451 0054 BC20D7E1 		ldrh	r2, [r7, #12]
 452 0058 010052E1 		cmp	r2, r1
 453 005c 1200001A 		bne	.L53
2153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 454              		.loc 1 2153 0
 455 0060 081097E5 		ldr	r1, [r7, #8]
 456 0064 0400A0E1 		mov	r0, r4
 457 0068 FEFFFFEB 		bl	memcmp
 458              	.LVL52:
 459 006c 000050E3 		cmp	r0, #0
 460 0070 0D00001A 		bne	.L53
 461              	.LVL53:
2160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 462              		.loc 1 2160 0
 463 0074 882094E5 		ldr	r2, [r4, #136]
 464 0078 000052E3 		cmp	r2, #0
 465 007c 0A00000A 		beq	.L53
 466              	.LVL54:
2166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 467              		.loc 1 2166 0
 468 0080 04109DE5 		ldr	r1, [sp, #4]
 469 0084 840094E5 		ldr	r0, [r4, #132]
 470 0088 32FF2FE1 		blx	r2
 471              	.LVL55:
2170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
 472              		.loc 1 2170 0
 473 008c 010050E3 		cmp	r0, #1
2166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 474              		.loc 1 2166 0
 475 0090 0060A0E1 		mov	r6, r0
 476              	.LVL56:
2170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
 477              		.loc 1 2170 0
 478 0094 0300001A 		bne	.L61
 479              	.L58:
 480              	.LBE6:
 481              	.LBE8:
1778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 482              		.loc 1 1778 0
 483 0098 0160A0E3 		mov	r6, #1
 484              	.LVL57:
 485              	.L54:
1812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 486              		.loc 1 1812 0
 487 009c 0600A0E1 		mov	r0, r6
 488 00a0 0CD08DE2 		add	sp, sp, #12
 489              		.cfi_remember_state
 490              		.cfi_def_cfa_offset 36
 491              		@ sp needed
 492 00a4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 493              	.LVL58:
 494              	.L61:
 495              		.cfi_restore_state
 496              	.LBB9:
 497              	.LBB7:
2163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 498              		.loc 1 2163 0
 499 00a8 0B80A0E1 		mov	r8, fp
 500              	.LVL59:
 501              	.L53:
 502 00ac 904084E2 		add	r4, r4, #144
2147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 503              		.loc 1 2147 0
 504 00b0 04005AE1 		cmp	r10, r4
 505 00b4 DFFFFF1A 		bne	.L55
 506              	.LVL60:
2185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 507              		.loc 1 2185 0
 508 00b8 000056E3 		cmp	r6, #0
 509 00bc 1A00001A 		bne	.L56
 510              	.LVL61:
 511              	.L59:
2189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xTopicFilterType == e
 512              		.loc 1 2189 0
 513 00c0 8C30D5E5 		ldrb	r3, [r5, #140]	@ zero_extendqisi2
 514 00c4 010053E3 		cmp	r3, #1
 515 00c8 1400001A 		bne	.L57
 516 00cc 8D30D5E5 		ldrb	r3, [r5, #141]	@ zero_extendqisi2
 517 00d0 020053E3 		cmp	r3, #2
 518 00d4 1100001A 		bne	.L57
2192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                       pxPublishData->usTopicLength,
 519              		.loc 1 2192 0
 520 00d8 B038D5E1 		ldrh	r3, [r5, #128]
 521 00dc 0520A0E1 		mov	r2, r5
 522 00e0 BC10D7E1 		ldrh	r1, [r7, #12]
 523 00e4 080097E5 		ldr	r0, [r7, #8]
 524 00e8 FEFFFFEB 		bl	prvDoesTopicMatchTopicFilter
 525              	.LVL62:
 526 00ec 010050E3 		cmp	r0, #1
 527 00f0 00B0A0E1 		mov	fp, r0
 528 00f4 0900001A 		bne	.L57
2202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
 529              		.loc 1 2202 0
 530 00f8 883095E5 		ldr	r3, [r5, #136]
 531 00fc 000053E3 		cmp	r3, #0
 532 0100 0600000A 		beq	.L57
 533              	.LVL63:
2208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 534              		.loc 1 2208 0
 535 0104 04109DE5 		ldr	r1, [sp, #4]
 536 0108 840095E5 		ldr	r0, [r5, #132]
 537 010c 33FF2FE1 		blx	r3
 538              	.LVL64:
2212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             {
 539              		.loc 1 2212 0
 540 0110 010050E3 		cmp	r0, #1
2208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 541              		.loc 1 2208 0
 542 0114 0060A0E1 		mov	r6, r0
 543              	.LVL65:
2212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             {
 544              		.loc 1 2212 0
 545 0118 DEFFFF0A 		beq	.L58
2205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 546              		.loc 1 2205 0
 547 011c 0B80A0E1 		mov	r8, fp
 548              	.LVL66:
 549              	.L57:
 550 0120 905085E2 		add	r5, r5, #144
2187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 551              		.loc 1 2187 0
 552 0124 040055E1 		cmp	r5, r4
 553 0128 E4FFFF1A 		bne	.L59
 554              	.L56:
 555              	.LVL67:
 556              	.LBE7:
 557              	.LBE9:
1799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 558              		.loc 1 1799 0
 559 012c 000058E3 		cmp	r8, #0
 560 0130 D9FFFF1A 		bne	.L54
 561              	.LVL68:
 562              	.L52:
1799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 563              		.loc 1 1799 0 is_stmt 0 discriminator 1
 564 0134 243099E5 		ldr	r3, [r9, #36]
 565 0138 000053E3 		cmp	r3, #0
 566 013c D6FFFF0A 		beq	.L54
1801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 567              		.loc 1 1801 0 is_stmt 1
 568 0140 0710A0E1 		mov	r1, r7
 569 0144 200099E5 		ldr	r0, [r9, #32]
1812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 570              		.loc 1 1812 0
 571 0148 0CD08DE2 		add	sp, sp, #12
 572              		.cfi_def_cfa_offset 36
 573              		@ sp needed
 574 014c F04FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 575              		.cfi_restore 14
 576              		.cfi_restore 11
 577              		.cfi_restore 10
 578              		.cfi_restore 9
 579              		.cfi_restore 8
 580              		.cfi_restore 7
 581              		.cfi_restore 6
 582              		.cfi_restore 5
 583              		.cfi_restore 4
 584              		.cfi_def_cfa_offset 0
 585              	.LVL69:
1801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 586              		.loc 1 1801 0
 587 0150 13FF2FE1 		bx	r3
 588              	.LVL70:
 589              		.cfi_endproc
 590              	.LFE18:
 592              		.section	.text.prvRemoveSubscription,"ax",%progbits
 593              		.align	2
 594              		.syntax unified
 595              		.arm
 596              		.fpu neon
 598              	prvRemoveSubscription:
 599              	.LFB24:
2066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
 600              		.loc 1 2066 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              	.LVL71:
 605 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 606              		.cfi_def_cfa_offset 24
 607              		.cfi_offset 4, -24
 608              		.cfi_offset 5, -20
 609              		.cfi_offset 6, -16
 610              		.cfi_offset 7, -12
 611              		.cfi_offset 8, -8
 612              		.cfi_offset 14, -4
2066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
 613              		.loc 1 2066 0
 614 0004 0060A0E1 		mov	r6, r0
 615 0008 0180A0E1 		mov	r8, r1
 616 000c 0270A0E1 		mov	r7, r2
 617 0010 585080E2 		add	r5, r0, #88
2072:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 618              		.loc 1 2072 0
 619 0014 0040A0E3 		mov	r4, #0
 620              	.LVL72:
 621              	.L80:
2074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].usTopicFilterLength == us
 622              		.loc 1 2074 0
 623 0018 8C30D5E5 		ldrb	r3, [r5, #140]	@ zero_extendqisi2
 624 001c 010053E3 		cmp	r3, #1
 625 0020 0F00001A 		bne	.L78
2075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 626              		.loc 1 2075 0 discriminator 1
 627 0024 B038D5E1 		ldrh	r3, [r5, #128]
2074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].usTopicFilterLength == us
 628              		.loc 1 2074 0 discriminator 1
 629 0028 070053E1 		cmp	r3, r7
 630 002c 0C00001A 		bne	.L78
2077:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 631              		.loc 1 2077 0
 632 0030 0720A0E1 		mov	r2, r7
 633 0034 0810A0E1 		mov	r1, r8
 634 0038 0500A0E1 		mov	r0, r5
 635 003c FEFFFFEB 		bl	memcmp
 636              	.LVL73:
 637 0040 000050E3 		cmp	r0, #0
 638 0044 0600001A 		bne	.L78
2080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 639              		.loc 1 2080 0
 640 0048 9030A0E3 		mov	r3, #144
 641 004c 936424E0 		mla	r4, r3, r4, r6
 642              	.LVL74:
2084:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 643              		.loc 1 2084 0
 644 0050 D83496E5 		ldr	r3, [r6, #1240]
 645 0054 013043E2 		sub	r3, r3, #1
2080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 646              		.loc 1 2080 0
 647 0058 E400C4E5 		strb	r0, [r4, #228]
2084:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 648              		.loc 1 2084 0
 649 005c D83486E5 		str	r3, [r6, #1240]
2087:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 650              		.loc 1 2087 0
 651 0060 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 652              	.LVL75:
 653              	.L78:
2072:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 654              		.loc 1 2072 0 discriminator 2
 655 0064 014084E2 		add	r4, r4, #1
 656              	.LVL76:
 657 0068 905085E2 		add	r5, r5, #144
 658 006c 080054E3 		cmp	r4, #8
 659 0070 E8FFFF1A 		bne	.L80
 660 0074 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 661              		.cfi_endproc
 662              	.LFE24:
 664              		.section	.text.prvGetCurrentTickCount.isra.0,"ax",%progbits
 665              		.align	2
 666              		.syntax unified
 667              		.arm
 668              		.fpu neon
 670              	prvGetCurrentTickCount.isra.0:
 671              	.LFB41:
1044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 672              		.loc 1 1044 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 0, uses_anonymous_args = 0
1046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 676              		.loc 1 1046 0
 677 0000 1000C0F2 		vmov.i32	d16, #0  @ di
1050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 678              		.loc 1 1050 0
 679 0004 003050E2 		subs	r3, r0, #0
1044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 680              		.loc 1 1044 0
 681 0008 07402DE9 		push	{r0, r1, r2, lr}
 682              		.cfi_def_cfa_offset 16
 683              		.cfi_offset 14, -4
1046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 684              		.loc 1 1046 0
 685 000c 000BCDED 		vstr.64	d16, [sp]	@ int
1050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 686              		.loc 1 1050 0
 687 0010 0100000A 		beq	.L84
1052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 688              		.loc 1 1052 0
 689 0014 0D00A0E1 		mov	r0, sp
 690 0018 33FF2FE1 		blx	r3
 691              	.LVL77:
 692              	.L84:
1060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 693              		.loc 1 1060 0
 694 001c D000CDE1 		ldrd	r0, [sp]
 695 0020 0CD08DE2 		add	sp, sp, #12
 696              		.cfi_def_cfa_offset 4
 697              		@ sp needed
 698 0024 04F09DE4 		ldr	pc, [sp], #4
 699              		.cfi_endproc
 700              	.LFE41:
 702              		.section	.text.prvSendData,"ax",%progbits
 703              		.align	2
 704              		.syntax unified
 705              		.arm
 706              		.fpu neon
 708              	prvSendData:
 709              	.LFB9:
1105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSendFailed;
 710              		.loc 1 1105 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL78:
 715 0000 70402DE9 		push	{r4, r5, r6, lr}
 716              		.cfi_def_cfa_offset 16
 717              		.cfi_offset 4, -16
 718              		.cfi_offset 5, -12
 719              		.cfi_offset 6, -8
 720              		.cfi_offset 14, -4
1105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSendFailed;
 721              		.loc 1 1105 0
 722 0004 0250A0E1 		mov	r5, r2
1108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 723              		.loc 1 1108 0
 724 0008 2C3090E5 		ldr	r3, [r0, #44]
1105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSendFailed;
 725              		.loc 1 1105 0
 726 000c 0040A0E1 		mov	r4, r0
 727              	.LVL79:
1108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 728              		.loc 1 1108 0
 729 0010 280090E5 		ldr	r0, [r0, #40]
 730              	.LVL80:
 731 0014 33FF2FE1 		blx	r3
 732              	.LVL81:
 733 0018 000055E1 		cmp	r5, r0
 734 001c 0600001A 		bne	.L91
 735              	.LVL82:
 736              	.LBB12:
 737              	.LBB13:
1116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
 738              		.loc 1 1116 0
 739 0020 300094E5 		ldr	r0, [r4, #48]
 740 0024 FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 741              	.LVL83:
1117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 742              		.loc 1 1117 0
 743 0028 4C3094E5 		ldr	r3, [r4, #76]
1116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
 744              		.loc 1 1116 0
 745 002c F004C4E1 		strd	r0, [r4, #64]
1117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 746              		.loc 1 1117 0
 747 0030 0000A0E3 		mov	r0, #0
 748 0034 483084E5 		str	r3, [r4, #72]
 749              	.LVL84:
 750 0038 7080BDE8 		pop	{r4, r5, r6, pc}
 751              	.L91:
 752              	.LBE13:
 753              	.LBE12:
1106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 754              		.loc 1 1106 0
 755 003c 0600A0E3 		mov	r0, #6
 756              	.LVL85:
1121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 757              		.loc 1 1121 0
 758 0040 7080BDE8 		pop	{r4, r5, r6, pc}
 759              		.cfi_endproc
 760              	.LFE9:
 762              		.section	.text.prvSizeOfRemainingLength,"ax",%progbits
 763              		.align	2
 764              		.syntax unified
 765              		.arm
 766              		.fpu neon
 768              	prvSizeOfRemainingLength:
 769              	.LFB20:
1849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucRemainingLengthFieldBytes = 0;
 770              		.loc 1 1849 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL86:
1854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 775              		.loc 1 1854 0
 776 0000 1F0270E3 		cmn	r0, #-268435455
 777 0004 0300009A 		bls	.L94
 778              	.LVL87:
1849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucRemainingLengthFieldBytes = 0;
 779              		.loc 1 1849 0
 780 0008 10402DE9 		push	{r4, lr}
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 4, -8
 783              		.cfi_offset 14, -4
 784              	.LBB16:
 785              	.LBB17:
1854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 786              		.loc 1 1854 0
 787 000c 0110A0E3 		mov	r1, #1
 788 0010 30009FE5 		ldr	r0, .L102
 789              	.LVL88:
 790 0014 FEFFFFEB 		bl	longjmp
 791              	.LVL89:
 792              	.L94:
 793              		.cfi_def_cfa_offset 0
 794              		.cfi_restore 4
 795              		.cfi_restore 14
 796              	.LBE17:
 797              	.LBE16:
1857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 798              		.loc 1 1857 0
 799 0018 7F0050E3 		cmp	r0, #127
1859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 800              		.loc 1 1859 0
 801 001c 0100A093 		movls	r0, #1
 802              	.LVL90:
1857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 803              		.loc 1 1857 0
 804 0020 0700009A 		bls	.L95
1861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 805              		.loc 1 1861 0
 806 0024 803040E2 		sub	r3, r0, #128
 807 0028 FE0D53E3 		cmp	r3, #16256
1863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 808              		.loc 1 1863 0
 809 002c 0200A033 		movcc	r0, #2
1861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 810              		.loc 1 1861 0
 811 0030 0300003A 		bcc	.L95
1865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 812              		.loc 1 1865 0
 813 0034 010940E2 		sub	r0, r0, #16384
 814 0038 7F0950E3 		cmp	r0, #2080768
1871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 815              		.loc 1 1871 0
 816 003c 0300A033 		movcc	r0, #3
 817 0040 0400A023 		movcs	r0, #4
 818              	.L95:
 819              	.LVL91:
1879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 820              		.loc 1 1879 0
 821 0044 1EFF2FE1 		bx	lr
 822              	.L103:
 823              		.align	2
 824              	.L102:
 825 0048 28000000 		.word	Unity+40
 826              		.cfi_endproc
 827              	.LFE20:
 829              		.section	.text.prvReturnBuffer.isra.6,"ax",%progbits
 830              		.align	2
 831              		.syntax unified
 832              		.arm
 833              		.fpu neon
 835              	prvReturnBuffer.isra.6:
 836              	.LFB47:
 874:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                              MQTTBufferHandle_t xBuffer )
 837              		.loc 1 874 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              	.LVL92:
 842 0000 70402DE9 		push	{r4, r5, r6, lr}
 843              		.cfi_def_cfa_offset 16
 844              		.cfi_offset 4, -16
 845              		.cfi_offset 5, -12
 846              		.cfi_offset 6, -8
 847              		.cfi_offset 14, -4
 877:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 848              		.loc 1 877 0
 849 0004 004051E2 		subs	r4, r1, #0
 850 0008 7080BD08 		popeq	{r4, r5, r6, pc}
 851 000c 0050A0E1 		mov	r5, r0
 880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 852              		.loc 1 880 0
 853 0010 0010A0E3 		mov	r1, #0
 854              	.LVL93:
 855 0014 182094E5 		ldr	r2, [r4, #24]
 856 0018 200084E2 		add	r0, r4, #32
 857 001c 202042E2 		sub	r2, r2, #32
 858 0020 FEFFFFEB 		bl	memset
 859              	.LVL94:
 883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 860              		.loc 1 883 0
 861 0024 142094E5 		ldr	r2, [r4, #20]
 862 0028 000052E3 		cmp	r2, #0
 863 002c 0400000A 		beq	.L106
 864 0030 103094E5 		ldr	r3, [r4, #16]
 865 0034 000053E3 		cmp	r3, #0
 866 0038 04208315 		strne	r2, [r3, #4]
 867 003c 14209415 		ldrne	r2, [r4, #20]
 868 0040 00308215 		strne	r3, [r2]
 869              	.L106:
 870 0044 0030A0E3 		mov	r3, #0
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 871              		.loc 1 886 0
 872 0048 0400A0E1 		mov	r0, r4
 883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 873              		.loc 1 883 0
 874 004c 103084E5 		str	r3, [r4, #16]
 875 0050 143084E5 		str	r3, [r4, #20]
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 876              		.loc 1 886 0
 877 0054 003095E5 		ldr	r3, [r5]
 888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 878              		.loc 1 888 0
 879 0058 7040BDE8 		pop	{r4, r5, r6, lr}
 880              		.cfi_restore 14
 881              		.cfi_restore 6
 882              		.cfi_restore 5
 883              		.cfi_restore 4
 884              		.cfi_def_cfa_offset 0
 885              	.LVL95:
 886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 886              		.loc 1 886 0
 887 005c 13FF2FE1 		bx	r3	@ indirect register sibling call
 888              	.LVL96:
 889              		.cfi_endproc
 890              	.LFE47:
 892              		.section	.text.unlikely.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7,"ax",%progbits
 893              		.align	2
 894              		.syntax unified
 895              		.arm
 896              		.fpu neon
 898              	prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7:
 899              	.LFB48:
2098:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                       MQTTBufferHandle_t xBuffer )
 900              		.loc 1 2098 0
 901              		.cfi_startproc
 902              		@ Volatile: function does not return.
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              	.LVL97:
 906 0000 10402DE9 		push	{r4, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 4, -8
 909              		.cfi_offset 14, -4
2110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 910              		.loc 1 2110 0
 911 0004 0110A0E3 		mov	r1, #1
 912 0008 00009FE5 		ldr	r0, .L116
 913 000c FEFFFFEB 		bl	longjmp
 914              	.LVL98:
 915              	.L117:
 916              		.align	2
 917              	.L116:
 918 0010 28000000 		.word	Unity+40
 919              		.cfi_endproc
 920              	.LFE48:
 922              		.set	prvGetFreeBuffer.isra.2.part.3,prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7
 923              		.set	prvEncodeRemainingLength.part.4,prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7
 924              		.section	.text.prvEncodeRemainingLength,"ax",%progbits
 925              		.align	2
 926              		.syntax unified
 927              		.arm
 928              		.fpu neon
 930              	prvEncodeRemainingLength:
 931              	.LFB21:
1885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucBytesWritten = 0, ucEncodedByte;
 932              		.loc 1 1885 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              	.LVL99:
1890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 937              		.loc 1 1890 0
 938 0000 1F0270E3 		cmn	r0, #-268435455
1885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucBytesWritten = 0, ucEncodedByte;
 939              		.loc 1 1885 0
 940 0004 10402DE9 		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0008 0030A093 		movls	r3, #0
1890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 945              		.loc 1 1890 0
 946 000c 0000009A 		bls	.L122
 947 0010 FEFFFFEB 		bl	prvEncodeRemainingLength.part.4
 948              	.LVL100:
 949              	.L122:
1895:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulRemainingLength >>= mqttLENGTH_BITS_REMAINING_LENGTH;
 950              		.loc 1 1895 0
 951 0014 7FC000E2 		and	ip, r0, #127
 952              	.LVL101:
1900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 953              		.loc 1 1900 0
 954 0018 A003B0E1 		lsrs	r0, r0, #7
 955              	.LVL102:
1906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 956              		.loc 1 1906 0
 957 001c 03E081E0 		add	lr, r1, r3
1902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 958              		.loc 1 1902 0
 959 0020 80C08C13 		orrne	ip, ip, #128
 960              	.LVL103:
1906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 961              		.loc 1 1906 0
 962 0024 02005EE1 		cmp	lr, r2
 963 0028 0200009A 		bls	.L121
1906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 964              		.loc 1 1906 0 is_stmt 0 discriminator 1
 965 002c 0110A0E3 		mov	r1, #1
 966              	.LVL104:
 967 0030 1C009FE5 		ldr	r0, .L128
 968              	.LVL105:
 969 0034 FEFFFFEB 		bl	longjmp
 970              	.LVL106:
 971              	.L121:
1921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 972              		.loc 1 1921 0 is_stmt 1
 973 0038 000050E3 		cmp	r0, #0
1911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucBytesWritten++;
 974              		.loc 1 1911 0
 975 003c 03C0C1E7 		strb	ip, [r1, r3]
1912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 976              		.loc 1 1912 0
 977 0040 013083E2 		add	r3, r3, #1
 978              	.LVL107:
 979 0044 7330EFE6 		uxtb	r3, r3
 980              	.LVL108:
1921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 981              		.loc 1 1921 0
 982 0048 F1FFFF1A 		bne	.L122
1924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 983              		.loc 1 1924 0
 984 004c 0300A0E1 		mov	r0, r3
 985              	.LVL109:
 986 0050 1080BDE8 		pop	{r4, pc}
 987              	.L129:
 988              		.align	2
 989              	.L128:
 990 0054 28000000 		.word	Unity+40
 991              		.cfi_endproc
 992              	.LFE21:
 994              		.section	.text.prvGetFreeBuffer.isra.2,"ax",%progbits
 995              		.align	2
 996              		.syntax unified
 997              		.arm
 998              		.fpu neon
 1000              	prvGetFreeBuffer.isra.2:
 1001              	.LFB43:
 843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint32_t ulBufferLength )
 1002              		.loc 1 843 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              	.LVL110:
 1007 0000 13402DE9 		push	{r0, r1, r4, lr}
 1008              		.cfi_def_cfa_offset 16
 1009              		.cfi_offset 4, -8
 1010              		.cfi_offset 14, -4
 843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint32_t ulBufferLength )
 1011              		.loc 1 843 0
 1012 0004 0030A0E1 		mov	r3, r0
 1013              	.LVL111:
 852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1014              		.loc 1 852 0
 1015 0008 202081E2 		add	r2, r1, #32
 1016 000c 08008DE2 		add	r0, sp, #8
 843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                             uint32_t ulBufferLength )
 1017              		.loc 1 843 0
 1018 0010 0140A0E1 		mov	r4, r1
 852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1019              		.loc 1 852 0
 1020 0014 042020E5 		str	r2, [r0, #-4]!
 855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1021              		.loc 1 855 0
 1022 0018 33FF2FE1 		blx	r3
 1023              	.LVL112:
 858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1024              		.loc 1 858 0
 1025 001c 000050E3 		cmp	r0, #0
 1026 0020 0900000A 		beq	.L130
 860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1027              		.loc 1 860 0
 1028 0024 04309DE5 		ldr	r3, [sp, #4]
 1029 0028 0020A0E3 		mov	r2, #0
 1030 002c 102080E5 		str	r2, [r0, #16]
 1031 0030 142080E5 		str	r2, [r0, #20]
 1032 0034 183080E5 		str	r3, [r0, #24]
 867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1033              		.loc 1 867 0
 1034 0038 203043E2 		sub	r3, r3, #32
 1035 003c 030054E1 		cmp	r4, r3
 860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1036              		.loc 1 860 0
 1037 0040 1C2080E5 		str	r2, [r0, #28]
 1038              	.LVL113:
 867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1039              		.loc 1 867 0
 1040 0044 0000009A 		bls	.L130
 1041 0048 FEFFFFEB 		bl	prvGetFreeBuffer.isra.2.part.3
 1042              	.LVL114:
 1043              	.L130:
 871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 1044              		.loc 1 871 0
 1045 004c 08D08DE2 		add	sp, sp, #8
 1046              		.cfi_def_cfa_offset 8
 1047              		@ sp needed
 1048 0050 1080BDE8 		pop	{r4, pc}
 1049              		.cfi_endproc
 1050              	.LFE43:
 1052              		.section	.text.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer,"ax",%progbits
 1053              		.align	2
 1054              		.syntax unified
 1055              		.arm
 1056              		.fpu neon
 1058              	prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer:
 1059              	.LFB25:
2100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint8_t ucRemaingingLengthFieldBytes;
 1060              		.loc 1 2100 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 0
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              	.LVL115:
 1065 0000 70402DE9 		push	{r4, r5, r6, lr}
 1066              		.cfi_def_cfa_offset 16
 1067              		.cfi_offset 4, -16
 1068              		.cfi_offset 5, -12
 1069              		.cfi_offset 6, -8
 1070              		.cfi_offset 14, -4
2100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint8_t ucRemaingingLengthFieldBytes;
 1071              		.loc 1 2100 0
 1072 0004 0140A0E1 		mov	r4, r1
 1073 0008 0050A0E1 		mov	r5, r0
2106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1074              		.loc 1 2106 0
 1075 000c 0010A0E3 		mov	r1, #0
 1076              	.LVL116:
 1077 0010 210084E2 		add	r0, r4, #33
 1078              	.LVL117:
 1079 0014 FEFFFFEB 		bl	prvDecodeRemainingLength
 1080              	.LVL118:
2110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1081              		.loc 1 2110 0
 1082 0018 000050E3 		cmp	r0, #0
 1083              	.LVL119:
 1084 001c 0000001A 		bne	.L137
 1085 0020 FEFFFFEB 		bl	prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7
 1086              	.LVL120:
 1087              	.L137:
2117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                         ucRemaingin
 1088              		.loc 1 2117 0
 1089 0024 003084E0 		add	r3, r4, r0
2125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                usTopicLength );
 1090              		.loc 1 2125 0
 1091 0028 251080E2 		add	r1, r0, #37
2117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                         ucRemaingin
 1092              		.loc 1 2117 0
 1093 002c 2320D3E5 		ldrb	r2, [r3, #35]	@ zero_extendqisi2
 1094              	.LVL121:
2124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( ( mqttSUBSCRIBE
 1095              		.loc 1 2124 0
 1096 0030 011084E0 		add	r1, r4, r1
2120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                          ucRemaingi
 1097              		.loc 1 2120 0
 1098 0034 2430D3E5 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
2124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( ( mqttSUBSCRIBE
 1099              		.loc 1 2124 0
 1100 0038 0500A0E1 		mov	r0, r5
 1101              	.LVL122:
2127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 1102              		.loc 1 2127 0
 1103 003c 7040BDE8 		pop	{r4, r5, r6, lr}
 1104              		.cfi_restore 14
 1105              		.cfi_restore 6
 1106              		.cfi_restore 5
 1107              		.cfi_restore 4
 1108              		.cfi_def_cfa_offset 0
 1109              	.LVL123:
2124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( ( mqttSUBSCRIBE
 1110              		.loc 1 2124 0
 1111 0040 022483E1 		orr	r2, r3, r2, lsl #8
 1112 0044 FEFFFFEA 		b	prvRemoveSubscription
 1113              	.LVL124:
 1114              		.cfi_endproc
 1115              	.LFE25:
 1117              		.section	.text.prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9,"ax",%progbits
 1118              		.align	2
 1119              		.syntax unified
 1120              		.arm
 1121              		.fpu neon
 1123              	prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9:
 1124              	.LFB50:
 924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint8_t ucPacketType,
 1125              		.loc 1 924 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 0, uses_anonymous_args = 0
 1129              	.LVL125:
 934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1130              		.loc 1 934 0
 1131 0000 04C090E5 		ldr	ip, [r0, #4]
 1132              	.LVL126:
 1133 0004 00005CE1 		cmp	ip, r0
 1134 0008 0200001A 		bne	.L148
 952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1135              		.loc 1 952 0
 1136 000c 0030A0E3 		mov	r3, #0
 1137              	.LVL127:
 956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 1138              		.loc 1 956 0
 1139 0010 0300A0E1 		mov	r0, r3
 1140              	.LVL128:
 1141 0014 1EFF2FE1 		bx	lr
 1142              	.LVL129:
 1143              	.L148:
 924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                    uint8_t ucPacketType,
 1144              		.loc 1 924 0
 1145 0018 10402DE9 		push	{r4, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 4, -8
 1148              		.cfi_offset 14, -4
 1149              	.L143:
 936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1150              		.loc 1 936 0
 1151 001c 10304CE2 		sub	r3, ip, #16
 1152              	.LVL130:
 940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttLOWER_N
 1153              		.loc 1 940 0
 1154 0020 20E0D3E5 		ldrb	lr, [r3, #32]	@ zero_extendqisi2
 1155 0024 F0400EE2 		and	r4, lr, #240
 1156 0028 010054E1 		cmp	r4, r1
 1157 002c 0500001A 		bne	.L141
 1158 0030 0FE00EE2 		and	lr, lr, #15
 1159 0034 02005EE3 		cmp	lr, #2
 1160 0038 0200001A 		bne	.L141
 941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) == usPacketIdentifier ) )
 1161              		.loc 1 941 0
 1162 003c BCE0D3E1 		ldrh	lr, [r3, #12]
 1163 0040 02005EE1 		cmp	lr, r2
 1164 0044 0300000A 		beq	.L139
 1165              	.L141:
 934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1166              		.loc 1 934 0
 1167 0048 04C09CE5 		ldr	ip, [ip, #4]
 1168              	.LVL131:
 1169 004c 00005CE1 		cmp	ip, r0
 1170 0050 F1FFFF1A 		bne	.L143
 952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1171              		.loc 1 952 0
 1172 0054 0030A0E3 		mov	r3, #0
 1173              	.LVL132:
 1174              	.L139:
 956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
 1175              		.loc 1 956 0
 1176 0058 0300A0E1 		mov	r0, r3
 1177              	.LVL133:
 1178 005c 1080BDE8 		pop	{r4, pc}
 1179              		.cfi_endproc
 1180              	.LFE50:
 1182              		.section	.text.prvResetMQTTContext,"ax",%progbits
 1183              		.align	2
 1184              		.syntax unified
 1185              		.arm
 1186              		.fpu neon
 1188              	prvResetMQTTContext:
 1189              	.LFB6:
1005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink, * pxTempLink;
 1190              		.loc 1 1005 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              	.LVL134:
1017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1195              		.loc 1 1017 0
 1196 0000 041090E5 		ldr	r1, [r0, #4]
 1197              	.LVL135:
1014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1198              		.loc 1 1014 0
 1199 0004 0030A0E3 		mov	r3, #0
1005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink, * pxTempLink;
 1200              		.loc 1 1005 0
 1201 0008 70402DE9 		push	{r4, r5, r6, lr}
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 4, -16
 1204              		.cfi_offset 5, -12
 1205              		.cfi_offset 6, -8
 1206              		.cfi_offset 14, -4
1005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink, * pxTempLink;
 1207              		.loc 1 1005 0
 1208 000c 0040A0E1 		mov	r4, r0
 1209 0010 386080E2 		add	r6, r0, #56
1014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1210              		.loc 1 1014 0
 1211 0014 3C30C0E5 		strb	r3, [r0, #60]
1017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1212              		.loc 1 1017 0
 1213 0018 045091E5 		ldr	r5, [r1, #4]
 1214              	.LVL136:
 1215              	.L150:
1017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1216              		.loc 1 1017 0 is_stmt 0 discriminator 1
 1217 001c 040051E1 		cmp	r1, r4
 1218 0020 1100001A 		bne	.L151
1024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1219              		.loc 1 1024 0 is_stmt 1
 1220 0024 081094E5 		ldr	r1, [r4, #8]
 1221              	.LVL137:
 1222 0028 0600A0E1 		mov	r0, r6
 1223 002c FEFFFFEB 		bl	prvReturnBuffer.isra.6
 1224              	.LVL138:
 1225 0030 0420A0E1 		mov	r2, r4
 1226 0034 121D84E2 		add	r1, r4, #1152
 1227              	.LBB20:
 1228              	.LBB21:
 995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.ulTotalMessageLength = 0;
 1229              		.loc 1 995 0
 1230 0038 0030A0E3 		mov	r3, #0
 1231 003c 0E30C4E5 		strb	r3, [r4, #14]
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageStore;
 1232              		.loc 1 996 0
 1233 0040 103084E5 		str	r3, [r4, #16]
 997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextBytePacketType;
 1234              		.loc 1 997 0
 1235 0044 0D30C4E5 		strb	r3, [r4, #13]
 998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->ulRxMessageReceivedLength = 0;
 1236              		.loc 1 998 0
 1237 0048 0C30C4E5 		strb	r3, [r4, #12]
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxBuffer = NULL;
 1238              		.loc 1 999 0
 1239 004c 1C3084E5 		str	r3, [r4, #28]
1000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 1240              		.loc 1 1000 0
 1241 0050 083084E5 		str	r3, [r4, #8]
 1242              	.LVL139:
 1243              	.L152:
 1244              	.LBE21:
 1245              	.LBE20:
1035:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 1246              		.loc 1 1035 0 discriminator 3
 1247 0054 E430C2E5 		strb	r3, [r2, #228]
 1248 0058 902082E2 		add	r2, r2, #144
1033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 1249              		.loc 1 1033 0 discriminator 3
 1250 005c 010052E1 		cmp	r2, r1
 1251 0060 FBFFFF1A 		bne	.L152
1039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 1252              		.loc 1 1039 0
 1253 0064 D83484E5 		str	r3, [r4, #1240]
 1254 0068 7080BDE8 		pop	{r4, r5, r6, pc}
 1255              	.LVL140:
 1256              	.L151:
1020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1257              		.loc 1 1020 0 discriminator 3
 1258 006c 101041E2 		sub	r1, r1, #16
 1259              	.LVL141:
 1260 0070 0600A0E1 		mov	r0, r6
 1261 0074 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 1262              	.LVL142:
1017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1263              		.loc 1 1017 0 discriminator 3
 1264 0078 0510A0E1 		mov	r1, r5
 1265 007c 045095E5 		ldr	r5, [r5, #4]
 1266              	.LVL143:
 1267 0080 E5FFFFEA 		b	.L150
 1268              		.cfi_endproc
 1269              	.LFE6:
 1271              		.section	.text.MQTT_Init,"ax",%progbits
 1272              		.align	2
 1273              		.global	MQTT_Init
 1274              		.syntax unified
 1275              		.arm
 1276              		.fpu neon
 1278              	MQTT_Init:
 1279              	.LFB29:
2418:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2419:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2420:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2421:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2422:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_Init( MQTTContext_t * pxMQTTContext,
2423:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             const MQTTInitParams_t * const pxInitParams )
2424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 1280              		.loc 1 2424 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              	.LVL144:
2425:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2426:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         uint32_t x;
2427:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2428:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2429:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
2430:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
2431:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 1285              		.loc 1 2431 0
 1286 0000 003050E2 		subs	r3, r0, #0
 1287 0004 0300001A 		bne	.L156
 1288              	.LVL145:
 1289              	.L157:
2424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
 1290              		.loc 1 2424 0 discriminator 1
 1291 0008 10402DE9 		push	{r4, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 4, -8
 1294              		.cfi_offset 14, -4
 1295              		.loc 1 2431 0 discriminator 1
 1296 000c 0110A0E3 		mov	r1, #1
 1297              	.LVL146:
 1298 0010 A4009FE5 		ldr	r0, .L171
 1299 0014 FEFFFFEB 		bl	longjmp
 1300              	.LVL147:
 1301              	.L156:
 1302              		.cfi_def_cfa_offset 0
 1303              		.cfi_restore 4
 1304              		.cfi_restore 14
2432:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxInitParams->pxMQTTSendFxn != NULL );
 1305              		.loc 1 2432 0
 1306 0018 0C0091E5 		ldr	r0, [r1, #12]
 1307              	.LVL148:
 1308 001c 000050E3 		cmp	r0, #0
 1309 0020 F8FFFF0A 		beq	.L157
2433:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxInitParams->xBufferPoolInterface.pxGetBufferFxn != NULL );
 1310              		.loc 1 2433 0
 1311 0024 142091E5 		ldr	r2, [r1, #20]
 1312 0028 000052E3 		cmp	r2, #0
 1313 002c F5FFFF0A 		beq	.L157
2434:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxInitParams->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 1314              		.loc 1 2434 0
 1315 0030 182091E5 		ldr	r2, [r1, #24]
 1316 0034 000052E3 		cmp	r2, #0
 1317 0038 F2FFFF0A 		beq	.L157
 1318              	.LBB24:
 1319              	.LBB25:
 995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.ulTotalMessageLength = 0;
 1320              		.loc 1 995 0
 1321 003c 0020A0E3 		mov	r2, #0
 1322              	.LBE25:
 1323              	.LBE24:
2435:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxInitParams != NULL );
2436:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2437:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Initialize Tx Buffer List. */
2438:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     listINIT_HEAD( &( pxMQTTContext->xTxBufferListHead ) );
2439:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2440:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Initialize Rx State. */
2441:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvResetRxMessageState( pxMQTTContext );
2442:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2443:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Set connection state to not connected. */
2444:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xConnectionState = eMQTTNotConnected;
2445:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2446:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Store callback context and function. */
2447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pvCallbackContext = pxInitParams->pvCallbackContext;
2448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxCallback = pxInitParams->pxCallback;
2449:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2450:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Store send context and function. */
2451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pvSendContext = pxInitParams->pvSendContext;
2452:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxMQTTSendFxn = pxInitParams->pxMQTTSendFxn;
2453:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2454:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Store get ticks function. */
2455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxGetTicksFxn = pxInitParams->pxGetTicksFxn;
2456:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2457:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Store buffer pool interface. */
2458:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xBufferPoolInterface = pxInitParams->xBufferPoolInterface;
 1324              		.loc 1 2458 0
 1325 0040 141081E2 		add	r1, r1, #20
 1326              	.LVL149:
 1327              	.LBB30:
 1328              	.LBB26:
 995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.ulTotalMessageLength = 0;
 1329              		.loc 1 995 0
 1330 0044 0E20C3E5 		strb	r2, [r3, #14]
 1331              	.LBE26:
 1332              	.LBE30:
2447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxCallback = pxInitParams->pxCallback;
 1333              		.loc 1 2447 0
 1334 0048 14C011E5 		ldr	ip, [r1, #-20]
2438:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1335              		.loc 1 2438 0
 1336 004c 003083E5 		str	r3, [r3]
 1337 0050 043083E5 		str	r3, [r3, #4]
 1338              	.LVL150:
2447:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxCallback = pxInitParams->pxCallback;
 1339              		.loc 1 2447 0
 1340 0054 20C083E5 		str	ip, [r3, #32]
2448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1341              		.loc 1 2448 0
 1342 0058 10C011E5 		ldr	ip, [r1, #-16]
 1343              	.LBB31:
 1344              	.LBB27:
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageStore;
 1345              		.loc 1 996 0
 1346 005c 102083E5 		str	r2, [r3, #16]
 997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextBytePacketType;
 1347              		.loc 1 997 0
 1348 0060 0D20C3E5 		strb	r2, [r3, #13]
 1349              	.LBE27:
 1350              	.LBE31:
2448:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1351              		.loc 1 2448 0
 1352 0064 24C083E5 		str	ip, [r3, #36]
2451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxMQTTSendFxn = pxInitParams->pxMQTTSendFxn;
 1353              		.loc 1 2451 0
 1354 0068 0CC011E5 		ldr	ip, [r1, #-12]
2452:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1355              		.loc 1 2452 0
 1356 006c 2C0083E5 		str	r0, [r3, #44]
2455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1357              		.loc 1 2455 0
 1358 0070 040011E5 		ldr	r0, [r1, #-4]
2451:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->pxMQTTSendFxn = pxInitParams->pxMQTTSendFxn;
 1359              		.loc 1 2451 0
 1360 0074 28C083E5 		str	ip, [r3, #40]
 1361              		.loc 1 2458 0
 1362 0078 34C083E2 		add	ip, r3, #52
 1363              	.LBB32:
 1364              	.LBB28:
 998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->ulRxMessageReceivedLength = 0;
 1365              		.loc 1 998 0
 1366 007c 0C20C3E5 		strb	r2, [r3, #12]
 1367              	.LBE28:
 1368              	.LBE32:
2455:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1369              		.loc 1 2455 0
 1370 0080 300083E5 		str	r0, [r3, #48]
 1371              		.loc 1 2458 0
 1372 0084 030091E8 		ldm	r1, {r0, r1}
 1373              	.LVL151:
 1374              	.LBB33:
 1375              	.LBB29:
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxBuffer = NULL;
 1376              		.loc 1 999 0
 1377 0088 1C2083E5 		str	r2, [r3, #28]
1000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 1378              		.loc 1 1000 0
 1379 008c 082083E5 		str	r2, [r3, #8]
 1380              	.LVL152:
 1381              	.LBE29:
 1382              	.LBE33:
2444:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1383              		.loc 1 2444 0
 1384 0090 3C20C3E5 		strb	r2, [r3, #60]
 1385              		.loc 1 2458 0
 1386 0094 03008CE8 		stm	ip, {r0, r1}
 1387              	.LVL153:
 1388 0098 0310A0E1 		mov	r1, r3
 1389 009c 120D83E2 		add	r0, r3, #1152
 1390              	.LVL154:
 1391              	.L158:
2459:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2460:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2461:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2462:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Mark all the subscription entires in the subscription
2463:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * manager as free. */
2464:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         for( x = 0; x < ( uint32_t ) mqttconfigSUBSCRIPTION_MANAGER_MAX_SUBSCRIPTIONS; x++ )
2465:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2466:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xInUse = eMQTTFalse;
 1392              		.loc 1 2466 0 discriminator 3
 1393 00a0 E420C1E5 		strb	r2, [r1, #228]
 1394 00a4 901081E2 		add	r1, r1, #144
2464:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 1395              		.loc 1 2464 0 discriminator 3
 1396 00a8 000051E1 		cmp	r1, r0
 1397 00ac FBFFFF1A 		bne	.L158
2467:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2468:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2469:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Set the number of in-use subscription entries to zero. */
2470:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xSubscriptionManager.ulInUseSubscriptions = 0;
 1398              		.loc 1 2470 0
 1399 00b0 D82483E5 		str	r2, [r3, #1240]
2471:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2472:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2473:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return eMQTTSuccess;
2474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 1400              		.loc 1 2474 0
 1401 00b4 0000A0E3 		mov	r0, #0
 1402 00b8 1EFF2FE1 		bx	lr
 1403              	.L172:
 1404              		.align	2
 1405              	.L171:
 1406 00bc 28000000 		.word	Unity+40
 1407              		.cfi_endproc
 1408              	.LFE29:
 1410              		.section	.text.MQTT_Connect,"ax",%progbits
 1411              		.align	2
 1412              		.global	MQTT_Connect
 1413              		.syntax unified
 1414              		.arm
 1415              		.fpu neon
 1417              	MQTT_Connect:
 1418              	.LFB30:
2475:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2476:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_Connect( MQTTContext_t * pxMQTTContext,
2478:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                const MQTTConnectParams_t * const pxConnectParams )
2479:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 1419              		.loc 1 2479 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 1423              	.LVL155:
 1424 0000 F84F2DE9 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1425              		.cfi_def_cfa_offset 40
 1426              		.cfi_offset 3, -40
 1427              		.cfi_offset 4, -36
 1428              		.cfi_offset 5, -32
 1429              		.cfi_offset 6, -28
 1430              		.cfi_offset 7, -24
 1431              		.cfi_offset 8, -20
 1432              		.cfi_offset 9, -16
 1433              		.cfi_offset 10, -12
 1434              		.cfi_offset 11, -8
 1435              		.cfi_offset 14, -4
2480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucNextByte, * pucLastByteInBuffer, ucRemainingLengthFieldBytes;
2481:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulRemainingLength, ulTotalMessageLength = 0;
2482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usClientIdLength, usUserNameLength;
2483:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
2484:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTFailure;
2485:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucDefaultConnectVariableHeader[] =
2486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2487:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0,                              /* Protocol name length MSB. */
2488:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         4,                              /* Protocol name length LSB. */
2489:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( uint8_t ) 'M',                /* Protocol name byte 0. */
2490:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( uint8_t ) 'Q',                /* Protocol name byte 1. */
2491:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( uint8_t ) 'T',                /* Protocol name byte 2. */
2492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( uint8_t ) 'T',                /* Protocol name byte 3. */
2493:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttPROTOCOL_LEVEL,             /* Protocol level. */
2494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONNECT_CLEAN_SESSION_FLAG, /* AWS IoT Broker does not support persistent sessions i.e.
2495:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( uint8_t ) 0,                  /* Keep-alive time in seconds MSB. */
2496:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( uint8_t ) 0,                  /* Keep-alive time in seconds LSB. */
2497:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
2498:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2499:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
2500:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
2501:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 1436              		.loc 1 2501 0
 1437 0004 006050E2 		subs	r6, r0, #0
 1438 0008 0200001A 		bne	.L174
 1439              	.LVL156:
 1440              	.L175:
 1441              		.loc 1 2501 0 is_stmt 0 discriminator 1
 1442 000c 0110A0E3 		mov	r1, #1
 1443 0010 F4019FE5 		ldr	r0, .L206
 1444 0014 FEFFFFEB 		bl	longjmp
 1445              	.LVL157:
 1446              	.L174:
2502:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->pxMQTTSendFxn != NULL );
 1447              		.loc 1 2502 0 is_stmt 1
 1448 0018 2C3096E5 		ldr	r3, [r6, #44]
 1449 001c 000053E3 		cmp	r3, #0
 1450 0020 F9FFFF0A 		beq	.L175
2503:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 1451              		.loc 1 2503 0
 1452 0024 348096E5 		ldr	r8, [r6, #52]
 1453 0028 000058E3 		cmp	r8, #0
 1454 002c F6FFFF0A 		beq	.L175
2504:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 1455              		.loc 1 2504 0
 1456 0030 383096E5 		ldr	r3, [r6, #56]
 1457 0034 000053E3 		cmp	r3, #0
 1458 0038 F3FFFF0A 		beq	.L175
2505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxConnectParams != NULL );
 1459              		.loc 1 2505 0
 1460 003c 000051E3 		cmp	r1, #0
 1461 0040 0150A0E1 		mov	r5, r1
 1462 0044 F0FFFF0A 		beq	.L175
2506:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2507:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Connect should only be sent in the "not connected" state. */
2508:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->xConnectionState != eMQTTNotConnected )
 1463              		.loc 1 2508 0
 1464 0048 3C30D6E5 		ldrb	r3, [r6, #60]	@ zero_extendqisi2
 1465 004c 000053E3 		cmp	r3, #0
 1466 0050 0700000A 		beq	.L176
2509:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2510:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Fail the connect operation immediately, if the
2511:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * MQTT client is already connected or connection is in
2512:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * progress. */
2513:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = ( pxMQTTContext->xConnectionState == eMQTTConnected ) ? eMQTTClientAlreadyCon
 1467              		.loc 1 2513 0
 1468 0054 020053E3 		cmp	r3, #2
 1469 0058 0040A0E3 		mov	r4, #0
 1470 005c 0250A003 		moveq	r5, #2
 1471 0060 0350A013 		movne	r5, #3
 1472              	.LVL158:
 1473              	.L177:
2514:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2515:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
2516:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2517:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Store keep alive actual interval and timeout. */
2518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulKeepAliveActualIntervalTicks = pxConnectParams->ulKeepAliveActualIntervalT
2519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulPingRequestTimeoutTicks = pxConnectParams->ulPingRequestTimeoutTicks;
2520:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2521:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Client ID and username length. */
2522:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usClientIdLength = mqttSTRLEN( pxConnectParams->usClientIdLength );
2523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usUserNameLength = pxConnectParams->usUserNameLength > ( uint16_t ) 0 ? mqttSTRLEN( pxConne
2524:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2525:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Calculate "Remaining Length" i.e. length of the packet excluding Fixed Header. */
2526:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulRemainingLength = ( uint32_t ) sizeof( ucDefaultConnectVariableHeader ) +
2527:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             ( uint32_t ) usClientIdLength +
2528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             ( uint32_t ) usUserNameLength;
2529:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2530:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Calculate the number of bytes occupied by the "Remaining Length" field. */
2531:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = prvSizeOfRemainingLength( ulRemainingLength );
2532:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2533:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Make sure that "Remaining Length" is within the permissible limits. */
2534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ucRemainingLengthFieldBytes > ( uint8_t ) 0 )
2535:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2536:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Calculate total MQTT message length. */
2537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ulTotalMessageLength = mqttTOTAL_MESSAGE_LENGTH( ucRemainingLengthFieldBytes, ulRemaini
2538:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2539:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Try to get a buffer from the free buffer pool. */
2540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xBuffer = prvGetFreeBuffer( pxMQTTContext, ulTotalMessageLength );
2541:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2542:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xBuffer == NULL )
2543:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2544:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Fail the connect operation immediately, if no free
2545:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * buffer is available. */
2546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "No free buffer is available to carry out the operation. \r\
2547:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
2548:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2549:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
2550:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2551:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Add the buffer to the Tx buffer list. */
2552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferLIST_ADD( &( pxMQTTContext->xTxBufferListHead ), xBuffer );
2553:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2554:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* To help debugging only. */
2555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 memset( mqttbufferGET_DATA( xBuffer ), 0x00, mqttbufferGET_EFFECTIVE_BUFFER_LENGTH(
2556:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2557:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Record time-stamp and store timeout. */
2558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_RECORDED_TICK_COUNT( xBuffer ) = prvGetCurrentTickCount( pxMQT
2559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxConnectParams->ulTimeoutTicks;
2560:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2561:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write Fixed Header control packet type. */
2562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] = mqttCONTROL
2563:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2564:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write encoded "Remaining Length" in the fixed header. */
2565:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_REMAINING_LENGTH_O
2566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucLastByteInBuffer = &( mqttbufferGET_DATA( xBuffer )[ mqttbufferGET_EFFECTIVE_BUF
2567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
2568:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2569:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* We should have successfully encoded the remaining length field
2570:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * as we already have a large enough buffer. */
2571:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigASSERT( ucRemainingLengthFieldBytes == prvSizeOfRemainingLength( ulRemain
2572:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2573:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write default variable header. */
2574:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttVARIABLE_LEN
2575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 memcpy( pucNextByte, ucDefaultConnectVariableHeader, sizeof( ucDefaultConnectVariab
2576:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2577:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Update the user name flag. */
2578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( pxConnectParams->usUserNameLength > ( uint16_t ) 0 )
2579:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttCONNECT_FLAGS_OFFSET, ucR
2581:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2583:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Update keep alive timeout. */
2584:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttCONNECT_KEEPALIVE_MSB_OFFSET,
2585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                   ucRemainingLengthFieldBytes ) ] =
2586:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttCONNECT_KEEPALIVE_LSB_OFFSET,
2587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                   ucRemainingLengthFieldBytes ) ] =
2588:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2589:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the client ID into the payload. */
2590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttCONNECT_CLIE
2591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxConnectParams->pu
2592:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2593:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the user name into the payload. */
2594:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( pxConnectParams->usUserNameLength > ( uint16_t ) 0 )
2595:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2596:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxConnectParams
2597:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2598:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2599:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* MISRA compliance. */
2600:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) pucNextByte;
2601:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2602:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Store the packet identifier in TxBuffer also for matching
2603:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * ACK later. */
2604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) = pxConnectParams->usPacketIdentifier;
2605:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2606:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Update the number of bytes written to the buffer. */
2607:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA_LENGTH( xBuffer ) = ulTotalMessageLength;
2608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2609:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* MQTT packet created. */
2610:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTSuccess;
2611:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2612:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2613:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2614:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2615:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If the packet was successfully constructed, transmit it. */
2616:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode == eMQTTSuccess )
2617:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = prvSendData( pxMQTTContext, mqttbufferGET_DATA( xBuffer ), mqttbufferGET_DATA
2619:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2620:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2621:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If some error occurred, return the TxBuffer, otherwise it
2622:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * will be returned upon receiving ACK or timeout. */
2623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode != eMQTTSuccess )
2624:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2625:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the buffer to the free buffer pool. */
2626:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvReturnBuffer( pxMQTTContext, xBuffer );
 1474              		.loc 1 2626 0
 1475 0064 0410A0E1 		mov	r1, r4
 1476 0068 380086E2 		add	r0, r6, #56
 1477 006c FEFFFFEB 		bl	prvReturnBuffer.isra.6
 1478              	.LVL159:
 1479 0070 630000EA 		b	.L183
 1480              	.LVL160:
 1481              	.L176:
2518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulPingRequestTimeoutTicks = pxConnectParams->ulPingRequestTimeoutTicks;
 1482              		.loc 1 2518 0
 1483 0074 043091E5 		ldr	r3, [r1, #4]
2523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1484              		.loc 1 2523 0
 1485 0078 B871D1E1 		ldrh	r7, [r1, #24]
2518:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulPingRequestTimeoutTicks = pxConnectParams->ulPingRequestTimeoutTicks;
 1486              		.loc 1 2518 0
 1487 007c 4C3086E5 		str	r3, [r6, #76]
2519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1488              		.loc 1 2519 0
 1489 0080 083091E5 		ldr	r3, [r1, #8]
2523:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1490              		.loc 1 2523 0
 1491 0084 000057E3 		cmp	r7, #0
 1492 0088 02708712 		addne	r7, r7, #2
 1493 008c 7770FF16 		uxthne	r7, r7
2519:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1494              		.loc 1 2519 0
 1495 0090 503086E5 		str	r3, [r6, #80]
2522:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usUserNameLength = pxConnectParams->usUserNameLength > ( uint16_t ) 0 ? mqttSTRLEN( pxConne
 1496              		.loc 1 2522 0
 1497 0094 B031D1E1 		ldrh	r3, [r1, #16]
 1498 0098 023083E2 		add	r3, r3, #2
 1499 009c 7330FFE6 		uxth	r3, r3
 1500              	.LVL161:
2526:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             ( uint32_t ) usClientIdLength +
 1501              		.loc 1 2526 0
 1502 00a0 0A3083E2 		add	r3, r3, #10
 1503              	.LVL162:
 1504 00a4 077083E0 		add	r7, r3, r7
 1505              	.LVL163:
2531:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1506              		.loc 1 2531 0
 1507 00a8 0700A0E1 		mov	r0, r7
 1508              	.LVL164:
 1509 00ac FEFFFFEB 		bl	prvSizeOfRemainingLength
 1510              	.LVL165:
2534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 1511              		.loc 1 2534 0
 1512 00b0 004050E2 		subs	r4, r0, #0
2484:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucDefaultConnectVariableHeader[] =
 1513              		.loc 1 2484 0
 1514 00b4 0150A003 		moveq	r5, #1
 1515              	.LVL166:
2534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 1516              		.loc 1 2534 0
 1517 00b8 E9FFFF0A 		beq	.L177
2537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1518              		.loc 1 2537 0
 1519 00bc 014084E2 		add	r4, r4, #1
2540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1520              		.loc 1 2540 0
 1521 00c0 0800A0E1 		mov	r0, r8
 1522              	.LVL167:
2537:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1523              		.loc 1 2537 0
 1524 00c4 07A084E0 		add	r10, r4, r7
 1525              	.LVL168:
2540:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1526              		.loc 1 2540 0
 1527 00c8 0A10A0E1 		mov	r1, r10
 1528 00cc FEFFFFEB 		bl	prvGetFreeBuffer.isra.2
 1529              	.LVL169:
2542:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 1530              		.loc 1 2542 0
 1531 00d0 004050E2 		subs	r4, r0, #0
 1532 00d4 0300001A 		bne	.L179
2546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
 1533              		.loc 1 2546 0
 1534 00d8 30019FE5 		ldr	r0, .L206+4
 1535              	.LVL170:
2547:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 1536              		.loc 1 2547 0
 1537 00dc 0550A0E3 		mov	r5, #5
2546:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
 1538              		.loc 1 2546 0
 1539 00e0 FEFFFFEB 		bl	vLoggingPrintf
 1540              	.LVL171:
 1541 00e4 DEFFFFEA 		b	.L177
 1542              	.LVL172:
 1543              	.L179:
 1544              	.LBB34:
2552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1545              		.loc 1 2552 0
 1546 00e8 042096E5 		ldr	r2, [r6, #4]
 1547              	.LVL173:
 1548 00ec 103084E2 		add	r3, r4, #16
 1549              	.LBE34:
2555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1550              		.loc 1 2555 0
 1551 00f0 20B084E2 		add	fp, r4, #32
 1552 00f4 0010A0E3 		mov	r1, #0
 1553 00f8 0B00A0E1 		mov	r0, fp
 1554              	.LVL174:
 1555              	.LBB35:
2552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1556              		.loc 1 2552 0
 1557 00fc 142084E5 		str	r2, [r4, #20]
 1558 0100 003082E5 		str	r3, [r2]
 1559              	.LBE35:
2555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1560              		.loc 1 2555 0
 1561 0104 182094E5 		ldr	r2, [r4, #24]
 1562              	.LVL175:
 1563              	.LBB36:
2552:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1564              		.loc 1 2552 0
 1565 0108 043086E5 		str	r3, [r6, #4]
 1566              	.LVL176:
 1567 010c 106084E5 		str	r6, [r4, #16]
 1568              	.LBE36:
2555:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1569              		.loc 1 2555 0
 1570 0110 202042E2 		sub	r2, r2, #32
 1571 0114 FEFFFFEB 		bl	memset
 1572              	.LVL177:
2558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxConnectParams->ulTimeoutTicks;
 1573              		.loc 1 2558 0
 1574 0118 300096E5 		ldr	r0, [r6, #48]
 1575 011c FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 1576              	.LVL178:
2566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 1577              		.loc 1 2566 0
 1578 0120 188094E5 		ldr	r8, [r4, #24]
2559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1579              		.loc 1 2559 0
 1580 0124 1C3095E5 		ldr	r3, [r5, #28]
2558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxConnectParams->ulTimeoutTicks;
 1581              		.loc 1 2558 0
 1582 0128 F000C4E1 		strd	r0, [r4]
2567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1583              		.loc 1 2567 0
 1584 012c 211084E2 		add	r1, r4, #33
2566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 1585              		.loc 1 2566 0
 1586 0130 018048E2 		sub	r8, r8, #1
2567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1587              		.loc 1 2567 0
 1588 0134 0700A0E1 		mov	r0, r7
2559:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1589              		.loc 1 2559 0
 1590 0138 083084E5 		str	r3, [r4, #8]
2566:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 1591              		.loc 1 2566 0
 1592 013c 088084E0 		add	r8, r4, r8
2562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1593              		.loc 1 2562 0
 1594 0140 1030A0E3 		mov	r3, #16
2567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1595              		.loc 1 2567 0
 1596 0144 0820A0E1 		mov	r2, r8
2562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1597              		.loc 1 2562 0
 1598 0148 2030C4E5 		strb	r3, [r4, #32]
 1599              	.LVL179:
2567:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1600              		.loc 1 2567 0
 1601 014c FEFFFFEB 		bl	prvEncodeRemainingLength
 1602              	.LVL180:
 1603 0150 0090A0E1 		mov	r9, r0
 1604              	.LVL181:
2571:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1605              		.loc 1 2571 0
 1606 0154 0700A0E1 		mov	r0, r7
 1607 0158 FEFFFFEB 		bl	prvSizeOfRemainingLength
 1608              	.LVL182:
 1609 015c 000059E1 		cmp	r9, r0
 1610 0160 A9FFFF1A 		bne	.L175
 1611              	.LVL183:
2575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1612              		.loc 1 2575 0
 1613 0164 097084E0 		add	r7, r4, r9
 1614              	.LVL184:
 1615 0168 0A20A0E3 		mov	r2, #10
 1616 016c A0109FE5 		ldr	r1, .L206+8
 1617 0170 210087E2 		add	r0, r7, #33
 1618              	.LVL185:
 1619 0174 FEFFFFEB 		bl	memcpy
 1620              	.LVL186:
2578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 1621              		.loc 1 2578 0
 1622 0178 B831D5E1 		ldrh	r3, [r5, #24]
2590:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxConnectParams->pu
 1623              		.loc 1 2590 0
 1624 017c 2B0089E2 		add	r0, r9, #43
 1625              	.LVL187:
2591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1626              		.loc 1 2591 0
 1627 0180 0810A0E1 		mov	r1, r8
 1628 0184 000084E0 		add	r0, r4, r0
 1629              	.LVL188:
2578:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 1630              		.loc 1 2578 0
 1631 0188 000053E3 		cmp	r3, #0
2580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 1632              		.loc 1 2580 0
 1633 018c 28208912 		addne	r2, r9, #40
 1634 0190 0230D417 		ldrbne	r3, [r4, r2]	@ zero_extendqisi2
 1635 0194 833CE011 		mvnne	r3, r3, lsl #25
 1636 0198 A33CE011 		mvnne	r3, r3, lsr #25
 1637 019c 0230C417 		strbne	r3, [r4, r2]
2585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttCONNECT_KEEPALIVE_LSB_OFFSET,
 1638              		.loc 1 2585 0
 1639 01a0 B030D5E1 		ldrh	r3, [r5]
 1640 01a4 2334A0E1 		lsr	r3, r3, #8
 1641 01a8 2930C7E5 		strb	r3, [r7, #41]
2587:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1642              		.loc 1 2587 0
 1643 01ac B030D5E1 		ldrh	r3, [r5]
 1644 01b0 2A30C7E5 		strb	r3, [r7, #42]
2591:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1645              		.loc 1 2591 0
 1646 01b4 B031D5E1 		ldrh	r3, [r5, #16]
 1647 01b8 0C2095E5 		ldr	r2, [r5, #12]
 1648 01bc FEFFFFEB 		bl	prvWriteString
 1649              	.LVL189:
2594:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 1650              		.loc 1 2594 0
 1651 01c0 B831D5E1 		ldrh	r3, [r5, #24]
 1652 01c4 000053E3 		cmp	r3, #0
 1653 01c8 0200000A 		beq	.L181
2596:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 1654              		.loc 1 2596 0
 1655 01cc 142095E5 		ldr	r2, [r5, #20]
 1656 01d0 0810A0E1 		mov	r1, r8
 1657 01d4 FEFFFFEB 		bl	prvWriteString
 1658              	.LVL190:
 1659              	.L181:
2604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1660              		.loc 1 2604 0
 1661 01d8 BA31D5E1 		ldrh	r3, [r5, #26]
2618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1662              		.loc 1 2618 0
 1663 01dc 0A20A0E1 		mov	r2, r10
2607:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1664              		.loc 1 2607 0
 1665 01e0 1CA084E5 		str	r10, [r4, #28]
 1666              	.LVL191:
2618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1667              		.loc 1 2618 0
 1668 01e4 0B10A0E1 		mov	r1, fp
 1669 01e8 0600A0E1 		mov	r0, r6
2604:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1670              		.loc 1 2604 0
 1671 01ec BC30C4E1 		strh	r3, [r4, #12]	@ movhi
2618:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 1672              		.loc 1 2618 0
 1673 01f0 FEFFFFEB 		bl	prvSendData
 1674              	.LVL192:
2623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1675              		.loc 1 2623 0
 1676 01f4 005050E2 		subs	r5, r0, #0
2627:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2628:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
2629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2630:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Connect has been sent and we are waiting for CONNACK. */
2631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->xConnectionState = eMQTTConnectionInProgress;
 1677              		.loc 1 2631 0
 1678 01f8 0130A003 		moveq	r3, #1
 1679 01fc 3C30C605 		strbeq	r3, [r6, #60]
2623:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1680              		.loc 1 2623 0
 1681 0200 97FFFF1A 		bne	.L177
 1682              	.LVL193:
 1683              	.L183:
2632:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2633:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2634:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
2635:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 1684              		.loc 1 2635 0
 1685 0204 0500A0E1 		mov	r0, r5
 1686 0208 F88FBDE8 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1687              	.L207:
 1688              		.align	2
 1689              	.L206:
 1690 020c 28000000 		.word	Unity+40
 1691 0210 00000000 		.word	.LC0
 1692 0214 00000000 		.word	.LANCHOR0
 1693              		.cfi_endproc
 1694              	.LFE30:
 1696              		.section	.text.MQTT_Disconnect,"ax",%progbits
 1697              		.align	2
 1698              		.global	MQTT_Disconnect
 1699              		.syntax unified
 1700              		.arm
 1701              		.fpu neon
 1703              	MQTT_Disconnect:
 1704              	.LFB31:
2636:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2637:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2638:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_Disconnect( MQTTContext_t * pxMQTTContext )
2639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 1705              		.loc 1 2639 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 32
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709              	.LVL194:
 1710 0000 30402DE9 		push	{r4, r5, lr}
 1711              		.cfi_def_cfa_offset 12
 1712              		.cfi_offset 4, -12
 1713              		.cfi_offset 5, -8
 1714              		.cfi_offset 14, -4
2640:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSuccess;
2641:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
2642:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucDisconnectPacket[] =
2643:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2644:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_DISCONNECT | mqttFLAGS_DISCONNECT,
2645:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0 /* DISCONNECT packet does not have any variable header or payload. */
2646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
2647:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2648:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
2649:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
2650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 1715              		.loc 1 2650 0
 1716 0004 004050E2 		subs	r4, r0, #0
2639:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSuccess;
 1717              		.loc 1 2639 0
 1718 0008 24D04DE2 		sub	sp, sp, #36
 1719              		.cfi_def_cfa_offset 48
 1720              		.loc 1 2650 0
 1721 000c 0200001A 		bne	.L209
 1722              	.L210:
 1723              		.loc 1 2650 0 is_stmt 0 discriminator 1
 1724 0010 0110A0E3 		mov	r1, #1
 1725 0014 80009FE5 		ldr	r0, .L226
 1726              	.LVL195:
 1727 0018 FEFFFFEB 		bl	longjmp
 1728              	.LVL196:
 1729              	.L209:
2651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->pxMQTTSendFxn != NULL );
 1730              		.loc 1 2651 0 is_stmt 1
 1731 001c 2C3094E5 		ldr	r3, [r4, #44]
 1732 0020 000053E3 		cmp	r3, #0
 1733 0024 F9FFFF0A 		beq	.L210
2652:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 1734              		.loc 1 2652 0
 1735 0028 343094E5 		ldr	r3, [r4, #52]
 1736 002c 000053E3 		cmp	r3, #0
 1737 0030 F6FFFF0A 		beq	.L210
2653:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 1738              		.loc 1 2653 0
 1739 0034 383094E5 		ldr	r3, [r4, #56]
 1740 0038 000053E3 		cmp	r3, #0
 1741 003c F3FFFF0A 		beq	.L210
2654:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2655:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Send the MQTT Disconnect message only if the MQTT client
2656:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * is connected or a connection attempt is in progress (i.e.
2657:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * we have sent connect message and are waiting for a CONNACK).
2658:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * Do not send the disconnect message if someone is trying to
2659:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * disconnect an already disconnected client. */
2660:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ( pxMQTTContext->xConnectionState == eMQTTConnected ) || ( pxMQTTContext->xConnectionState 
 1742              		.loc 1 2660 0
 1743 0040 3C30D4E5 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 1744 0044 013043E2 		sub	r3, r3, #1
 1745 0048 010053E3 		cmp	r3, #1
2640:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
 1746              		.loc 1 2640 0
 1747 004c 0050A083 		movhi	r5, #0
 1748              		.loc 1 2660 0
 1749 0050 0C00008A 		bhi	.L211
2661:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2662:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( prvSendData( pxMQTTContext, ucDisconnectPacket, sizeof( ucDisconnectPacket ) ) != eMQTT
 1750              		.loc 1 2662 0
 1751 0054 44109FE5 		ldr	r1, .L226+4
 1752 0058 0220A0E3 		mov	r2, #2
 1753 005c FEFFFFEB 		bl	prvSendData
 1754              	.LVL197:
2663:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xReturnCode = eMQTTSendFailed;
2665:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2666:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2667:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Inform the user about disconnect. */
2668:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
 1755              		.loc 1 2668 0
 1756 0060 0930A0E3 		mov	r3, #9
2664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 1757              		.loc 1 2664 0
 1758 0064 000050E3 		cmp	r0, #0
 1759              		.loc 1 2668 0
 1760 0068 0430CDE5 		strb	r3, [sp, #4]
2669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonUserRequest
2670:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 1761              		.loc 1 2670 0
 1762 006c 04108DE2 		add	r1, sp, #4
2669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonUserRequest
 1763              		.loc 1 2669 0
 1764 0070 0230A0E3 		mov	r3, #2
 1765              		.loc 1 2670 0
 1766 0074 0400A0E1 		mov	r0, r4
2664:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 1767              		.loc 1 2664 0
 1768 0078 0650A013 		movne	r5, #6
 1769 007c 0050A003 		moveq	r5, #0
 1770              	.LVL198:
2669:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonUserRequest
 1771              		.loc 1 2669 0
 1772 0080 0830CDE5 		strb	r3, [sp, #8]
 1773              		.loc 1 2670 0
 1774 0084 FEFFFFEB 		bl	prvInvokeCallback
 1775              	.LVL199:
 1776              	.L211:
2671:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2672:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2673:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Reset the internal state even if we fail to send the MQTT
2674:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * message. */
2675:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvResetMQTTContext( pxMQTTContext );
 1777              		.loc 1 2675 0
 1778 0088 0400A0E1 		mov	r0, r4
 1779 008c FEFFFFEB 		bl	prvResetMQTTContext
 1780              	.LVL200:
2676:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2677:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
2678:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 1781              		.loc 1 2678 0
 1782 0090 0500A0E1 		mov	r0, r5
 1783 0094 24D08DE2 		add	sp, sp, #36
 1784              		.cfi_def_cfa_offset 12
 1785              		@ sp needed
 1786 0098 3080BDE8 		pop	{r4, r5, pc}
 1787              	.LVL201:
 1788              	.L227:
 1789              		.align	2
 1790              	.L226:
 1791 009c 28000000 		.word	Unity+40
 1792 00a0 00000000 		.word	.LANCHOR1
 1793              		.cfi_endproc
 1794              	.LFE31:
 1796              		.section	.text.MQTT_Subscribe,"ax",%progbits
 1797              		.align	2
 1798              		.global	MQTT_Subscribe
 1799              		.syntax unified
 1800              		.arm
 1801              		.fpu neon
 1803              	MQTT_Subscribe:
 1804              	.LFB32:
2679:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2680:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2681:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_Subscribe( MQTTContext_t * pxMQTTContext,
2682:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                  const MQTTSubscribeParams_t * const pxSubscribeParams )
2683:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 1805              		.loc 1 2683 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 8
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL202:
 1810 0000 F74F2DE9 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1811              		.cfi_def_cfa_offset 48
 1812              		.cfi_offset 4, -36
 1813              		.cfi_offset 5, -32
 1814              		.cfi_offset 6, -28
 1815              		.cfi_offset 7, -24
 1816              		.cfi_offset 8, -20
 1817              		.cfi_offset 9, -16
 1818              		.cfi_offset 10, -12
 1819              		.cfi_offset 11, -8
 1820              		.cfi_offset 14, -4
2684:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucNextByte, * pucLastByteInBuffer, ucRemainingLengthFieldBytes;
2685:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulRemainingLength, ulTotalMessageLength;
2686:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usTopicLength;
2687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
2688:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTFailure;
2689:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2690:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
2691:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
2692:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 1821              		.loc 1 2692 0
 1822 0004 006050E2 		subs	r6, r0, #0
 1823 0008 0200001A 		bne	.L229
 1824              	.LVL203:
 1825              	.L230:
 1826              		.loc 1 2692 0 is_stmt 0 discriminator 1
 1827 000c 0110A0E3 		mov	r1, #1
 1828 0010 A0029FE5 		ldr	r0, .L269
 1829 0014 FEFFFFEB 		bl	longjmp
 1830              	.LVL204:
 1831              	.L229:
2693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->pxMQTTSendFxn != NULL );
 1832              		.loc 1 2693 0 is_stmt 1
 1833 0018 2C3096E5 		ldr	r3, [r6, #44]
 1834 001c 000053E3 		cmp	r3, #0
 1835 0020 F9FFFF0A 		beq	.L230
2694:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 1836              		.loc 1 2694 0
 1837 0024 343096E5 		ldr	r3, [r6, #52]
 1838 0028 000053E3 		cmp	r3, #0
 1839 002c F6FFFF0A 		beq	.L230
2695:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 1840              		.loc 1 2695 0
 1841 0030 383096E5 		ldr	r3, [r6, #56]
 1842 0034 000053E3 		cmp	r3, #0
 1843 0038 F3FFFF0A 		beq	.L230
2696:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxSubscribeParams != NULL );
 1844              		.loc 1 2696 0
 1845 003c 000051E3 		cmp	r1, #0
 1846 0040 0170A0E1 		mov	r7, r1
 1847 0044 F0FFFF0A 		beq	.L230
2697:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxSubscribeParams->pucTopic != NULL );
 1848              		.loc 1 2697 0
 1849 0048 003091E5 		ldr	r3, [r1]
 1850 004c 000053E3 		cmp	r3, #0
 1851 0050 EDFFFF0A 		beq	.L230
2698:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxSubscribeParams->xQos != eMQTTQoS2 ); /* QoS2 is not supported. */
 1852              		.loc 1 2698 0
 1853 0054 0630D1E5 		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 1854 0058 020053E3 		cmp	r3, #2
 1855 005c EAFFFF0A 		beq	.L230
2699:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2700:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigDEBUG_LOG( ( "Initiating MQTT subscribe.\r\n" ) );
 1856              		.loc 1 2700 0
 1857 0060 54029FE5 		ldr	r0, .L269+4
 1858              	.LVL205:
 1859 0064 FEFFFFEB 		bl	vLoggingPrintf
 1860              	.LVL206:
2701:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2702:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->xConnectionState != eMQTTConnected )
 1861              		.loc 1 2702 0
 1862 0068 3C30D6E5 		ldrb	r3, [r6, #60]	@ zero_extendqisi2
 1863 006c 020053E3 		cmp	r3, #2
2703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2704:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Fail the subscribe operation immediately, if
2705:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * MQTT client is not connected. */
2706:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = eMQTTClientNotConnected;
 1864              		.loc 1 2706 0
 1865 0070 0450A013 		movne	r5, #4
2702:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 1866              		.loc 1 2702 0
 1867 0074 3F00001A 		bne	.L267
 1868              	.LVL207:
 1869              	.LBB40:
 1870              	.LBB41:
1993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 1871              		.loc 1 1993 0
 1872 0078 D83496E5 		ldr	r3, [r6, #1240]
 1873 007c 070053E3 		cmp	r3, #7
 1874 0080 4600008A 		bhi	.L232
 1875              	.LBE41:
 1876              	.LBE40:
2707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2708:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
2709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2711:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2712:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Try to store the subscription in the subscription
2713:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * manager. */
2714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( prvStoreSubscription( pxMQTTContext,
 1877              		.loc 1 2714 0
 1878 0084 B490D7E1 		ldrh	r9, [r7, #4]
 1879              	.LBB52:
 1880              	.LBB42:
1996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 1881              		.loc 1 1996 0
 1882 0088 800059E3 		cmp	r9, #128
 1883 008c 3F00008A 		bhi	.L233
 1884              	.LBE42:
 1885              	.LBE52:
 1886              		.loc 1 2714 0
 1887 0090 00B097E5 		ldr	fp, [r7]
 1888              	.LBB53:
 1889              	.LBB43:
1999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1890              		.loc 1 1999 0
 1891 0094 0910A0E1 		mov	r1, r9
 1892 0098 0B00A0E1 		mov	r0, fp
 1893 009c FEFFFFEB 		bl	prvGetTopicFilterType
 1894              	.LVL208:
2001:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 1895              		.loc 1 2001 0
 1896 00a0 004050E2 		subs	r4, r0, #0
 1897 00a4 3500000A 		beq	.L234
 1898              	.LBE43:
 1899              	.LBE53:
 1900              		.loc 1 2714 0
 1901 00a8 103097E5 		ldr	r3, [r7, #16]
 1902              	.LVL209:
 1903              	.LBB54:
 1904              	.LBB44:
2005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1905              		.loc 1 2005 0
 1906 00ac 0920A0E1 		mov	r2, r9
 1907 00b0 0B10A0E1 		mov	r1, fp
 1908              	.LVL210:
 1909 00b4 0600A0E1 		mov	r0, r6
 1910              	.LVL211:
2008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 1911              		.loc 1 2008 0
 1912 00b8 0050A0E3 		mov	r5, #0
 1913              	.LBE44:
 1914              	.LBE54:
 1915              		.loc 1 2714 0
 1916 00bc 00308DE5 		str	r3, [sp]
 1917 00c0 143097E5 		ldr	r3, [r7, #20]
 1918              	.LVL212:
 1919 00c4 04308DE5 		str	r3, [sp, #4]
 1920              	.LBB55:
 1921              	.LBB45:
2005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1922              		.loc 1 2005 0
 1923 00c8 FEFFFFEB 		bl	prvRemoveSubscription
 1924              	.LVL213:
 1925 00cc 9020A0E3 		mov	r2, #144
 1926              	.LVL214:
 1927              	.L237:
 1928 00d0 920500E0 		mul	r0, r2, r5
2010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         {
 1929              		.loc 1 2010 0
 1930 00d4 008086E0 		add	r8, r6, r0
 1931 00d8 E4A0D8E5 		ldrb	r10, [r8, #228]	@ zero_extendqisi2
 1932 00dc 00005AE3 		cmp	r10, #0
 1933 00e0 2100001A 		bne	.L235
2014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1934              		.loc 1 2014 0
 1935 00e4 0150A0E3 		mov	r5, #1
 1936              	.LVL215:
2017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     pucTopic,
 1937              		.loc 1 2017 0
 1938 00e8 580080E2 		add	r0, r0, #88
 1939 00ec 0920A0E1 		mov	r2, r9
2014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1940              		.loc 1 2014 0
 1941 00f0 E450C8E5 		strb	r5, [r8, #228]
2017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     pucTopic,
 1942              		.loc 1 2017 0
 1943 00f4 0B10A0E1 		mov	r1, fp
 1944 00f8 000086E0 		add	r0, r6, r0
 1945 00fc FEFFFFEB 		bl	memcpy
 1946              	.LVL216:
2021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].pxPublishCallba
 1947              		.loc 1 2021 0
 1948 0100 00309DE5 		ldr	r3, [sp]
2020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].pvPublishCallba
 1949              		.loc 1 2020 0
 1950 0104 B89DC8E1 		strh	r9, [r8, #216]	@ movhi
2023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1951              		.loc 1 2023 0
 1952 0108 E540C8E5 		strb	r4, [r8, #229]
2021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].pxPublishCallba
 1953              		.loc 1 2021 0
 1954 010c DC3088E5 		str	r3, [r8, #220]
2022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxMQTTContext->xSubscriptionManager.xSubscriptions[ x ].xTopicFilterTyp
 1955              		.loc 1 2022 0
 1956 0110 04309DE5 		ldr	r3, [sp, #4]
 1957 0114 E03088E5 		str	r3, [r8, #224]
 1958              	.LBE45:
 1959              	.LBE55:
2715:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                       pxSubscribeParams->pucTopic,
2716:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                       pxSubscribeParams->usTopicLength,
2717:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                       pxSubscribeParams->pvPublishCallbackContext,
2718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                       pxSubscribeParams->pxPublishCallback ) == eMQTTFalse )
2719:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Fail the subscribe operation immediately, if we
2721:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * fail to store the subscription in the subscription
2722:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * manager. */
2723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTSubscriptionManagerFull;
2724:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2725:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
2726:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2727:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2728:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Length of the topic in the actual MQTT message. */
2729:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             usTopicLength = mqttSTRLEN( pxSubscribeParams->usTopicLength );
 1960              		.loc 1 2729 0
 1961 0118 B480D7E1 		ldrh	r8, [r7, #4]
 1962              	.LBB56:
 1963              	.LBB46:
2026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1964              		.loc 1 2026 0
 1965 011c D83496E5 		ldr	r3, [r6, #1240]
 1966              	.LBE46:
 1967              	.LBE56:
 1968              		.loc 1 2729 0
 1969 0120 028088E2 		add	r8, r8, #2
2730:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2731:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Calculate the "Remaining Length" i.e. length of the packet
2732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * excluding fixed header. */
2733:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ulRemainingLength = ( uint32_t ) mqttSUBSCRIBE_PACKET_IDENTIFER_LENGTH +
2734:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                 ( uint32_t ) usTopicLength +
 1970              		.loc 1 2734 0
 1971 0124 7880FFE6 		uxth	r8, r8
 1972              	.LBB57:
 1973              	.LBB47:
2026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 1974              		.loc 1 2026 0
 1975 0128 053083E0 		add	r3, r3, r5
 1976 012c D83486E5 		str	r3, [r6, #1240]
 1977              	.LVL217:
 1978              	.LBE47:
 1979              	.LBE57:
2733:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                 ( uint32_t ) usTopicLength +
 1980              		.loc 1 2733 0
 1981 0130 039088E2 		add	r9, r8, #3
 1982              	.LVL218:
2735:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                 ( uint32_t ) mqttSUBSCRIBE_REQUESTED_QOS_LENGTH;
2736:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2737:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Calculate the number of bytes occupied by the "Remaining Length" field. */
2738:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ucRemainingLengthFieldBytes = prvSizeOfRemainingLength( ulRemainingLength );
 1983              		.loc 1 2738 0
 1984 0134 0900A0E1 		mov	r0, r9
 1985 0138 FEFFFFEB 		bl	prvSizeOfRemainingLength
 1986              	.LVL219:
2739:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Make sure that "Remaining Length" is within the permissible limits. */
2741:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( ucRemainingLengthFieldBytes > ( uint8_t ) 0 )
 1987              		.loc 1 2741 0
 1988 013c 004050E2 		subs	r4, r0, #0
 1989 0140 1800001A 		bne	.L236
 1990              	.LVL220:
 1991              	.L231:
2742:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2743:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Calculate total MQTT message length. */
2744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ulTotalMessageLength = mqttTOTAL_MESSAGE_LENGTH( ucRemainingLengthFieldBytes, ulRem
2745:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2746:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Try to get a buffer from the free buffer pool. */
2747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xBuffer = prvGetFreeBuffer( pxMQTTContext, ulTotalMessageLength );
2748:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( xBuffer == NULL )
2750:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Fail the subscribe operation immediately, if
2752:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * no free buffer is available. */
2753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttconfigDEBUG_LOG( ( "No free buffer is available to carry out the operation.
2754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xReturnCode = eMQTTNoFreeBuffer;
2755:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2756:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
2757:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
2758:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Add the buffer to the Tx buffer list. */
2759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferLIST_ADD( &( pxMQTTContext->xTxBufferListHead ), xBuffer );
2760:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2761:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* To help debugging only. */
2762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     memset( mqttbufferGET_DATA( xBuffer ), 0x00, mqttbufferGET_EFFECTIVE_BUFFER_LEN
2763:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2764:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Record time-stamp and store timeout. */
2765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_PACKET_RECORDED_TICK_COUNT( xBuffer ) = prvGetCurrentTickCount( p
2766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxSubscribeParams->ulTimeoutTic
2767:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write the Fixed Header control packet type and flags. */
2769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] = mqttCON
2770:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2771:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write the encoded remaining length in the fixed header. */
2772:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_REMAINING_LENG
2773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucLastByteInBuffer = &( mqttbufferGET_DATA( xBuffer )[ mqttbufferGET_EFFECTIVE
2774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucN
2775:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2776:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* We should have successfully encoded the remaining length field
2777:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * as we already have a large enough buffer. */
2778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttconfigASSERT( ucRemainingLengthFieldBytes == prvSizeOfRemainingLength( ulRe
2779:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2780:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write variable header which happens to contain only
2781:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * packet identifier in this case. */
2782:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttSUBSCRIBE_PACKET_ID_MSB_O
2783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                       ucRemainingLengthFieldBytes )
2784:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttSUBSCRIBE_PACKET_ID_LSB_O
2785:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                       ucRemainingLengthFieldBytes )
2786:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2787:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write the topic into the message. */
2788:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttSUBSCRIB
2789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxSubscribePara
2790:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2791:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write the Requested QoS into the message. */
2792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     *pucNextByte = ( uint8_t ) pxSubscribeParams->xQos;
2793:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2794:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Store the packet identifier in TxBuffer also for matching with
2795:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * the one received in ACK later. */
2796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) = pxSubscribeParams->usPacketIdentif
2797:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2798:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Update the number of bytes written to the buffer. */
2799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA_LENGTH( xBuffer ) = ulTotalMessageLength;
2800:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2801:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* MQTT packet created. */
2802:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xReturnCode = eMQTTSuccess;
2803:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
2804:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2805:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2806:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2807:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2808:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If the packet was successfully constructed, transmit it. */
2809:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode == eMQTTSuccess )
2810:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = prvSendData( pxMQTTContext, mqttbufferGET_DATA( xBuffer ), mqttbufferGET_DATA
2812:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2813:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2814:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If some error occurred, return the buffer, otherwise it
2815:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * will be returned upon receiving ACK or timeout. Also,
2816:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * remove the subscription entry from the subscription
2817:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * manager. */
2818:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode != eMQTTSuccess )
2819:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2820:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the buffer to the free buffer pool. */
2821:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvReturnBuffer( pxMQTTContext, xBuffer );
 1992              		.loc 1 2821 0
 1993 0144 0410A0E1 		mov	r1, r4
 1994 0148 380086E2 		add	r0, r6, #56
 1995 014c FEFFFFEB 		bl	prvReturnBuffer.isra.6
 1996              	.LVL221:
2822:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2823:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
2824:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2825:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Remove the subscription entry from the subscription manager.
2826:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * This if check is an optimization - If the subscribe failed because
2827:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * we could not store the subscription, there is not need to remove
2828:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * it as it was never stored. */
2829:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xReturnCode != eMQTTSubscriptionManagerFull )
 1997              		.loc 1 2829 0
 1998 0150 080055E3 		cmp	r5, #8
 1999 0154 5400000A 		beq	.L239
2830:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2831:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvRemoveSubscription( pxMQTTContext, pxSubscribeParams->pucTopic, pxSubscribeParam
 2000              		.loc 1 2831 0
 2001 0158 B420D7E1 		ldrh	r2, [r7, #4]
 2002 015c 0600A0E1 		mov	r0, r6
 2003 0160 001097E5 		ldr	r1, [r7]
 2004 0164 FEFFFFEB 		bl	prvRemoveSubscription
 2005              	.LVL222:
 2006 0168 4F0000EA 		b	.L239
 2007              	.LVL223:
 2008              	.L235:
 2009              	.LBB58:
 2010              	.LBB48:
2008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 2011              		.loc 1 2008 0
 2012 016c 015085E2 		add	r5, r5, #1
 2013              	.LVL224:
 2014 0170 080055E3 		cmp	r5, #8
 2015 0174 D5FFFF1A 		bne	.L237
 2016              	.LVL225:
 2017              	.L267:
 2018              	.LBE48:
 2019              	.LBE58:
 2020 0178 0040A0E3 		mov	r4, #0
 2021 017c F0FFFFEA 		b	.L231
 2022              	.LVL226:
 2023              	.L234:
 2024              	.LBB59:
 2025              	.LBB49:
2040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 2026              		.loc 1 2040 0
 2027 0180 38019FE5 		ldr	r0, .L269+8
 2028              	.LVL227:
 2029              	.LBE49:
 2030              	.LBE59:
2723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 2031              		.loc 1 2723 0
 2032 0184 0850A0E3 		mov	r5, #8
 2033              	.LBB60:
 2034              	.LBB50:
2040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 2035              		.loc 1 2040 0
 2036 0188 FEFFFFEB 		bl	vLoggingPrintf
 2037              	.LVL228:
 2038 018c ECFFFFEA 		b	.L231
 2039              	.LVL229:
 2040              	.L233:
2046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 2041              		.loc 1 2046 0
 2042 0190 2C019FE5 		ldr	r0, .L269+12
 2043              	.L268:
2052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 2044              		.loc 1 2052 0
 2045 0194 FEFFFFEB 		bl	vLoggingPrintf
 2046              	.LVL230:
 2047              	.LBE50:
 2048              	.LBE60:
2723:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 2049              		.loc 1 2723 0
 2050 0198 0850A0E3 		mov	r5, #8
 2051 019c F5FFFFEA 		b	.L267
 2052              	.LVL231:
 2053              	.L232:
 2054              	.LBB61:
 2055              	.LBB51:
2052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 2056              		.loc 1 2052 0
 2057 01a0 20019FE5 		ldr	r0, .L269+16
 2058 01a4 FAFFFFEA 		b	.L268
 2059              	.LVL232:
 2060              	.L236:
 2061              	.LBE51:
 2062              	.LBE61:
2744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2063              		.loc 1 2744 0
 2064 01a8 045088E2 		add	r5, r8, #4
2747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2065              		.loc 1 2747 0
 2066 01ac 340096E5 		ldr	r0, [r6, #52]
 2067              	.LVL233:
2744:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2068              		.loc 1 2744 0
 2069 01b0 045085E0 		add	r5, r5, r4
 2070              	.LVL234:
2747:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2071              		.loc 1 2747 0
 2072 01b4 0510A0E1 		mov	r1, r5
 2073 01b8 FEFFFFEB 		bl	prvGetFreeBuffer.isra.2
 2074              	.LVL235:
2749:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 2075              		.loc 1 2749 0
 2076 01bc 004050E2 		subs	r4, r0, #0
 2077 01c0 0300001A 		bne	.L238
2753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xReturnCode = eMQTTNoFreeBuffer;
 2078              		.loc 1 2753 0
 2079 01c4 00019FE5 		ldr	r0, .L269+20
 2080              	.LVL236:
2754:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 2081              		.loc 1 2754 0
 2082 01c8 0550A0E3 		mov	r5, #5
 2083              	.LVL237:
2753:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xReturnCode = eMQTTNoFreeBuffer;
 2084              		.loc 1 2753 0
 2085 01cc FEFFFFEB 		bl	vLoggingPrintf
 2086              	.LVL238:
 2087 01d0 DBFFFFEA 		b	.L231
 2088              	.LVL239:
 2089              	.L238:
 2090              	.LBB62:
2759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2091              		.loc 1 2759 0
 2092 01d4 042096E5 		ldr	r2, [r6, #4]
 2093              	.LVL240:
 2094 01d8 103084E2 		add	r3, r4, #16
 2095              	.LBE62:
2762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2096              		.loc 1 2762 0
 2097 01dc 20B084E2 		add	fp, r4, #32
 2098 01e0 0A10A0E1 		mov	r1, r10
 2099 01e4 0B00A0E1 		mov	r0, fp
 2100              	.LVL241:
 2101              	.LBB63:
2759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2102              		.loc 1 2759 0
 2103 01e8 142084E5 		str	r2, [r4, #20]
 2104 01ec 003082E5 		str	r3, [r2]
 2105              	.LBE63:
2762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2106              		.loc 1 2762 0
 2107 01f0 182094E5 		ldr	r2, [r4, #24]
 2108              	.LVL242:
 2109              	.LBB64:
2759:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2110              		.loc 1 2759 0
 2111 01f4 043086E5 		str	r3, [r6, #4]
 2112              	.LVL243:
 2113 01f8 106084E5 		str	r6, [r4, #16]
 2114              	.LBE64:
2762:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2115              		.loc 1 2762 0
 2116 01fc 202042E2 		sub	r2, r2, #32
 2117 0200 FEFFFFEB 		bl	memset
 2118              	.LVL244:
2765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxSubscribeParams->ulTimeoutTic
 2119              		.loc 1 2765 0
 2120 0204 300096E5 		ldr	r0, [r6, #48]
 2121 0208 FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 2122              	.LVL245:
2773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucN
 2123              		.loc 1 2773 0
 2124 020c 188094E5 		ldr	r8, [r4, #24]
2766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2125              		.loc 1 2766 0
 2126 0210 0C3097E5 		ldr	r3, [r7, #12]
2765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxSubscribeParams->ulTimeoutTic
 2127              		.loc 1 2765 0
 2128 0214 F000C4E1 		strd	r0, [r4]
2774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2129              		.loc 1 2774 0
 2130 0218 211084E2 		add	r1, r4, #33
2773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucN
 2131              		.loc 1 2773 0
 2132 021c 018048E2 		sub	r8, r8, #1
2774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2133              		.loc 1 2774 0
 2134 0220 0900A0E1 		mov	r0, r9
2766:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2135              		.loc 1 2766 0
 2136 0224 083084E5 		str	r3, [r4, #8]
2773:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucN
 2137              		.loc 1 2773 0
 2138 0228 088084E0 		add	r8, r4, r8
2769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2139              		.loc 1 2769 0
 2140 022c 7D30E0E3 		mvn	r3, #125
2774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2141              		.loc 1 2774 0
 2142 0230 0820A0E1 		mov	r2, r8
2769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2143              		.loc 1 2769 0
 2144 0234 2030C4E5 		strb	r3, [r4, #32]
 2145              	.LVL246:
2774:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2146              		.loc 1 2774 0
 2147 0238 FEFFFFEB 		bl	prvEncodeRemainingLength
 2148              	.LVL247:
 2149 023c 00A0A0E1 		mov	r10, r0
 2150              	.LVL248:
2778:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2151              		.loc 1 2778 0
 2152 0240 0900A0E1 		mov	r0, r9
 2153 0244 FEFFFFEB 		bl	prvSizeOfRemainingLength
 2154              	.LVL249:
 2155 0248 00005AE1 		cmp	r10, r0
 2156 024c 6EFFFF1A 		bne	.L230
2783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttSUBSCRIBE_PACKET_ID_LSB_O
 2157              		.loc 1 2783 0
 2158 0250 B830D7E1 		ldrh	r3, [r7, #8]
 2159 0254 0A2084E0 		add	r2, r4, r10
2788:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxSubscribePara
 2160              		.loc 1 2788 0
 2161 0258 23008AE2 		add	r0, r10, #35
 2162              	.LVL250:
2789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2163              		.loc 1 2789 0
 2164 025c 0810A0E1 		mov	r1, r8
 2165 0260 000084E0 		add	r0, r4, r0
 2166              	.LVL251:
2783:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttSUBSCRIBE_PACKET_ID_LSB_O
 2167              		.loc 1 2783 0
 2168 0264 2334A0E1 		lsr	r3, r3, #8
 2169 0268 2130C2E5 		strb	r3, [r2, #33]
2785:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2170              		.loc 1 2785 0
 2171 026c B830D7E1 		ldrh	r3, [r7, #8]
 2172 0270 2230C2E5 		strb	r3, [r2, #34]
2789:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2173              		.loc 1 2789 0
 2174 0274 B430D7E1 		ldrh	r3, [r7, #4]
 2175 0278 002097E5 		ldr	r2, [r7]
 2176 027c FEFFFFEB 		bl	prvWriteString
 2177              	.LVL252:
2792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2178              		.loc 1 2792 0
 2179 0280 0630D7E5 		ldrb	r3, [r7, #6]	@ zero_extendqisi2
2811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2180              		.loc 1 2811 0
 2181 0284 0520A0E1 		mov	r2, r5
 2182 0288 0B10A0E1 		mov	r1, fp
2792:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2183              		.loc 1 2792 0
 2184 028c 0030C0E5 		strb	r3, [r0]
2811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2185              		.loc 1 2811 0
 2186 0290 0600A0E1 		mov	r0, r6
 2187              	.LVL253:
2796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2188              		.loc 1 2796 0
 2189 0294 B830D7E1 		ldrh	r3, [r7, #8]
2799:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2190              		.loc 1 2799 0
 2191 0298 1C5084E5 		str	r5, [r4, #28]
 2192              	.LVL254:
2796:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2193              		.loc 1 2796 0
 2194 029c BC30C4E1 		strh	r3, [r4, #12]	@ movhi
2811:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2195              		.loc 1 2811 0
 2196 02a0 FEFFFFEB 		bl	prvSendData
 2197              	.LVL255:
2818:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2198              		.loc 1 2818 0
 2199 02a4 005050E2 		subs	r5, r0, #0
 2200              	.LVL256:
 2201 02a8 A5FFFF1A 		bne	.L231
 2202              	.LVL257:
 2203              	.L239:
2832:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2833:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
2834:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2835:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2836:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
2837:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 2204              		.loc 1 2837 0
 2205 02ac 0500A0E1 		mov	r0, r5
 2206 02b0 0CD08DE2 		add	sp, sp, #12
 2207              		.cfi_def_cfa_offset 36
 2208              		@ sp needed
 2209 02b4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2210              	.LVL258:
 2211              	.L270:
 2212              		.align	2
 2213              	.L269:
 2214 02b8 28000000 		.word	Unity+40
 2215 02bc 00000000 		.word	.LC1
 2216 02c0 1D000000 		.word	.LC2
 2217 02c4 42000000 		.word	.LC3
 2218 02c8 D3000000 		.word	.LC4
 2219 02cc 00000000 		.word	.LC0
 2220              		.cfi_endproc
 2221              	.LFE32:
 2223              		.section	.text.MQTT_Unsubscribe,"ax",%progbits
 2224              		.align	2
 2225              		.global	MQTT_Unsubscribe
 2226              		.syntax unified
 2227              		.arm
 2228              		.fpu neon
 2230              	MQTT_Unsubscribe:
 2231              	.LFB33:
2838:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2839:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2840:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_Unsubscribe( MQTTContext_t * pxMQTTContext,
2841:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                    const MQTTUnsubscribeParams_t * const pxUnsubscribeParams )
2842:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 2232              		.loc 1 2842 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              	.LVL259:
 2237 0000 F84F2DE9 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2238              		.cfi_def_cfa_offset 40
 2239              		.cfi_offset 3, -40
 2240              		.cfi_offset 4, -36
 2241              		.cfi_offset 5, -32
 2242              		.cfi_offset 6, -28
 2243              		.cfi_offset 7, -24
 2244              		.cfi_offset 8, -20
 2245              		.cfi_offset 9, -16
 2246              		.cfi_offset 10, -12
 2247              		.cfi_offset 11, -8
 2248              		.cfi_offset 14, -4
2843:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucNextByte, * pucLastByteInBuffer, ucRemainingLengthFieldBytes;
2844:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulRemainingLength, ulTotalMessageLength;
2845:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usTopicLength;
2846:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
2847:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTFailure;
2848:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2849:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
2850:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
2851:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 2249              		.loc 1 2851 0
 2250 0004 005050E2 		subs	r5, r0, #0
 2251 0008 0200001A 		bne	.L272
 2252              	.LVL260:
 2253              	.L273:
 2254              		.loc 1 2851 0 is_stmt 0 discriminator 1
 2255 000c 0110A0E3 		mov	r1, #1
 2256 0010 80019FE5 		ldr	r0, .L295
 2257 0014 FEFFFFEB 		bl	longjmp
 2258              	.LVL261:
 2259              	.L272:
2852:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->pxMQTTSendFxn != NULL );
 2260              		.loc 1 2852 0 is_stmt 1
 2261 0018 2C3095E5 		ldr	r3, [r5, #44]
 2262 001c 000053E3 		cmp	r3, #0
 2263 0020 F9FFFF0A 		beq	.L273
2853:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 2264              		.loc 1 2853 0
 2265 0024 343095E5 		ldr	r3, [r5, #52]
 2266 0028 000053E3 		cmp	r3, #0
 2267 002c F6FFFF0A 		beq	.L273
2854:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 2268              		.loc 1 2854 0
 2269 0030 383095E5 		ldr	r3, [r5, #56]
 2270 0034 000053E3 		cmp	r3, #0
 2271 0038 F3FFFF0A 		beq	.L273
2855:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxUnsubscribeParams != NULL );
 2272              		.loc 1 2855 0
 2273 003c 000051E3 		cmp	r1, #0
 2274 0040 0160A0E1 		mov	r6, r1
 2275 0044 F0FFFF0A 		beq	.L273
2856:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2857:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigDEBUG_LOG( ( "Initiating MQTT unsubscribe.\r\n" ) );
 2276              		.loc 1 2857 0
 2277 0048 4C019FE5 		ldr	r0, .L295+4
 2278              	.LVL262:
 2279 004c FEFFFFEB 		bl	vLoggingPrintf
 2280              	.LVL263:
2858:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->xConnectionState != eMQTTConnected )
 2281              		.loc 1 2859 0
 2282 0050 3C30D5E5 		ldrb	r3, [r5, #60]	@ zero_extendqisi2
 2283 0054 020053E3 		cmp	r3, #2
2860:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2861:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Fail the unsubscribe operation immediately, if
2862:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * MQTT client is not connected. */
2863:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = eMQTTClientNotConnected;
 2284              		.loc 1 2863 0
 2285 0058 0460A013 		movne	r6, #4
 2286              	.LVL264:
 2287 005c 0040A013 		movne	r4, #0
2859:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2288              		.loc 1 2859 0
 2289 0060 1200001A 		bne	.L274
 2290              	.LVL265:
2864:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2865:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
2866:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2867:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Length of the topic in the actual MQTT message. */
2868:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usTopicLength = mqttSTRLEN( pxUnsubscribeParams->usTopicLength );
 2291              		.loc 1 2868 0
 2292 0064 B470D6E1 		ldrh	r7, [r6, #4]
 2293 0068 027087E2 		add	r7, r7, #2
2869:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2870:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Calculate the "Remaining Length" i.e. length of the packet
2871:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * excluding fixed header. */
2872:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulRemainingLength = ( uint32_t ) mqttUNSUBSCRIBE_PACKET_IDENTIFER_LENGTH + ( uint32_t ) usT
 2294              		.loc 1 2872 0
 2295 006c 7770FFE6 		uxth	r7, r7
 2296 0070 028087E2 		add	r8, r7, #2
 2297              	.LVL266:
2873:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2874:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Calculate the number of bytes occupied by the "Remaining Length" field. */
2875:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = prvSizeOfRemainingLength( ulRemainingLength );
 2298              		.loc 1 2875 0
 2299 0074 0800A0E1 		mov	r0, r8
 2300 0078 FEFFFFEB 		bl	prvSizeOfRemainingLength
 2301              	.LVL267:
2876:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2877:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Make sure that "Remaining Length" is within the permissible limits. */
2878:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ucRemainingLengthFieldBytes > ( uint8_t ) 0 )
 2302              		.loc 1 2878 0
 2303 007c 004050E2 		subs	r4, r0, #0
2847:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2304              		.loc 1 2847 0
 2305 0080 0160A003 		moveq	r6, #1
 2306              		.loc 1 2878 0
 2307 0084 0900000A 		beq	.L274
2879:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
2880:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Calculate total MQTT message length. */
2881:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ulTotalMessageLength = mqttTOTAL_MESSAGE_LENGTH( ucRemainingLengthFieldBytes, ulRemaini
 2308              		.loc 1 2881 0
 2309 0088 037087E2 		add	r7, r7, #3
2882:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2883:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Try to get a buffer from the free buffer pool. */
2884:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xBuffer = prvGetFreeBuffer( pxMQTTContext, ulTotalMessageLength );
 2310              		.loc 1 2884 0
 2311 008c 340095E5 		ldr	r0, [r5, #52]
 2312              	.LVL268:
2881:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2313              		.loc 1 2881 0
 2314 0090 047087E0 		add	r7, r7, r4
 2315              	.LVL269:
 2316              		.loc 1 2884 0
 2317 0094 0710A0E1 		mov	r1, r7
 2318 0098 FEFFFFEB 		bl	prvGetFreeBuffer.isra.2
 2319              	.LVL270:
2885:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2886:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xBuffer == NULL )
 2320              		.loc 1 2886 0
 2321 009c 004050E2 		subs	r4, r0, #0
 2322 00a0 0600001A 		bne	.L275
2887:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2888:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Fail the unsubscribe operation immediately, if
2889:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * no free buffer is available. */
2890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "No free buffer is available to carry out the operation. \r\
2891:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
 2323              		.loc 1 2891 0
 2324 00a4 0560A0E3 		mov	r6, #5
2890:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
 2325              		.loc 1 2890 0
 2326 00a8 F0009FE5 		ldr	r0, .L295+8
 2327              	.LVL271:
 2328 00ac FEFFFFEB 		bl	vLoggingPrintf
 2329              	.LVL272:
 2330              	.L274:
2892:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2893:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
2894:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
2895:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Add the buffer to the Tx buffer list. */
2896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferLIST_ADD( &( pxMQTTContext->xTxBufferListHead ), xBuffer );
2897:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2898:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* To help debugging only. */
2899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 memset( mqttbufferGET_DATA( xBuffer ), 0x00, mqttbufferGET_EFFECTIVE_BUFFER_LENGTH(
2900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2901:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Record time-stamp and store timeout. */
2902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_RECORDED_TICK_COUNT( xBuffer ) = prvGetCurrentTickCount( pxMQT
2903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxUnsubscribeParams->ulTimeoutTicks
2904:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2905:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the Fixed Header control packet type and flags. */
2906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] = mqttCONTROL
2907:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2908:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the encoded remaining length in the fixed header. */
2909:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_REMAINING_LENGTH_O
2910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucLastByteInBuffer = &( mqttbufferGET_DATA( xBuffer )[ mqttbufferGET_EFFECTIVE_BUF
2911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
2912:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2913:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* We should have successfully encoded the remaining length field
2914:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * as we already have a large enough buffer. */
2915:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigASSERT( ucRemainingLengthFieldBytes == prvSizeOfRemainingLength( ulRemain
2916:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2917:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write variable header which happens to contain only
2918:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * packet identifier in this case. */
2919:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttUNSUBSCRIBE_PACKET_ID_MSB_OFF
2920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                   ucRemainingLengthFieldBytes ) ] =
2921:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttUNSUBSCRIBE_PACKET_ID_LSB_OFF
2922:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                   ucRemainingLengthFieldBytes ) ] =
2923:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2924:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the topic into the message. */
2925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttUNSUBSCRIBE_
2926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxUnsubscribeParams
2927:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2928:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* MISRA compliance. */
2929:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) pucNextByte;
2930:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2931:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Store the packet identifier in TxBuffer also for matching with
2932:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * the one received in ACK later. */
2933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) = pxUnsubscribeParams->usPacketIdentifie
2934:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2935:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Update the number of bytes written to the buffer. */
2936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA_LENGTH( xBuffer ) = ulTotalMessageLength;
2937:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2938:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* MQTT packet created. */
2939:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTSuccess;
2940:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
2941:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
2942:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2943:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2944:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If the packet was successfully constructed, transmit it. */
2945:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode == eMQTTSuccess )
2946:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = prvSendData( pxMQTTContext, mqttbufferGET_DATA( xBuffer ), mqttbufferGET_DATA
2948:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2949:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2950:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If some error occurred, return the buffer, otherwise it
2951:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * will be returned upon receiving ACK or timeout. */
2952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode != eMQTTSuccess )
2953:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2954:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the buffer to the free buffer pool. */
2955:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvReturnBuffer( pxMQTTContext, xBuffer );
 2331              		.loc 1 2955 0
 2332 00b0 0410A0E1 		mov	r1, r4
 2333 00b4 380085E2 		add	r0, r5, #56
 2334 00b8 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 2335              	.LVL273:
 2336 00bc 330000EA 		b	.L276
 2337              	.LVL274:
 2338              	.L275:
 2339              	.LBB65:
2896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2340              		.loc 1 2896 0
 2341 00c0 042095E5 		ldr	r2, [r5, #4]
 2342              	.LVL275:
 2343 00c4 103084E2 		add	r3, r4, #16
 2344              	.LBE65:
2899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2345              		.loc 1 2899 0
 2346 00c8 20B084E2 		add	fp, r4, #32
 2347 00cc 0010A0E3 		mov	r1, #0
 2348 00d0 0B00A0E1 		mov	r0, fp
 2349              	.LVL276:
 2350              	.LBB66:
2896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2351              		.loc 1 2896 0
 2352 00d4 142084E5 		str	r2, [r4, #20]
 2353 00d8 003082E5 		str	r3, [r2]
 2354              	.LBE66:
2899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2355              		.loc 1 2899 0
 2356 00dc 182094E5 		ldr	r2, [r4, #24]
 2357              	.LVL277:
 2358              	.LBB67:
2896:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2359              		.loc 1 2896 0
 2360 00e0 043085E5 		str	r3, [r5, #4]
 2361              	.LVL278:
 2362 00e4 105084E5 		str	r5, [r4, #16]
 2363              	.LBE67:
2899:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2364              		.loc 1 2899 0
 2365 00e8 202042E2 		sub	r2, r2, #32
 2366 00ec FEFFFFEB 		bl	memset
 2367              	.LVL279:
2902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxUnsubscribeParams->ulTimeoutTicks
 2368              		.loc 1 2902 0
 2369 00f0 300095E5 		ldr	r0, [r5, #48]
 2370 00f4 FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 2371              	.LVL280:
2910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 2372              		.loc 1 2910 0
 2373 00f8 189094E5 		ldr	r9, [r4, #24]
2903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2374              		.loc 1 2903 0
 2375 00fc 083096E5 		ldr	r3, [r6, #8]
2902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxUnsubscribeParams->ulTimeoutTicks
 2376              		.loc 1 2902 0
 2377 0100 F000C4E1 		strd	r0, [r4]
2911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2378              		.loc 1 2911 0
 2379 0104 211084E2 		add	r1, r4, #33
2910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 2380              		.loc 1 2910 0
 2381 0108 019049E2 		sub	r9, r9, #1
2911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2382              		.loc 1 2911 0
 2383 010c 0800A0E1 		mov	r0, r8
2903:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2384              		.loc 1 2903 0
 2385 0110 083084E5 		str	r3, [r4, #8]
2910:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 2386              		.loc 1 2910 0
 2387 0114 099084E0 		add	r9, r4, r9
2906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2388              		.loc 1 2906 0
 2389 0118 5D30E0E3 		mvn	r3, #93
2911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2390              		.loc 1 2911 0
 2391 011c 0920A0E1 		mov	r2, r9
2906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2392              		.loc 1 2906 0
 2393 0120 2030C4E5 		strb	r3, [r4, #32]
 2394              	.LVL281:
2911:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2395              		.loc 1 2911 0
 2396 0124 FEFFFFEB 		bl	prvEncodeRemainingLength
 2397              	.LVL282:
 2398 0128 00A0A0E1 		mov	r10, r0
 2399              	.LVL283:
2915:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2400              		.loc 1 2915 0
 2401 012c 0800A0E1 		mov	r0, r8
 2402 0130 FEFFFFEB 		bl	prvSizeOfRemainingLength
 2403              	.LVL284:
 2404 0134 00005AE1 		cmp	r10, r0
 2405 0138 B3FFFF1A 		bne	.L273
2920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttUNSUBSCRIBE_PACKET_ID_LSB_OFF
 2406              		.loc 1 2920 0
 2407 013c B630D6E1 		ldrh	r3, [r6, #6]
 2408 0140 0A2084E0 		add	r2, r4, r10
2925:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxUnsubscribeParams
 2409              		.loc 1 2925 0
 2410 0144 23008AE2 		add	r0, r10, #35
2926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2411              		.loc 1 2926 0
 2412 0148 0910A0E1 		mov	r1, r9
 2413 014c 000084E0 		add	r0, r4, r0
2920:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttUNSUBSCRIBE_PACKET_ID_LSB_OFF
 2414              		.loc 1 2920 0
 2415 0150 2334A0E1 		lsr	r3, r3, #8
 2416 0154 2130C2E5 		strb	r3, [r2, #33]
2922:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2417              		.loc 1 2922 0
 2418 0158 B630D6E1 		ldrh	r3, [r6, #6]
 2419 015c 2230C2E5 		strb	r3, [r2, #34]
 2420              	.LVL285:
2926:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2421              		.loc 1 2926 0
 2422 0160 B430D6E1 		ldrh	r3, [r6, #4]
 2423 0164 002096E5 		ldr	r2, [r6]
 2424 0168 FEFFFFEB 		bl	prvWriteString
 2425              	.LVL286:
2933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2426              		.loc 1 2933 0
 2427 016c B630D6E1 		ldrh	r3, [r6, #6]
2947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2428              		.loc 1 2947 0
 2429 0170 0720A0E1 		mov	r2, r7
2936:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2430              		.loc 1 2936 0
 2431 0174 1C7084E5 		str	r7, [r4, #28]
 2432              	.LVL287:
2947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2433              		.loc 1 2947 0
 2434 0178 0B10A0E1 		mov	r1, fp
 2435 017c 0500A0E1 		mov	r0, r5
2933:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2436              		.loc 1 2933 0
 2437 0180 BC30C4E1 		strh	r3, [r4, #12]	@ movhi
2947:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2438              		.loc 1 2947 0
 2439 0184 FEFFFFEB 		bl	prvSendData
 2440              	.LVL288:
2952:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2441              		.loc 1 2952 0
 2442 0188 006050E2 		subs	r6, r0, #0
 2443 018c C7FFFF1A 		bne	.L274
 2444              	.LVL289:
 2445              	.L276:
2956:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2957:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2958:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
2959:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 2446              		.loc 1 2959 0
 2447 0190 0600A0E1 		mov	r0, r6
 2448 0194 F88FBDE8 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2449              	.L296:
 2450              		.align	2
 2451              	.L295:
 2452 0198 28000000 		.word	Unity+40
 2453 019c 00000000 		.word	.LC5
 2454 01a0 00000000 		.word	.LC0
 2455              		.cfi_endproc
 2456              	.LFE33:
 2458              		.section	.text.MQTT_Publish,"ax",%progbits
 2459              		.align	2
 2460              		.global	MQTT_Publish
 2461              		.syntax unified
 2462              		.arm
 2463              		.fpu neon
 2465              	MQTT_Publish:
 2466              	.LFB34:
2960:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
2961:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2962:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_Publish( MQTTContext_t * pxMQTTContext,
2963:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                const MQTTPublishParams_t * const pxPublishParams )
2964:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 2467              		.loc 1 2964 0
 2468              		.cfi_startproc
 2469              		@ args = 0, pretend = 0, frame = 0
 2470              		@ frame_needed = 0, uses_anonymous_args = 0
 2471              	.LVL290:
 2472 0000 F84F2DE9 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2473              		.cfi_def_cfa_offset 40
 2474              		.cfi_offset 3, -40
 2475              		.cfi_offset 4, -36
 2476              		.cfi_offset 5, -32
 2477              		.cfi_offset 6, -28
 2478              		.cfi_offset 7, -24
 2479              		.cfi_offset 8, -20
 2480              		.cfi_offset 9, -16
 2481              		.cfi_offset 10, -12
 2482              		.cfi_offset 11, -8
 2483              		.cfi_offset 14, -4
2965:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t * pucNextByte, * pucLastByteInBuffer, ucRemainingLengthFieldBytes;
2966:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulRemainingLength, ulTotalMessageLength;
2967:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint16_t usTopicLength;
2968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer = NULL;
2969:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTFailure;
2970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2971:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
2972:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
2973:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 2484              		.loc 1 2973 0
 2485 0004 006050E2 		subs	r6, r0, #0
 2486 0008 0200001A 		bne	.L298
 2487              	.LVL291:
 2488              	.L299:
 2489              		.loc 1 2973 0 is_stmt 0 discriminator 1
 2490 000c 0110A0E3 		mov	r1, #1
 2491 0010 CC019FE5 		ldr	r0, .L324
 2492 0014 FEFFFFEB 		bl	longjmp
 2493              	.LVL292:
 2494              	.L298:
2974:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->pxMQTTSendFxn != NULL );
 2495              		.loc 1 2974 0 is_stmt 1
 2496 0018 2C3096E5 		ldr	r3, [r6, #44]
 2497 001c 000053E3 		cmp	r3, #0
 2498 0020 F9FFFF0A 		beq	.L299
2975:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 2499              		.loc 1 2975 0
 2500 0024 343096E5 		ldr	r3, [r6, #52]
 2501 0028 000053E3 		cmp	r3, #0
 2502 002c F6FFFF0A 		beq	.L299
2976:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 2503              		.loc 1 2976 0
 2504 0030 383096E5 		ldr	r3, [r6, #56]
 2505 0034 000053E3 		cmp	r3, #0
 2506 0038 F3FFFF0A 		beq	.L299
2977:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxPublishParams != NULL );
 2507              		.loc 1 2977 0
 2508 003c 000051E3 		cmp	r1, #0
 2509 0040 0150A0E1 		mov	r5, r1
 2510 0044 F0FFFF0A 		beq	.L299
2978:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2979:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigDEBUG_LOG( ( "Initiating MQTT publish.\r\n" ) );
 2511              		.loc 1 2979 0
 2512 0048 98019FE5 		ldr	r0, .L324+4
 2513              	.LVL293:
 2514 004c FEFFFFEB 		bl	vLoggingPrintf
 2515              	.LVL294:
2980:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2981:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->xConnectionState != eMQTTConnected )
 2516              		.loc 1 2981 0
 2517 0050 3C30D6E5 		ldrb	r3, [r6, #60]	@ zero_extendqisi2
 2518 0054 020053E3 		cmp	r3, #2
2982:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2983:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Fail the publish operation immediately, if
2984:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * MQTT client is not connected. */
2985:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = eMQTTClientNotConnected;
 2519              		.loc 1 2985 0
 2520 0058 0470A013 		movne	r7, #4
 2521 005c 0040A013 		movne	r4, #0
2981:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2522              		.loc 1 2981 0
 2523 0060 1700001A 		bne	.L300
 2524              	.LVL295:
2986:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
2987:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     else
2988:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
2989:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Length of the topic in the actual MQTT message. */
2990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         usTopicLength = mqttSTRLEN( pxPublishParams->usTopicLength );
2991:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2992:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Calculate the "Remaining Length" i.e. length of the packet excluding Fixed Header. */
2993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulRemainingLength = ( uint32_t ) usTopicLength +
 2525              		.loc 1 2993 0
 2526 0064 0C2095E5 		ldr	r2, [r5, #12]
2990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2527              		.loc 1 2990 0
 2528 0068 B470D5E1 		ldrh	r7, [r5, #4]
2994:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             ( pxPublishParams->xQos == eMQTTQoS0 ? ( uint32_t ) mqttPUBLISH_QOS0_PA
 2529              		.loc 1 2994 0
 2530 006c 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
2990:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2531              		.loc 1 2990 0
 2532 0070 027087E2 		add	r7, r7, #2
 2533              		.loc 1 2994 0
 2534 0074 000053E3 		cmp	r3, #0
2993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             ( pxPublishParams->xQos == eMQTTQoS0 ? ( uint32_t ) mqttPUBLISH_QOS0_PA
 2535              		.loc 1 2993 0
 2536 0078 7770F2E6 		uxtah	r7, r2, r7
 2537              		.loc 1 2994 0
 2538 007c 0030A003 		moveq	r3, #0
 2539 0080 0230A013 		movne	r3, #2
2993:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             ( pxPublishParams->xQos == eMQTTQoS0 ? ( uint32_t ) mqttPUBLISH_QOS0_PA
 2540              		.loc 1 2993 0
 2541 0084 037087E0 		add	r7, r7, r3
 2542              	.LVL296:
2995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                             pxPublishParams->ulDataLength;
2996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
2997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Calculate the number of bytes occupied by the "Remaining Length" field. */
2998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ucRemainingLengthFieldBytes = prvSizeOfRemainingLength( ulRemainingLength );
 2543              		.loc 1 2998 0
 2544 0088 0700A0E1 		mov	r0, r7
 2545 008c FEFFFFEB 		bl	prvSizeOfRemainingLength
 2546              	.LVL297:
2999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Make sure that "Remaining Length" is within the permissible limits. */
3001:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( ucRemainingLengthFieldBytes > ( uint8_t ) 0 )
 2547              		.loc 1 3001 0
 2548 0090 004050E2 		subs	r4, r0, #0
2969:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2549              		.loc 1 2969 0
 2550 0094 0170A003 		moveq	r7, #1
 2551              	.LVL298:
 2552              		.loc 1 3001 0
 2553 0098 0900000A 		beq	.L300
3002:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3003:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Calculate total MQTT message length. */
3004:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ulTotalMessageLength = mqttTOTAL_MESSAGE_LENGTH( ucRemainingLengthFieldBytes, ulRemaini
 2554              		.loc 1 3004 0
 2555 009c 074084E0 		add	r4, r4, r7
3005:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3006:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Try to get a buffer from the free buffer pool. */
3007:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xBuffer = prvGetFreeBuffer( pxMQTTContext, ulTotalMessageLength );
 2556              		.loc 1 3007 0
 2557 00a0 340096E5 		ldr	r0, [r6, #52]
 2558              	.LVL299:
3004:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2559              		.loc 1 3004 0
 2560 00a4 019084E2 		add	r9, r4, #1
 2561              	.LVL300:
 2562              		.loc 1 3007 0
 2563 00a8 0910A0E1 		mov	r1, r9
 2564 00ac FEFFFFEB 		bl	prvGetFreeBuffer.isra.2
 2565              	.LVL301:
3008:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3009:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xBuffer == NULL )
 2566              		.loc 1 3009 0
 2567 00b0 004050E2 		subs	r4, r0, #0
 2568 00b4 0600001A 		bne	.L302
3010:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3011:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Fail the publish operation immediately, if
3012:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * no free buffer is available. */
3013:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "No free buffer is available to carry out the operation. \r\
3014:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
 2569              		.loc 1 3014 0
 2570 00b8 0570A0E3 		mov	r7, #5
3013:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTNoFreeBuffer;
 2571              		.loc 1 3013 0
 2572 00bc 28019FE5 		ldr	r0, .L324+8
 2573              	.LVL302:
 2574 00c0 FEFFFFEB 		bl	vLoggingPrintf
 2575              	.LVL303:
 2576              	.L300:
3015:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3016:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
3017:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3018:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Add the buffer to the Tx buffer list. */
3019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferLIST_ADD( &( pxMQTTContext->xTxBufferListHead ), xBuffer );
3020:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3021:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* To help debugging only. */
3022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 memset( mqttbufferGET_DATA( xBuffer ), 0x00, mqttbufferGET_EFFECTIVE_BUFFER_LENGTH(
3023:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3024:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Record time-stamp and store timeout. */
3025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_RECORDED_TICK_COUNT( xBuffer ) = prvGetCurrentTickCount( pxMQT
3026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxPublishParams->ulTimeoutTicks;
3027:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3028:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write Control Packet Type. */
3029:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /*_TODO_ Note!  DUP and RETAIN are all currently all set to 0. */
3030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] = mqttCONTROL
3031:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3032:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Set QoS. QoS2 is not supported.*/
3033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigASSERT( pxPublishParams->xQos == eMQTTQoS0 || pxPublishParams->xQos == eM
3034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] |= ( ( ( uint
3035:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3036:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write encoded "Remaining Length" in the fixed header. */
3037:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_REMAINING_LENGTH_O
3038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucLastByteInBuffer = &( mqttbufferGET_DATA( xBuffer )[ mqttbufferGET_EFFECTIVE_BUF
3039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
3040:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3041:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* We should have successfully encoded the remaining length field
3042:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * as we already have a large enough buffer. */
3043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigASSERT( ucRemainingLengthFieldBytes == prvSizeOfRemainingLength( ulRemain
3044:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3045:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the topic into the message (part of variable header). */
3046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = &( mqttbufferGET_DATA( xBuffer )[ mqttADJUST_OFFSET( mqttPUBLISH_TOPI
3047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxPublishParams->pu
3048:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3049:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write packet identifier into the message, if it is not QoS0. */
3050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( pxPublishParams->xQos != eMQTTQoS0 )
3051:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
3052:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write MSB. */
3053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     *pucNextByte = ( uint8_t ) ( ( pxPublishParams->usPacketIdentifier ) >> mqttBIT
3054:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte++;
3055:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3056:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Write LSB. */
3057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     *pucNextByte = ( uint8_t ) ( pxPublishParams->usPacketIdentifier );
3058:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte++;
3059:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
3060:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3061:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Write the payload into the message. */
3062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 memcpy( pucNextByte, pxPublishParams->pvData, ( size_t ) pxPublishParams->ulDataLen
3063:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3064:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Store the packet identifier in TxBuffer also for matching
3065:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * ACK later. */
3066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) = pxPublishParams->usPacketIdentifier;
3067:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3068:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Update the number of bytes written to the buffer. */
3069:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA_LENGTH( xBuffer ) = ulTotalMessageLength;
3070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3071:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* MQTT packet created. */
3072:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xReturnCode = eMQTTSuccess;
3073:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3074:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
3076:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3077:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If the packet was successfully constructed, transmit it. */
3078:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( xReturnCode == eMQTTSuccess )
3079:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
3080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xReturnCode = prvSendData( pxMQTTContext, mqttbufferGET_DATA( xBuffer ), mqttbufferGET_DATA
3081:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
3082:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3083:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* If some error occurred or QOS0 (No ACK is expected in case of QOS0),
3084:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * return the buffer, otherwise it will be returned upon receiving ACK
3085:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * or timeout. */
3086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( ( xReturnCode != eMQTTSuccess ) || ( pxPublishParams->xQos == eMQTTQoS0 ) )
3087:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
3088:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Return the buffer to the free buffer pool. */
3089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         prvReturnBuffer( pxMQTTContext, xBuffer );
 2577              		.loc 1 3089 0
 2578 00c4 0410A0E1 		mov	r1, r4
 2579 00c8 380086E2 		add	r0, r6, #56
 2580 00cc FEFFFFEB 		bl	prvReturnBuffer.isra.6
 2581              	.LVL304:
 2582 00d0 410000EA 		b	.L304
 2583              	.LVL305:
 2584              	.L302:
 2585              	.LBB68:
3019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2586              		.loc 1 3019 0
 2587 00d4 042096E5 		ldr	r2, [r6, #4]
 2588              	.LVL306:
 2589 00d8 103084E2 		add	r3, r4, #16
 2590              	.LBE68:
3022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2591              		.loc 1 3022 0
 2592 00dc 20A084E2 		add	r10, r4, #32
 2593 00e0 0010A0E3 		mov	r1, #0
 2594 00e4 0A00A0E1 		mov	r0, r10
 2595              	.LVL307:
 2596              	.LBB69:
3019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2597              		.loc 1 3019 0
 2598 00e8 142084E5 		str	r2, [r4, #20]
 2599 00ec 003082E5 		str	r3, [r2]
 2600              	.LBE69:
3022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2601              		.loc 1 3022 0
 2602 00f0 182094E5 		ldr	r2, [r4, #24]
 2603              	.LVL308:
 2604              	.LBB70:
3019:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2605              		.loc 1 3019 0
 2606 00f4 043086E5 		str	r3, [r6, #4]
 2607              	.LVL309:
 2608 00f8 106084E5 		str	r6, [r4, #16]
 2609              	.LBE70:
3022:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2610              		.loc 1 3022 0
 2611 00fc 202042E2 		sub	r2, r2, #32
 2612 0100 FEFFFFEB 		bl	memset
 2613              	.LVL310:
3025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxPublishParams->ulTimeoutTicks;
 2614              		.loc 1 3025 0
 2615 0104 300096E5 		ldr	r0, [r6, #48]
 2616 0108 FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 2617              	.LVL311:
3026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2618              		.loc 1 3026 0
 2619 010c 143095E5 		ldr	r3, [r5, #20]
3025:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_PACKET_TIMEOUT_TICKS( xBuffer ) = pxPublishParams->ulTimeoutTicks;
 2620              		.loc 1 3025 0
 2621 0110 F000C4E1 		strd	r0, [r4]
3026:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2622              		.loc 1 3026 0
 2623 0114 083084E5 		str	r3, [r4, #8]
3030:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2624              		.loc 1 3030 0
 2625 0118 3030A0E3 		mov	r3, #48
 2626 011c 2030C4E5 		strb	r3, [r4, #32]
3033:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] |= ( ( ( uint
 2627              		.loc 1 3033 0
 2628 0120 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 2629 0124 010053E3 		cmp	r3, #1
 2630 0128 B7FFFF8A 		bhi	.L299
3038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 2631              		.loc 1 3038 0
 2632 012c 188094E5 		ldr	r8, [r4, #24]
3034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2633              		.loc 1 3034 0
 2634 0130 8330A0E1 		lsl	r3, r3, #1
3039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2635              		.loc 1 3039 0
 2636 0134 211084E2 		add	r1, r4, #33
3034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2637              		.loc 1 3034 0
 2638 0138 303083E3 		orr	r3, r3, #48
3039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2639              		.loc 1 3039 0
 2640 013c 0700A0E1 		mov	r0, r7
3038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 2641              		.loc 1 3038 0
 2642 0140 018048E2 		sub	r8, r8, #1
3034:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2643              		.loc 1 3034 0
 2644 0144 2030C4E5 		strb	r3, [r4, #32]
 2645              	.LVL312:
3038:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ucRemainingLengthFieldBytes = prvEncodeRemainingLength( ulRemainingLength, pucNextB
 2646              		.loc 1 3038 0
 2647 0148 088084E0 		add	r8, r4, r8
 2648              	.LVL313:
3039:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2649              		.loc 1 3039 0
 2650 014c 0820A0E1 		mov	r2, r8
 2651 0150 FEFFFFEB 		bl	prvEncodeRemainingLength
 2652              	.LVL314:
 2653 0154 00B0A0E1 		mov	fp, r0
 2654              	.LVL315:
3043:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2655              		.loc 1 3043 0
 2656 0158 0700A0E1 		mov	r0, r7
 2657 015c FEFFFFEB 		bl	prvSizeOfRemainingLength
 2658              	.LVL316:
 2659 0160 00005BE1 		cmp	fp, r0
 2660 0164 A8FFFF1A 		bne	.L299
3046:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pucNextByte = prvWriteString( pucNextByte, pucLastByteInBuffer, pxPublishParams->pu
 2661              		.loc 1 3046 0
 2662 0168 21008BE2 		add	r0, fp, #33
 2663              	.LVL317:
3047:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2664              		.loc 1 3047 0
 2665 016c B430D5E1 		ldrh	r3, [r5, #4]
 2666 0170 002095E5 		ldr	r2, [r5]
 2667 0174 0810A0E1 		mov	r1, r8
 2668 0178 000084E0 		add	r0, r4, r0
 2669              	.LVL318:
 2670 017c FEFFFFEB 		bl	prvWriteString
 2671              	.LVL319:
3050:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 2672              		.loc 1 3050 0
 2673 0180 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 2674 0184 000053E3 		cmp	r3, #0
3053:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte++;
 2675              		.loc 1 3053 0
 2676 0188 B031D511 		ldrhne	r3, [r5, #16]
 2677 018c 2334A011 		lsrne	r3, r3, #8
 2678 0190 0030C015 		strbne	r3, [r0]
 2679              	.LVL320:
3057:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pucNextByte++;
 2680              		.loc 1 3057 0
 2681 0194 B031D511 		ldrhne	r3, [r5, #16]
 2682 0198 0130C015 		strbne	r3, [r0, #1]
3058:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 2683              		.loc 1 3058 0
 2684 019c 02008012 		addne	r0, r0, #2
 2685              	.LVL321:
3062:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2686              		.loc 1 3062 0
 2687 01a0 0C2095E5 		ldr	r2, [r5, #12]
 2688 01a4 081095E5 		ldr	r1, [r5, #8]
 2689 01a8 FEFFFFEB 		bl	memcpy
 2690              	.LVL322:
3066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2691              		.loc 1 3066 0
 2692 01ac B031D5E1 		ldrh	r3, [r5, #16]
3080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2693              		.loc 1 3080 0
 2694 01b0 0920A0E1 		mov	r2, r9
3069:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2695              		.loc 1 3069 0
 2696 01b4 1C9084E5 		str	r9, [r4, #28]
 2697              	.LVL323:
3080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2698              		.loc 1 3080 0
 2699 01b8 0A10A0E1 		mov	r1, r10
 2700 01bc 0600A0E1 		mov	r0, r6
3066:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2701              		.loc 1 3066 0
 2702 01c0 BC30C4E1 		strh	r3, [r4, #12]	@ movhi
3080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2703              		.loc 1 3080 0
 2704 01c4 FEFFFFEB 		bl	prvSendData
 2705              	.LVL324:
3086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2706              		.loc 1 3086 0
 2707 01c8 007050E2 		subs	r7, r0, #0
 2708 01cc BCFFFF1A 		bne	.L300
3086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2709              		.loc 1 3086 0 is_stmt 0 discriminator 1
 2710 01d0 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 2711 01d4 000053E3 		cmp	r3, #0
 2712 01d8 B9FFFF0A 		beq	.L300
 2713              	.LVL325:
 2714              	.L304:
3090:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
3091:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3092:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
3093:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 2715              		.loc 1 3093 0 is_stmt 1
 2716 01dc 0700A0E1 		mov	r0, r7
 2717 01e0 F88FBDE8 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2718              	.L325:
 2719              		.align	2
 2720              	.L324:
 2721 01e4 28000000 		.word	Unity+40
 2722 01e8 00000000 		.word	.LC6
 2723 01ec 00000000 		.word	.LC0
 2724              		.cfi_endproc
 2725              	.LFE34:
 2727              		.section	.text.MQTT_ParseReceivedData,"ax",%progbits
 2728              		.align	2
 2729              		.global	MQTT_ParseReceivedData
 2730              		.syntax unified
 2731              		.arm
 2732              		.fpu neon
 2734              	MQTT_ParseReceivedData:
 2735              	.LFB35:
3094:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
3095:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3096:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_ParseReceivedData( MQTTContext_t * pxMQTTContext,
3097:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          const uint8_t * pucReceivedData,
3098:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                          size_t xReceivedDataLength )
3099:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 2736              		.loc 1 3099 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 64
 2739              		@ frame_needed = 0, uses_anonymous_args = 0
 2740              	.LVL326:
 2741 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2742              		.cfi_def_cfa_offset 36
 2743              		.cfi_offset 4, -36
 2744              		.cfi_offset 5, -32
 2745              		.cfi_offset 6, -28
 2746              		.cfi_offset 7, -24
 2747              		.cfi_offset 8, -20
 2748              		.cfi_offset 9, -16
 2749              		.cfi_offset 10, -12
 2750              		.cfi_offset 11, -8
 2751              		.cfi_offset 14, -4
3100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSuccess;
3101:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
3102:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     size_t xProcessedBytes = 0, xExpectedBytes, xUnprocessedBytes;
3103:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3104:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
3105:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
3106:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 2752              		.loc 1 3106 0
 2753 0004 004050E2 		subs	r4, r0, #0
3099:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTReturnCode_t xReturnCode = eMQTTSuccess;
 2754              		.loc 1 3099 0
 2755 0008 4CD04DE2 		sub	sp, sp, #76
 2756              		.cfi_def_cfa_offset 112
 2757              		.loc 1 3106 0
 2758 000c 0200001A 		bne	.L327
 2759              	.LVL327:
 2760              	.L328:
 2761              		.loc 1 3106 0 is_stmt 0 discriminator 1
 2762 0010 0110A0E3 		mov	r1, #1
 2763 0014 0C089FE5 		ldr	r0, .L436
 2764 0018 FEFFFFEB 		bl	longjmp
 2765              	.LVL328:
 2766              	.L327:
3107:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 2767              		.loc 1 3107 0 is_stmt 1
 2768 001c 343094E5 		ldr	r3, [r4, #52]
 2769 0020 000053E3 		cmp	r3, #0
 2770 0024 F9FFFF0A 		beq	.L328
3108:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 2771              		.loc 1 3108 0
 2772 0028 383094E5 		ldr	r3, [r4, #56]
 2773 002c 000053E3 		cmp	r3, #0
 2774 0030 F6FFFF0A 		beq	.L328
3109:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pucReceivedData != NULL );
 2775              		.loc 1 3109 0
 2776 0034 000051E3 		cmp	r1, #0
 2777 0038 0180A0E1 		mov	r8, r1
 2778 003c F3FFFF0A 		beq	.L328
 2779              	.LBB97:
 2780              	.LBB98:
 2781              	.LBB99:
 2782              	.LBB100:
1224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 2783              		.loc 1 1224 0
 2784 0040 E4B79FE5 		ldr	fp, .L436+4
 2785 0044 0270A0E1 		mov	r7, r2
 2786              	.LBE100:
 2787              	.LBE99:
 2788              	.LBE98:
 2789              	.LBE97:
 2790 0048 0060A0E3 		mov	r6, #0
 2791              	.LVL329:
 2792              	.L329:
3110:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3111:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Keep processing until all the supplied bytes are over. */
3112:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     while( xProcessedBytes < xReceivedDataLength )
 2793              		.loc 1 3112 0
 2794 004c 070056E1 		cmp	r6, r7
3100:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
 2795              		.loc 1 3100 0
 2796 0050 0000A023 		movcs	r0, #0
 2797 0054 2E00002A 		bcs	.L415
 2798              	.L392:
3113:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
3114:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Do not process any data received on the client
3115:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * which is not connected. This check needs to be in
3116:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * the loop because one iteration of the loop can result
3117:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * in client getting disconnected because of a malformed
3118:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * packet. */
3119:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pxMQTTContext->xConnectionState == eMQTTNotConnected )
 2799              		.loc 1 3119 0
 2800 0058 3C30D4E5 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2801 005c 000053E3 		cmp	r3, #0
 2802 0060 CD01000A 		beq	.L395
3120:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xReturnCode = eMQTTClientNotConnected;
3122:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3123:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Stop. */
3124:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             break;
3125:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3126:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3127:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( pxMQTTContext->xRxMessageState.xRxNextByte == eMQTTRxNextBytePacketType )
 2803              		.loc 1 3127 0
 2804 0064 0C50D4E5 		ldrb	r5, [r4, #12]	@ zero_extendqisi2
 2805 0068 000055E3 		cmp	r5, #0
 2806 006c 0C00001A 		bne	.L331
3128:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Looking for the start of a new MQTT message, which always begins with
3130:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * one byte containing packet type and related flags. */
3131:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttconfigASSERT( pxMQTTContext->ulRxMessageReceivedLength == 0 );
 2807              		.loc 1 3131 0
 2808 0070 1C3094E5 		ldr	r3, [r4, #28]
 2809 0074 000053E3 		cmp	r3, #0
 2810 0078 E4FFFF1A 		bne	.L328
3132:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttconfigASSERT( pxMQTTContext->xRxBuffer == NULL );
 2811              		.loc 1 3132 0
 2812 007c 083094E5 		ldr	r3, [r4, #8]
 2813 0080 000053E3 		cmp	r3, #0
 2814 0084 E1FFFF1A 		bne	.L328
3133:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3134:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* We always write the packet type and "Remaining Length" in the fixed
3135:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * header buffer so that we can decode the packet length even if no user
3136:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * supplied buffer is available. This enables us to drop a packet if no
3137:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * free buffer is available because we know how many bytes to drop before
3138:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * the next packet starts. */
3139:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3140:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Copy one byte containing packet type and flags. */
3141:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttCOPY_BYTES( pucReceivedData, xProcessedBytes, pxMQTTContext->ucRxFixedHeaderBuffer,
 2815              		.loc 1 3141 0
 2816 0088 0630D8E7 		ldrb	r3, [r8, r6]	@ zero_extendqisi2
 2817 008c 016086E2 		add	r6, r6, #1
 2818              	.LVL330:
 2819 0090 1430C4E5 		strb	r3, [r4, #20]
 2820 0094 0130A0E3 		mov	r3, #1
 2821 0098 1C3084E5 		str	r3, [r4, #28]
3142:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3143:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Next bytes will contain "Remaining Length" field. */
3144:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextBytePacketLength;
 2822              		.loc 1 3144 0
 2823 009c 0C30C4E5 		strb	r3, [r4, #12]
 2824 00a0 E9FFFFEA 		b	.L329
 2825              	.L331:
3145:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3146:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else if( pxMQTTContext->xRxMessageState.xRxNextByte == eMQTTRxNextBytePacketLength )
 2826              		.loc 1 3146 0
 2827 00a4 010055E3 		cmp	r5, #1
 2828 00a8 5800001A 		bne	.L333
3147:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3148:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Receiving "Remaining Length" field which is part of fixed header. */
3149:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttconfigASSERT( pxMQTTContext->ulRxMessageReceivedLength < mqttFIXED_HEADER_MAX_SIZE 
 2829              		.loc 1 3149 0
 2830 00ac 1C3094E5 		ldr	r3, [r4, #28]
 2831 00b0 040053E3 		cmp	r3, #4
 2832 00b4 D5FFFF8A 		bhi	.L328
3150:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3151:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             mqttCOPY_BYTES( pucReceivedData, xProcessedBytes, pxMQTTContext->ucRxFixedHeaderBuffer,
 2833              		.loc 1 3151 0
 2834 00b8 0610D8E7 		ldrb	r1, [r8, r6]	@ zero_extendqisi2
 2835 00bc 032084E0 		add	r2, r4, r3
 2836 00c0 013083E2 		add	r3, r3, #1
 2837 00c4 016086E2 		add	r6, r6, #1
 2838              	.LVL331:
 2839 00c8 1410C2E5 		strb	r1, [r2, #20]
 2840 00cc 1C3084E5 		str	r3, [r4, #28]
3152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3153:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Are there more bytes containing packet length i.e. is the "continuation bit"
3154:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * set in the received length byte? */
3155:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( ( ( pxMQTTContext->ucRxFixedHeaderBuffer[ pxMQTTContext->ulRxMessageReceivedLength 
 2841              		.loc 1 3155 0
 2842 00d0 D421D2E1 		ldrsb	r2, [r2, #20]
 2843 00d4 000052E3 		cmp	r2, #0
 2844 00d8 0F0000AA 		bge	.L334
3156:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* "Remaining Length" field cannot span more than 4 bytes. */
3158:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( pxMQTTContext->ulRxMessageReceivedLength >= ( uint32_t ) mqttFIXED_HEADER_MAX_S
 2845              		.loc 1 3158 0
 2846 00dc 050053E3 		cmp	r3, #5
 2847 00e0 D9FFFF1A 		bne	.L329
3159:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
3160:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     mqttconfigDEBUG_LOG( ( "Packet with malformed \"Remaining Length\" received.\r\
 2848              		.loc 1 3160 0
 2849 00e4 44079FE5 		ldr	r0, .L436+8
 2850 00e8 FEFFFFEB 		bl	vLoggingPrintf
 2851              	.LVL332:
3161:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* A malformed packet has been received - disconnect. */
3163:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     prvResetMQTTContext( pxMQTTContext );
 2852              		.loc 1 3163 0
 2853 00ec 0400A0E1 		mov	r0, r4
 2854 00f0 FEFFFFEB 		bl	prvResetMQTTContext
 2855              	.LVL333:
3164:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3165:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Inform user about the malformed packet received. */
3166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.xEventType = eMQTTClientDisconnected;
 2856              		.loc 1 3166 0
 2857 00f4 0930A0E3 		mov	r3, #9
3167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReaso
3168:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 2858              		.loc 1 3168 0
 2859 00f8 10108DE2 		add	r1, sp, #16
3166:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReaso
 2860              		.loc 1 3166 0
 2861 00fc 1030CDE5 		strb	r3, [sp, #16]
 2862              		.loc 1 3168 0
 2863 0100 0400A0E1 		mov	r0, r4
3167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReaso
 2864              		.loc 1 3167 0
 2865 0104 0030A0E3 		mov	r3, #0
 2866 0108 1430CDE5 		strb	r3, [sp, #20]
 2867              		.loc 1 3168 0
 2868 010c FEFFFFEB 		bl	prvInvokeCallback
 2869              	.LVL334:
3169:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3170:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xReturnCode = eMQTTMalformedPacketReceived;
 2870              		.loc 1 3170 0
 2871 0110 0700A0E3 		mov	r0, #7
 2872              	.LVL335:
 2873              	.L415:
3171:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     break;
3172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
3173:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3174:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
3175:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3176:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Packet length has been received, decode it. */
3177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pxMQTTContext->xRxMessageState.ucRemaingingLengthFieldBytes = prvDecodeRemainingLen
3178:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
3179:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttconfigDEBUG_LOG( ( "Received fixed header, %d bytes to receive.\r\n", pxMQTTCon
3181:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3182:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* "Remaining Length" does not include the length of fixed
3183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * header, so this needs to be added. */
3184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pxMQTTContext->xRxMessageState.ulTotalMessageLength += pxMQTTContext->ulRxMessageRe
3185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3186:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Does the message contain anything after fixed header? */
3187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( pxMQTTContext->xRxMessageState.ulTotalMessageLength == pxMQTTContext->ulRxMessa
3188:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
3189:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /*..if not, process it. */
3190:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     prvProcessReceivedFixedHeaderOnlyMQTTPacket( pxMQTTContext );
3191:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3192:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Complete message received, start looking for the start of
3193:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * the next. */
3194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     prvResetRxMessageState( pxMQTTContext );
3195:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
3196:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 else
3197:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
3198:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Get a buffer to store the received message. */
3199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxMQTTContext->xRxBuffer = prvGetFreeBuffer( pxMQTTContext, pxMQTTContext->xRxM
3200:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3201:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If we got a large enough free buffer, store the rest of the message. */
3202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( pxMQTTContext->xRxBuffer != NULL )
3203:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
3204:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* Copy the fixed header in the Rx buffer. */
3205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         memcpy( mqttbufferGET_DATA( pxMQTTContext->xRxBuffer ), pxMQTTContext->ucRx
3206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         mqttbufferGET_DATA_LENGTH( pxMQTTContext->xRxBuffer ) = pxMQTTContext->ulRx
3207:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextByteMessage;
3209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageStore; /*_T
3210:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
3211:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     else
3212:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
3213:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* Otherwise drop the message. */
3214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextByteMessage;
3215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageDrop;
3216:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3217:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         /* If a buffer was received and we are dropping because it is not
3218:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * large enough, return the buffer to the free buffer pool so that it
3219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                          * can be used for other operations. */
3220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         prvReturnBuffer( pxMQTTContext, pxMQTTContext->xRxBuffer );
3221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxBuffer = NULL;
3222:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
3223:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
3224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3225:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else if( ( pxMQTTContext->xRxMessageState.xRxNextByte == eMQTTRxNextByteMessage ) && ( pxMQ
3227:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xExpectedBytes = pxMQTTContext->xRxMessageState.ulTotalMessageLength - mqttbufferGET_DA
3229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnprocessedBytes = xReceivedDataLength - xProcessedBytes;                             
3230:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3231:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* If complete message has not been received, just copy the bytes
3232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * and keep waiting for the remaining ones. */
3233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xUnprocessedBytes < xExpectedBytes )
3234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttCOPY_BYTES( pucReceivedData, xProcessedBytes, mqttbufferGET_DATA( pxMQTTContext
3236:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3237:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
3238:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Sufficient bytes to form a complete packet have been received. */
3240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 mqttCOPY_BYTES( pucReceivedData, xProcessedBytes, mqttbufferGET_DATA( pxMQTTContext
3241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3242:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Process the received packet. */
3243:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvProcessReceivedMQTTPacket( pxMQTTContext );
3244:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3245:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Reset Rx state to receive next packet. */
3246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvResetRxMessageState( pxMQTTContext );
3247:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3248:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else if( ( pxMQTTContext->xRxMessageState.xRxNextByte == eMQTTRxNextByteMessage ) && ( pxMQ
3250:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xExpectedBytes = pxMQTTContext->xRxMessageState.ulTotalMessageLength - pxMQTTContext->u
3252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnprocessedBytes = xReceivedDataLength - xProcessedBytes;                             
3253:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3254:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* If complete message has not been received, just drop the bytes
3255:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * and keep waiting for the remaining ones. */
3256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( xUnprocessedBytes < xExpectedBytes )
3257:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3258:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xProcessedBytes += xUnprocessedBytes;
3259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pxMQTTContext->ulRxMessageReceivedLength += ( uint32_t ) xUnprocessedBytes;
3260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3261:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
3262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3263:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Sufficient bytes to form a complete packet have been received. */
3264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xProcessedBytes += xExpectedBytes;
3265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pxMQTTContext->ulRxMessageReceivedLength += ( uint32_t ) xExpectedBytes;
3266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3267:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Complete packet dropped. */
3268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTPacketDropped;
3269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
3270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3271:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Reset Rx state to receive next packet. */
3272:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvResetRxMessageState( pxMQTTContext );
3273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3275:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
3276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3277:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* Should not reach here. */
3278:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3279:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
3280:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return xReturnCode;
3282:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 2874              		.loc 1 3282 0
 2875 0114 4CD08DE2 		add	sp, sp, #76
 2876              		.cfi_remember_state
 2877              		.cfi_def_cfa_offset 36
 2878              		@ sp needed
 2879 0118 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2880              	.LVL336:
 2881              	.L334:
 2882              		.cfi_restore_state
3177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 2883              		.loc 1 3177 0
 2884 011c 101084E2 		add	r1, r4, #16
 2885 0120 150084E2 		add	r0, r4, #21
 2886 0124 FEFFFFEB 		bl	prvDecodeRemainingLength
 2887              	.LVL337:
3180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2888              		.loc 1 3180 0
 2889 0128 101094E5 		ldr	r1, [r4, #16]
3177:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 2890              		.loc 1 3177 0
 2891 012c 0E00C4E5 		strb	r0, [r4, #14]
3180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2892              		.loc 1 3180 0
 2893 0130 FC069FE5 		ldr	r0, .L436+12
 2894 0134 FEFFFFEB 		bl	vLoggingPrintf
 2895              	.LVL338:
3184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2896              		.loc 1 3184 0
 2897 0138 1C3094E5 		ldr	r3, [r4, #28]
 2898 013c 101094E5 		ldr	r1, [r4, #16]
 2899 0140 011083E0 		add	r1, r3, r1
3187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 2900              		.loc 1 3187 0
 2901 0144 010053E1 		cmp	r3, r1
3184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2902              		.loc 1 3184 0
 2903 0148 101084E5 		str	r1, [r4, #16]
3187:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 2904              		.loc 1 3187 0
 2905 014c 1500001A 		bne	.L335
 2906              	.LVL339:
 2907              	.LBB141:
 2908              	.LBB142:
1129:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2909              		.loc 1 1129 0
 2910 0150 1420D4E5 		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 2911 0154 D00052E3 		cmp	r2, #208
 2912 0158 0700001A 		bne	.L387
 2913              	.LVL340:
 2914              	.LBB143:
 2915              	.LBB144:
1629:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 2916              		.loc 1 1629 0
 2917 015c 010053E3 		cmp	r3, #1
 2918 0160 0500009A 		bls	.L387
1631:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 2919              		.loc 1 1631 0
 2920 0164 0220A0E3 		mov	r2, #2
 2921 0168 C8169FE5 		ldr	r1, .L436+16
 2922 016c 140084E2 		add	r0, r4, #20
 2923 0170 FEFFFFEB 		bl	memcmp
 2924              	.LVL341:
 2925 0174 000050E3 		cmp	r0, #0
 2926 0178 8901000A 		beq	.L338
 2927              	.LVL342:
 2928              	.L387:
 2929              	.LBE144:
 2930              	.LBE143:
 2931              	.LBE142:
 2932              	.LBE141:
 2933              	.LBB151:
 2934              	.LBB135:
1180:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2935              		.loc 1 1180 0
 2936 017c 0400A0E1 		mov	r0, r4
 2937 0180 FEFFFFEB 		bl	prvResetMQTTContext
 2938              	.LVL343:
1183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
 2939              		.loc 1 1183 0
 2940 0184 0930A0E3 		mov	r3, #9
1185:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 2941              		.loc 1 1185 0
 2942 0188 2C108DE2 		add	r1, sp, #44
1183:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
 2943              		.loc 1 1183 0
 2944 018c 2C30CDE5 		strb	r3, [sp, #44]
1184:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 2945              		.loc 1 1184 0
 2946 0190 0030A0E3 		mov	r3, #0
 2947 0194 3030CDE5 		strb	r3, [sp, #48]
 2948 0198 750000EA 		b	.L434
 2949              	.LVL344:
 2950              	.L418:
 2951              	.LBE135:
 2952              	.LBE151:
 2953              	.LBB152:
 2954              	.LBB149:
 2955              	.LBB147:
 2956              	.LBB145:
1656:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 2957              		.loc 1 1656 0
 2958 019c 98069FE5 		ldr	r0, .L436+20
 2959 01a0 FEFFFFEB 		bl	vLoggingPrintf
 2960              	.LVL345:
 2961 01a4 880100EA 		b	.L431
 2962              	.LVL346:
 2963              	.L335:
 2964              	.LBE145:
 2965              	.LBE147:
 2966              	.LBE149:
 2967              	.LBE152:
3199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2968              		.loc 1 3199 0
 2969 01a8 340094E5 		ldr	r0, [r4, #52]
 2970 01ac FEFFFFEB 		bl	prvGetFreeBuffer.isra.2
 2971              	.LVL347:
3202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 2972              		.loc 1 3202 0
 2973 01b0 000050E3 		cmp	r0, #0
3199:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2974              		.loc 1 3199 0
 2975 01b4 0090A0E1 		mov	r9, r0
 2976 01b8 080084E5 		str	r0, [r4, #8]
3202:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 2977              		.loc 1 3202 0
 2978 01bc 0B00000A 		beq	.L341
3205:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         mqttbufferGET_DATA_LENGTH( pxMQTTContext->xRxBuffer ) = pxMQTTContext->ulRx
 2979              		.loc 1 3205 0
 2980 01c0 1C2094E5 		ldr	r2, [r4, #28]
 2981 01c4 141084E2 		add	r1, r4, #20
 2982 01c8 200080E2 		add	r0, r0, #32
 2983 01cc FEFFFFEB 		bl	memcpy
 2984              	.LVL348:
3206:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 2985              		.loc 1 3206 0
 2986 01d0 083094E5 		ldr	r3, [r4, #8]
 2987 01d4 1C2094E5 		ldr	r2, [r4, #28]
 2988 01d8 1C2083E5 		str	r2, [r3, #28]
3208:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageStore; /*_T
 2989              		.loc 1 3208 0
 2990 01dc 0230A0E3 		mov	r3, #2
 2991 01e0 0C30C4E5 		strb	r3, [r4, #12]
3209:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 2992              		.loc 1 3209 0
 2993 01e4 0030A0E3 		mov	r3, #0
 2994 01e8 0D30C4E5 		strb	r3, [r4, #13]
 2995 01ec 96FFFFEA 		b	.L329
 2996              	.L341:
3214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageDrop;
 2997              		.loc 1 3214 0
 2998 01f0 0230A0E3 		mov	r3, #2
3220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxBuffer = NULL;
 2999              		.loc 1 3220 0
 3000 01f4 0010A0E1 		mov	r1, r0
3214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageDrop;
 3001              		.loc 1 3214 0
 3002 01f8 0C30C4E5 		strb	r3, [r4, #12]
3220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxBuffer = NULL;
 3003              		.loc 1 3220 0
 3004 01fc 380084E2 		add	r0, r4, #56
3215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3005              		.loc 1 3215 0
 3006 0200 0D50C4E5 		strb	r5, [r4, #13]
3220:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         pxMQTTContext->xRxBuffer = NULL;
 3007              		.loc 1 3220 0
 3008 0204 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 3009              	.LVL349:
3221:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 3010              		.loc 1 3221 0
 3011 0208 089084E5 		str	r9, [r4, #8]
 3012 020c 8EFFFFEA 		b	.L329
 3013              	.L333:
3226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3014              		.loc 1 3226 0
 3015 0210 BC30D4E1 		ldrh	r3, [r4, #12]
 3016 0214 020053E3 		cmp	r3, #2
 3017 0218 4E01001A 		bne	.L342
3228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnprocessedBytes = xReceivedDataLength - xProcessedBytes;                             
 3018              		.loc 1 3228 0
 3019 021c 080094E5 		ldr	r0, [r4, #8]
3229:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3020              		.loc 1 3229 0
 3021 0220 065047E0 		sub	r5, r7, r6
3228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnprocessedBytes = xReceivedDataLength - xProcessedBytes;                             
 3022              		.loc 1 3228 0
 3023 0224 102094E5 		ldr	r2, [r4, #16]
 3024 0228 061088E0 		add	r1, r8, r6
 3025 022c 1C3090E5 		ldr	r3, [r0, #28]
 3026 0230 039042E0 		sub	r9, r2, r3
 3027              	.LVL350:
 3028 0234 203083E2 		add	r3, r3, #32
3233:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 3029              		.loc 1 3233 0
 3030 0238 050059E1 		cmp	r9, r5
 3031 023c 0800009A 		bls	.L343
3235:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3032              		.loc 1 3235 0
 3033 0240 0520A0E1 		mov	r2, r5
 3034 0244 030080E0 		add	r0, r0, r3
 3035 0248 FEFFFFEB 		bl	memcpy
 3036              	.LVL351:
 3037 024c 082094E5 		ldr	r2, [r4, #8]
 3038 0250 1C3092E5 		ldr	r3, [r2, #28]
 3039 0254 055083E0 		add	r5, r3, r5
 3040              	.LVL352:
 3041 0258 1C5082E5 		str	r5, [r2, #28]
 3042              	.LVL353:
 3043              	.L432:
 3044 025c 0760A0E1 		mov	r6, r7
 3045 0260 79FFFFEA 		b	.L329
 3046              	.LVL354:
 3047              	.L343:
3240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3048              		.loc 1 3240 0
 3049 0264 0920A0E1 		mov	r2, r9
 3050 0268 030080E0 		add	r0, r0, r3
 3051 026c FEFFFFEB 		bl	memcpy
 3052              	.LVL355:
 3053 0270 085094E5 		ldr	r5, [r4, #8]
 3054              	.LVL356:
 3055 0274 096086E0 		add	r6, r6, r9
 3056              	.LVL357:
 3057              	.LBB153:
 3058              	.LBB136:
1152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3059              		.loc 1 1152 0
 3060 0278 2030D5E5 		ldrb	r3, [r5, #32]	@ zero_extendqisi2
 3061              	.LBE136:
 3062              	.LBE153:
3240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3063              		.loc 1 3240 0
 3064 027c 1C2095E5 		ldr	r2, [r5, #28]
 3065              	.LBB154:
 3066              	.LBB137:
1152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3067              		.loc 1 1152 0
 3068 0280 F01003E2 		and	r1, r3, #240
 3069 0284 300051E3 		cmp	r1, #48
 3070              	.LBE137:
 3071              	.LBE154:
3240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3072              		.loc 1 3240 0
 3073 0288 022089E0 		add	r2, r9, r2
 3074 028c 1C2085E5 		str	r2, [r5, #28]
 3075              	.LVL358:
 3076              	.LBB155:
 3077              	.LBB138:
1152:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3078              		.loc 1 1152 0
 3079 0290 3A00001A 		bne	.L344
 3080              	.LBB107:
 3081              	.LBB108:
1690:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3082              		.loc 1 1690 0
 3083 0294 D330E1E7 		ubfx	r3, r3, #1, #2
 3084              	.LVL359:
1687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3085              		.loc 1 1687 0
 3086 0298 00A0A0E3 		mov	r10, #0
1693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3087              		.loc 1 1693 0
 3088 029c 010053E3 		cmp	r3, #1
1687:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3089              		.loc 1 1687 0
 3090 02a0 48908DE2 		add	r9, sp, #72
 3091              	.LVL360:
 3092 02a4 1CA069E5 		strb	r10, [r9, #-28]!
1693:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3093              		.loc 1 1693 0
 3094 02a8 2B00008A 		bhi	.L345
1707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3095              		.loc 1 1707 0
 3096 02ac 0E10D4E5 		ldrb	r1, [r4, #14]	@ zero_extendqisi2
1703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3097              		.loc 1 1703 0
 3098 02b0 0A0053E1 		cmp	r3, r10
1695:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3099              		.loc 1 1695 0
 3100 02b4 3030CDE5 		strb	r3, [sp, #48]
1703:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3101              		.loc 1 1703 0
 3102 02b8 0A20A001 		moveq	r2, r10
 3103 02bc 0220A013 		movne	r2, #2
 3104              	.LVL361:
1707:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3105              		.loc 1 1707 0
 3106 02c0 010085E0 		add	r0, r5, r1
 3107 02c4 2130D0E5 		ldrb	r3, [r0, #33]	@ zero_extendqisi2
 3108              	.LVL362:
1709:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xPublishData.usTopicLength |= ( uint16_t ) mqttbufferGET_DATA( pxMQT
 3109              		.loc 1 1709 0
 3110 02c8 0334A0E1 		lsl	r3, r3, #8
 3111 02cc B833CDE1 		strh	r3, [sp, #56]	@ movhi
1710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3112              		.loc 1 1710 0
 3113 02d0 2200D0E5 		ldrb	r0, [r0, #34]	@ zero_extendqisi2
1732:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3114              		.loc 1 1732 0
 3115 02d4 44508DE5 		str	r5, [sp, #68]
1710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3116              		.loc 1 1710 0
 3117 02d8 003083E1 		orr	r3, r3, r0
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3118              		.loc 1 1714 0
 3119 02dc 230081E2 		add	r0, r1, #35
1710:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3120              		.loc 1 1710 0
 3121 02e0 B833CDE1 		strh	r3, [sp, #56]	@ movhi
1719:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3122              		.loc 1 1719 0
 3123 02e4 013083E0 		add	r3, r3, r1
1720:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3124              		.loc 1 1720 0
 3125 02e8 031082E0 		add	r1, r2, r3
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3126              		.loc 1 1714 0
 3127 02ec 000085E0 		add	r0, r5, r0
1718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3128              		.loc 1 1718 0
 3129 02f0 232081E2 		add	r2, r1, #35
 3130              	.LVL363:
1714:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3131              		.loc 1 1714 0
 3132 02f4 34008DE5 		str	r0, [sp, #52]
1718:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3133              		.loc 1 1718 0
 3134 02f8 022085E0 		add	r2, r5, r2
 3135 02fc 3C208DE5 		str	r2, [sp, #60]
1726:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3136              		.loc 1 1726 0
 3137 0300 102094E5 		ldr	r2, [r4, #16]
 3138 0304 032042E2 		sub	r2, r2, #3
 3139 0308 012042E0 		sub	r2, r2, r1
 3140 030c 40208DE5 		str	r2, [sp, #64]
1736:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3141              		.loc 1 1736 0
 3142 0310 0800000A 		beq	.L347
1740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3143              		.loc 1 1740 0
 3144 0314 035085E0 		add	r5, r5, r3
 3145 0318 20159FE5 		ldr	r1, .L436+24
 3146 031c 2330D5E5 		ldrb	r3, [r5, #35]	@ zero_extendqisi2
1751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3147              		.loc 1 1751 0
 3148 0320 0420A0E3 		mov	r2, #4
 3149 0324 0400A0E1 		mov	r0, r4
1740:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3150              		.loc 1 1740 0
 3151 0328 0230C1E5 		strb	r3, [r1, #2]
1743:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3152              		.loc 1 1743 0
 3153 032c 2430D5E5 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
 3154 0330 0330C1E5 		strb	r3, [r1, #3]
1751:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3155              		.loc 1 1751 0
 3156 0334 FEFFFFEB 		bl	prvSendData
 3157              	.LVL364:
 3158              	.L347:
1756:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3159              		.loc 1 1756 0
 3160 0338 0910A0E1 		mov	r1, r9
 3161 033c 0400A0E1 		mov	r0, r4
 3162 0340 FEFFFFEB 		bl	prvInvokeCallback
 3163              	.LVL365:
 3164 0344 000050E3 		cmp	r0, #0
 3165 0348 1F01001A 		bne	.L431
 3166              	.L378:
 3167              	.LBE108:
 3168              	.LBE107:
 3169              	.LBB110:
 3170              	.LBB111:
1614:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 3171              		.loc 1 1614 0
 3172 034c 081094E5 		ldr	r1, [r4, #8]
 3173 0350 380084E2 		add	r0, r4, #56
 3174              	.L430:
 3175              	.LBE111:
 3176              	.LBE110:
 3177              	.LBB119:
 3178              	.LBB120:
1534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 3179              		.loc 1 1534 0
 3180 0354 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 3181              	.LVL366:
 3182 0358 1B0100EA 		b	.L431
 3183              	.LVL367:
 3184              	.L345:
 3185              	.LBE120:
 3186              	.LBE119:
 3187              	.LBB124:
 3188              	.LBB109:
1765:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3189              		.loc 1 1765 0
 3190 035c 0400A0E1 		mov	r0, r4
 3191 0360 FEFFFFEB 		bl	prvResetMQTTContext
 3192              	.LVL368:
1770:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3193              		.loc 1 1770 0
 3194 0364 0910A0E1 		mov	r1, r9
1768:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
 3195              		.loc 1 1768 0
 3196 0368 0930A0E3 		mov	r3, #9
 3197 036c 2C30CDE5 		strb	r3, [sp, #44]
1769:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3198              		.loc 1 1769 0
 3199 0370 30A0CDE5 		strb	r10, [sp, #48]
 3200              	.LVL369:
 3201              	.L434:
 3202              	.LBE109:
 3203              	.LBE124:
 3204              	.LBE138:
 3205              	.LBE155:
3269:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3206              		.loc 1 3269 0
 3207 0374 0400A0E1 		mov	r0, r4
 3208 0378 FEFFFFEB 		bl	prvInvokeCallback
 3209              	.LVL370:
 3210 037c 120100EA 		b	.L431
 3211              	.LVL371:
 3212              	.L344:
 3213              	.LBB156:
 3214              	.LBB139:
1157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3215              		.loc 1 1157 0
 3216 0380 200053E3 		cmp	r3, #32
 3217              	.LBB125:
 3218              	.LBB105:
 3219              	.LBB101:
 3220              	.LBB102:
 900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3221              		.loc 1 900 0
 3222 0384 04309405 		ldreq	r3, [r4, #4]
 3223              	.LBE102:
 3224              	.LBE101:
 3225              	.LBE105:
 3226              	.LBE125:
1157:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3227              		.loc 1 1157 0
 3228 0388 1F00000A 		beq	.L351
1162:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3229              		.loc 1 1162 0
 3230 038c 400053E3 		cmp	r3, #64
 3231 0390 9800001A 		bne	.L371
 3232              	.LVL372:
 3233              	.LBB126:
 3234              	.LBB116:
1553:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3235              		.loc 1 1553 0
 3236 0394 030052E3 		cmp	r2, #3
 3237 0398 1301009A 		bls	.L372
1558:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3238              		.loc 1 1558 0
 3239 039c 0220A0E3 		mov	r2, #2
 3240 03a0 201085E2 		add	r1, r5, #32
 3241 03a4 98049FE5 		ldr	r0, .L436+28
 3242 03a8 FEFFFFEB 		bl	memcmp
 3243              	.LVL373:
 3244 03ac 000050E3 		cmp	r0, #0
 3245 03b0 0D01001A 		bne	.L372
1562:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3246              		.loc 1 1562 0
 3247 03b4 0E30D4E5 		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3248 03b8 035085E0 		add	r5, r5, r3
 3249 03bc 2120D5E5 		ldrb	r2, [r5, #33]	@ zero_extendqisi2
 3250              	.LVL374:
1565:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3251              		.loc 1 1565 0
 3252 03c0 2230D5E5 		ldrb	r3, [r5, #34]	@ zero_extendqisi2
 3253 03c4 023483E1 		orr	r3, r3, r2, lsl #8
 3254              	.LVL375:
 3255              	.LBB112:
 3256              	.LBB113:
 968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3257              		.loc 1 968 0
 3258 03c8 042094E5 		ldr	r2, [r4, #4]
 3259              	.LVL376:
 3260              	.L373:
 3261 03cc 040052E1 		cmp	r2, r4
 3262 03d0 7400001A 		bne	.L376
 3263              	.LVL377:
 3264              	.LBE113:
 3265              	.LBE112:
1574:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3266              		.loc 1 1574 0
 3267 03d4 48108DE2 		add	r1, sp, #72
 3268 03d8 0430A0E3 		mov	r3, #4
 3269              	.LVL378:
 3270 03dc 1C3061E5 		strb	r3, [r1, #-28]!
 3271              	.LVL379:
 3272              	.L425:
1575:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3273              		.loc 1 1575 0
 3274 03e0 0400A0E1 		mov	r0, r4
 3275 03e4 FEFFFFEB 		bl	prvInvokeCallback
 3276              	.LVL380:
 3277 03e8 D7FFFFEA 		b	.L378
 3278              	.LVL381:
 3279              	.L354:
 3280              	.LBE116:
 3281              	.LBE126:
 3282              	.LBB127:
 3283              	.LBB106:
 3284              	.LBB104:
 3285              	.LBB103:
 902:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3286              		.loc 1 902 0
 3287 03ec 10A043E2 		sub	r10, r3, #16
 3288              	.LVL382:
 906:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( ( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] & mqttLOWER_N
 3289              		.loc 1 906 0
 3290 03f0 2090DAE5 		ldrb	r9, [r10, #32]	@ zero_extendqisi2
 3291 03f4 F01009E2 		and	r1, r9, #240
 3292 03f8 100051E3 		cmp	r1, #16
 3293 03fc 0100001A 		bne	.L352
 3294 0400 0F9019E2 		ands	r9, r9, #15
 3295 0404 2300000A 		beq	.L353
 3296              	.L352:
 900:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3297              		.loc 1 900 0
 3298 0408 043093E5 		ldr	r3, [r3, #4]
 3299              	.LVL383:
 3300              	.L351:
 3301 040c 040053E1 		cmp	r3, r4
 3302 0410 F5FFFF1A 		bne	.L354
 3303              	.LVL384:
 3304              	.LBE103:
 3305              	.LBE104:
1214:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3306              		.loc 1 1214 0
 3307 0414 0230A0E3 		mov	r3, #2
 3308 0418 48108DE2 		add	r1, sp, #72
 3309 041c 1C3061E5 		strb	r3, [r1, #-28]!
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3310              		.loc 1 1194 0
 3311 0420 0050A0E3 		mov	r5, #0
1215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3312              		.loc 1 1215 0
 3313 0424 0400A0E1 		mov	r0, r4
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3314              		.loc 1 1194 0
 3315 0428 0590A0E1 		mov	r9, r5
1215:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3316              		.loc 1 1215 0
 3317 042c FEFFFFEB 		bl	prvInvokeCallback
 3318              	.LVL385:
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3319              		.loc 1 1194 0
 3320 0430 0530A0E1 		mov	r3, r5
 3321              	.L358:
 3322              	.LVL386:
1308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3323              		.loc 1 1308 0
 3324 0434 053093E1 		orrs	r3, r3, r5
 3325              	.LVL387:
 3326 0438 0A00000A 		beq	.L367
1310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.xEventType = eMQTTClientDisconnected;
 3327              		.loc 1 1310 0
 3328 043c 0400A0E1 		mov	r0, r4
 3329 0440 FEFFFFEB 		bl	prvResetMQTTContext
 3330              	.LVL388:
1311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3331              		.loc 1 1311 0
 3332 0444 0930A0E3 		mov	r3, #9
1314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3333              		.loc 1 1314 0
 3334 0448 010055E3 		cmp	r5, #1
1311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3335              		.loc 1 1311 0
 3336 044c 2C30CDE5 		strb	r3, [sp, #44]
1323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3337              		.loc 1 1323 0
 3338 0450 2C108DE2 		add	r1, sp, #44
1316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3339              		.loc 1 1316 0
 3340 0454 0030A003 		moveq	r3, #0
1320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3341              		.loc 1 1320 0
 3342 0458 0130A013 		movne	r3, #1
1323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3343              		.loc 1 1323 0
 3344 045c 0400A0E1 		mov	r0, r4
1320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3345              		.loc 1 1320 0
 3346 0460 3030CDE5 		strb	r3, [sp, #48]
1323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3347              		.loc 1 1323 0
 3348 0464 FEFFFFEB 		bl	prvInvokeCallback
 3349              	.LVL389:
 3350              	.L367:
1327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3351              		.loc 1 1327 0
 3352 0468 010059E3 		cmp	r9, #1
 3353 046c B6FFFF1A 		bne	.L378
1330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3354              		.loc 1 1330 0
 3355 0470 0230A0E3 		mov	r3, #2
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
 3356              		.loc 1 1334 0
 3357 0474 300094E5 		ldr	r0, [r4, #48]
1330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3358              		.loc 1 1330 0
 3359 0478 3C30C4E5 		strb	r3, [r4, #60]
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
 3360              		.loc 1 1334 0
 3361 047c FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 3362              	.LVL390:
1335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3363              		.loc 1 1335 0
 3364 0480 4C3094E5 		ldr	r3, [r4, #76]
1334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTicks;
 3365              		.loc 1 1334 0
 3366 0484 F004C4E1 		strd	r0, [r4, #64]
1335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3367              		.loc 1 1335 0
 3368 0488 483084E5 		str	r3, [r4, #72]
1338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3369              		.loc 1 1338 0
 3370 048c 0030A0E3 		mov	r3, #0
 3371 0490 5430C4E5 		strb	r3, [r4, #84]
 3372 0494 ACFFFFEA 		b	.L378
 3373              	.LVL391:
 3374              	.L353:
1219:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3375              		.loc 1 1219 0
 3376 0498 030052E3 		cmp	r2, #3
 3377 049c 0300008A 		bhi	.L356
 3378              	.L357:
1299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3379              		.loc 1 1299 0
 3380 04a0 0150A0E3 		mov	r5, #1
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3381              		.loc 1 1194 0
 3382 04a4 0030A0E3 		mov	r3, #0
 3383              	.L423:
 3384 04a8 0390A0E1 		mov	r9, r3
 3385 04ac 140000EA 		b	.L359
 3386              	.L356:
1224:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 3387              		.loc 1 1224 0
 3388 04b0 0220A0E3 		mov	r2, #2
 3389 04b4 201085E2 		add	r1, r5, #32
 3390 04b8 0B00A0E1 		mov	r0, fp
 3391 04bc FEFFFFEB 		bl	memcmp
 3392              	.LVL392:
 3393 04c0 000050E3 		cmp	r0, #0
 3394 04c4 2D00001A 		bne	.L360
1226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3395              		.loc 1 1226 0
 3396 04c8 78039FE5 		ldr	r0, .L436+32
1228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3397              		.loc 1 1228 0
 3398 04cc 0190A0E3 		mov	r9, #1
1226:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3399              		.loc 1 1226 0
 3400 04d0 FEFFFFEB 		bl	vLoggingPrintf
 3401              	.LVL393:
1232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3402              		.loc 1 1232 0
 3403 04d4 083094E5 		ldr	r3, [r4, #8]
1228:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3404              		.loc 1 1228 0
 3405 04d8 2C90CDE5 		strb	r9, [sp, #44]
1232:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3406              		.loc 1 1232 0
 3407 04dc 2350D3E5 		ldrb	r5, [r3, #35]	@ zero_extendqisi2
 3408              	.LVL394:
1234:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 3409              		.loc 1 1234 0
 3410 04e0 000055E3 		cmp	r5, #0
 3411 04e4 0C00001A 		bne	.L361
1239:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     xEventCallbackParams.u.xMQTTConnACKData.usPacketIdentifier = mqttbufferGET_PACK
 3412              		.loc 1 1239 0
 3413 04e8 3050CDE5 		strb	r5, [sp, #48]
1241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3414              		.loc 1 1241 0
 3415 04ec 2C108DE2 		add	r1, sp, #44
1240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3416              		.loc 1 1240 0
 3417 04f0 BC30DAE1 		ldrh	r3, [r10, #12]
1241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3418              		.loc 1 1241 0
 3419 04f4 0400A0E1 		mov	r0, r4
1240:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3420              		.loc 1 1240 0
 3421 04f8 B233CDE1 		strh	r3, [sp, #50]	@ movhi
1241:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3422              		.loc 1 1241 0
 3423 04fc FEFFFFEB 		bl	prvInvokeCallback
 3424              	.LVL395:
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3425              		.loc 1 1194 0
 3426 0500 0530A0E1 		mov	r3, r5
 3427              	.LVL396:
 3428              	.L359:
1303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3429              		.loc 1 1303 0
 3430 0504 0A10A0E1 		mov	r1, r10
 3431 0508 380084E2 		add	r0, r4, #56
 3432 050c 0C308DE5 		str	r3, [sp, #12]
 3433              	.LVL397:
 3434 0510 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 3435              	.LVL398:
 3436 0514 0C309DE5 		ldr	r3, [sp, #12]
 3437 0518 C5FFFFEA 		b	.L358
 3438              	.LVL399:
 3439              	.L361:
1246:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 3440              		.loc 1 1246 0
 3441 051c 013045E2 		sub	r3, r5, #1
 3442 0520 040053E3 		cmp	r3, #4
 3443 0524 DDFFFF8A 		bhi	.L357
1252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3444              		.loc 1 1252 0
 3445 0528 010055E3 		cmp	r5, #1
 3446 052c 0900001A 		bne	.L362
 3447              	.L421:
1266:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 3448              		.loc 1 1266 0
 3449 0530 3050CDE5 		strb	r5, [sp, #48]
 3450              	.L363:
1273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3451              		.loc 1 1273 0
 3452 0534 BC30DAE1 		ldrh	r3, [r10, #12]
1274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3453              		.loc 1 1274 0
 3454 0538 2C108DE2 		add	r1, sp, #44
 3455 053c 0400A0E1 		mov	r0, r4
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3456              		.loc 1 1194 0
 3457 0540 0050A0E3 		mov	r5, #0
 3458              	.LVL400:
 3459 0544 0590A0E1 		mov	r9, r5
1273:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3460              		.loc 1 1273 0
 3461 0548 B233CDE1 		strh	r3, [sp, #50]	@ movhi
1274:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3462              		.loc 1 1274 0
 3463 054c FEFFFFEB 		bl	prvInvokeCallback
 3464              	.LVL401:
1276:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 3465              		.loc 1 1276 0
 3466 0550 0130A0E3 		mov	r3, #1
 3467 0554 EAFFFFEA 		b	.L359
 3468              	.LVL402:
 3469              	.L362:
1256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3470              		.loc 1 1256 0
 3471 0558 020055E3 		cmp	r5, #2
 3472 055c F3FFFF0A 		beq	.L421
1260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3473              		.loc 1 1260 0
 3474 0560 030055E3 		cmp	r5, #3
1262:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 3475              		.loc 1 1262 0
 3476 0564 0330A003 		moveq	r3, #3
1260:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3477              		.loc 1 1260 0
 3478 0568 0200000A 		beq	.L422
1264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3479              		.loc 1 1264 0
 3480 056c 040055E3 		cmp	r5, #4
1270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 3481              		.loc 1 1270 0
 3482 0570 0530A013 		movne	r3, #5
1264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3483              		.loc 1 1264 0
 3484 0574 EDFFFF0A 		beq	.L421
 3485              	.L422:
1270:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 3486              		.loc 1 1270 0
 3487 0578 3030CDE5 		strb	r3, [sp, #48]
 3488 057c ECFFFFEA 		b	.L363
 3489              	.LVL403:
 3490              	.L360:
1286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ 0 ],
 3491              		.loc 1 1286 0
 3492 0580 2310D5E5 		ldrb	r1, [r5, #35]	@ zero_extendqisi2
 3493 0584 2230D5E5 		ldrb	r3, [r5, #34]	@ zero_extendqisi2
 3494 0588 2120D5E5 		ldrb	r2, [r5, #33]	@ zero_extendqisi2
1293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3495              		.loc 1 1293 0
 3496 058c 0150A0E3 		mov	r5, #1
1286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                        mqttbufferGET_DATA( pxMQTTContext->xRxBuffer )[ 0 ],
 3497              		.loc 1 1286 0
 3498 0590 00108DE5 		str	r1, [sp]
 3499 0594 2010A0E3 		mov	r1, #32
 3500 0598 AC029FE5 		ldr	r0, .L436+36
 3501 059c FEFFFFEB 		bl	vLoggingPrintf
 3502              	.LVL404:
1194:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint8_t ucReturnCode;
 3503              		.loc 1 1194 0
 3504 05a0 0930A0E1 		mov	r3, r9
 3505 05a4 BFFFFFEA 		b	.L423
 3506              	.LVL405:
 3507              	.L376:
 3508              	.LBE106:
 3509              	.LBE127:
 3510              	.LBB128:
 3511              	.LBB117:
 3512              	.LBB115:
 3513              	.LBB114:
 970:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3514              		.loc 1 970 0
 3515 05a8 105042E2 		sub	r5, r2, #16
 3516              	.LVL406:
 974:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( mqttbufferGET_PACKET_IDENTIFIER( xBuffer ) == usPacketIdentifier ) )
 3517              		.loc 1 974 0
 3518 05ac 2010D5E5 		ldrb	r1, [r5, #32]	@ zero_extendqisi2
 3519 05b0 F01001E2 		and	r1, r1, #240
 3520 05b4 300051E3 		cmp	r1, #48
 3521 05b8 0200001A 		bne	.L374
 3522 05bc BC10D5E1 		ldrh	r1, [r5, #12]
 3523 05c0 030051E1 		cmp	r1, r3
 3524 05c4 0100000A 		beq	.L375
 3525              	.L374:
 968:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3526              		.loc 1 968 0
 3527 05c8 042092E5 		ldr	r2, [r2, #4]
 3528              	.LVL407:
 3529 05cc 7EFFFFEA 		b	.L373
 3530              	.L375:
 3531              	.LVL408:
 3532              	.LBE114:
 3533              	.LBE115:
1580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTPubACKData.usPacketIdentifier = usPacketIdentifier;
 3534              		.loc 1 1580 0
 3535 05d0 0320A0E3 		mov	r2, #3
1582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3536              		.loc 1 1582 0
 3537 05d4 2C108DE2 		add	r1, sp, #44
 3538 05d8 0400A0E1 		mov	r0, r4
1580:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTPubACKData.usPacketIdentifier = usPacketIdentifier;
 3539              		.loc 1 1580 0
 3540 05dc 2C20CDE5 		strb	r2, [sp, #44]
1581:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3541              		.loc 1 1581 0
 3542 05e0 B033CDE1 		strh	r3, [sp, #48]	@ movhi
1582:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3543              		.loc 1 1582 0
 3544 05e4 FEFFFFEB 		bl	prvInvokeCallback
 3545              	.LVL409:
1585:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3546              		.loc 1 1585 0
 3547 05e8 0510A0E1 		mov	r1, r5
 3548 05ec 380084E2 		add	r0, r4, #56
 3549 05f0 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 3550              	.LVL410:
 3551 05f4 54FFFFEA 		b	.L378
 3552              	.LVL411:
 3553              	.L371:
 3554              	.LBE117:
 3555              	.LBE128:
1167:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3556              		.loc 1 1167 0
 3557 05f8 900053E3 		cmp	r3, #144
 3558 05fc 2E00001A 		bne	.L379
 3559              	.LVL412:
 3560              	.LBB129:
 3561              	.LBB130:
1355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                 pxM
 3562              		.loc 1 1355 0
 3563 0600 0E30D4E5 		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3564 0604 389084E2 		add	r9, r4, #56
 3565              	.LVL413:
 3566 0608 031083E2 		add	r1, r3, #3
 3567 060c 010052E1 		cmp	r2, r1
 3568 0610 7D00009A 		bls	.L388
1360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3569              		.loc 1 1360 0
 3570 0614 035085E0 		add	r5, r5, r3
1366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3571              		.loc 1 1366 0
 3572 0618 8010A0E3 		mov	r1, #128
1360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3573              		.loc 1 1360 0
 3574 061c 2120D5E5 		ldrb	r2, [r5, #33]	@ zero_extendqisi2
 3575              	.LVL414:
1366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3576              		.loc 1 1366 0
 3577 0620 0400A0E1 		mov	r0, r4
1363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3578              		.loc 1 1363 0
 3579 0624 2230D5E5 		ldrb	r3, [r5, #34]	@ zero_extendqisi2
 3580 0628 023483E1 		orr	r3, r3, r2, lsl #8
 3581              	.LVL415:
1366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3582              		.loc 1 1366 0
 3583 062c 0320A0E1 		mov	r2, r3
 3584 0630 0C308DE5 		str	r3, [sp, #12]
 3585 0634 FEFFFFEB 		bl	prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9
 3586              	.LVL416:
1368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3587              		.loc 1 1368 0
 3588 0638 00A050E2 		subs	r10, r0, #0
 3589 063c 0C309DE5 		ldr	r3, [sp, #12]
1373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3590              		.loc 1 1373 0
 3591 0640 0630A003 		moveq	r3, #6
1368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3592              		.loc 1 1368 0
 3593 0644 3300000A 		beq	.L435
1379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                               pxMQT
 3594              		.loc 1 1379 0
 3595 0648 2350D5E5 		ldrb	r5, [r5, #35]	@ zero_extendqisi2
 3596              	.LVL417:
1383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 3597              		.loc 1 1383 0
 3598 064c 800055E3 		cmp	r5, #128
 3599 0650 01005513 		cmpne	r5, #1
 3600 0654 6C00008A 		bhi	.L388
1389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 3601              		.loc 1 1389 0
 3602 0658 000055E3 		cmp	r5, #0
1386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3603              		.loc 1 1386 0
 3604 065c 0520A0E3 		mov	r2, #5
 3605              	.LVL418:
 3606 0660 2C20CDE5 		strb	r2, [sp, #44]
1389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 3607              		.loc 1 1389 0
 3608 0664 0100001A 		bne	.L383
 3609              	.L426:
1395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 3610              		.loc 1 1395 0
 3611 0668 3050CDE5 		strb	r5, [sp, #48]
 3612 066c 030000EA 		b	.L384
 3613              	.L383:
1393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 3614              		.loc 1 1393 0
 3615 0670 010055E3 		cmp	r5, #1
1399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 3616              		.loc 1 1399 0
 3617 0674 7F20E013 		mvnne	r2, #127
 3618 0678 3020CD15 		strbne	r2, [sp, #48]
1393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 3619              		.loc 1 1393 0
 3620 067c F9FFFF0A 		beq	.L426
 3621              	.L384:
1403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3622              		.loc 1 1403 0
 3623 0680 2C108DE2 		add	r1, sp, #44
 3624 0684 0400A0E1 		mov	r0, r4
 3625              	.LVL419:
1402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3626              		.loc 1 1402 0
 3627 0688 B233CDE1 		strh	r3, [sp, #50]	@ movhi
1403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3628              		.loc 1 1403 0
 3629 068c FEFFFFEB 		bl	prvInvokeCallback
 3630              	.LVL420:
1410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 3631              		.loc 1 1410 0
 3632 0690 800055E3 		cmp	r5, #128
 3633 0694 0200001A 		bne	.L386
1412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 3634              		.loc 1 1412 0
 3635 0698 0A10A0E1 		mov	r1, r10
 3636 069c 0400A0E1 		mov	r0, r4
 3637 06a0 FEFFFFEB 		bl	prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer
 3638              	.LVL421:
 3639              	.L386:
1417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3640              		.loc 1 1417 0
 3641 06a4 0A10A0E1 		mov	r1, r10
 3642              	.LVL422:
 3643              	.L433:
 3644              	.LBE130:
 3645              	.LBE129:
 3646              	.LBB131:
 3647              	.LBB121:
1505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3648              		.loc 1 1505 0
 3649 06a8 0900A0E1 		mov	r0, r9
 3650 06ac FEFFFFEB 		bl	prvReturnBuffer.isra.6
 3651              	.LVL423:
 3652              	.L390:
1534:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 3653              		.loc 1 1534 0
 3654 06b0 081094E5 		ldr	r1, [r4, #8]
 3655 06b4 0900A0E1 		mov	r0, r9
 3656 06b8 25FFFFEA 		b	.L430
 3657              	.LVL424:
 3658              	.L379:
 3659              	.LBE121:
 3660              	.LBE131:
1172:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3661              		.loc 1 1172 0
 3662 06bc B00053E3 		cmp	r3, #176
 3663 06c0 ADFEFF1A 		bne	.L387
 3664              	.LVL425:
 3665              	.LBB132:
 3666              	.LBB122:
1465:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 3667              		.loc 1 1465 0
 3668 06c4 030052E3 		cmp	r2, #3
 3669 06c8 389084E2 		add	r9, r4, #56
 3670              	.LVL426:
 3671 06cc 4E00009A 		bls	.L388
1470:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3672              		.loc 1 1470 0
 3673 06d0 0220A0E3 		mov	r2, #2
 3674 06d4 201085E2 		add	r1, r5, #32
 3675 06d8 70019FE5 		ldr	r0, .L436+40
 3676 06dc FEFFFFEB 		bl	memcmp
 3677              	.LVL427:
 3678 06e0 000050E3 		cmp	r0, #0
 3679 06e4 4800001A 		bne	.L388
1474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3680              		.loc 1 1474 0
 3681 06e8 0E30D4E5 		ldrb	r3, [r4, #14]	@ zero_extendqisi2
1480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3682              		.loc 1 1480 0
 3683 06ec A010A0E3 		mov	r1, #160
 3684 06f0 0400A0E1 		mov	r0, r4
1474:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3685              		.loc 1 1474 0
 3686 06f4 035085E0 		add	r5, r5, r3
 3687 06f8 2130D5E5 		ldrb	r3, [r5, #33]	@ zero_extendqisi2
 3688              	.LVL428:
1477:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                                                                                    
 3689              		.loc 1 1477 0
 3690 06fc 22A0D5E5 		ldrb	r10, [r5, #34]	@ zero_extendqisi2
 3691 0700 03A48AE1 		orr	r10, r10, r3, lsl #8
 3692              	.LVL429:
1480:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3693              		.loc 1 1480 0
 3694 0704 0A20A0E1 		mov	r2, r10
 3695 0708 FEFFFFEB 		bl	prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9
 3696              	.LVL430:
1482:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 3697              		.loc 1 1482 0
 3698 070c 005050E2 		subs	r5, r0, #0
 3699 0710 0500001A 		bne	.L389
1486:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3700              		.loc 1 1486 0
 3701 0714 0830A0E3 		mov	r3, #8
 3702              	.LVL431:
 3703              	.L435:
 3704 0718 2C30CDE5 		strb	r3, [sp, #44]
 3705              	.L428:
1530:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3706              		.loc 1 1530 0
 3707 071c 2C108DE2 		add	r1, sp, #44
 3708 0720 0400A0E1 		mov	r0, r4
 3709 0724 FEFFFFEB 		bl	prvInvokeCallback
 3710              	.LVL432:
 3711 0728 E0FFFFEA 		b	.L390
 3712              	.LVL433:
 3713              	.L389:
1492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTUnSubACKData.usPacketIdentifier = usPacketIdentifier;
 3714              		.loc 1 1492 0
 3715 072c 0730A0E3 		mov	r3, #7
1494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3716              		.loc 1 1494 0
 3717 0730 2C108DE2 		add	r1, sp, #44
 3718 0734 0400A0E1 		mov	r0, r4
 3719              	.LVL434:
1492:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xMQTTUnSubACKData.usPacketIdentifier = usPacketIdentifier;
 3720              		.loc 1 1492 0
 3721 0738 2C30CDE5 		strb	r3, [sp, #44]
1493:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3722              		.loc 1 1493 0
 3723 073c B0A3CDE1 		strh	r10, [sp, #48]	@ movhi
1494:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3724              		.loc 1 1494 0
 3725 0740 FEFFFFEB 		bl	prvInvokeCallback
 3726              	.LVL435:
1501:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
 3727              		.loc 1 1501 0
 3728 0744 0510A0E1 		mov	r1, r5
 3729 0748 0400A0E1 		mov	r0, r4
 3730 074c FEFFFFEB 		bl	prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer
 3731              	.LVL436:
1505:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3732              		.loc 1 1505 0
 3733 0750 0510A0E1 		mov	r1, r5
 3734 0754 D3FFFFEA 		b	.L433
 3735              	.LVL437:
 3736              	.L342:
 3737              	.LBE122:
 3738              	.LBE132:
 3739              	.LBE139:
 3740              	.LBE156:
3249:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3741              		.loc 1 3249 0
 3742 0758 022100E3 		movw	r2, #258
 3743 075c 020053E1 		cmp	r3, r2
 3744 0760 39FEFF1A 		bne	.L329
3251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnprocessedBytes = xReceivedDataLength - xProcessedBytes;                             
 3745              		.loc 1 3251 0
 3746 0764 102094E5 		ldr	r2, [r4, #16]
3252:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3747              		.loc 1 3252 0
 3748 0768 060047E0 		sub	r0, r7, r6
3251:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             xUnprocessedBytes = xReceivedDataLength - xProcessedBytes;                             
 3749              		.loc 1 3251 0
 3750 076c 1C3094E5 		ldr	r3, [r4, #28]
 3751 0770 031042E0 		sub	r1, r2, r3
 3752              	.LVL438:
3256:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 3753              		.loc 1 3256 0
 3754 0774 000051E1 		cmp	r1, r0
 3755              	.LVL439:
3259:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 3756              		.loc 1 3259 0
 3757 0778 00308380 		addhi	r3, r3, r0
 3758 077c 1C308485 		strhi	r3, [r4, #28]
 3759 0780 B5FEFF8A 		bhi	.L432
 3760              	.LVL440:
 3761              	.L391:
3264:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pxMQTTContext->ulRxMessageReceivedLength += ( uint32_t ) xExpectedBytes;
 3762              		.loc 1 3264 0
 3763 0784 016086E0 		add	r6, r6, r1
 3764              	.LVL441:
3268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3765              		.loc 1 3268 0
 3766 0788 0A30A0E3 		mov	r3, #10
 3767 078c 48108DE2 		add	r1, sp, #72
 3768              	.LVL442:
3265:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3769              		.loc 1 3265 0
 3770 0790 1C2084E5 		str	r2, [r4, #28]
 3771              	.LVL443:
3268:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3772              		.loc 1 3268 0
 3773 0794 383061E5 		strb	r3, [r1, #-56]!
 3774 0798 F5FEFFEA 		b	.L434
 3775              	.LVL444:
 3776              	.L395:
3121:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3777              		.loc 1 3121 0
 3778 079c 0400A0E3 		mov	r0, #4
 3779              	.LVL445:
3281:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 3780              		.loc 1 3281 0
 3781 07a0 5BFEFFEA 		b	.L415
 3782              	.LVL446:
 3783              	.L338:
 3784              	.LBB157:
 3785              	.LBB150:
 3786              	.LBB148:
 3787              	.LBB146:
1643:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 3788              		.loc 1 1643 0
 3789 07a4 5430D4E5 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 3790 07a8 010053E3 		cmp	r3, #1
 3791 07ac 7AFEFF1A 		bne	.L418
1646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3792              		.loc 1 1646 0
 3793 07b0 0030A0E3 		mov	r3, #0
1650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTick
 3794              		.loc 1 1650 0
 3795 07b4 300094E5 		ldr	r0, [r4, #48]
1646:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3796              		.loc 1 1646 0
 3797 07b8 5430C4E5 		strb	r3, [r4, #84]
1650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTick
 3798              		.loc 1 1650 0
 3799 07bc FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 3800              	.LVL447:
1651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3801              		.loc 1 1651 0
 3802 07c0 4C3094E5 		ldr	r3, [r4, #76]
1650:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulKeepAliveActualIntervalTick
 3803              		.loc 1 1650 0
 3804 07c4 F004C4E1 		strd	r0, [r4, #64]
1651:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 3805              		.loc 1 1651 0
 3806 07c8 483084E5 		str	r3, [r4, #72]
 3807              	.LVL448:
 3808              	.L431:
 3809              	.LBE146:
 3810              	.LBE148:
 3811              	.LBE150:
 3812              	.LBE157:
 3813              	.LBB158:
 3814              	.LBB159:
 995:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.ulTotalMessageLength = 0;
 3815              		.loc 1 995 0
 3816 07cc 0030A0E3 		mov	r3, #0
 3817 07d0 0E30C4E5 		strb	r3, [r4, #14]
 996:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxMessageAction = eMQTTRxMessageStore;
 3818              		.loc 1 996 0
 3819 07d4 103084E5 		str	r3, [r4, #16]
 997:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxMessageState.xRxNextByte = eMQTTRxNextBytePacketType;
 3820              		.loc 1 997 0
 3821 07d8 0D30C4E5 		strb	r3, [r4, #13]
 998:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->ulRxMessageReceivedLength = 0;
 3822              		.loc 1 998 0
 3823 07dc 0C30C4E5 		strb	r3, [r4, #12]
 999:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     pxMQTTContext->xRxBuffer = NULL;
 3824              		.loc 1 999 0
 3825 07e0 1C3084E5 		str	r3, [r4, #28]
1000:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 3826              		.loc 1 1000 0
 3827 07e4 083084E5 		str	r3, [r4, #8]
 3828 07e8 17FEFFEA 		b	.L329
 3829              	.LVL449:
 3830              	.L372:
 3831              	.LBE159:
 3832              	.LBE158:
 3833              	.LBB160:
 3834              	.LBB140:
 3835              	.LBB133:
 3836              	.LBB118:
1605:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3837              		.loc 1 1605 0
 3838 07ec 0400A0E1 		mov	r0, r4
 3839 07f0 FEFFFFEB 		bl	prvResetMQTTContext
 3840              	.LVL450:
1608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
 3841              		.loc 1 1608 0
 3842 07f4 0930A0E3 		mov	r3, #9
1610:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 3843              		.loc 1 1610 0
 3844 07f8 2C108DE2 		add	r1, sp, #44
1608:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
 3845              		.loc 1 1608 0
 3846 07fc 2C30CDE5 		strb	r3, [sp, #44]
1609:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3847              		.loc 1 1609 0
 3848 0800 0030A0E3 		mov	r3, #0
 3849 0804 3030CDE5 		strb	r3, [sp, #48]
 3850 0808 F4FEFFEA 		b	.L425
 3851              	.LVL451:
 3852              	.L388:
 3853              	.LBE118:
 3854              	.LBE133:
 3855              	.LBB134:
 3856              	.LBB123:
1525:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 3857              		.loc 1 1525 0
 3858 080c 0400A0E1 		mov	r0, r4
 3859 0810 FEFFFFEB 		bl	prvResetMQTTContext
 3860              	.LVL452:
1528:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonMalformedPa
 3861              		.loc 1 1528 0
 3862 0814 0930A0E3 		mov	r3, #9
 3863 0818 2C30CDE5 		strb	r3, [sp, #44]
1529:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 3864              		.loc 1 1529 0
 3865 081c 0030A0E3 		mov	r3, #0
 3866 0820 3030CDE5 		strb	r3, [sp, #48]
 3867 0824 BCFFFFEA 		b	.L428
 3868              	.L437:
 3869              		.align	2
 3870              	.L436:
 3871 0828 28000000 		.word	Unity+40
 3872 082c 00000000 		.word	.LANCHOR4
 3873 0830 00000000 		.word	.LC7
 3874 0834 35000000 		.word	.LC8
 3875 0838 00000000 		.word	.LANCHOR2
 3876 083c 63000000 		.word	.LC9
 3877 0840 00000000 		.word	.LANCHOR3
 3878 0844 00000000 		.word	.LANCHOR5
 3879 0848 83000000 		.word	.LC10
 3880 084c 97000000 		.word	.LC11
 3881 0850 00000000 		.word	.LANCHOR6
 3882              	.LBE123:
 3883              	.LBE134:
 3884              	.LBE140:
 3885              	.LBE160:
 3886              		.cfi_endproc
 3887              	.LFE35:
 3889              		.section	.text.MQTT_ReturnBuffer,"ax",%progbits
 3890              		.align	2
 3891              		.global	MQTT_ReturnBuffer
 3892              		.syntax unified
 3893              		.arm
 3894              		.fpu neon
 3896              	MQTT_ReturnBuffer:
 3897              	.LFB36:
3283:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
3284:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3285:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** MQTTReturnCode_t MQTT_ReturnBuffer( MQTTContext_t * pxMQTTContext,
3286:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                                     MQTTBufferHandle_t xBufferHandle )
3287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 3898              		.loc 1 3287 0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 0
 3901              		@ frame_needed = 0, uses_anonymous_args = 0
 3902              	.LVL453:
3288:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
3289:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
3290:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 3903              		.loc 1 3290 0
 3904 0000 000050E3 		cmp	r0, #0
3287:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
 3905              		.loc 1 3287 0
 3906 0004 10402DE9 		push	{r4, lr}
 3907              		.cfi_def_cfa_offset 8
 3908              		.cfi_offset 4, -8
 3909              		.cfi_offset 14, -4
 3910              		.loc 1 3290 0
 3911 0008 0200001A 		bne	.L439
 3912              	.L440:
 3913              		.loc 1 3290 0 is_stmt 0 discriminator 1
 3914 000c 0110A0E3 		mov	r1, #1
 3915              	.LVL454:
 3916 0010 30009FE5 		ldr	r0, .L451
 3917              	.LVL455:
 3918 0014 FEFFFFEB 		bl	longjmp
 3919              	.LVL456:
 3920              	.L439:
3291:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxGetBufferFxn != NULL );
 3921              		.loc 1 3291 0 is_stmt 1
 3922 0018 342090E5 		ldr	r2, [r0, #52]
 3923 001c 000052E3 		cmp	r2, #0
 3924 0020 F9FFFF0A 		beq	.L440
3292:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->xBufferPoolInterface.pxReturnBufferFxn != NULL );
 3925              		.loc 1 3292 0
 3926 0024 382090E5 		ldr	r2, [r0, #56]
 3927 0028 000052E3 		cmp	r2, #0
 3928 002c F6FFFF0A 		beq	.L440
3293:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( xBufferHandle != NULL );
 3929              		.loc 1 3293 0
 3930 0030 000051E3 		cmp	r1, #0
 3931 0034 F4FFFF0A 		beq	.L440
3294:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3295:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return the buffer to the free buffer pool. */
3296:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     prvReturnBuffer( pxMQTTContext, xBufferHandle );
 3932              		.loc 1 3296 0
 3933 0038 380080E2 		add	r0, r0, #56
 3934              	.LVL457:
 3935 003c FEFFFFEB 		bl	prvReturnBuffer.isra.6
 3936              	.LVL458:
3297:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3298:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Return success. */
3299:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return eMQTTSuccess;
3300:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 3937              		.loc 1 3300 0
 3938 0040 0000A0E3 		mov	r0, #0
 3939 0044 1080BDE8 		pop	{r4, pc}
 3940              	.L452:
 3941              		.align	2
 3942              	.L451:
 3943 0048 28000000 		.word	Unity+40
 3944              		.cfi_endproc
 3945              	.LFE36:
 3947              		.section	.text.MQTT_Periodic,"ax",%progbits
 3948              		.align	2
 3949              		.global	MQTT_Periodic
 3950              		.syntax unified
 3951              		.arm
 3952              		.fpu neon
 3954              	MQTT_Periodic:
 3955              	.LFB37:
3301:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** /*-----------------------------------------------------------*/
3302:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3303:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** uint32_t MQTT_Periodic( MQTTContext_t * pxMQTTContext,
3304:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         uint64_t xCurrentTickCount )
3305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** {
 3956              		.loc 1 3305 0
 3957              		.cfi_startproc
 3958              		@ args = 0, pretend = 0, frame = 32
 3959              		@ frame_needed = 0, uses_anonymous_args = 0
 3960              	.LVL459:
 3961 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3962              		.cfi_def_cfa_offset 36
 3963              		.cfi_offset 4, -36
 3964              		.cfi_offset 5, -32
 3965              		.cfi_offset 6, -28
 3966              		.cfi_offset 7, -24
 3967              		.cfi_offset 8, -20
 3968              		.cfi_offset 9, -16
 3969              		.cfi_offset 10, -12
 3970              		.cfi_offset 11, -8
 3971              		.cfi_offset 14, -4
3306:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink, * pxTempLink;
3307:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTBufferHandle_t xBuffer;
3308:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     MQTTEventCallbackParams_t xEventCallbackParams;
3309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     uint32_t ulNextTimeoutTicks = UINT32_MAX;
3310:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucPingReqPacket[] =
3311:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
3312:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         mqttCONTROL_PINGREQ | mqttFLAGS_PINGREQ,
3313:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         0 /* PINGREQ packet does not have any variable header or payload. */
3314:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     };
3315:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3316:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* These are checked here once and are later used without
3317:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * NULL checks. */
3318:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext != NULL );
 3972              		.loc 1 3318 0
 3973 0004 004050E2 		subs	r4, r0, #0
3305:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     Link_t * pxLink, * pxTempLink;
 3974              		.loc 1 3305 0
 3975 0008 24D04DE2 		sub	sp, sp, #36
 3976              		.cfi_def_cfa_offset 72
 3977              		.loc 1 3318 0
 3978 000c 0200001A 		bne	.L454
 3979              	.L455:
 3980              		.loc 1 3318 0 is_stmt 0 discriminator 1
 3981 0010 0110A0E3 		mov	r1, #1
 3982 0014 A8019FE5 		ldr	r0, .L478
 3983              	.LVL460:
 3984 0018 FEFFFFEB 		bl	longjmp
 3985              	.LVL461:
 3986              	.L454:
 3987 001c 0380A0E1 		mov	r8, r3
3319:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     mqttconfigASSERT( pxMQTTContext->pxMQTTSendFxn != NULL );
 3988              		.loc 1 3319 0 is_stmt 1
 3989 0020 2C3094E5 		ldr	r3, [r4, #44]
 3990 0024 000053E3 		cmp	r3, #0
 3991 0028 F8FFFF0A 		beq	.L455
3320:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3321:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Check if any of the sent packet timed out while waiting for ACK. */
3322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     listFOR_EACH_SAFE( pxLink, pxTempLink, &( pxMQTTContext->xTxBufferListHead ) )
 3992              		.loc 1 3322 0
 3993 002c 041094E5 		ldr	r1, [r4, #4]
 3994              	.LVL462:
 3995 0030 0270A0E1 		mov	r7, r2
3309:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     static const uint8_t ucPingReqPacket[] =
 3996              		.loc 1 3309 0
 3997 0034 0060E0E3 		mvn	r6, #0
 3998              	.LBB165:
 3999              	.LBB166:
1089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 4000              		.loc 1 1089 0
 4001 0038 0090A0E3 		mov	r9, #0
 4002              	.LBE166:
 4003              	.LBE165:
3323:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
3324:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Get the buffer from the link. */
3325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         xBuffer = mqttbufferGET_BUFFER_HANDLE_FROM_LINK( pxLink );
3326:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3327:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* If the operation has timed out, inform the user and
3328:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****          * return the buffer to the free buffer pool. */
3329:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( prvIsTimeElapsed( &( mqttbufferGET_PACKET_RECORDED_TICK_COUNT( xBuffer ) ), xCurrentTic
3330:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3331:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* If a connect timed out, disconnect the client and inform
3332:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * the user about the same. */
3333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] == ( uint8_t 
3334:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3335:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Disconnect. */
3336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvResetMQTTContext( pxMQTTContext );
3337:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3338:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Inform the user about disconnect. */
3339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTClientDisconnected;
3340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonCon
3341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
3342:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3343:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* No need to traverse the Tx list anymore as all
3344:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * the packets have already been returned to the
3345:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * buffer-pool in prvResetMQTTContext. */
3346:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 break;
3347:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3348:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
3349:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3350:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
3351:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3352:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* If a subscribe message timed out, remove the corresponding
3353:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                      * entry from the subscription manager. */
3354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     if( mqttbufferGET_DATA( xBuffer )[ mqttFIXED_HEADER_CONTROL_BYTE_OFFSET ] == ( 
3355:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
3356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                         prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer( pxMQTTContext, xBuffe
3357:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
3358:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
3359:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3360:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Inform the user about the timeout. */
3361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTTimeout;
 4004              		.loc 1 3361 0
 4005 003c 0BA0A0E3 		mov	r10, #11
3322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4006              		.loc 1 3322 0
 4007 0040 04B091E5 		ldr	fp, [r1, #4]
 4008              	.LVL463:
 4009              	.L456:
3322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4010              		.loc 1 3322 0 is_stmt 0 discriminator 1
 4011 0044 040051E1 		cmp	r1, r4
 4012 0048 1A00000A 		beq	.L462
 4013              	.LBB170:
 4014              	.LBB167:
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4015              		.loc 1 1070 0 is_stmt 1
 4016 004c D02141E1 		ldrd	r2, [r1, #-16]
 4017              	.LBE167:
 4018              	.LBE170:
3325:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4019              		.loc 1 3325 0
 4020 0050 105041E2 		sub	r5, r1, #16
 4021              	.LVL464:
 4022              	.LBB171:
 4023              	.LBB168:
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4024              		.loc 1 1070 0
 4025 0054 030092E1 		orrs	r0, r2, r3
1075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 4026              		.loc 1 1075 0
 4027 0058 10700105 		streq	r7, [r1, #-16]
 4028 005c 04808505 		streq	r8, [r5, #4]
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4029              		.loc 1 1070 0
 4030 0060 5300000A 		beq	.L458
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 4031              		.loc 1 1086 0
 4032 0064 083095E5 		ldr	r3, [r5, #8]
1080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4033              		.loc 1 1080 0
 4034 0068 022047E0 		sub	r2, r7, r2
 4035              	.LVL465:
1083:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4036              		.loc 1 1083 0
 4037 006c 107001E5 		str	r7, [r1, #-16]
 4038 0070 048085E5 		str	r8, [r5, #4]
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 4039              		.loc 1 1086 0
 4040 0074 030052E1 		cmp	r2, r3
1094:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 4041              		.loc 1 1094 0
 4042 0078 02204330 		subcc	r2, r3, r2
 4043              	.LVL466:
 4044 007c 08208535 		strcc	r2, [r5, #8]
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 4045              		.loc 1 1086 0
 4046 0080 4B00003A 		bcc	.L458
 4047              	.LVL467:
 4048              	.LBE168:
 4049              	.LBE171:
3333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 4050              		.loc 1 3333 0
 4051 0084 2030D5E5 		ldrb	r3, [r5, #32]	@ zero_extendqisi2
 4052              	.LBB172:
 4053              	.LBB169:
1089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 4054              		.loc 1 1089 0
 4055 0088 089085E5 		str	r9, [r5, #8]
 4056              	.LVL468:
 4057              	.LBE169:
 4058              	.LBE172:
3333:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
 4059              		.loc 1 3333 0
 4060 008c 100053E3 		cmp	r3, #16
 4061 0090 2900001A 		bne	.L475
3336:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4062              		.loc 1 3336 0
 4063 0094 0400A0E1 		mov	r0, r4
 4064 0098 FEFFFFEB 		bl	prvResetMQTTContext
 4065              	.LVL469:
3339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonCon
 4066              		.loc 1 3339 0
 4067 009c 0930A0E3 		mov	r3, #9
3341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4068              		.loc 1 3341 0
 4069 00a0 04108DE2 		add	r1, sp, #4
3339:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xDisconnectData.xDisconnectReason = eMQTTDisconnectReasonCon
 4070              		.loc 1 3339 0
 4071 00a4 0430CDE5 		strb	r3, [sp, #4]
3341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4072              		.loc 1 3341 0
 4073 00a8 0400A0E1 		mov	r0, r4
3340:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 4074              		.loc 1 3340 0
 4075 00ac 0330A0E3 		mov	r3, #3
 4076 00b0 0830CDE5 		strb	r3, [sp, #8]
3341:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4077              		.loc 1 3341 0
 4078 00b4 FEFFFFEB 		bl	prvInvokeCallback
 4079              	.LVL470:
 4080              	.L462:
3362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xTimeoutData.usPacketIdentifier = mqttbufferGET_PACKET_IDENT
3363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
3364:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3365:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Return the buffer back to the free buffer pool. */
3366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 prvReturnBuffer( pxMQTTContext, xBuffer );
3367:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3368:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3369:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         else
3370:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3371:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* If this Tx operation has not timed out yet, update when
3372:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * the next earliest timeout will happen. */
3373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             ulNextTimeoutTicks = mqttMIN( ulNextTimeoutTicks, mqttbufferGET_PACKET_TIMEOUT_TICKS( x
3374:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3375:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
3376:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3377:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     /* Check if the previously sent keep alive timed out,
3378:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****      * or it is time to send a keep alive message. */
3379:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     if( pxMQTTContext->xConnectionState == eMQTTConnected )
 4081              		.loc 1 3379 0
 4082 00b8 3C20D4E5 		ldrb	r2, [r4, #60]	@ zero_extendqisi2
 4083 00bc 020052E3 		cmp	r2, #2
 4084 00c0 1A00001A 		bne	.L453
 4085              	.LVL471:
 4086              	.LBB173:
 4087              	.LBB174:
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4088              		.loc 1 1070 0
 4089 00c4 D004C4E1 		ldrd	r0, [r4, #64]
 4090 00c8 013090E1 		orrs	r3, r0, r1
1075:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
 4091              		.loc 1 1075 0
 4092 00cc 40708405 		streq	r7, [r4, #64]
 4093 00d0 44808405 		streq	r8, [r4, #68]
1070:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4094              		.loc 1 1070 0
 4095 00d4 1200000A 		beq	.L467
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 4096              		.loc 1 1086 0
 4097 00d8 483094E5 		ldr	r3, [r4, #72]
1080:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4098              		.loc 1 1080 0
 4099 00dc 000047E0 		sub	r0, r7, r0
 4100              	.LVL472:
1083:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4101              		.loc 1 1083 0
 4102 00e0 407084E5 		str	r7, [r4, #64]
 4103 00e4 448084E5 		str	r8, [r4, #68]
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 4104              		.loc 1 1086 0
 4105 00e8 030050E1 		cmp	r0, r3
1094:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 4106              		.loc 1 1094 0
 4107 00ec 00004330 		subcc	r0, r3, r0
 4108              	.LVL473:
 4109 00f0 48008435 		strcc	r0, [r4, #72]
1086:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
 4110              		.loc 1 1086 0
 4111 00f4 0A00003A 		bcc	.L467
 4112              	.LVL474:
 4113              	.LBE174:
 4114              	.LBE173:
3380:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
3381:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         if( prvIsTimeElapsed( &( pxMQTTContext->xLastSentMessageTimestamp ), xCurrentTickCount, &( 
3382:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         {
3383:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             /* If we were waiting for PINGRESP, it indicates that we failed to
3384:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****              * receive PINGRESP in a reasonable time (mqttconfigKEEP_ALIVE_TIMEOUT_TICKS). */
3385:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             if( pxMQTTContext->xWaitingForPingResp == eMQTTTrue )
 4115              		.loc 1 3385 0
 4116 00f8 5430D4E5 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 4117              	.LBB176:
 4118              	.LBB175:
1089:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 4119              		.loc 1 1089 0
 4120 00fc 0050A0E3 		mov	r5, #0
 4121 0100 485084E5 		str	r5, [r4, #72]
 4122              	.LVL475:
 4123              	.LBE175:
 4124              	.LBE176:
 4125              		.loc 1 3385 0
 4126 0104 010053E3 		cmp	r3, #1
 4127 0108 1C00001A 		bne	.L476
3386:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3387:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Inform the user about the ping timeout. */
3388:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.xEventType = eMQTTPingTimeout;
 4128              		.loc 1 3388 0
 4129 010c 20108DE2 		add	r1, sp, #32
 4130 0110 0C30A0E3 		mov	r3, #12
 4131 0114 1C3061E5 		strb	r3, [r1, #-28]!
3389:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 4132              		.loc 1 3389 0
 4133 0118 0400A0E1 		mov	r0, r4
 4134 011c FEFFFFEB 		bl	prvInvokeCallback
 4135              	.LVL476:
3390:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3391:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* Mark that we are no longer waiting for PINGRESP. Note
3392:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * that keep alive time-stamp and timeout are not updated so
3393:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * that we try to send the next PINGREQ message as early as
3394:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * the next invocation of this periodic function. */
3395:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 pxMQTTContext->xWaitingForPingResp = eMQTTFalse;
 4136              		.loc 1 3395 0
 4137 0120 5450C4E5 		strb	r5, [r4, #84]
 4138              	.L467:
3396:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3397:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             else
3398:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             {
3399:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* If we were not waiting for PINGRESP, then it is time to send
3400:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                  * a PINGREQ. */
3401:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3402:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 /* If the following call fails to send the keep alive message,
3403:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 * the keep alive time-stamp and timeout are not updated - as
3404:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 * a result of which we will try to re-transmit the keep alive
3405:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 * message on the next invocation of this periodic function. */
3406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 if( prvSendData( pxMQTTContext, ucPingReqPacket, sizeof( ucPingReqPacket ) ) == eMQ
3407:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
3408:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Update the last sent message timestamp. */
3409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxMQTTContext->xLastSentMessageTimestamp = prvGetCurrentTickCount( pxMQTTContex
3410:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3411:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* We must get PINGRESP within a reasonable time. */
3412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxMQTTContext->ulNextPeriodicInvokeTicks = pxMQTTContext->ulPingRequestTimeoutT
3413:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3414:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     /* Mark that we are waiting for PINGRESP. */
3415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     pxMQTTContext->xWaitingForPingResp = eMQTTTrue;
3416:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
3417:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
3418:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
3419:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3420:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         /* Update when the next earliest timeout will happen. */
3421:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         ulNextTimeoutTicks = mqttMIN( ulNextTimeoutTicks, pxMQTTContext->ulNextPeriodicInvokeTicks 
 4139              		.loc 1 3421 0
 4140 0124 483094E5 		ldr	r3, [r4, #72]
 4141 0128 030056E1 		cmp	r6, r3
 4142 012c 0360A021 		movcs	r6, r3
 4143              	.LVL477:
 4144              	.L453:
3422:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     }
3423:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
3424:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     return ulNextTimeoutTicks;
3425:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** }
 4145              		.loc 1 3425 0
 4146 0130 0600A0E1 		mov	r0, r6
 4147 0134 24D08DE2 		add	sp, sp, #36
 4148              		.cfi_remember_state
 4149              		.cfi_def_cfa_offset 36
 4150              		@ sp needed
 4151 0138 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4152              	.LVL478:
 4153              	.L475:
 4154              		.cfi_restore_state
3354:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     {
 4155              		.loc 1 3354 0
 4156 013c 820053E3 		cmp	r3, #130
 4157 0140 0200001A 		bne	.L463
3356:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                     }
 4158              		.loc 1 3356 0
 4159 0144 0510A0E1 		mov	r1, r5
 4160              	.LVL479:
 4161 0148 0400A0E1 		mov	r0, r4
 4162 014c FEFFFFEB 		bl	prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer
 4163              	.LVL480:
 4164              	.L463:
3362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 4165              		.loc 1 3362 0
 4166 0150 BC30D5E1 		ldrh	r3, [r5, #12]
3363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4167              		.loc 1 3363 0
 4168 0154 04108DE2 		add	r1, sp, #4
 4169 0158 0400A0E1 		mov	r0, r4
3361:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 xEventCallbackParams.u.xTimeoutData.usPacketIdentifier = mqttbufferGET_PACKET_IDENT
 4170              		.loc 1 3361 0
 4171 015c 04A0CDE5 		strb	r10, [sp, #4]
3362:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 ( void ) prvInvokeCallback( pxMQTTContext, &xEventCallbackParams );
 4172              		.loc 1 3362 0
 4173 0160 B830CDE1 		strh	r3, [sp, #8]	@ movhi
3363:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4174              		.loc 1 3363 0
 4175 0164 FEFFFFEB 		bl	prvInvokeCallback
 4176              	.LVL481:
3366:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****             }
 4177              		.loc 1 3366 0
 4178 0168 0510A0E1 		mov	r1, r5
 4179 016c 380084E2 		add	r0, r4, #56
 4180 0170 FEFFFFEB 		bl	prvReturnBuffer.isra.6
 4181              	.LVL482:
 4182              	.L471:
3322:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****     {
 4183              		.loc 1 3322 0 discriminator 2
 4184 0174 0B10A0E1 		mov	r1, fp
 4185 0178 04B09BE5 		ldr	fp, [fp, #4]
 4186              	.LVL483:
 4187 017c B0FFFFEA 		b	.L456
 4188              	.LVL484:
 4189              	.L476:
3406:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 {
 4190              		.loc 1 3406 0
 4191 0180 40109FE5 		ldr	r1, .L478+4
 4192 0184 0400A0E1 		mov	r0, r4
 4193 0188 FEFFFFEB 		bl	prvSendData
 4194              	.LVL485:
 4195 018c 000050E3 		cmp	r0, #0
 4196 0190 E3FFFF1A 		bne	.L467
3409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4197              		.loc 1 3409 0
 4198 0194 300094E5 		ldr	r0, [r4, #48]
 4199 0198 FEFFFFEB 		bl	prvGetCurrentTickCount.isra.0
 4200              	.LVL486:
3412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4201              		.loc 1 3412 0
 4202 019c 503094E5 		ldr	r3, [r4, #80]
3409:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4203              		.loc 1 3409 0
 4204 01a0 F004C4E1 		strd	r0, [r4, #64]
3412:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c **** 
 4205              		.loc 1 3412 0
 4206 01a4 483084E5 		str	r3, [r4, #72]
3415:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****                 }
 4207              		.loc 1 3415 0
 4208 01a8 0130A0E3 		mov	r3, #1
 4209 01ac 5430C4E5 		strb	r3, [r4, #84]
 4210 01b0 DBFFFFEA 		b	.L467
 4211              	.LVL487:
 4212              	.L458:
3373:D:/Work/DeviceTester/amazon-freertos/lib/mqtt\aws_mqtt_lib.c ****         }
 4213              		.loc 1 3373 0
 4214 01b4 083095E5 		ldr	r3, [r5, #8]
 4215 01b8 030056E1 		cmp	r6, r3
 4216 01bc 0360A021 		movcs	r6, r3
 4217              	.LVL488:
 4218 01c0 EBFFFFEA 		b	.L471
 4219              	.L479:
 4220              		.align	2
 4221              	.L478:
 4222 01c4 28000000 		.word	Unity+40
 4223 01c8 00000000 		.word	.LANCHOR7
 4224              		.cfi_endproc
 4225              	.LFE37:
 4227              		.section	.text.Test_prvGetTopicFilterType,"ax",%progbits
 4228              		.align	2
 4229              		.global	Test_prvGetTopicFilterType
 4230              		.syntax unified
 4231              		.arm
 4232              		.fpu neon
 4234              	Test_prvGetTopicFilterType:
 4235              	.LFB38:
 4236              		.file 2 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\common\\include/aws_mqtt_lib_test_access_
   1:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** /*
   2:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * Amazon FreeRTOS
   3:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  *
   5:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * the Software without restriction, including without limitation the rights to
   8:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * subject to the following conditions:
  11:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  *
  12:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * The above copyright notice and this permission notice shall be included in all
  13:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * copies or substantial portions of the Software.
  14:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  *
  15:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  *
  22:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * http://aws.amazon.com/freertos
  23:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * http://www.FreeRTOS.org
  24:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  */
  25:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  26:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** /**
  27:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * @file aws_mqtt_lib_test_access_define.h
  28:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * @brief Function wrappers to access private methods in aws_mqtt_lib.c.
  29:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  *
  30:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  * Needed for testing private functions.
  31:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****  */
  32:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  33:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** #ifndef _AWS_MQTT_LIB_TEST_ACCESS_DECLARE_H_
  34:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** #define _AWS_MQTT_LIB_TEST_ACCESS_DECLARE_H_
  35:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  36:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
  37:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  38:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** /*-----------------------------------------------------------*/
  39:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  40:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     MQTTTopicFilterType_t Test_prvGetTopicFilterType( const uint8_t * const pucTopicFilter,
  41:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****                                                       uint16_t usTopicFilterLength )
  42:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     {
 4237              		.loc 2 42 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              		@ link register save eliminated.
 4242              	.LVL489:
  43:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****         return prvGetTopicFilterType( pucTopicFilter, usTopicFilterLength );
 4243              		.loc 2 43 0
 4244 0000 FEFFFFEA 		b	prvGetTopicFilterType
 4245              	.LVL490:
 4246              		.cfi_endproc
 4247              	.LFE38:
 4249              		.section	.text.Test_prvDoesTopicMatchTopicFilter,"ax",%progbits
 4250              		.align	2
 4251              		.global	Test_prvDoesTopicMatchTopicFilter
 4252              		.syntax unified
 4253              		.arm
 4254              		.fpu neon
 4256              	Test_prvDoesTopicMatchTopicFilter:
 4257              	.LFB39:
  44:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     }
  45:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  46:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
  47:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** /*-----------------------------------------------------------*/
  48:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  49:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** #if ( mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT == 1 )
  50:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  51:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     MQTTBool_t Test_prvDoesTopicMatchTopicFilter( const uint8_t * const pucTopic,
  52:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****                                                   uint16_t usTopicLength,
  53:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****                                                   const uint8_t * const pucTopicFilter,
  54:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****                                                   uint16_t usTopicFilterLength )
  55:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     {
 4258              		.loc 2 55 0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 0
 4261              		@ frame_needed = 0, uses_anonymous_args = 0
 4262              		@ link register save eliminated.
 4263              	.LVL491:
  56:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****         return prvDoesTopicMatchTopicFilter( pucTopic, usTopicLength, pucTopicFilter, usTopicFilter
 4264              		.loc 2 56 0
 4265 0000 FEFFFFEA 		b	prvDoesTopicMatchTopicFilter
 4266              	.LVL492:
 4267              		.cfi_endproc
 4268              	.LFE39:
 4270              		.section	.text.Test_prvResetMQTTContext,"ax",%progbits
 4271              		.align	2
 4272              		.global	Test_prvResetMQTTContext
 4273              		.syntax unified
 4274              		.arm
 4275              		.fpu neon
 4277              	Test_prvResetMQTTContext:
 4278              	.LFB40:
  57:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     }
  58:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  59:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** #endif /* mqttconfigENABLE_SUBSCRIPTION_MANAGEMENT */
  60:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** /*-----------------------------------------------------------*/
  61:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** 
  62:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** void Test_prvResetMQTTContext( MQTTContext_t * pxMQTTContext )
  63:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h **** {
 4279              		.loc 2 63 0
 4280              		.cfi_startproc
 4281              		@ args = 0, pretend = 0, frame = 0
 4282              		@ frame_needed = 0, uses_anonymous_args = 0
 4283              		@ link register save eliminated.
 4284              	.LVL493:
  64:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_mqtt_lib_test_access_define.h ****     prvResetMQTTContext( pxMQTTContext );
 4285              		.loc 2 64 0
 4286 0000 FEFFFFEA 		b	prvResetMQTTContext
 4287              	.LVL494:
 4288              		.cfi_endproc
 4289              	.LFE40:
 4291              		.section	.data.ucPUBACKPacket.6855,"aw",%progbits
 4292              		.set	.LANCHOR3,. + 0
 4295              	ucPUBACKPacket.6855:
 4296 0000 40       		.byte	64
 4297 0001 02       		.byte	2
 4298 0002 00       		.byte	0
 4299 0003 00       		.byte	0
 4300              		.section	.rodata.MQTT_Connect.str1.1,"aMS",%progbits,1
 4301              	.LC0:
 4302 0000 4E6F2066 		.ascii	"No free buffer is available to carry out the operat"
 4302      72656520 
 4302      62756666 
 4302      65722069 
 4302      73206176 
 4303 0033 696F6E2E 		.ascii	"ion. \015\012\000"
 4303      200D0A00 
 4304              		.section	.rodata.MQTT_ParseReceivedData.str1.1,"aMS",%progbits,1
 4305              	.LC7:
 4306 0000 5061636B 		.ascii	"Packet with malformed \"Remaining Length\" received"
 4306      65742077 
 4306      69746820 
 4306      6D616C66 
 4306      6F726D65 
 4307 0031 2E0D0A00 		.ascii	".\015\012\000"
 4308              	.LC8:
 4309 0035 52656365 		.ascii	"Received fixed header, %d bytes to receive.\015\012"
 4309      69766564 
 4309      20666978 
 4309      65642068 
 4309      65616465 
 4310 0062 00       		.ascii	"\000"
 4311              	.LC9:
 4312 0063 556E6578 		.ascii	"Unexpected PINGRESP received.\015\012\000"
 4312      70656374 
 4312      65642050 
 4312      494E4752 
 4312      45535020 
 4313              	.LC10:
 4314 0083 434F4E4E 		.ascii	"CONNACK received.\015\012\000"
 4314      41434B20 
 4314      72656365 
 4314      69766564 
 4314      2E0D0A00 
 4315              	.LC11:
 4316 0097 556E6B6E 		.ascii	"Unknown messages %x %x %x %x, expected CONNACK, dis"
 4316      6F776E20 
 4316      6D657373 
 4316      61676573 
 4316      20257820 
 4317 00ca 636F6E6E 		.ascii	"connecting socket.\015\012\000"
 4317      65637469 
 4317      6E672073 
 4317      6F636B65 
 4317      742E0D0A 
 4318              		.section	.rodata.MQTT_Publish.str1.1,"aMS",%progbits,1
 4319              	.LC6:
 4320 0000 496E6974 		.ascii	"Initiating MQTT publish.\015\012\000"
 4320      69617469 
 4320      6E67204D 
 4320      51545420 
 4320      7075626C 
 4321              		.section	.rodata.MQTT_Subscribe.str1.1,"aMS",%progbits,1
 4322              	.LC1:
 4323 0000 496E6974 		.ascii	"Initiating MQTT subscribe.\015\012\000"
 4323      69617469 
 4323      6E67204D 
 4323      51545420 
 4323      73756273 
 4324              	.LC2:
 4325 001d 5741524E 		.ascii	"WARN: The topic filter is invalid.\015\012\000"
 4325      3A205468 
 4325      6520746F 
 4325      70696320 
 4325      66696C74 
 4326              	.LC3:
 4327 0042 5741524E 		.ascii	"WARN: Topic is too long and cannot be stored in the"
 4327      3A20546F 
 4327      70696320 
 4327      69732074 
 4327      6F6F206C 
 4328 0075 20737562 		.ascii	" subscription manager. Consider increasing mqttconf"
 4328      73637269 
 4328      7074696F 
 4328      6E206D61 
 4328      6E616765 
 4329 00a8 69675355 		.ascii	"igSUBSCRIPTION_MANAGER_MAX_TOPIC_LENGTH.\015\012\000"
 4329      42534352 
 4329      49505449 
 4329      4F4E5F4D 
 4329      414E4147 
 4330              	.LC4:
 4331 00d3 5741524E 		.ascii	"WARN: Subscription Manager full! No space left to s"
 4331      3A205375 
 4331      62736372 
 4331      69707469 
 4331      6F6E204D 
 4332 0106 746F7265 		.ascii	"tore new subscriptions.\015\012\000"
 4332      206E6577 
 4332      20737562 
 4332      73637269 
 4332      7074696F 
 4333              		.section	.rodata.MQTT_Unsubscribe.str1.1,"aMS",%progbits,1
 4334              	.LC5:
 4335 0000 496E6974 		.ascii	"Initiating MQTT unsubscribe.\015\012\000"
 4335      69617469 
 4335      6E67204D 
 4335      51545420 
 4335      756E7375 
 4336              		.section	.rodata.ucDefaultCONNACKParameters.6818,"a",%progbits
 4337              		.set	.LANCHOR4,. + 0
 4340              	ucDefaultCONNACKParameters.6818:
 4341 0000 20       		.byte	32
 4342 0001 02       		.byte	2
 4343 0002 00       		.byte	0
 4344 0003 00       		.byte	0
 4345              		.section	.rodata.ucDefaultConnectVariableHeader.6982,"a",%progbits
 4346              		.set	.LANCHOR0,. + 0
 4349              	ucDefaultConnectVariableHeader.6982:
 4350 0000 00       		.byte	0
 4351 0001 04       		.byte	4
 4352 0002 4D       		.byte	77
 4353 0003 51       		.byte	81
 4354 0004 54       		.byte	84
 4355 0005 54       		.byte	84
 4356 0006 04       		.byte	4
 4357 0007 02       		.byte	2
 4358 0008 00       		.byte	0
 4359 0009 00       		.byte	0
 4360              		.section	.rodata.ucDisconnectPacket.6990,"a",%progbits
 4361              		.set	.LANCHOR1,. + 0
 4364              	ucDisconnectPacket.6990:
 4365 0000 E0       		.byte	-32
 4366 0001 00       		.byte	0
 4367              		.section	.rodata.ucPUBACKFixedHeader.6842,"a",%progbits
 4368              		.set	.LANCHOR5,. + 0
 4371              	ucPUBACKFixedHeader.6842:
 4372 0000 40       		.byte	64
 4373 0001 02       		.byte	2
 4374              		.section	.rodata.ucPingReqPacket.7059,"a",%progbits
 4375              		.set	.LANCHOR7,. + 0
 4378              	ucPingReqPacket.7059:
 4379 0000 C0       		.byte	-64
 4380 0001 00       		.byte	0
 4381              		.section	.rodata.ucPingRespPacket.6848,"a",%progbits
 4382              		.set	.LANCHOR2,. + 0
 4385              	ucPingRespPacket.6848:
 4386 0000 D0       		.byte	-48
 4387 0001 00       		.byte	0
 4388              		.section	.rodata.ucUNSUBACKFixedHeader.6834,"a",%progbits
 4389              		.set	.LANCHOR6,. + 0
 4392              	ucUNSUBACKFixedHeader.6834:
 4393 0000 B0       		.byte	-80
 4394 0001 02       		.byte	2
 4395              		.text
 4396              	.Letext0:
 4397              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 4398              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 4399              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 4400              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 4401              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 4402              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 4403              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 4404              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4405              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 4406              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_doubly_linked_list.h"
 4407              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_mqtt_buffer.h"
 4408              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/aws_mqtt_lib.h"
 4409              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4410              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 4411              		.file 17 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/aws_mqtt_config_defaults.
DEFINED SYMBOLS
                            *ABS*:00000000 aws_mqtt_lib.c
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:17     .text.prvDecodeRemainingLength:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:22     .text.prvDecodeRemainingLength:00000000 prvDecodeRemainingLength
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:85     .text.prvGetTopicFilterType:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:90     .text.prvGetTopicFilterType:00000000 prvGetTopicFilterType
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:185    .text.prvDoesTopicMatchTopicFilter:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:190    .text.prvDoesTopicMatchTopicFilter:00000000 prvDoesTopicMatchTopicFilter
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:325    .text.prvWriteString:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:330    .text.prvWriteString:00000000 prvWriteString
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:388    .text.prvInvokeCallback:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:393    .text.prvInvokeCallback:00000000 prvInvokeCallback
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:593    .text.prvRemoveSubscription:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:598    .text.prvRemoveSubscription:00000000 prvRemoveSubscription
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:665    .text.prvGetCurrentTickCount.isra.0:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:670    .text.prvGetCurrentTickCount.isra.0:00000000 prvGetCurrentTickCount.isra.0
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:703    .text.prvSendData:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:708    .text.prvSendData:00000000 prvSendData
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:763    .text.prvSizeOfRemainingLength:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:768    .text.prvSizeOfRemainingLength:00000000 prvSizeOfRemainingLength
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:825    .text.prvSizeOfRemainingLength:00000048 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:830    .text.prvReturnBuffer.isra.6:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:835    .text.prvReturnBuffer.isra.6:00000000 prvReturnBuffer.isra.6
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:893    .text.unlikely.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:898    .text.unlikely.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7:00000000 prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:918    .text.unlikely.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7:00000010 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:898    .text.unlikely.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7:00000000 prvGetFreeBuffer.isra.2.part.3
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:898    .text.unlikely.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer.part.7:00000000 prvEncodeRemainingLength.part.4
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:925    .text.prvEncodeRemainingLength:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:930    .text.prvEncodeRemainingLength:00000000 prvEncodeRemainingLength
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:990    .text.prvEncodeRemainingLength:00000054 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:995    .text.prvGetFreeBuffer.isra.2:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1000   .text.prvGetFreeBuffer.isra.2:00000000 prvGetFreeBuffer.isra.2
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1053   .text.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1058   .text.prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer:00000000 prvRemoveSubscriptionForSubscribeOrUnsubscribeBuffer
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1118   .text.prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1123   .text.prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9:00000000 prvPacketTypeFlagsIdentifierGetTxBuffer.constprop.9
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1183   .text.prvResetMQTTContext:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1188   .text.prvResetMQTTContext:00000000 prvResetMQTTContext
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1272   .text.MQTT_Init:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1278   .text.MQTT_Init:00000000 MQTT_Init
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1406   .text.MQTT_Init:000000bc $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1411   .text.MQTT_Connect:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1417   .text.MQTT_Connect:00000000 MQTT_Connect
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1690   .text.MQTT_Connect:0000020c $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1697   .text.MQTT_Disconnect:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1703   .text.MQTT_Disconnect:00000000 MQTT_Disconnect
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1791   .text.MQTT_Disconnect:0000009c $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1797   .text.MQTT_Subscribe:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:1803   .text.MQTT_Subscribe:00000000 MQTT_Subscribe
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2214   .text.MQTT_Subscribe:000002b8 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2224   .text.MQTT_Unsubscribe:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2230   .text.MQTT_Unsubscribe:00000000 MQTT_Unsubscribe
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2452   .text.MQTT_Unsubscribe:00000198 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2459   .text.MQTT_Publish:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2465   .text.MQTT_Publish:00000000 MQTT_Publish
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2721   .text.MQTT_Publish:000001e4 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2728   .text.MQTT_ParseReceivedData:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:2734   .text.MQTT_ParseReceivedData:00000000 MQTT_ParseReceivedData
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:3871   .text.MQTT_ParseReceivedData:00000828 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:3890   .text.MQTT_ReturnBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:3896   .text.MQTT_ReturnBuffer:00000000 MQTT_ReturnBuffer
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:3943   .text.MQTT_ReturnBuffer:00000048 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:3948   .text.MQTT_Periodic:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:3954   .text.MQTT_Periodic:00000000 MQTT_Periodic
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4222   .text.MQTT_Periodic:000001c4 $d
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4228   .text.Test_prvGetTopicFilterType:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4234   .text.Test_prvGetTopicFilterType:00000000 Test_prvGetTopicFilterType
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4250   .text.Test_prvDoesTopicMatchTopicFilter:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4256   .text.Test_prvDoesTopicMatchTopicFilter:00000000 Test_prvDoesTopicMatchTopicFilter
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4271   .text.Test_prvResetMQTTContext:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4277   .text.Test_prvResetMQTTContext:00000000 Test_prvResetMQTTContext
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4295   .data.ucPUBACKPacket.6855:00000000 ucPUBACKPacket.6855
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4340   .rodata.ucDefaultCONNACKParameters.6818:00000000 ucDefaultCONNACKParameters.6818
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4349   .rodata.ucDefaultConnectVariableHeader.6982:00000000 ucDefaultConnectVariableHeader.6982
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4364   .rodata.ucDisconnectPacket.6990:00000000 ucDisconnectPacket.6990
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4371   .rodata.ucPUBACKFixedHeader.6842:00000000 ucPUBACKFixedHeader.6842
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4378   .rodata.ucPingReqPacket.7059:00000000 ucPingReqPacket.7059
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4385   .rodata.ucPingRespPacket.6848:00000000 ucPingRespPacket.6848
C:\Users\a5089698\AppData\Local\Temp\ccC45U3f.s:4392   .rodata.ucUNSUBACKFixedHeader.6834:00000000 ucUNSUBACKFixedHeader.6834
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
memcmp
longjmp
Unity
memset
vLoggingPrintf
