   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"aws_bufferpool_static_thread_safe.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.BUFFERPOOL_Init,"ax",%progbits
  17              		.align	2
  18              		.global	BUFFERPOOL_Init
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	BUFFERPOOL_Init:
  24              	.LFB0:
  25              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/bufferpool/aws_bufferpool_static_thread_safe.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * Amazon FreeRTOS Buffer Pool V1.0.0
   3:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  27:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  28:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @file aws_bufferpool_static_thread_safe.c
  29:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief A thread safe implementation of the BufferPool interface.
  30:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  31:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * A pool of statically allocated buffers is maintained. The number
  32:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * of buffers in the pool and the size of each buffer is controlled
  33:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * via macros bufferpoolconfigNUM_BUFFERS and bufferpoolconfigBUFFER_SIZE
  34:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * which must be defined in BufferPoolConfig.h.
  35:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  36:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  37:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /* FreeRTOS includes. */
  38:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #include "FreeRTOS.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #include "task.h"
  40:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  41:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /* BufferPool includes. */
  42:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #include "aws_bufferpool.h"
  43:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #include "aws_bufferpool_config.h"
  44:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  45:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /* Make sure that proper config options are defined. */
  46:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #ifndef bufferpoolconfigNUM_BUFFERS
  47:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     #error bufferpoolconfigNUM_BUFFERS must be defined in BufferPoolConfig.h
  48:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #endif
  49:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  50:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #ifndef bufferpoolconfigBUFFER_SIZE
  51:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     #error bufferpoolconfigBUFFER_SIZE must be defined in BufferPoolConfig.h
  52:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #endif
  53:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  54:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  55:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief Moves the given pointer ahead by the number of bytes required to
  56:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * properly align it as specified by portBYTE_ALIGNMENT.
  57:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  58:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @param[in] pucPtr The given pointer to be aligned.
  59:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  60:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #define bufferpoolstaticALIGN_POINTER( pucPtr )                                ( ( uint8_t * ) ( ( 
  61:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  62:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  63:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief Moves the given pointer ahead by the number of bytes required to
  64:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * store the metadata.
  65:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  66:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @param[in] pucPtr The given pointer to move.
  67:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  68:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #define bufferpoolstaticRESERVE_METADATA_SPACE( pucPtr )                       ( ( uint8_t * ) ( pu
  69:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  70:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  71:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief Extracts the location of the user data in the given buffer. The data
  72:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * location is ensured to be properly aligned as specified by portBYTE_ALIGNMENT.
  73:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  74:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @param[in] pucBuffer The buffer for which to find the user data location.
  75:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  76:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #define bufferpoolstaticDATA_LOCATION_IN_BUFFER( pucBuffer )                   ( ( uint8_t * ) ( bu
  77:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  78:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  79:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief Given the data location in a buffer, extracts the buffer "in-use"
  80:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * information from the metadata portion of the buffer.
  81:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  82:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @param[in] pucDataLocation The given data location in the buffer.
  83:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  84:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #define bufferpoolstaticBUFFER_IN_USE_FROM_DATA_LOCATION( pucDataLocation )    ( ( ( BufferMetadata
  85:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  86:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  87:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief Extracts the buffer "in-use" information from the metadata portion
  88:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * of the given buffer.
  89:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
  90:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @param[in] pucBuffer The given buffer.
  91:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  92:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** #define bufferpoolstaticBUFFER_IN_USE( pucBuffer )                             bufferpoolstaticBUFF
  93:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /*-----------------------------------------------------------*/
  94:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  95:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
  96:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief Metadata added in the beginning of each buffer.
  97:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
  98:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** typedef struct BufferMetadata
  99:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** {
 100:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     uint8_t ucBufferInUse; /**< Whether or not the buffer is in use. */
 101:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** } BufferMetadata_t;
 102:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /*-----------------------------------------------------------*/
 103:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 104:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /**
 105:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @brief The pool of statically allocated buffers.
 106:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
 107:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * The number of buffers in the pool and the size of each buffer is controlled
 108:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * via macros bufferpoolconfigNUM_BUFFERS and bufferpoolconfigBUFFER_SIZE which
 109:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * must be defined in BufferPoolConfig.h.
 110:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  *
 111:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * @note Each buffer in the buffer pool allocates additional the space required
 112:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  * to store the metadata and to ensure alignment.
 113:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****  */
 114:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** static uint8_t ucBufferPool[ bufferpoolconfigNUM_BUFFERS ][ sizeof( BufferMetadata_t ) + bufferpool
 115:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /*-----------------------------------------------------------*/
 116:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 117:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** BaseType_t BUFFERPOOL_Init( void )
 118:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** {
  26              		.loc 1 118 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 04E02DE5 		str	lr, [sp, #-4]!
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34              		.loc 1 118 0
  35 0004 0030A0E3 		mov	r3, #0
 119:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     BaseType_t x = 0;
 120:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 121:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     /* This function is supposed to be called exactly once
 122:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****      * and hence no thread safety is ensured. */
 123:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     for( x = 0; x < bufferpoolconfigNUM_BUFFERS; x++ )
 124:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     {
 125:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         /* Mark all the buffers as free. */
 126:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         bufferpoolstaticBUFFER_IN_USE( ucBufferPool[ x ] ) = 0;
  36              		.loc 1 126 0
  37 0008 2CE09FE5 		ldr	lr, .L5
  38 000c 03C0A0E1 		mov	ip, r3
  39 0010 6A0800E3 		movw	r0, #2154
 123:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     {
  40              		.loc 1 123 0
  41 0014 501304E3 		movw	r1, #17232
  42              	.LVL1:
  43              	.L2:
  44              		.loc 1 126 0 discriminator 3
  45 0018 082083E2 		add	r2, r3, #8
  46 001c 003083E0 		add	r3, r3, r0
  47 0020 02208EE0 		add	r2, lr, r2
 123:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     {
  48              		.loc 1 123 0 discriminator 3
  49 0024 010053E1 		cmp	r3, r1
  50              		.loc 1 126 0 discriminator 3
  51 0028 0720C2E3 		bic	r2, r2, #7
  52 002c 01C042E5 		strb	ip, [r2, #-1]
 123:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     {
  53              		.loc 1 123 0 discriminator 3
  54 0030 F8FFFF1A 		bne	.L2
 127:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     }
 128:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 129:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     return pdPASS;
 130:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** }
  55              		.loc 1 130 0
  56 0034 0100A0E3 		mov	r0, #1
  57 0038 04F09DE4 		ldr	pc, [sp], #4
  58              	.L6:
  59              		.align	2
  60              	.L5:
  61 003c 00000000 		.word	.LANCHOR0
  62              		.cfi_endproc
  63              	.LFE0:
  65              		.section	.text.BUFFERPOOL_GetFreeBuffer,"ax",%progbits
  66              		.align	2
  67              		.global	BUFFERPOOL_GetFreeBuffer
  68              		.syntax unified
  69              		.arm
  70              		.fpu neon
  72              	BUFFERPOOL_GetFreeBuffer:
  73              	.LFB1:
 131:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /*-----------------------------------------------------------*/
 132:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 133:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** uint8_t * BUFFERPOOL_GetFreeBuffer( uint32_t * pulBufferLength )
 134:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** {
  74              		.loc 1 134 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL2:
 135:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     BaseType_t x = 0;
 136:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     uint8_t * pucFreeBuffer = NULL;
 137:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 138:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     /* All the buffers in the pool are of size bufferpoolconfigBUFFER_SIZE,
 139:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****      * so we cannot provide any buffer larger than that. */
 140:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     if( *pulBufferLength <= bufferpoolconfigBUFFER_SIZE )
  79              		.loc 1 140 0
  80 0000 002090E5 		ldr	r2, [r0]
  81 0004 623800E3 		movw	r3, #2146
  82 0008 030052E1 		cmp	r2, r3
  83 000c 0100009A 		bls	.L8
 136:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
  84              		.loc 1 136 0
  85 0010 0000A0E3 		mov	r0, #0
  86              	.LVL3:
 141:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     {
 142:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         /* Iterate over all the buffers to find a free buffer. */
 143:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         for( x = 0; x < bufferpoolconfigNUM_BUFFERS; x++ )
 144:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         {
 145:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             /* Start critical section. */
 146:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             taskENTER_CRITICAL();
 147:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 148:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             /* Check if the buffer is free. */
 149:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             if( bufferpoolstaticBUFFER_IN_USE( ucBufferPool[ x ] ) == 0 )
 150:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             {
 151:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 /* Mark the buffer as "in-use". */
 152:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 bufferpoolstaticBUFFER_IN_USE( ucBufferPool[ x ] ) = 1;
 153:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 154:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 /* End critical section. The further operations in this
 155:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                  * if branch do not modify the buffer and hence the critical
 156:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                  * section is not needed hereafter. */
 157:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 taskEXIT_CRITICAL();
 158:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 159:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 /* Return the actual buffer size (as configured by the
 160:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                  * bufferpoolconfigBUFFER_SIZE macro) to the user. */
 161:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 *pulBufferLength = bufferpoolconfigBUFFER_SIZE;
 162:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 163:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 /* Return the data location to the user. */
 164:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 pucFreeBuffer = bufferpoolstaticDATA_LOCATION_IN_BUFFER( ucBufferPool[ x ] );
 165:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 166:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 /* Stop as we have found a buffer. */
 167:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 break;
 168:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             }
 169:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             else
 170:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             {
 171:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 /* End critical section. */
 172:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****                 taskEXIT_CRITICAL();
 173:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             }
 174:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         }
 175:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     }
 176:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 177:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     return pucFreeBuffer;
 178:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** }
  87              		.loc 1 178 0
  88 0014 1EFF2FE1 		bx	lr
  89              	.LVL4:
  90              	.L8:
 134:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     BaseType_t x = 0;
  91              		.loc 1 134 0
  92 0018 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  93              		.cfi_def_cfa_offset 32
  94              		.cfi_offset 4, -32
  95              		.cfi_offset 5, -28
  96              		.cfi_offset 6, -24
  97              		.cfi_offset 7, -20
  98              		.cfi_offset 8, -16
  99              		.cfi_offset 9, -12
 100              		.cfi_offset 10, -8
 101              		.cfi_offset 14, -4
 102 001c 0060A0E1 		mov	r6, r0
 149:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             {
 103              		.loc 1 149 0
 104 0020 58909FE5 		ldr	r9, .L17
 105 0024 0050A0E3 		mov	r5, #0
 106 0028 6A8800E3 		movw	r8, #2154
 143:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         {
 107              		.loc 1 143 0
 108 002c 507304E3 		movw	r7, #17232
 109              	.LVL5:
 110              	.L11:
 149:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             {
 111              		.loc 1 149 0
 112 0030 084085E2 		add	r4, r5, #8
 113 0034 044089E0 		add	r4, r9, r4
 114 0038 0740C4E3 		bic	r4, r4, #7
 146:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 115              		.loc 1 146 0
 116 003c FEFFFFEB 		bl	vPortEnterCritical
 117              	.LVL6:
 149:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             {
 118              		.loc 1 149 0
 119 0040 012054E5 		ldrb	r2, [r4, #-1]	@ zero_extendqisi2
 120 0044 000052E3 		cmp	r2, #0
 121 0048 0600001A 		bne	.L10
 152:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 122              		.loc 1 152 0
 123 004c 0120A0E3 		mov	r2, #1
 124 0050 012044E5 		strb	r2, [r4, #-1]
 157:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 125              		.loc 1 157 0
 126 0054 FEFFFFEB 		bl	vPortExitCritical
 127              	.LVL7:
 161:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 128              		.loc 1 161 0
 129 0058 623800E3 		movw	r3, #2146
 164:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 130              		.loc 1 164 0
 131 005c 0400A0E1 		mov	r0, r4
 132              	.LVL8:
 161:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 133              		.loc 1 161 0
 134 0060 003086E5 		str	r3, [r6]
 167:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             }
 135              		.loc 1 167 0
 136 0064 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 137              	.LVL9:
 138              	.L10:
 139 0068 085085E0 		add	r5, r5, r8
 172:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****             }
 140              		.loc 1 172 0 discriminator 2
 141 006c FEFFFFEB 		bl	vPortExitCritical
 142              	.LVL10:
 143:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****         {
 143              		.loc 1 143 0 discriminator 2
 144 0070 070055E1 		cmp	r5, r7
 145 0074 EDFFFF1A 		bne	.L11
 136:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 146              		.loc 1 136 0
 147 0078 0000A0E3 		mov	r0, #0
 148 007c F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 149              	.L18:
 150              		.align	2
 151              	.L17:
 152 0080 00000000 		.word	.LANCHOR0
 153              		.cfi_endproc
 154              	.LFE1:
 156              		.section	.text.BUFFERPOOL_ReturnBuffer,"ax",%progbits
 157              		.align	2
 158              		.global	BUFFERPOOL_ReturnBuffer
 159              		.syntax unified
 160              		.arm
 161              		.fpu neon
 163              	BUFFERPOOL_ReturnBuffer:
 164              	.LFB2:
 179:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** /*-----------------------------------------------------------*/
 180:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 181:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** void BUFFERPOOL_ReturnBuffer( uint8_t * const pucBuffer )
 182:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** {
 165              		.loc 1 182 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              	.LVL11:
 170 0000 10402DE9 		push	{r4, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 174              		.loc 1 182 0
 175 0004 0040A0E1 		mov	r4, r0
 183:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     /* Start critical section. */
 184:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     taskENTER_CRITICAL();
 176              		.loc 1 184 0
 177 0008 FEFFFFEB 		bl	vPortEnterCritical
 178              	.LVL12:
 185:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 186:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     /* Mark the buffer as free. The returned buffer is the data
 187:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****      * location in the actual buffer (because we gave the data location
 188:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****      * to the user). */
 189:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     bufferpoolstaticBUFFER_IN_USE_FROM_DATA_LOCATION( pucBuffer ) = 0;
 179              		.loc 1 189 0
 180 000c 0030A0E3 		mov	r3, #0
 181 0010 013044E5 		strb	r3, [r4, #-1]
 190:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** 
 191:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     /* End critical section. */
 192:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c ****     taskEXIT_CRITICAL();
 193:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** }
 182              		.loc 1 193 0
 183 0014 1040BDE8 		pop	{r4, lr}
 184              		.cfi_restore 14
 185              		.cfi_restore 4
 186              		.cfi_def_cfa_offset 0
 187              	.LVL13:
 192:D:/Work/DeviceTester/amazon-freertos/lib/bufferpool\aws_bufferpool_static_thread_safe.c **** }
 188              		.loc 1 192 0
 189 0018 FEFFFFEA 		b	vPortExitCritical
 190              	.LVL14:
 191              		.cfi_endproc
 192              	.LFE2:
 194              		.section	.bss.ucBufferPool,"aw",%nobits
 195              		.set	.LANCHOR0,. + 0
 198              	ucBufferPool:
 199 0000 00000000 		.space	17232
 199      00000000 
 199      00000000 
 199      00000000 
 199      00000000 
 200              		.text
 201              	.Letext0:
 202              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 203              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 204              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 205              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 206              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 207              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 208              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 209              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 210              		.file 10 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 211              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
DEFINED SYMBOLS
                            *ABS*:00000000 aws_bufferpool_static_thread_safe.c
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:17     .text.BUFFERPOOL_Init:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:23     .text.BUFFERPOOL_Init:00000000 BUFFERPOOL_Init
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:61     .text.BUFFERPOOL_Init:0000003c $d
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:66     .text.BUFFERPOOL_GetFreeBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:72     .text.BUFFERPOOL_GetFreeBuffer:00000000 BUFFERPOOL_GetFreeBuffer
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:152    .text.BUFFERPOOL_GetFreeBuffer:00000080 $d
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:157    .text.BUFFERPOOL_ReturnBuffer:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:163    .text.BUFFERPOOL_ReturnBuffer:00000000 BUFFERPOOL_ReturnBuffer
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:198    .bss.ucBufferPool:00000000 ucBufferPool
C:\Users\a5089698\AppData\Local\Temp\cc2THARm.s:199    .bss.ucBufferPool:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
