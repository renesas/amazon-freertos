   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"FreeRTOS_TCP_WIN.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.xTCPWindowRxFind,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	xTCPWindowRxFind:
  23              	.LFB34:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/FreeRTOS_TCP_WIN.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * FreeRTOS+TCP V2.0.10
   3:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
  27:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * FreeRTOS_TCP_WIN.c
  28:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Module which handles the TCP windowing schemes for FreeRTOS+TCP.  Many
  29:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * functions have two versions - one for FreeRTOS+TCP (full) and one for
  30:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * FreeRTOS+TCP (lite).
  31:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
  32:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * In this module all ports and IP addresses and sequence numbers are
  33:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * being stored in host byte-order.
  34:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
  35:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  36:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* Standard includes. */
  37:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include <stdint.h>
  38:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  39:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* FreeRTOS includes. */
  40:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "FreeRTOS.h"
  41:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "task.h"
  42:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "queue.h"
  43:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "semphr.h"
  44:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  45:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* FreeRTOS+TCP includes. */
  46:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "FreeRTOS_UDP_IP.h"
  47:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "FreeRTOS_IP.h"
  48:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "FreeRTOS_Sockets.h"
  49:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "FreeRTOS_IP_Private.h"
  50:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "NetworkBufferManagement.h"
  51:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #include "FreeRTOS_TCP_WIN.h"
  52:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  53:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* Constants used for Smoothed Round Trip Time (SRTT). */
  54:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #define	winSRTT_INCREMENT_NEW 		2
  55:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #define winSRTT_INCREMENT_CURRENT 	6
  56:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #define	winSRTT_DECREMENT_NEW 		1
  57:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #define winSRTT_DECREMENT_CURRENT 	7
  58:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #define winSRTT_CAP_mS				50
  59:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  60:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
  61:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  62:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#define xTCPWindowRxNew( pxWindow, ulSequenceNumber, lCount ) xTCPWindowNew( pxWindow, ulSequenceN
  63:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  64:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#define xTCPWindowTxNew( pxWindow, ulSequenceNumber, lCount ) xTCPWindowNew( pxWindow, ulSequenceN
  65:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  66:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* The code to send a single Selective ACK (SACK):
  67:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * NOP (0x01), NOP (0x01), SACK (0x05), LEN (0x0a),
  68:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * followed by a lower and a higher sequence number,
  69:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * where LEN is 2 + 2*4 = 10 bytes. */
  70:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#if( ipconfigBYTE_ORDER == pdFREERTOS_BIG_ENDIAN )
  71:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		#define OPTION_CODE_SINGLE_SACK		( 0x0101050aUL )
  72:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#else
  73:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		#define OPTION_CODE_SINGLE_SACK		( 0x0a050101UL )
  74:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#endif
  75:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  76:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Normal retransmission:
  77:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * A packet will be retransmitted after a Retransmit Time-Out (RTO).
  78:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * Fast retransmission:
  79:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * When 3 packets with a higher sequence number have been acknowledged
  80:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * by the peer, it is very unlikely a current packet will ever arrive.
  81:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * It will be retransmitted far before the RTO.
  82:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 */
  83:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#define	DUPLICATE_ACKS_BEFORE_FAST_RETRANSMIT		( 3u )
  84:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  85:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* If there have been several retransmissions (4), decrease the
  86:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 * size of the transmission window to at most 2 times MSS.
  87:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	 */
  88:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#define MAX_TRANSMIT_COUNT_USING_LARGE_WINDOW		( 4u )
  89:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  90:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* configUSE_TCP_WIN */
  91:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
  92:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  93:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** extern void vListInsertGeneric( List_t * const pxList, ListItem_t * const pxNewListItem, MiniListIt
  94:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  95:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
  96:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * All TCP sockets share a pool of segment descriptors (TCPSegment_t)
  97:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Available descriptors are stored in the 'xSegmentList'
  98:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * When a socket owns a descriptor, it will either be stored in
  99:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * 'xTxSegments' or 'xRxSegments'
 100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * As soon as a package has been confirmed, the descriptor will be returned
 101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * to the segment pool
 102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static BaseType_t prvCreateSectors( void );
 105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Find a segment with a given sequence number in the list of received
 109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * segments: 'pxWindow->xRxSegments'.
 110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowRxFind( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber );
 113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Allocate a new segment
 117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * The socket will borrow all segments from a common pool: 'xSegmentList',
 118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * which is a list of 'TCPSegment_t'
 119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowNew( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber, int32_t lCou
 122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* When the peer has a close request (FIN flag), the driver will check if
 125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * there are missing packets in the Rx-queue
 126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * It will accept the closure of the connection if both conditions are true:
 127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * - the Rx-queue is empty
 128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * - we've ACK'd the highest Rx sequence number seen
 129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xTCPWindowRxEmpty( TCPWindow_t *pxWindow );
 132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Detaches and returns the head of a queue
 136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowGetHead( List_t *pxList );
 139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Returns the head of a queue but it won't be detached
 143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowPeekHead( List_t *pxList );
 146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *  Free entry pxSegment because it's not used anymore
 150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *	The ownership will be passed back to the segment pool
 151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static void vTCPWindowFree( TCPSegment_t *pxSegment );
 154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * A segment has been received with sequence number 'ulSequenceNumber', where
 158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * 'ulCurrentSequenceNumber == ulSequenceNumber', which means that exactly this
 159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * segment was expected.  xTCPWindowRxConfirm() will check if there is already
 160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * another segment with a sequence number between (ulSequenceNumber) and
 161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * (ulSequenceNumber+xLength).  Normally none will be found, because the next Rx
 162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * segment should have a sequence number equal to '(ulSequenceNumber+xLength)'.
 163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowRxConfirm( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber, uint32
 166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * FreeRTOS+TCP stores data in circular buffers.  Calculate the next position to
 170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * store.
 171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static int32_t lTCPIncrementTxPosition( int32_t lPosition, int32_t lMax, int32_t lCount );
 174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * This function will look if there is new transmission data.  It will return
 178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * true if there is data to be sent.
 179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static BaseType_t prvTCPWindowTxHasSpace( TCPWindow_t *pxWindow, uint32_t ulWindowSize );
 182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * An acknowledge was received.  See if some outstanding data may be removed
 186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * from the transmission queue(s).
 187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static uint32_t prvTCPWindowTxCheckAck( TCPWindow_t *pxWindow, uint32_t ulFirst, uint32_t ulLast )
 190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*
 193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * A higher Tx block has been acknowledged.  Now iterate through the xWaitQueue
 194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * to find a possible condition for a FAST retransmission.
 195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  */
 196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static uint32_t prvTCPWindowFastRetransmit( TCPWindow_t *pxWindow, uint32_t ulFirst );
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* TCP segment pool. */
 203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPSegments = NULL;
 205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* List of free TCP segments. */
 208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static List_t xSegmentList;
 210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif
 211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* Logging verbosity level. */
 213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** BaseType_t xTCPWindowLoggingLevel = 0;
 214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Some 32-bit arithmetic: comparing sequence numbers */
 217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE BaseType_t xSequenceLessThanOrEqual( uint32_t a, uint32_t b );
 218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE BaseType_t xSequenceLessThanOrEqual( uint32_t a, uint32_t b )
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Test if a <= b
 221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		Return true if the unsigned subtraction of (b-a) doesn't generate an
 222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		arithmetic overflow. */
 223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ( ( b - a ) & 0x80000000UL ) == 0UL;
 224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN */
 226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE BaseType_t xSequenceLessThan( uint32_t a, uint32_t b );
 230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE BaseType_t xSequenceLessThan( uint32_t a, uint32_t b )
 231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Test if a < b */
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ( ( b - a - 1UL ) & 0x80000000UL ) == 0UL;
 234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN */
 236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE BaseType_t xSequenceGreaterThan( uint32_t a, uint32_t b );
 240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE BaseType_t xSequenceGreaterThan( uint32_t a, uint32_t b )
 241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Test if a > b */
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ( ( a - b - 1UL ) & 0x80000000UL ) == 0UL;
 244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN */
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** static portINLINE BaseType_t xSequenceGreaterThanOrEqual( uint32_t a, uint32_t b );
 249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** static portINLINE BaseType_t xSequenceGreaterThanOrEqual( uint32_t a, uint32_t b )
 250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** {
 251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Test if a >= b */
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	return ( ( a - b ) & 0x80000000UL ) == 0UL;
 253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE void vListInsertFifo( List_t * const pxList, ListItem_t * const pxNewListItem );
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static portINLINE void vListInsertFifo( List_t * const pxList, ListItem_t * const pxNewListItem )
 259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInsertGeneric( pxList, pxNewListItem, &pxList->xListEnd );
 261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif
 263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** static portINLINE void vTCPTimerSet( TCPTimer_t *pxTimer );
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** static portINLINE void vTCPTimerSet( TCPTimer_t *pxTimer )
 267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** {
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxTimer->ulBorn = xTaskGetTickCount ( );
 269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** static portINLINE uint32_t ulTimerGetAge( TCPTimer_t *pxTimer );
 273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** static portINLINE uint32_t ulTimerGetAge( TCPTimer_t *pxTimer )
 274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** {
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	return ( ( xTaskGetTickCount() - pxTimer->ulBorn ) * portTICK_PERIOD_MS );
 276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /* _HT_ GCC (using the settings that I'm using) checks for every public function if it is
 280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** preceded by a prototype. Later this prototype will be located in list.h? */
 281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** extern void vListInsertGeneric( List_t * const pxList, ListItem_t * const pxNewListItem, MiniListIt
 283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** void vListInsertGeneric( List_t * const pxList, ListItem_t * const pxNewListItem, MiniListItem_t * 
 285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** {
 286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Insert a new list item into pxList, it does not sort the list,
 287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	but it puts the item just before xListEnd, so it will be the last item
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	returned by listGET_HEAD_ENTRY() */
 289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxNewListItem->pxNext = (struct xLIST_ITEM * configLIST_VOLATILE)pxWhere;
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxNewListItem->pxPrevious = pxWhere->pxPrevious;
 291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWhere->pxPrevious->pxNext = pxNewListItem;
 292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWhere->pxPrevious = pxNewListItem;
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Remember which list the item is in. */
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxNewListItem->pvContainer = ( void * ) pxList; /* If this line fails to build then ensure configE
 296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	( pxList->uxNumberOfItems )++;
 298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static BaseType_t prvCreateSectors( void )
 304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xIndex, xReturn;
 306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Allocate space for 'xTCPSegments' and store them in 'xSegmentList'. */
 308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &xSegmentList );
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		xTCPSegments = ( TCPSegment_t * ) pvPortMallocLarge( ipconfigTCP_WIN_SEG_COUNT * sizeof( xTCPSegm
 311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( xTCPSegments == NULL )
 313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_debug_printf( ( "prvCreateSectors: malloc %lu failed\n",
 315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ipconfigTCP_WIN_SEG_COUNT * sizeof( xTCPSegments[ 0 ] ) ) );
 316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xReturn = pdFAIL;
 318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
 320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Clear the allocated space. */
 322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			memset( xTCPSegments, '\0', ipconfigTCP_WIN_SEG_COUNT * sizeof( xTCPSegments[ 0 ] ) );
 323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			for( xIndex = 0; xIndex < ipconfigTCP_WIN_SEG_COUNT; xIndex++ )
 325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Could call vListInitialiseItem here but all data has been
 327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				nulled already.  Set the owner to a segment descriptor. */
 328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				listSET_LIST_ITEM_OWNER( &( xTCPSegments[ xIndex ].xListItem ), ( void* ) &( xTCPSegments[ xInd
 329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				listSET_LIST_ITEM_OWNER( &( xTCPSegments[ xIndex ].xQueueItem ), ( void* ) &( xTCPSegments[ xIn
 330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* And add it to the pool of available segments */
 332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				vListInsertFifo( &xSegmentList, &( xTCPSegments[xIndex].xListItem ) );
 333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xReturn = pdPASS;
 336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return xReturn;
 339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowRxFind( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber )
 347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
  25              		.loc 1 347 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const ListItem_t *pxIterator;
 349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const MiniListItem_t* pxEnd;
 350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment, *pxReturn = NULL;
 351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Find a segment with a given sequence number in the list of received
 353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		segments. */
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxEnd = ( const MiniListItem_t* )listGET_END_MARKER( &pxWindow->xRxSegments );
 356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
  31              		.loc 1 357 0
  32 0000 B03090E5 		ldr	r3, [r0, #176]
 355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  33              		.loc 1 355 0
  34 0004 AC2080E2 		add	r2, r0, #172
  35              	.LVL1:
  36              	.L2:
  37              		.loc 1 357 0 discriminator 1
  38 0008 020053E1 		cmp	r3, r2
  39 000c 0100001A 		bne	.L4
 350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  40              		.loc 1 350 0
  41 0010 0000A0E3 		mov	r0, #0
 358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
 359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator ) )
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment->ulSequenceNumber == ulSequenceNumber )
 364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxReturn = pxSegment;
 366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				break;
 367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return pxReturn;
 371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
  42              		.loc 1 371 0
  43 0014 1EFF2FE1 		bx	lr
  44              	.L4:
 361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
  45              		.loc 1 361 0
  46 0018 0C0093E5 		ldr	r0, [r3, #12]
  47              	.LVL2:
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
  48              		.loc 1 363 0
  49 001c 00C090E5 		ldr	ip, [r0]
  50 0020 01005CE1 		cmp	ip, r1
  51 0024 1EFF2F01 		bxeq	lr
 359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
  52              		.loc 1 359 0
  53 0028 043093E5 		ldr	r3, [r3, #4]
  54              	.LVL3:
  55 002c F5FFFFEA 		b	.L2
  56              		.cfi_endproc
  57              	.LFE34:
  59              		.section	.text.prvTCPWindowTxHasSpace,"ax",%progbits
  60              		.align	2
  61              		.syntax unified
  62              		.arm
  63              		.fpu neon
  65              	prvTCPWindowTxHasSpace:
  66              	.LFB49:
 372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowNew( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber, int32_t lCou
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	ListItem_t * pxItem;
 382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Allocate a new segment.  The socket will borrow all segments from a
 384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		common pool: 'xSegmentList', which is a list of 'TCPSegment_t' */
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_IS_EMPTY( &xSegmentList ) != pdFALSE )
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* If the TCP-stack runs out of segments, you might consider
 388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			increasing 'ipconfigTCP_WIN_SEG_COUNT'. */
 389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_debug_printf( ( "xTCPWindow%cxNew: Error: all segments occupied\n", xIsForRx ? 'R' : 'T
 390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = NULL;
 391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
 393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Pop the item at the head of the list.  Semaphore protection is
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			not required as only the IP task will call these functions.  */
 396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxItem = ( ListItem_t * ) listGET_HEAD_ENTRY( &xSegmentList );
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			configASSERT( pxItem != NULL );
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			configASSERT( pxSegment != NULL );
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Remove the item from xSegmentList. */
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			uxListRemove( pxItem );
 404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Add it to either the connections' Rx or Tx queue. */
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			vListInsertFifo( xIsForRx ? &pxWindow->xRxSegments : &pxWindow->xTxSegments, pxItem );
 407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* And set the segment's timer to zero */
 409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			vTCPTimerSet( &pxSegment->xTransmitTimer );
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->u.ulFlags = 0;
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->u.bits.bIsForRx = ( xIsForRx != 0 );
 413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lMaxLength = lCount;
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lDataLength = lCount;
 415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->ulSequenceNumber = ulSequenceNumber;
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			#if( ipconfigHAS_DEBUG_PRINTF != 0 )
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			static UBaseType_t xLowestLength = ipconfigTCP_WIN_SEG_COUNT;
 419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			UBaseType_t xLength = listCURRENT_LIST_LENGTH( &xSegmentList );
 420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( xLowestLength > xLength )
 422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					xLowestLength = xLength;
 424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			#endif /* ipconfigHAS_DEBUG_PRINTF */
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return pxSegment;
 430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xTCPWindowRxEmpty( TCPWindow_t *pxWindow )
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xReturn;
 440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* When the peer has a close request (FIN flag), the driver will check
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if there are missing packets in the Rx-queue.  It will accept the
 443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		closure of the connection if both conditions are true:
 444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		  - the Rx-queue is empty
 445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		  - the highest Rx sequence number has been ACK'ed */
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_IS_EMPTY( ( &pxWindow->xRxSegments ) ) == pdFALSE )
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Rx data has been stored while earlier packets were missing. */
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xReturn = pdFALSE;
 450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else if( xSequenceGreaterThanOrEqual( pxWindow->rx.ulCurrentSequenceNumber, pxWindow->rx.ulHighes
 452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* No Rx packets are being stored and the highest sequence number
 454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			that has been received has been ACKed. */
 455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xReturn = pdTRUE;
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_debug_printf( ( "xTCPWindowRxEmpty: cur %lu highest %lu (empty)\n",
 460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( pxWindow->rx.ulCurrentSequenceNumber - pxWindow->rx.ulFirstSequenceNumber ),
 461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( pxWindow->rx.ulHighestSequenceNumber - pxWindow->rx.ulFirstSequenceNumber ) ) );
 462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xReturn = pdFALSE;
 463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return xReturn;
 466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowGetHead( List_t *pxList )
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	ListItem_t * pxItem;
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Detaches and returns the head of a queue. */
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_IS_EMPTY( pxList ) != pdFALSE )
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = NULL;
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
 484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxItem = ( ListItem_t * ) listGET_HEAD_ENTRY( pxList );
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			uxListRemove( pxItem );
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return pxSegment;
 492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowPeekHead( List_t *pxList )
 500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	ListItem_t *pxItem;
 502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxReturn;
 503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Returns the head of a queue but it won't be detached. */
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_IS_EMPTY( pxList ) != pdFALSE )
 506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxReturn = NULL;
 508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxItem = ( ListItem_t * ) listGET_HEAD_ENTRY( pxList );
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxReturn = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return pxReturn;
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static void vTCPWindowFree( TCPSegment_t *pxSegment )
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/*  Free entry pxSegment because it's not used any more.  The ownership
 526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		will be passed back to the segment pool.
 527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		Unlink it from one of the queues, if any. */
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_ITEM_CONTAINER( &( pxSegment->xQueueItem ) ) != NULL )
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			uxListRemove( &( pxSegment->xQueueItem ) );
 532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment->ulSequenceNumber = 0u;
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment->lDataLength = 0l;
 536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment->u.ulFlags = 0u;
 537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Take it out of xRxSegments/xTxSegments */
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_ITEM_CONTAINER( &( pxSegment->xListItem ) ) != NULL )
 540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			uxListRemove( &( pxSegment->xListItem ) );
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Return it to xSegmentList */
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInsertFifo( &xSegmentList, &( pxSegment->xListItem ) );
 546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	void vTCPWindowDestroy( TCPWindow_t *pxWindow )
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	List_t * pxSegments;
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xRound;
 557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/*  Destroy a window.  A TCP window doesn't serve any more.  Return all
 560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		owned segments to the pool.  In order to save code, it will make 2 rounds,
 561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		one to remove the segments from xRxSegments, and a second round to clear
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		xTxSegments*/
 563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		for( xRound = 0; xRound < 2; xRound++ )
 564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( xRound != 0 )
 566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegments = &( pxWindow->xRxSegments );
 568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
 570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegments = &( pxWindow->xTxSegments );
 572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( listLIST_IS_INITIALISED( pxSegments ) != pdFALSE )
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				while( listCURRENT_LIST_LENGTH( pxSegments ) > 0U )
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment = ( TCPSegment_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxSegments );
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					vTCPWindowFree( pxSegment );
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
 586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** void vTCPWindowCreate( TCPWindow_t *pxWindow, uint32_t ulRxWindowLength,
 589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulTxWindowLength, uint32_t ulAckNumber, uint32_t ulSequenceNumber, uint32_t ulMSS )
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** {
 591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Create and initialize a window. */
 592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#if( ipconfigUSE_TCP_WIN == 1 )
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( xTCPSegments == NULL )
 596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			prvCreateSectors();
 598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xTxSegments );
 601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xRxSegments );
 602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xPriorityQueue );			/* Priority queue: segments which must be sent im
 604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xTxQueue   );			/* Transmit queue: segments queued for transmission *
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xWaitQueue );			/* Waiting queue:  outstanding segments */
 606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#endif /* ipconfigUSE_TCP_WIN == 1 */
 608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	if( xTCPWindowLoggingLevel != 0 )
 610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		FreeRTOS_debug_printf( ( "vTCPWindowCreate: for WinLen = Rx/Tx: %lu/%lu\n",
 612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulRxWindowLength, ulTxWindowLength ) );
 613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->xSize.ulRxWindowLength = ulRxWindowLength;
 616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->xSize.ulTxWindowLength = ulTxWindowLength;
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	vTCPWindowInit( pxWindow, ulAckNumber, ulSequenceNumber, ulMSS );
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** void vTCPWindowInit( TCPWindow_t *pxWindow, uint32_t ulAckNumber, uint32_t ulSequenceNumber, uint32
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** {
 624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** const int32_t l500ms = 500;
 625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->u.ulFlags = 0ul;
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->u.bits.bHasInit = pdTRUE_UNSIGNED;
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	if( ulMSS != 0ul )
 630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( pxWindow->usMSSInit != 0u )
 632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxWindow->usMSSInit = ( uint16_t ) ulMSS;
 634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( ( ulMSS < ( uint32_t ) pxWindow->usMSS ) || ( pxWindow->usMSS == 0u ) )
 637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxWindow->xSize.ulRxWindowLength = ( pxWindow->xSize.ulRxWindowLength / ulMSS ) * ulMSS;
 639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxWindow->usMSS = ( uint16_t ) ulMSS;
 640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#if( ipconfigUSE_TCP_WIN == 0 )
 644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxWindow->xTxSegment.lMaxLength = ( int32_t ) pxWindow->usMSS;
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	#endif /* ipconfigUSE_TCP_WIN == 1 */
 648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/*Start with a timeout of 2 * 500 ms (1 sec). */
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->lSRTT = l500ms;
 651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Just for logging, to print relative sequence numbers. */
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->rx.ulFirstSequenceNumber = ulAckNumber;
 654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* The segment asked for in the next transmission. */
 656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->rx.ulCurrentSequenceNumber = ulAckNumber;
 657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* The right-hand side of the receive window. */
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->rx.ulHighestSequenceNumber = ulAckNumber;
 660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->tx.ulFirstSequenceNumber = ulSequenceNumber;
 662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* The segment asked for in next transmission. */
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->tx.ulCurrentSequenceNumber = ulSequenceNumber;
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* The sequence number given to the next outgoing byte to be added is
 667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	maintained by lTCPWindowTxAdd(). */
 668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->ulNextTxSequenceNumber = ulSequenceNumber;
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* The right-hand side of the transmit window. */
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->tx.ulHighestSequenceNumber = ulSequenceNumber;
 672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->ulOurSequenceNumber = ulSequenceNumber;
 673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****     void vTCPSegmentCleanup( void )
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****     {
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         /* Free and clear the TCP segments pointer. This function should only be called
 681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****          * once FreeRTOS+TCP will no longer be used. No thread-safety is provided for this
 682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****          * function. */
 683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         if( xTCPSegments != NULL )
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         {
 685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****             vPortFreeLarge( xTCPSegments );
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****             xTCPSegments = NULL;
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         }
 688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****     }
 689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfgiUSE_TCP_WIN == 1 */
 691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*=============================================================================
 694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                ######        #    #
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 #    #       #    #
 697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 #    #       #    #
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 #    #        ####
 699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 ######         ##
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 #  ##         ####
 701:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 #   #        #    #
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                 #    #       #    #
 703:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                ###  ##       #    #
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Rx functions
 705:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *=============================================================================*/
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 709:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static TCPSegment_t *xTCPWindowRxConfirm( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber, uint32
 711:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxBest = NULL;
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const ListItem_t *pxIterator;
 714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulNextSequenceNumber = ulSequenceNumber + ulLength;
 715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const MiniListItem_t* pxEnd = ( const MiniListItem_t* ) listGET_END_MARKER( &pxWindow->xRxSegments
 716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* A segment has been received with sequence number 'ulSequenceNumber',
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		where 'ulCurrentSequenceNumber == ulSequenceNumber', which means that
 720:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		exactly this segment was expected.  xTCPWindowRxConfirm() will check if
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		there is already another segment with a sequence number between (ulSequenceNumber)
 722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		and (ulSequenceNumber+ulLength).  Normally none will be found, because
 723:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		the next RX segment should have a sequence number equal to
 724:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		'(ulSequenceNumber+ulLength)'. */
 725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 726:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Iterate through all RX segments that are stored: */
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
 728:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator ) )
 730:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* And see if there is a segment for which:
 733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			'ulSequenceNumber' <= 'pxSegment->ulSequenceNumber' < 'ulNextSequenceNumber'
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			If there are more matching segments, the one with the lowest sequence number
 735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			shall be taken */
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ( xSequenceGreaterThanOrEqual( pxSegment->ulSequenceNumber, ulSequenceNumber ) != 0 ) &&
 737:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulNextSequenceNumber ) != 0 ) )
 738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ( pxBest == NULL ) || ( xSequenceLessThan( pxSegment->ulSequenceNumber, pxBest->ulSequenceN
 740:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 741:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxBest = pxSegment;
 742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 743:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 745:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( ( pxBest != NULL ) &&
 747:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			( ( pxBest->ulSequenceNumber != ulSequenceNumber ) || ( pxBest->lDataLength != ( int32_t ) ulLen
 748:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 749:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_flush_logging();
 750:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_debug_printf( ( "xTCPWindowRxConfirm[%u]: search %lu (+%ld=%lu) found %lu (+%ld=%lu)\n"
 751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->usPeerPortNumber,
 752:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulSequenceNumber - pxWindow->rx.ulFirstSequenceNumber,
 753:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulLength,
 754:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulSequenceNumber + ulLength - pxWindow->rx.ulFirstSequenceNumber,
 755:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxBest->ulSequenceNumber - pxWindow->rx.ulFirstSequenceNumber,
 756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxBest->lDataLength,
 757:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxBest->ulSequenceNumber + ( ( uint32_t ) pxBest->lDataLength ) - pxWindow->rx.ulFirstSequenceN
 758:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 759:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 760:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return pxBest;
 761:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 762:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 763:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfgiUSE_TCP_WIN == 1 */
 764:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 765:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 766:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 767:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 768:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lTCPWindowRxCheck( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber, uint32_t ulLength, ui
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 770:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulCurrentSequenceNumber, ulLast, ulSavedSequenceNumber;
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lReturn, lDistance;
 772:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxFound;
 773:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 774:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* If lTCPWindowRxCheck( ) returns == 0, the packet will be passed
 775:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		directly to user (segment is expected).  If it returns a positive
 776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		number, an earlier packet is missing, but this packet may be stored.
 777:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		If negative, the packet has already been stored, or it is out-of-order,
 778:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		or there is not enough space.
 779:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 780:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		As a side-effect, pxWindow->ulUserDataLength will get set to non-zero,
 781:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if more Rx data may be passed to the user after this packet. */
 782:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 783:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		ulCurrentSequenceNumber = pxWindow->rx.ulCurrentSequenceNumber;
 784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 785:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* For Selective Ack (SACK), used when out-of-sequence data come in. */
 786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxWindow->ucOptionLength = 0u;
 787:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 788:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Non-zero if TCP-windows contains data which must be popped. */
 789:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxWindow->ulUserDataLength = 0ul;
 790:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( ulCurrentSequenceNumber == ulSequenceNumber )
 792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 793:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* This is the packet with the lowest sequence number we're waiting
 794:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			for.  It can be passed directly to the rx stream. */
 795:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ulLength > ulSpace )
 796:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 797:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				FreeRTOS_debug_printf( ( "lTCPWindowRxCheck: Refuse %lu bytes, due to lack of space (%lu)\n", u
 798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lReturn = -1;
 799:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
 801:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulCurrentSequenceNumber += ulLength;
 803:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( listCURRENT_LIST_LENGTH( &( pxWindow->xRxSegments ) ) != 0 )
 805:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 806:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					ulSavedSequenceNumber = ulCurrentSequenceNumber;
 807:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 808:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     /* Clean up all sequence received between ulSequenceNumber and ulSequenceNumber
 809:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     If the server is forced to retransmit packets several time in a row it might se
 810:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     So we cannot rely on the packets between ulSequenceNumber and ulSequenceNumber 
 811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     clean them out. */
 812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     do
 813:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     {
 814:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                         pxFound = xTCPWindowRxConfirm( pxWindow, ulSequenceNumber, ulLength );
 815:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                         if ( pxFound != NULL )
 817:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                         {
 818:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                             /* Remove it because it will be passed to user directly. */
 819:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                             vTCPWindowFree( pxFound );
 820:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                         }
 821:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                     } while ( pxFound );
 822:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/*  Check for following segments that are already in the
 824:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					queue and increment ulCurrentSequenceNumber. */
 825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					while( ( pxFound = xTCPWindowRxFind( pxWindow, ulCurrentSequenceNumber ) ) != NULL )
 826:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulCurrentSequenceNumber += ( uint32_t ) pxFound->lDataLength;
 828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* As all packet below this one have been passed to the
 830:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						user it can be discarded. */
 831:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						vTCPWindowFree( pxFound );
 832:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 833:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( ulSavedSequenceNumber != ulCurrentSequenceNumber )
 835:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 836:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/*  After the current data-package, there is more data
 837:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						to be popped. */
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->ulUserDataLength = ulCurrentSequenceNumber - ulSavedSequenceNumber;
 839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						if( xTCPWindowLoggingLevel >= 1 )
 841:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						{
 842:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							FreeRTOS_debug_printf( ( "lTCPWindowRxCheck[%d,%d]: retran %lu (Found %lu bytes at %lu cnt %
 843:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								pxWindow->usPeerPortNumber, pxWindow->usOurPortNumber,
 844:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								ulSequenceNumber - pxWindow->rx.ulFirstSequenceNumber,
 845:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								pxWindow->ulUserDataLength,
 846:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								ulSavedSequenceNumber - pxWindow->rx.ulFirstSequenceNumber,
 847:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								listCURRENT_LIST_LENGTH( &pxWindow->xRxSegments ) ) );
 848:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						}
 849:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 850:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 851:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 852:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->rx.ulCurrentSequenceNumber = ulCurrentSequenceNumber;
 853:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 854:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Packet was expected, may be passed directly to the socket
 855:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				buffer or application.  Store the packet at offset 0. */
 856:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lReturn = 0;
 857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 858:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else if( ulCurrentSequenceNumber == ( ulSequenceNumber + 1UL ) )
 860:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 861:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Looks like a TCP keep-alive message.  Do not accept/store Rx data
 862:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulUserDataLength = 0. Not packet out-of-sync.  Just reply to it. */
 863:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			lReturn = -1;
 864:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 865:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
 866:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 867:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* The packet is not the one expected.  See if it falls within the Rx
 868:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			window so it can be stored. */
 869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 870:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/*  An "out-of-sequence" segment was received, must have missed one.
 871:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			Prepare a SACK (Selective ACK). */
 872:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulLast = ulSequenceNumber + ulLength;
 873:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			lDistance = ( int32_t ) ( ulLast - ulCurrentSequenceNumber );
 874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 875:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( lDistance <= 0 )
 876:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 877:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* An earlier has been received, must be a retransmission of a
 878:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				packet that has been accepted already.  No need to send out a
 879:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				Selective ACK (SACK). */
 880:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lReturn = -1;
 881:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 882:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else if( lDistance > ( int32_t ) ulSpace )
 883:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 884:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* The new segment is ahead of rx.ulCurrentSequenceNumber.  The
 885:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				sequence number of this packet is too far ahead, ignore it. */
 886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				FreeRTOS_debug_printf( ( "lTCPWindowRxCheck: Refuse %lu+%lu bytes, due to lack of space (%lu)\n
 887:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lReturn = -1;
 888:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 889:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
 890:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 891:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* See if there is more data in a contiguous block to make the
 892:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				SACK describe a longer range of data. */
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 894:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* TODO: SACK's may also be delayed for a short period
 895:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				 * This is useful because subsequent packets will be SACK'd with
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				 * single one message
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				 */
 898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				while( ( pxFound = xTCPWindowRxFind( pxWindow, ulLast ) ) != NULL )
 899:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					ulLast += ( uint32_t ) pxFound->lDataLength;
 901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 902:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 903:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( xTCPWindowLoggingLevel >= 1 )
 904:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 905:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					FreeRTOS_debug_printf( ( "lTCPWindowRxCheck[%d,%d]: seqnr %lu exp %lu (dist %ld) SACK to %lu\n
 906:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->usPeerPortNumber, pxWindow->usOurPortNumber,
 907:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulSequenceNumber - pxWindow->rx.ulFirstSequenceNumber,
 908:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulCurrentSequenceNumber - pxWindow->rx.ulFirstSequenceNumber,
 909:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						( BaseType_t ) ( ulSequenceNumber - ulCurrentSequenceNumber ),	/* want this signed */
 910:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulLast - pxWindow->rx.ulFirstSequenceNumber ) );
 911:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 912:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 913:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Now prepare the SACK message.
 914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				Code OPTION_CODE_SINGLE_SACK already in network byte order. */
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->ulOptionsData[0] = OPTION_CODE_SINGLE_SACK;
 916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* First sequence number that we received. */
 918:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->ulOptionsData[1] = FreeRTOS_htonl( ulSequenceNumber );
 919:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 920:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Last + 1 */
 921:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->ulOptionsData[2] = FreeRTOS_htonl( ulLast );
 922:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 923:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Which make 12 (3*4) option bytes. */
 924:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->ucOptionLength = 3 * sizeof( pxWindow->ulOptionsData[ 0 ] );
 925:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxFound = xTCPWindowRxFind( pxWindow, ulSequenceNumber );
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 928:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( pxFound != NULL )
 929:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 930:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* This out-of-sequence packet has been received for a
 931:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					second time.  It is already stored but do send a SACK
 932:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					again. */
 933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					lReturn = -1;
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else
 936:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxFound = xTCPWindowRxNew( pxWindow, ulSequenceNumber, ( int32_t ) ulLength );
 938:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( pxFound == NULL )
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 941:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* Can not send a SACK, because the segment cannot be
 942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						stored. */
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->ucOptionLength = 0u;
 944:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* Needs to be stored but there is no segment
 946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						available. */
 947:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						lReturn = -1;
 948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					else
 950:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 951:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						if( xTCPWindowLoggingLevel != 0 )
 952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						{
 953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							FreeRTOS_debug_printf( ( "lTCPWindowRxCheck[%u,%u]: seqnr %lu (cnt %lu)\n",
 954:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								pxWindow->usPeerPortNumber, pxWindow->usOurPortNumber, ulSequenceNumber - pxWindow->rx.ulFi
 955:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 								listCURRENT_LIST_LENGTH( &pxWindow->xRxSegments ) ) );
 956:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							FreeRTOS_flush_logging( );
 957:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						}
 958:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 959:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* Return a positive value.  The packet may be accepted
 960:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						and stored but an earlier packet is still missing. */
 961:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						lReturn = ( int32_t ) ( ulSequenceNumber - ulCurrentSequenceNumber );
 962:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 963:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 965:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 966:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return lReturn;
 968:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 970:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfgiUSE_TCP_WIN == 1 */
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*=============================================================================
 974:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                    #########   #    #
 976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                    #   #   #   #    #
 977:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                        #       #    #
 978:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                        #        ####
 979:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                        #         ##
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                        #        ####
 981:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                        #       #    #
 982:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                        #       #    #
 983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *                      #####     #    #
 984:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
 985:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  * Tx functions
 986:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *
 987:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****  *=============================================================================*/
 988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 989:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
 990:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 991:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static int32_t lTCPIncrementTxPosition( int32_t lPosition, int32_t lMax, int32_t lCount )
 992:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 993:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* +TCP stores data in circular buffers.  Calculate the next position to
 994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		store. */
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		lPosition += lCount;
 996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( lPosition >= lMax )
 997:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			lPosition -= lMax;
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1000:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1001:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return lPosition;
1002:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
1003:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1005:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1006:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1007:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1008:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1009:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lTCPWindowTxAdd( TCPWindow_t *pxWindow, uint32_t ulLength, int32_t lPosition, int32_t lMax
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lBytesLeft = ( int32_t ) ulLength, lToWrite;
1012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lDone = 0;
1013:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment = pxWindow->pxHeadSegment;
1014:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1015:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Puts a message in the Tx-window (after buffer size has been
1016:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		verified). */
1017:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( pxSegment != NULL )
1018:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment->lDataLength < pxSegment->lMaxLength )
1020:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ( pxSegment->u.bits.bOutstanding == pdFALSE_UNSIGNED ) && ( pxSegment->lDataLength != 0 ) )
1022:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1023:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Adding data to a segment that was already in the TX queue.  It
1024:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					will be filled-up to a maximum of MSS (maximum segment size). */
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					lToWrite = FreeRTOS_min_int32( lBytesLeft, pxSegment->lMaxLength - pxSegment->lDataLength );
1026:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment->lDataLength += lToWrite;
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( pxSegment->lDataLength >= pxSegment->lMaxLength )
1030:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1031:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* This segment is full, don't add more bytes. */
1032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->pxHeadSegment = NULL;
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					lBytesLeft -= lToWrite;
1036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1037:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* ulNextTxSequenceNumber is the sequence number of the next byte to
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					be stored for transmission. */
1039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->ulNextTxSequenceNumber += ( uint32_t ) lToWrite;
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1041:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Increased the return value. */
1042:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					lDone += lToWrite;
1043:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1044:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Some detailed logging, for those who're interested. */
1045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( ( xTCPWindowLoggingLevel >= 2 ) && ( ipconfigTCP_MAY_LOG_PORT( pxWindow->usOurPortNumber )
1046:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1047:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_debug_printf( ( "lTCPWindowTxAdd: Add %4lu bytes for seqNr %lu len %4lu (nxt %lu) po
1048:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							ulLength,
1049:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1050:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->lDataLength,
1051:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->ulNextTxSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->lStreamPos ) );
1053:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_flush_logging( );
1054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1055:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Calculate the next position in the circular data buffer, knowing
1057:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					its maximum length 'lMax'. */
1058:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					lPosition = lTCPIncrementTxPosition( lPosition, lMax, lToWrite );
1059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1060:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1062:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		while( lBytesLeft > 0 )
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1065:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* The current transmission segment is full, create new segments as
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			needed. */
1067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = xTCPWindowTxNew( pxWindow, pxWindow->ulNextTxSequenceNumber, pxWindow->usMSS );
1068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment != NULL )
1070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1071:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Store as many as needed, but no more than the maximum
1072:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				(MSS). */
1073:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lToWrite = FreeRTOS_min_int32( lBytesLeft, pxSegment->lMaxLength );
1074:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment->lDataLength = lToWrite;
1076:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment->lStreamPos = lPosition;
1077:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lBytesLeft -= lToWrite;
1078:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lPosition = lTCPIncrementTxPosition( lPosition, lMax, lToWrite );
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->ulNextTxSequenceNumber += ( uint32_t ) lToWrite;
1080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lDone += lToWrite;
1081:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Link this segment in the Tx-Queue. */
1083:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				vListInsertFifo( &( pxWindow->xTxQueue ), &( pxSegment->xQueueItem ) );
1084:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1085:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Let 'pxHeadSegment' point to this segment if there is still
1086:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				space. */
1087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( pxSegment->lDataLength < pxSegment->lMaxLength )
1088:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->pxHeadSegment = pxSegment;
1090:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1091:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else
1092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1093:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->pxHeadSegment = NULL;
1094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1095:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1096:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ipconfigTCP_MAY_LOG_PORT( pxWindow->usOurPortNumber ) != 0 )
1097:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1098:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( ( xTCPWindowLoggingLevel >= 3 ) ||
1099:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						( ( xTCPWindowLoggingLevel >= 2 ) && ( pxWindow->pxHeadSegment != NULL ) ) )
1100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_debug_printf( ( "lTCPWindowTxAdd: New %4ld bytes for seqNr %lu len %4lu (nxt %lu) po
1102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							ulLength,
1103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->lDataLength,
1105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->ulNextTxSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->lStreamPos ) );
1107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_flush_logging( );
1108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
1112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* A sever situation: running out of segments for transmission.
1114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				No more data can be sent at the moment. */
1115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( lDone != 0 )
1116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					FreeRTOS_debug_printf( ( "lTCPWindowTxAdd: Sorry all buffers full (cancel %ld bytes)\n", lByte
1118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				break;
1120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return lDone;
1124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
1125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xTCPWindowTxDone( TCPWindow_t *pxWindow )
1132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
1133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return listLIST_IS_EMPTY( ( &pxWindow->xTxSegments) );
1134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
1135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static BaseType_t prvTCPWindowTxHasSpace( TCPWindow_t *pxWindow, uint32_t ulWindowSize )
1142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
  67              		.loc 1 1142 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.LVL4:
  73              	.LBB37:
  74              	.LBB38:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
  75              		.loc 1 505 0
  76 0000 543090E5 		ldr	r3, [r0, #84]
  77              	.LBE38:
  78              	.LBE37:
  79              		.loc 1 1142 0
  80 0004 00C0A0E1 		mov	ip, r0
  81              	.LBB40:
  82              	.LBB39:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
  83              		.loc 1 505 0
  84 0008 000053E3 		cmp	r3, #0
  85 000c 1600000A 		beq	.L9
  86              	.LVL5:
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
  87              		.loc 1 512 0
  88 0010 603090E5 		ldr	r3, [r0, #96]
  89 0014 0C3093E5 		ldr	r3, [r3, #12]
  90              	.LVL6:
  91              	.LBE39:
  92              	.LBE40:
1143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulTxOutstanding;
1144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xHasSpace;
1145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
1146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* This function will look if there is new transmission data.  It will
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return true if there is data to be sent. */
1149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment = xTCPWindowPeekHead( &( pxWindow->xTxQueue ) );
1151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( pxSegment == NULL )
  93              		.loc 1 1152 0
  94 0018 000053E3 		cmp	r3, #0
  95 001c 1200000A 		beq	.L9
1153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xHasSpace = pdFALSE;
1155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
1157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* How much data is outstanding, i.e. how much data has been sent
1159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			but not yet acknowledged ? */
1160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxWindow->tx.ulHighestSequenceNumber >= pxWindow->tx.ulCurrentSequenceNumber )
  96              		.loc 1 1160 0
  97 0020 282090E5 		ldr	r2, [r0, #40]
  98 0024 200090E5 		ldr	r0, [r0, #32]
  99              	.LVL7:
1161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulTxOutstanding = pxWindow->tx.ulHighestSequenceNumber - pxWindow->tx.ulCurrentSequenceNumber;
1163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
1165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulTxOutstanding = 0UL;
1167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Subtract this from the peer's space. */
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulWindowSize -= FreeRTOS_min_uint32( ulWindowSize, ulTxOutstanding );
1171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* See if the next segment may be sent. */
1173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ulWindowSize >= ( uint32_t ) pxSegment->lDataLength )
 100              		.loc 1 1173 0
 101 0028 083093E5 		ldr	r3, [r3, #8]
1160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 102              		.loc 1 1160 0
 103 002c 000052E1 		cmp	r2, r0
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 104              		.loc 1 1162 0
 105 0030 00204220 		subcs	r2, r2, r0
 106              	.LVL8:
1166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 107              		.loc 1 1166 0
 108 0034 0020A033 		movcc	r2, #0
 109              	.LVL9:
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 110              		.loc 1 1170 0
 111 0038 010052E1 		cmp	r2, r1
 112 003c 02104190 		subls	r1, r1, r2
 113              	.LVL10:
 114 0040 01104180 		subhi	r1, r1, r1
 115              		.loc 1 1173 0
 116 0044 030051E1 		cmp	r1, r3
 117 0048 0000A033 		movcc	r0, #0
 118 004c 0100A023 		movcs	r0, #1
 119              	.LVL11:
1174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				xHasSpace = pdTRUE;
1176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
1178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				xHasSpace = pdFALSE;
1180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* If 'xHasSpace', it looks like the peer has at least space for 1
1183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			more new segment of size MSS.  xSize.ulTxWindowLength is the self-imposed
1184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			limitation of the transmission window (in case of many resends it
1185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			may be decreased). */
1186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ( ulTxOutstanding != 0UL ) && ( pxWindow->xSize.ulTxWindowLength < ulTxOutstanding + ( ( uin
 120              		.loc 1 1186 0
 121 0050 000052E3 		cmp	r2, #0
 122 0054 1EFF2F01 		bxeq	lr
 123              		.loc 1 1186 0 is_stmt 0 discriminator 1
 124 0058 032082E0 		add	r2, r2, r3
 125              	.LVL12:
 126 005c 08309CE5 		ldr	r3, [ip, #8]
1187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				xHasSpace = pdFALSE;
 127              		.loc 1 1188 0 is_stmt 1 discriminator 1
 128 0060 020053E1 		cmp	r3, r2
 129 0064 0000A033 		movcc	r0, #0
 130              	.LVL13:
 131 0068 1EFF2FE1 		bx	lr
 132              	.LVL14:
 133              	.L9:
 134              		.loc 1 1188 0 is_stmt 0
 135 006c 0300A0E1 		mov	r0, r3
 136              	.LVL15:
1189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return xHasSpace;
1193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 137              		.loc 1 1193 0 is_stmt 1
 138 0070 1EFF2FE1 		bx	lr
 139              		.cfi_endproc
 140              	.LFE49:
 142              		.section	.text.vListInsertGeneric,"ax",%progbits
 143              		.align	2
 144              		.global	vListInsertGeneric
 145              		.syntax unified
 146              		.arm
 147              		.fpu neon
 149              	vListInsertGeneric:
 150              	.LFB32:
 285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Insert a new list item into pxList, it does not sort the list,
 151              		.loc 1 285 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL16:
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWhere->pxPrevious->pxNext = pxNewListItem;
 157              		.loc 1 290 0
 158 0000 083092E5 		ldr	r3, [r2, #8]
 289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxNewListItem->pxPrevious = pxWhere->pxPrevious;
 159              		.loc 1 289 0
 160 0004 042081E5 		str	r2, [r1, #4]
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWhere->pxPrevious->pxNext = pxNewListItem;
 161              		.loc 1 290 0
 162 0008 083081E5 		str	r3, [r1, #8]
 291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWhere->pxPrevious = pxNewListItem;
 163              		.loc 1 291 0
 164 000c 041083E5 		str	r1, [r3, #4]
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 165              		.loc 1 297 0
 166 0010 003090E5 		ldr	r3, [r0]
 292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 167              		.loc 1 292 0
 168 0014 081082E5 		str	r1, [r2, #8]
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 169              		.loc 1 295 0
 170 0018 100081E5 		str	r0, [r1, #16]
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 171              		.loc 1 297 0
 172 001c 013083E2 		add	r3, r3, #1
 173 0020 003080E5 		str	r3, [r0]
 174 0024 1EFF2FE1 		bx	lr
 175              		.cfi_endproc
 176              	.LFE32:
 178              		.section	.text.vTCPWindowFree,"ax",%progbits
 179              		.align	2
 180              		.syntax unified
 181              		.arm
 182              		.fpu neon
 184              	vTCPWindowFree:
 185              	.LFB39:
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/*  Free entry pxSegment because it's not used any more.  The ownership
 186              		.loc 1 524 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              	.LVL17:
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 191              		.loc 1 529 0
 192 0000 283090E5 		ldr	r3, [r0, #40]
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/*  Free entry pxSegment because it's not used any more.  The ownership
 193              		.loc 1 524 0
 194 0004 10402DE9 		push	{r4, lr}
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/*  Free entry pxSegment because it's not used any more.  The ownership
 198              		.loc 1 524 0
 199 0008 0040A0E1 		mov	r4, r0
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 200              		.loc 1 529 0
 201 000c 000053E3 		cmp	r3, #0
 202 0010 0100000A 		beq	.L17
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 203              		.loc 1 531 0
 204 0014 180080E2 		add	r0, r0, #24
 205              	.LVL18:
 206 0018 FEFFFFEB 		bl	uxListRemove
 207              	.LVL19:
 208              	.L17:
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment->lDataLength = 0l;
 209              		.loc 1 534 0
 210 001c 0030A0E3 		mov	r3, #0
 211 0020 2C4084E2 		add	r4, r4, #44
 212              	.LVL20:
 213 0024 2C3004E5 		str	r3, [r4, #-44]
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment->u.ulFlags = 0u;
 214              		.loc 1 535 0
 215 0028 243004E5 		str	r3, [r4, #-36]
 536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 216              		.loc 1 536 0
 217 002c 183004E5 		str	r3, [r4, #-24]
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 218              		.loc 1 539 0
 219 0030 103094E5 		ldr	r3, [r4, #16]
 220 0034 000053E3 		cmp	r3, #0
 221 0038 0100000A 		beq	.L18
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 222              		.loc 1 541 0
 223 003c 0400A0E1 		mov	r0, r4
 224 0040 FEFFFFEB 		bl	uxListRemove
 225              	.LVL21:
 226              	.L18:
 227              	.LBB43:
 228              	.LBB44:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 229              		.loc 1 260 0
 230 0044 0C209FE5 		ldr	r2, .L26
 231 0048 0410A0E1 		mov	r1, r4
 232              	.LBE44:
 233              	.LBE43:
 546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 234              		.loc 1 546 0
 235 004c 1040BDE8 		pop	{r4, lr}
 236              		.cfi_restore 14
 237              		.cfi_restore 4
 238              		.cfi_def_cfa_offset 0
 239              	.LVL22:
 240              	.LBB46:
 241              	.LBB45:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 242              		.loc 1 260 0
 243 0050 080042E2 		sub	r0, r2, #8
 244 0054 FEFFFFEA 		b	vListInsertGeneric
 245              	.LVL23:
 246              	.L27:
 247              		.align	2
 248              	.L26:
 249 0058 08000000 		.word	.LANCHOR0+8
 250              	.LBE45:
 251              	.LBE46:
 252              		.cfi_endproc
 253              	.LFE39:
 255              		.section	.text.prvTCPWindowTxCheckAck,"ax",%progbits
 256              		.align	2
 257              		.syntax unified
 258              		.arm
 259              		.fpu neon
 261              	prvTCPWindowTxCheckAck:
 262              	.LFB52:
1194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xTCPWindowTxHasData( TCPWindow_t *pxWindow, uint32_t ulWindowSize, TickType_t *pulDelay
1201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
1202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
1203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xReturn;
1204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TickType_t ulAge, ulMaxAge;
1205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		*pulDelay = 0u;
1207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( listLIST_IS_EMPTY( &pxWindow->xPriorityQueue ) == pdFALSE )
1209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* No need to look at retransmissions or new transmission as long as
1211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			there are priority segments.  *pulDelay equals zero, meaning it must
1212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			be sent out immediately. */
1213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xReturn = pdTRUE;
1214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
1216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = xTCPWindowPeekHead( &( pxWindow->xWaitQueue ) );
1218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment != NULL )
1220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* There is an outstanding segment, see if it is time to resend
1222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				it. */
1223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulAge = ulTimerGetAge( &pxSegment->xTransmitTimer );
1224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* After a packet has been sent for the first time, it will wait
1226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				'1 * lSRTT' ms for an ACK. A second time it will wait '2 * lSRTT' ms,
1227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				each time doubling the time-out */
1228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulMaxAge = ( 1u << pxSegment->u.bits.ucTransmitCount ) * ( ( uint32_t ) pxWindow->lSRTT );
1229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ulMaxAge > ulAge )
1231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* A segment must be sent after this amount of msecs */
1233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					*pulDelay = ulMaxAge - ulAge;
1234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				xReturn = pdTRUE;
1237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			else
1239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* No priority segment, no outstanding data, see if there is new
1241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				transmission data. */
1242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment = xTCPWindowPeekHead( &pxWindow->xTxQueue );
1243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* See if it fits in the peer's reception window. */
1245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( pxSegment == NULL )
1246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					xReturn = pdFALSE;
1248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else if( prvTCPWindowTxHasSpace( pxWindow, ulWindowSize ) == pdFALSE )
1250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Too many outstanding messages. */
1252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					xReturn = pdFALSE;
1253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else if( ( pxWindow->u.bits.bSendFullSize != pdFALSE_UNSIGNED ) && ( pxSegment->lDataLength < p
1255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* 'bSendFullSize' is a special optimisation.  If true, the
1257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					driver will only sent completely filled packets (of MSS
1258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					bytes). */
1259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					xReturn = pdFALSE;
1260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else
1262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					xReturn = pdTRUE;
1264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return xReturn;
1269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulTCPWindowTxGet( TCPWindow_t *pxWindow, uint32_t ulWindowSize, int32_t *plPosition )
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
1278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
1279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulMaxTime;
1280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulReturn  = ~0UL;
1281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Fetches data to be sent-out now.
1284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		Priority messages: segments with a resend need no check current sliding
1286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		window size. */
1287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxSegment = xTCPWindowGetHead( &( pxWindow->xPriorityQueue ) );
1288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxWindow->ulOurSequenceNumber = pxWindow->tx.ulHighestSequenceNumber;
1289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( pxSegment == NULL )
1291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Waiting messages: outstanding messages with a running timer
1293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			neither check peer's reception window size because these packets
1294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			have been sent earlier. */
1295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = xTCPWindowPeekHead( &( pxWindow->xWaitQueue ) );
1296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment != NULL )
1298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Do check the timing. */
1300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulMaxTime = ( 1u << pxSegment->u.bits.ucTransmitCount ) * ( ( uint32_t ) pxWindow->lSRTT );
1301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ulTimerGetAge( &pxSegment->xTransmitTimer ) > ulMaxTime )
1303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* A normal (non-fast) retransmission.  Move it from the
1305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					head of the waiting queue. */
1306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment = xTCPWindowGetHead( &( pxWindow->xWaitQueue ) );
1307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment->u.bits.ucDupAckCount = pdFALSE_UNSIGNED;
1308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Some detailed logging. */
1310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( ( xTCPWindowLoggingLevel != 0 ) && ( ipconfigTCP_MAY_LOG_PORT( pxWindow->usOurPortNumber )
1311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_debug_printf( ( "ulTCPWindowTxGet[%u,%u]: WaitQueue %ld bytes for sequence number %l
1313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->usPeerPortNumber,
1314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->usOurPortNumber,
1315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->lDataLength,
1316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->ulSequenceNumber ) );
1318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_flush_logging( );
1319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else
1322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment = NULL;
1324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment == NULL )
1328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* New messages: sent-out for the first time.  Check current
1330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				sliding window size of peer. */
1331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment = xTCPWindowPeekHead( &( pxWindow->xTxQueue ) );
1332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( pxSegment == NULL )
1334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* No segments queued. */
1336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					ulReturn = 0UL;
1337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else if( ( pxWindow->u.bits.bSendFullSize != pdFALSE_UNSIGNED ) && ( pxSegment->lDataLength < p
1339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* A segment has been queued but the driver waits until it
1341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					has a full size of MSS. */
1342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					ulReturn = 0;
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else if( prvTCPWindowTxHasSpace( pxWindow, ulWindowSize ) == pdFALSE )
1345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Peer has no more space at this moment. */
1347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					ulReturn = 0;
1348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				else
1350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Move it out of the Tx queue. */
1352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment = xTCPWindowGetHead( &( pxWindow->xTxQueue ) );
1353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Don't let pxHeadSegment point to this segment any more,
1355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					so no more data will be added. */
1356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( pxWindow->pxHeadSegment == pxSegment )
1357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->pxHeadSegment = NULL;
1359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* pxWindow->tx.highest registers the highest sequence
1362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					number in our transmission window. */
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->tx.ulHighestSequenceNumber = pxSegment->ulSequenceNumber + ( ( uint32_t ) pxSegment-
1364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* ...and more detailed logging */
1366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( ( xTCPWindowLoggingLevel >= 2 ) && ( ipconfigTCP_MAY_LOG_PORT( pxWindow->usOurPortNumber )
1367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_debug_printf( ( "ulTCPWindowTxGet[%u,%u]: XmitQueue %ld bytes for sequence number %l
1369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->usPeerPortNumber,
1370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->usOurPortNumber,
1371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->lDataLength,
1372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							ulWindowSize ) );
1374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_flush_logging( );
1375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
1380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* There is a priority segment. It doesn't need any checking for
1382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			space or timeouts. */
1383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( xTCPWindowLoggingLevel != 0 )
1384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				FreeRTOS_debug_printf( ( "ulTCPWindowTxGet[%u,%u]: PrioQueue %ld bytes for sequence number %lu 
1386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->usPeerPortNumber,
1387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->usOurPortNumber,
1388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment->lDataLength,
1389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					ulWindowSize ) );
1391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				FreeRTOS_flush_logging( );
1392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* See if it has already been determined to return 0. */
1396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( ulReturn != 0UL )
1397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			configASSERT( listLIST_ITEM_CONTAINER( &(pxSegment->xQueueItem ) ) == NULL );
1399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Now that the segment will be transmitted, add it to the tail of
1401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			the waiting queue. */
1402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			vListInsertFifo( &pxWindow->xWaitQueue, &pxSegment->xQueueItem );
1403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* And mark it as outstanding. */
1405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->u.bits.bOutstanding = pdTRUE_UNSIGNED;
1406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Administer the transmit count, needed for fast
1408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			retransmissions. */
1409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			( pxSegment->u.bits.ucTransmitCount )++;
1410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* If there have been several retransmissions (4), decrease the
1412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			size of the transmission window to at most 2 times MSS. */
1413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment->u.bits.ucTransmitCount == MAX_TRANSMIT_COUNT_USING_LARGE_WINDOW )
1414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( pxWindow->xSize.ulTxWindowLength > ( 2U * pxWindow->usMSS ) )
1416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					FreeRTOS_debug_printf( ( "ulTCPWindowTxGet[%u - %d]: Change Tx window: %lu -> %u\n",
1418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->usPeerPortNumber, pxWindow->usOurPortNumber,
1419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->xSize.ulTxWindowLength, 2 * pxWindow->usMSS ) );
1420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					pxWindow->xSize.ulTxWindowLength = ( 2UL * pxWindow->usMSS );
1421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Clear the transmit timer. */
1425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			vTCPTimerSet( &( pxSegment->xTransmitTimer ) );
1426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxWindow->ulOurSequenceNumber = pxSegment->ulSequenceNumber;
1428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Inform the caller where to find the data within the queue. */
1430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			*plPosition = pxSegment->lStreamPos;
1431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* And return the length of the data segment */
1433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulReturn = ( uint32_t ) pxSegment->lDataLength;
1434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ulReturn;
1437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
1438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static uint32_t prvTCPWindowTxCheckAck( TCPWindow_t *pxWindow, uint32_t ulFirst, uint32_t ulLast )
1445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 263              		.loc 1 1445 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL24:
 268 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 269              		.cfi_def_cfa_offset 36
 270              		.cfi_offset 4, -36
 271              		.cfi_offset 5, -32
 272              		.cfi_offset 6, -28
 273              		.cfi_offset 7, -24
 274              		.cfi_offset 8, -20
 275              		.cfi_offset 9, -16
 276              		.cfi_offset 10, -12
 277              		.cfi_offset 11, -8
 278              		.cfi_offset 14, -4
 279 0004 0040A0E1 		mov	r4, r0
1446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulBytesConfirmed = 0u;
1447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulSequenceNumber = ulFirst, ulDataLength;
1448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const ListItem_t *pxIterator;
1449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const MiniListItem_t *pxEnd = ( const MiniListItem_t* )listGET_END_MARKER( &pxWindow->xTxSegments 
1450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xDoUnlink;
1451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
1452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* An acknowledgement or a selective ACK (SACK) was received.  See if some outstanding data
1453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		may be removed from the transmission queue(s).
1454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		All TX segments for which
1455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		( ( ulSequenceNumber >= ulFirst ) && ( ulSequenceNumber < ulLast ) in a
1456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		contiguous block.  Note that the segments are stored in xTxSegments in a
1457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		strict sequential order. */
1458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* SRTT[i] = (1-a) * SRTT[i-1] + a * RTT
1460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		0 < a < 1; usually a = 1/8
1462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		RTO = 2 * SRTT
1464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		where:
1466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		  RTT is Round Trip Time
1467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		  SRTT is Smoothed RTT
1468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		  RTO is Retransmit timeout
1469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		 A Smoothed RTT will increase quickly, but it is conservative when
1471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		 becoming smaller. */
1472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		for(
1474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
 280              		.loc 1 1474 0
 281 0008 9C5090E5 		ldr	r5, [r0, #156]
1445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulBytesConfirmed = 0u;
 282              		.loc 1 1445 0
 283 000c 14D04DE2 		sub	sp, sp, #20
 284              		.cfi_def_cfa_offset 56
1445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulBytesConfirmed = 0u;
 285              		.loc 1 1445 0
 286 0010 0280A0E1 		mov	r8, r2
1449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xDoUnlink;
 287              		.loc 1 1449 0
 288 0014 98A080E2 		add	r10, r0, #152
 289              	.LVL25:
1446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulBytesConfirmed = 0u;
 290              		.loc 1 1446 0
 291 0018 0070A0E3 		mov	r7, #0
 292              	.LBB56:
 293              	.LBB57:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 294              		.loc 1 233 0
 295 001c 019042E2 		sub	r9, r2, #1
 296              	.LBE57:
 297              	.LBE56:
 298              	.LBB59:
 299              	.LBB60:
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 300              		.loc 1 243 0
 301 0020 02B0E0E1 		mvn	fp, r2
 302              	.LVL26:
 303              	.L29:
 304              	.LBE60:
 305              	.LBE59:
1473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
 306              		.loc 1 1473 0
 307 0024 0A0055E1 		cmp	r5, r10
 308 0028 0200000A 		beq	.L28
 309              	.LBB61:
 310              	.LBB58:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 311              		.loc 1 233 0
 312 002c 013049E0 		sub	r3, r9, r1
 313              	.LBE58:
 314              	.LBE61:
1475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( pxIterator != ( const ListItem_t * ) pxEnd ) && ( xSequenceLessThan( ulSequenceNumber, ulLast
 315              		.loc 1 1475 0
 316 0030 000053E3 		cmp	r3, #0
 317 0034 020000AA 		bge	.L40
 318              	.L28:
1476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			)
1477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			xDoUnlink = pdFALSE;
1479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
1480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Move to the next item because the current item might get
1482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			removed. */
1483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxIterator = ( const ListItem_t * ) listGET_NEXT( pxIterator );
1484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Continue if this segment does not fall within the ACK'd range. */
1486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( xSequenceGreaterThan( ulSequenceNumber, pxSegment->ulSequenceNumber ) != pdFALSE )
1487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				continue;
1489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Is it ready? */
1492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ulSequenceNumber != pxSegment->ulSequenceNumber )
1493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				break;
1495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulDataLength = ( uint32_t ) pxSegment->lDataLength;
1498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( pxSegment->u.bits.bAcked == pdFALSE_UNSIGNED )
1500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( xSequenceGreaterThan( pxSegment->ulSequenceNumber + ( uint32_t )ulDataLength, ulLast ) != p
1502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* What happens?  Only part of this segment was accepted,
1504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					probably due to WND limits
1505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					  AAAAAAA BBBBBBB << acked
1507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					  aaaaaaa aaaa    << sent */
1508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					#if( ipconfigHAS_DEBUG_PRINTF != 0 )
1509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						uint32_t ulFirstSeq = pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber;
1511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						FreeRTOS_debug_printf( ( "prvTCPWindowTxCheckAck[%u.%u]: %lu - %lu Partial sequence number %l
1512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->usPeerPortNumber,
1513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							pxWindow->usOurPortNumber,
1514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							ulFirstSeq - pxWindow->tx.ulFirstSequenceNumber,
1515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							ulLast - pxWindow->tx.ulFirstSequenceNumber,
1516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 							ulFirstSeq, ulFirstSeq + ulDataLength ) );
1517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					#endif /* ipconfigHAS_DEBUG_PRINTF */
1519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					break;
1520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* This segment is fully ACK'd, set the flag. */
1523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment->u.bits.bAcked = pdTRUE_UNSIGNED;
1524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Calculate the RTT only if the segment was sent-out for the
1526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				first time and if this is the last ACK'd segment in a range. */
1527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ( pxSegment->u.bits.ucTransmitCount == 1 ) && ( ( pxSegment->ulSequenceNumber + ulDataLengt
1528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					int32_t mS = ( int32_t ) ulTimerGetAge( &( pxSegment->xTransmitTimer ) );
1530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( pxWindow->lSRTT >= mS )
1532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* RTT becomes smaller: adapt slowly. */
1534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->lSRTT = ( ( winSRTT_DECREMENT_NEW * mS ) + ( winSRTT_DECREMENT_CURRENT * pxWindow->
1535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					else
1537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						/* RTT becomes larger: adapt quicker */
1539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->lSRTT = ( ( winSRTT_INCREMENT_NEW * mS ) + ( winSRTT_INCREMENT_CURRENT * pxWindow->
1540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					/* Cap to the minimum of 50ms. */
1543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					if( pxWindow->lSRTT < winSRTT_CAP_mS )
1544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
1545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxWindow->lSRTT = winSRTT_CAP_mS;
1546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
1547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Unlink it from the 3 queues, but do not destroy it (yet). */
1550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				xDoUnlink = pdTRUE;
1551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* pxSegment->u.bits.bAcked is now true.  Is it located at the left
1554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			side of the transmission queue?  If so, it may be freed. */
1555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ulSequenceNumber == pxWindow->tx.ulCurrentSequenceNumber )
1556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ( xTCPWindowLoggingLevel >= 2 ) && ( ipconfigTCP_MAY_LOG_PORT( pxWindow->usOurPortNumber ) 
1558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					FreeRTOS_debug_printf( ( "prvTCPWindowTxCheckAck: %lu - %lu Ready sequence number %lu\n",
1560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulFirst - pxWindow->tx.ulFirstSequenceNumber,
1561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulLast - pxWindow->tx.ulFirstSequenceNumber,
1562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber ) );
1563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Increase the left-hand value of the transmission window. */
1566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->tx.ulCurrentSequenceNumber += ulDataLength;
1567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* This function will return the number of bytes that the tail
1569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				of txStream may be advanced. */
1570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulBytesConfirmed += ulDataLength;
1571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* All segments below tx.ulCurrentSequenceNumber may be freed. */
1573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				vTCPWindowFree( pxSegment );
1574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* No need to unlink it any more. */
1576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				xDoUnlink = pdFALSE;
1577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ( xDoUnlink != pdFALSE ) && ( listLIST_ITEM_CONTAINER( &( pxSegment->xQueueItem ) ) != NULL 
1580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Remove item from its queues. */
1582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				uxListRemove( &pxSegment->xQueueItem );
1583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulSequenceNumber += ulDataLength;
1586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ulBytesConfirmed;
1589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 319              		.loc 1 1589 0
 320 0038 0700A0E1 		mov	r0, r7
 321 003c 14D08DE2 		add	sp, sp, #20
 322              		.cfi_remember_state
 323              		.cfi_def_cfa_offset 36
 324              		@ sp needed
 325 0040 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 326              	.LVL27:
 327              	.L40:
 328              		.cfi_restore_state
1479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 329              		.loc 1 1479 0
 330 0044 0C3095E5 		ldr	r3, [r5, #12]
 331              	.LVL28:
1483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 332              		.loc 1 1483 0
 333 0048 045095E5 		ldr	r5, [r5, #4]
 334              	.LVL29:
1486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 335              		.loc 1 1486 0
 336 004c 002093E5 		ldr	r2, [r3]
 337              	.LBB62:
 338              	.LBB63:
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 339              		.loc 1 243 0
 340 0050 0200E0E1 		mvn	r0, r2
 341              	.LBE63:
 342              	.LBE62:
1486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 343              		.loc 1 1486 0
 344 0054 010070E1 		cmn	r0, r1
 345 0058 F1FFFF5A 		bpl	.L29
1492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 346              		.loc 1 1492 0
 347 005c 020051E1 		cmp	r1, r2
 348 0060 F4FFFF1A 		bne	.L28
1499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 349              		.loc 1 1499 0
 350 0064 1600D3E5 		ldrb	r0, [r3, #22]	@ zero_extendqisi2
1497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 351              		.loc 1 1497 0
 352 0068 082093E5 		ldr	r2, [r3, #8]
 353              	.LVL30:
1499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 354              		.loc 1 1499 0
 355 006c 020010E3 		tst	r0, #2
 356 0070 026081E0 		add	r6, r1, r2
 357 0074 3000001A 		bne	.L41
1501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 358              		.loc 1 1501 0
 359 0078 06007BE1 		cmn	fp, r6
 360 007c EDFFFF5A 		bpl	.L28
1523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 361              		.loc 1 1523 0
 362 0080 020080E3 		orr	r0, r0, #2
 363 0084 1600C3E5 		strb	r0, [r3, #22]
1527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 364              		.loc 1 1527 0
 365 0088 1400D3E5 		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 366 008c 010050E3 		cmp	r0, #1
 367 0090 06005801 		cmpeq	r8, r6
 368 0094 0900000A 		beq	.L34
 369              	.LVL31:
 370              	.L50:
1550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 371              		.loc 1 1550 0
 372 0098 0100A0E3 		mov	r0, #1
 373              	.L32:
 374              	.LVL32:
1555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 375              		.loc 1 1555 0
 376 009c 20C094E5 		ldr	ip, [r4, #32]
 377 00a0 0C0051E1 		cmp	r1, ip
 378 00a4 2600001A 		bne	.L38
1566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 379              		.loc 1 1566 0
 380 00a8 206084E5 		str	r6, [r4, #32]
1573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 381              		.loc 1 1573 0
 382 00ac 0300A0E1 		mov	r0, r3
 383              	.LVL33:
1570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 384              		.loc 1 1570 0
 385 00b0 027087E0 		add	r7, r7, r2
 386              	.LVL34:
1573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 387              		.loc 1 1573 0
 388 00b4 FEFFFFEB 		bl	vTCPWindowFree
 389              	.LVL35:
 390              	.L39:
1585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 391              		.loc 1 1585 0
 392 00b8 0610A0E1 		mov	r1, r6
 393              	.LVL36:
 394 00bc D8FFFFEA 		b	.L29
 395              	.LVL37:
 396              	.L34:
 397 00c0 0C108DE5 		str	r1, [sp, #12]
 398 00c4 08208DE5 		str	r2, [sp, #8]
 399 00c8 04308DE5 		str	r3, [sp, #4]
 400              	.LVL38:
 401              	.LBB64:
 402              	.LBB65:
 403              	.LBB66:
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 404              		.loc 1 275 0
 405 00cc FEFFFFEB 		bl	xTaskGetTickCount
 406              	.LVL39:
 407 00d0 04309DE5 		ldr	r3, [sp, #4]
 408              	.LBE66:
 409              	.LBE65:
1531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 410              		.loc 1 1531 0
 411 00d4 08209DE5 		ldr	r2, [sp, #8]
 412 00d8 0C109DE5 		ldr	r1, [sp, #12]
 413              	.LBB68:
 414              	.LBB67:
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 415              		.loc 1 275 0
 416 00dc 10C093E5 		ldr	ip, [r3, #16]
 417 00e0 0C0040E0 		sub	r0, r0, ip
 418              	.LVL40:
 419              	.LBE67:
 420              	.LBE68:
1531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 421              		.loc 1 1531 0
 422 00e4 38C094E5 		ldr	ip, [r4, #56]
 423 00e8 0C0050E1 		cmp	r0, ip
 424 00ec 0B0000CA 		bgt	.L35
1534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 425              		.loc 1 1534 0
 426 00f0 8CC16CE0 		rsb	ip, ip, ip, lsl #3
 427 00f4 00C08CE0 		add	ip, ip, r0
 428 00f8 07008CE2 		add	r0, ip, #7
 429              	.LVL41:
 430 00fc 00005CE3 		cmp	ip, #0
 431 0100 00C0A0B1 		movlt	ip, r0
 432 0104 CCC1A0E1 		asr	ip, ip, #3
 433              	.L49:
1539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 434              		.loc 1 1539 0
 435 0108 38C084E5 		str	ip, [r4, #56]
1543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 436              		.loc 1 1543 0
 437 010c 380094E5 		ldr	r0, [r4, #56]
 438 0110 310050E3 		cmp	r0, #49
1545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 439              		.loc 1 1545 0
 440 0114 3200A0D3 		movle	r0, #50
 441 0118 380084D5 		strle	r0, [r4, #56]
 442 011c DDFFFFEA 		b	.L50
 443              	.LVL42:
 444              	.L35:
1539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 445              		.loc 1 1539 0
 446 0120 8CC08CE0 		add	ip, ip, ip, lsl #1
 447 0124 00C08CE0 		add	ip, ip, r0
 448 0128 03008CE2 		add	r0, ip, #3
 449              	.LVL43:
 450 012c 00005CE3 		cmp	ip, #0
 451 0130 00C0A0B1 		movlt	ip, r0
 452 0134 4CC1A0E1 		asr	ip, ip, #2
 453 0138 F2FFFFEA 		b	.L49
 454              	.LVL44:
 455              	.L41:
 456              	.LBE64:
1478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 457              		.loc 1 1478 0
 458 013c 0000A0E3 		mov	r0, #0
 459 0140 D5FFFFEA 		b	.L32
 460              	.LVL45:
 461              	.L38:
1579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 462              		.loc 1 1579 0
 463 0144 000050E3 		cmp	r0, #0
 464 0148 DAFFFF0A 		beq	.L39
 465              	.LVL46:
1579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 466              		.loc 1 1579 0 is_stmt 0 discriminator 1
 467 014c 282093E5 		ldr	r2, [r3, #40]
 468 0150 000052E3 		cmp	r2, #0
 469 0154 D7FFFF0A 		beq	.L39
1582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 470              		.loc 1 1582 0 is_stmt 1
 471 0158 180083E2 		add	r0, r3, #24
 472 015c FEFFFFEB 		bl	uxListRemove
 473              	.LVL47:
 474 0160 D4FFFFEA 		b	.L39
 475              		.cfi_endproc
 476              	.LFE52:
 478              		.section	.text.xTCPWindowNew,"ax",%progbits
 479              		.align	2
 480              		.syntax unified
 481              		.arm
 482              		.fpu neon
 484              	xTCPWindowNew:
 485              	.LFB35:
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 486              		.loc 1 379 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              	.LVL48:
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 491              		.loc 1 385 0
 492 0000 90C09FE5 		ldr	ip, .L58
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 493              		.loc 1 379 0
 494 0004 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 495              		.cfi_def_cfa_offset 32
 496              		.cfi_offset 4, -32
 497              		.cfi_offset 5, -28
 498              		.cfi_offset 6, -24
 499              		.cfi_offset 7, -20
 500              		.cfi_offset 8, -16
 501              		.cfi_offset 9, -12
 502              		.cfi_offset 10, -8
 503              		.cfi_offset 14, -4
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 504              		.loc 1 385 0
 505 0008 00409CE5 		ldr	r4, [ip]
 506 000c 000054E3 		cmp	r4, #0
 507 0010 1E00000A 		beq	.L51
 396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 508              		.loc 1 396 0
 509 0014 0C609CE5 		ldr	r6, [ip, #12]
 510              	.LVL49:
 511 0018 0390A0E1 		mov	r9, r3
 512 001c 0270A0E1 		mov	r7, r2
 513 0020 0180A0E1 		mov	r8, r1
 514 0024 0050A0E1 		mov	r5, r0
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 515              		.loc 1 397 0
 516 0028 0C4096E5 		ldr	r4, [r6, #12]
 517              	.LVL50:
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 518              		.loc 1 400 0
 519 002c 000054E3 		cmp	r4, #0
 520 0030 0200001A 		bne	.L53
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 521              		.loc 1 400 0 is_stmt 0 discriminator 1
 522 0034 0110A0E3 		mov	r1, #1
 523              	.LVL51:
 524 0038 5C009FE5 		ldr	r0, .L58+4
 525              	.LVL52:
 526 003c FEFFFFEB 		bl	longjmp
 527              	.LVL53:
 528              	.L53:
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 529              		.loc 1 403 0 is_stmt 1
 530 0040 0600A0E1 		mov	r0, r6
 531              	.LVL54:
 532 0044 FEFFFFEB 		bl	uxListRemove
 533              	.LVL55:
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 534              		.loc 1 406 0
 535 0048 000059E3 		cmp	r9, #0
 536              	.LBB75:
 537              	.LBB76:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 538              		.loc 1 260 0
 539 004c 0610A0E1 		mov	r1, r6
 540              	.LBE76:
 541              	.LBE75:
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 542              		.loc 1 406 0
 543 0050 A4008512 		addne	r0, r5, #164
 544 0054 90008502 		addeq	r0, r5, #144
 545              	.LVL56:
 546              	.LBB78:
 547              	.LBB77:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 548              		.loc 1 260 0
 549 0058 082080E2 		add	r2, r0, #8
 550 005c FEFFFFEB 		bl	vListInsertGeneric
 551              	.LVL57:
 552              	.LBE77:
 553              	.LBE78:
 554              	.LBB79:
 555              	.LBB80:
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 556              		.loc 1 268 0
 557 0060 FEFFFFEB 		bl	xTaskGetTickCount
 558              	.LVL58:
 559              	.LBE80:
 560              	.LBE79:
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->u.bits.bIsForRx = ( xIsForRx != 0 );
 561              		.loc 1 411 0
 562 0064 0030A0E3 		mov	r3, #0
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lMaxLength = lCount;
 563              		.loc 1 412 0
 564 0068 0020A0E3 		mov	r2, #0
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->u.bits.bIsForRx = ( xIsForRx != 0 );
 565              		.loc 1 411 0
 566 006c 143084E5 		str	r3, [r4, #20]
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lMaxLength = lCount;
 567              		.loc 1 412 0
 568 0070 033059E0 		subs	r3, r9, r3
 569 0074 0130A013 		movne	r3, #1
 570              	.LBB82:
 571              	.LBB81:
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 572              		.loc 1 268 0
 573 0078 100084E5 		str	r0, [r4, #16]
 574              	.LVL59:
 575              	.LBE81:
 576              	.LBE82:
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lMaxLength = lCount;
 577              		.loc 1 412 0
 578 007c 1321C2E7 		bfi	r2, r3, #2, #1
 413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lDataLength = lCount;
 579              		.loc 1 413 0
 580 0080 047084E5 		str	r7, [r4, #4]
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->lMaxLength = lCount;
 581              		.loc 1 412 0
 582 0084 1620C4E5 		strb	r2, [r4, #22]
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment->ulSequenceNumber = ulSequenceNumber;
 583              		.loc 1 414 0
 584 0088 087084E5 		str	r7, [r4, #8]
 415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			#if( ipconfigHAS_DEBUG_PRINTF != 0 )
 585              		.loc 1 415 0
 586 008c 008084E5 		str	r8, [r4]
 587              	.LVL60:
 588              	.L51:
 430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 589              		.loc 1 430 0
 590 0090 0400A0E1 		mov	r0, r4
 591 0094 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 592              	.L59:
 593              		.align	2
 594              	.L58:
 595 0098 00000000 		.word	.LANCHOR0
 596 009c 28000000 		.word	Unity+40
 597              		.cfi_endproc
 598              	.LFE35:
 600              		.section	.text.xTCPWindowRxEmpty,"ax",%progbits
 601              		.align	2
 602              		.global	xTCPWindowRxEmpty
 603              		.syntax unified
 604              		.arm
 605              		.fpu neon
 607              	xTCPWindowRxEmpty:
 608              	.LFB36:
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	BaseType_t xReturn;
 609              		.loc 1 438 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614              	.LVL61:
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 615              		.loc 1 446 0
 616 0000 A43090E5 		ldr	r3, [r0, #164]
 617 0004 000053E3 		cmp	r3, #0
 618              	.LBB83:
 619              	.LBB84:
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 620              		.loc 1 252 0
 621 0008 10309005 		ldreq	r3, [r0, #16]
 622 000c 18009005 		ldreq	r0, [r0, #24]
 623              	.LVL62:
 624 0010 00004300 		subeq	r0, r3, r0
 625              	.LBE84:
 626              	.LBE83:
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 627              		.loc 1 451 0
 628 0014 0000E001 		mvneq	r0, r0
 629 0018 A00FA001 		lsreq	r0, r0, #31
 630 001c 0000A013 		movne	r0, #0
 631              	.LVL63:
 466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 632              		.loc 1 466 0
 633 0020 1EFF2FE1 		bx	lr
 634              		.cfi_endproc
 635              	.LFE36:
 637              		.section	.text.vTCPWindowDestroy,"ax",%progbits
 638              		.align	2
 639              		.global	vTCPWindowDestroy
 640              		.syntax unified
 641              		.arm
 642              		.fpu neon
 644              	vTCPWindowDestroy:
 645              	.LFB40:
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	List_t * pxSegments;
 646              		.loc 1 554 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              	.LVL64:
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 651              		.loc 1 574 0
 652 0000 983090E5 		ldr	r3, [r0, #152]
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	List_t * pxSegments;
 653              		.loc 1 554 0
 654 0004 10402DE9 		push	{r4, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 4, -8
 657              		.cfi_offset 14, -4
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	List_t * pxSegments;
 658              		.loc 1 554 0
 659 0008 0040A0E1 		mov	r4, r0
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 660              		.loc 1 574 0
 661 000c 010073E3 		cmn	r3, #1
 662 0010 0600001A 		bne	.L64
 663              	.LVL65:
 664              	.L65:
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 665              		.loc 1 576 0
 666 0014 903094E5 		ldr	r3, [r4, #144]
 667 0018 000053E3 		cmp	r3, #0
 668 001c 0300000A 		beq	.L64
 669              	.LVL66:
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					vTCPWindowFree( pxSegment );
 670              		.loc 1 578 0
 671 0020 9C3094E5 		ldr	r3, [r4, #156]
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 672              		.loc 1 579 0
 673 0024 0C0093E5 		ldr	r0, [r3, #12]
 674 0028 FEFFFFEB 		bl	vTCPWindowFree
 675              	.LVL67:
 676 002c F8FFFFEA 		b	.L65
 677              	.L64:
 678              	.LVL68:
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 679              		.loc 1 574 0
 680 0030 AC3094E5 		ldr	r3, [r4, #172]
 681 0034 010073E3 		cmn	r3, #1
 682 0038 1080BD18 		popne	{r4, pc}
 683              	.L67:
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 684              		.loc 1 576 0
 685 003c A43094E5 		ldr	r3, [r4, #164]
 686 0040 000053E3 		cmp	r3, #0
 687 0044 1080BD08 		popeq	{r4, pc}
 688              	.LVL69:
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					vTCPWindowFree( pxSegment );
 689              		.loc 1 578 0
 690 0048 B03094E5 		ldr	r3, [r4, #176]
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 691              		.loc 1 579 0
 692 004c 0C0093E5 		ldr	r0, [r3, #12]
 693 0050 FEFFFFEB 		bl	vTCPWindowFree
 694              	.LVL70:
 695 0054 F8FFFFEA 		b	.L67
 696              		.cfi_endproc
 697              	.LFE40:
 699              		.global	__aeabi_uidiv
 700              		.section	.text.vTCPWindowInit,"ax",%progbits
 701              		.align	2
 702              		.global	vTCPWindowInit
 703              		.syntax unified
 704              		.arm
 705              		.fpu neon
 707              	vTCPWindowInit:
 708              	.LFB42:
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** const int32_t l500ms = 500;
 709              		.loc 1 623 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              	.LVL71:
 714 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 715              		.cfi_def_cfa_offset 24
 716              		.cfi_offset 4, -24
 717              		.cfi_offset 5, -20
 718              		.cfi_offset 6, -16
 719              		.cfi_offset 7, -12
 720              		.cfi_offset 8, -8
 721              		.cfi_offset 14, -4
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** const int32_t l500ms = 500;
 722              		.loc 1 623 0
 723 0004 0250A0E1 		mov	r5, r2
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 724              		.loc 1 629 0
 725 0008 006053E2 		subs	r6, r3, #0
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->u.bits.bHasInit = pdTRUE_UNSIGNED;
 726              		.loc 1 626 0
 727 000c 0020A0E3 		mov	r2, #0
 728              	.LVL72:
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** const int32_t l500ms = 500;
 729              		.loc 1 623 0
 730 0010 0040A0E1 		mov	r4, r0
 731 0014 0170A0E1 		mov	r7, r1
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->u.bits.bHasInit = pdTRUE_UNSIGNED;
 732              		.loc 1 626 0
 733 0018 002080E5 		str	r2, [r0]
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 734              		.loc 1 627 0
 735 001c 0120A0E3 		mov	r2, #1
 736 0020 0020C0E5 		strb	r2, [r0]
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 737              		.loc 1 629 0
 738 0024 0F00000A 		beq	.L77
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 739              		.loc 1 631 0
 740 0028 BE3BD0E1 		ldrh	r3, [r0, #190]
 741              	.LVL73:
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 742              		.loc 1 636 0
 743 002c BC2BD0E1 		ldrh	r2, [r0, #188]
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 744              		.loc 1 631 0
 745 0030 000053E3 		cmp	r3, #0
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 746              		.loc 1 636 0
 747 0034 123F6FE1 		clz	r3, r2
 633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 748              		.loc 1 633 0
 749 0038 BE6BC011 		strhne	r6, [r0, #190]	@ movhi
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 750              		.loc 1 636 0
 751 003c A332A0E1 		lsr	r3, r3, #5
 752 0040 020056E1 		cmp	r6, r2
 753 0044 01308333 		orrcc	r3, r3, #1
 754 0048 000053E3 		cmp	r3, #0
 755 004c 0500000A 		beq	.L77
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxWindow->usMSS = ( uint16_t ) ulMSS;
 756              		.loc 1 638 0
 757 0050 040090E5 		ldr	r0, [r0, #4]
 758              	.LVL74:
 759 0054 0610A0E1 		mov	r1, r6
 760              	.LVL75:
 761 0058 FEFFFFEB 		bl	__aeabi_uidiv
 762              	.LVL76:
 763 005c 960000E0 		mul	r0, r6, r0
 639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 764              		.loc 1 639 0
 765 0060 BC6BC4E1 		strh	r6, [r4, #188]	@ movhi
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxWindow->usMSS = ( uint16_t ) ulMSS;
 766              		.loc 1 638 0
 767 0064 040084E5 		str	r0, [r4, #4]
 768              	.L77:
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 769              		.loc 1 650 0
 770 0068 7D3FA0E3 		mov	r3, #500
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 771              		.loc 1 653 0
 772 006c 0C7084E5 		str	r7, [r4, #12]
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 773              		.loc 1 650 0
 774 0070 383084E5 		str	r3, [r4, #56]
 656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 775              		.loc 1 656 0
 776 0074 107084E5 		str	r7, [r4, #16]
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 777              		.loc 1 659 0
 778 0078 187084E5 		str	r7, [r4, #24]
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 779              		.loc 1 661 0
 780 007c 1C5084E5 		str	r5, [r4, #28]
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 781              		.loc 1 664 0
 782 0080 205084E5 		str	r5, [r4, #32]
 668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 783              		.loc 1 668 0
 784 0084 345084E5 		str	r5, [r4, #52]
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	pxWindow->ulOurSequenceNumber = ulSequenceNumber;
 785              		.loc 1 671 0
 786 0088 285084E5 		str	r5, [r4, #40]
 672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 787              		.loc 1 672 0
 788 008c 2C5084E5 		str	r5, [r4, #44]
 789 0090 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 790              		.cfi_endproc
 791              	.LFE42:
 793              		.section	.text.vTCPWindowCreate,"ax",%progbits
 794              		.align	2
 795              		.global	vTCPWindowCreate
 796              		.syntax unified
 797              		.arm
 798              		.fpu neon
 800              	vTCPWindowCreate:
 801              	.LFB41:
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Create and initialize a window. */
 802              		.loc 1 590 0
 803              		.cfi_startproc
 804              		@ args = 8, pretend = 0, frame = 8
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              	.LVL77:
 807 0000 F74F2DE9 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 808              		.cfi_def_cfa_offset 48
 809              		.cfi_offset 4, -36
 810              		.cfi_offset 5, -32
 811              		.cfi_offset 6, -28
 812              		.cfi_offset 7, -24
 813              		.cfi_offset 8, -20
 814              		.cfi_offset 9, -16
 815              		.cfi_offset 10, -12
 816              		.cfi_offset 11, -8
 817              		.cfi_offset 14, -4
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Create and initialize a window. */
 818              		.loc 1 590 0
 819 0004 0380A0E1 		mov	r8, r3
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 820              		.loc 1 595 0
 821 0008 D0309FE5 		ldr	r3, .L96
 822              	.LVL78:
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Create and initialize a window. */
 823              		.loc 1 590 0
 824 000c 0050A0E1 		mov	r5, r0
 825 0010 0160A0E1 		mov	r6, r1
 826 0014 0270A0E1 		mov	r7, r2
 827 0018 30909DE5 		ldr	r9, [sp, #48]
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 828              		.loc 1 595 0
 829 001c 00B093E5 		ldr	fp, [r3]
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	/* Create and initialize a window. */
 830              		.loc 1 590 0
 831 0020 34A09DE5 		ldr	r10, [sp, #52]
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 832              		.loc 1 595 0
 833 0024 00005BE3 		cmp	fp, #0
 834 0028 1100000A 		beq	.L88
 835              	.LVL79:
 836              	.L89:
 600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xRxSegments );
 837              		.loc 1 600 0
 838 002c 900085E2 		add	r0, r5, #144
 839 0030 FEFFFFEB 		bl	vListInitialise
 840              	.LVL80:
 601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 841              		.loc 1 601 0
 842 0034 A40085E2 		add	r0, r5, #164
 843 0038 FEFFFFEB 		bl	vListInitialise
 844              	.LVL81:
 603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xTxQueue   );			/* Transmit queue: segments queued for transmission *
 845              		.loc 1 603 0
 846 003c 400085E2 		add	r0, r5, #64
 847 0040 FEFFFFEB 		bl	vListInitialise
 848              	.LVL82:
 604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		vListInitialise( &pxWindow->xWaitQueue );			/* Waiting queue:  outstanding segments */
 849              		.loc 1 604 0
 850 0044 540085E2 		add	r0, r5, #84
 851 0048 FEFFFFEB 		bl	vListInitialise
 852              	.LVL83:
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 853              		.loc 1 605 0
 854 004c 680085E2 		add	r0, r5, #104
 855 0050 FEFFFFEB 		bl	vListInitialise
 856              	.LVL84:
 616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 857              		.loc 1 616 0
 858 0054 C00085E9 		stmib	r5, {r6, r7}
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 859              		.loc 1 618 0
 860 0058 0A30A0E1 		mov	r3, r10
 861 005c 0920A0E1 		mov	r2, r9
 862 0060 0810A0E1 		mov	r1, r8
 863 0064 0500A0E1 		mov	r0, r5
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
 864              		.loc 1 619 0
 865 0068 0CD08DE2 		add	sp, sp, #12
 866              		.cfi_remember_state
 867              		.cfi_def_cfa_offset 36
 868              		@ sp needed
 869 006c F04FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 870              		.cfi_restore 14
 871              		.cfi_restore 11
 872              		.cfi_restore 10
 873              		.cfi_restore 9
 874              		.cfi_restore 8
 875              		.cfi_restore 7
 876              		.cfi_restore 6
 877              		.cfi_restore 5
 878              		.cfi_restore 4
 879              		.cfi_def_cfa_offset 0
 880              	.LVL85:
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 881              		.loc 1 618 0
 882 0070 FEFFFFEA 		b	vTCPWindowInit
 883              	.LVL86:
 884              	.L88:
 885              		.cfi_restore_state
 886              	.LBB89:
 887              	.LBB90:
 309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		xTCPSegments = ( TCPSegment_t * ) pvPortMallocLarge( ipconfigTCP_WIN_SEG_COUNT * sizeof( xTCPSegm
 888              		.loc 1 309 0
 889 0074 68009FE5 		ldr	r0, .L96+4
 890              	.LVL87:
 891 0078 04308DE5 		str	r3, [sp, #4]
 892 007c FEFFFFEB 		bl	vListInitialise
 893              	.LVL88:
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 894              		.loc 1 310 0
 895 0080 0F0BA0E3 		mov	r0, #15360
 896 0084 FEFFFFEB 		bl	pvPortMalloc
 897              	.LVL89:
 898 0088 04309DE5 		ldr	r3, [sp, #4]
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 899              		.loc 1 312 0
 900 008c 000050E3 		cmp	r0, #0
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 901              		.loc 1 310 0
 902 0090 0040A0E1 		mov	r4, r0
 903 0094 000083E5 		str	r0, [r3]
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 904              		.loc 1 312 0
 905 0098 E3FFFF0A 		beq	.L89
 322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 906              		.loc 1 322 0
 907 009c 0B10A0E1 		mov	r1, fp
 908 00a0 0F2BA0E3 		mov	r2, #15360
 909 00a4 FEFFFFEB 		bl	memset
 910              	.LVL90:
 911              	.LBB91:
 912              	.LBB92:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 913              		.loc 1 260 0
 914 00a8 38309FE5 		ldr	r3, .L96+8
 915 00ac 0FBB84E2 		add	fp, r4, #15360
 916              	.LVL91:
 917              	.L90:
 918              	.LBE92:
 919              	.LBE91:
 328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				listSET_LIST_ITEM_OWNER( &( xTCPSegments[ xIndex ].xQueueItem ), ( void* ) &( xTCPSegments[ xIn
 920              		.loc 1 328 0
 921 00b0 384084E5 		str	r4, [r4, #56]
 922              	.LBB95:
 923              	.LBB93:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 924              		.loc 1 260 0
 925 00b4 0320A0E1 		mov	r2, r3
 926              	.LBE93:
 927              	.LBE95:
 329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 928              		.loc 1 329 0
 929 00b8 244084E5 		str	r4, [r4, #36]
 930              	.LVL92:
 931              	.LBB96:
 932              	.LBB94:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 933              		.loc 1 260 0
 934 00bc 2C1084E2 		add	r1, r4, #44
 935              	.LVL93:
 936 00c0 1C009FE5 		ldr	r0, .L96+4
 937 00c4 404084E2 		add	r4, r4, #64
 938 00c8 04308DE5 		str	r3, [sp, #4]
 939 00cc FEFFFFEB 		bl	vListInsertGeneric
 940              	.LVL94:
 941              	.LBE94:
 942              	.LBE96:
 324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 943              		.loc 1 324 0
 944 00d0 0B0054E1 		cmp	r4, fp
 945 00d4 04309DE5 		ldr	r3, [sp, #4]
 946 00d8 F4FFFF1A 		bne	.L90
 947 00dc D2FFFFEA 		b	.L89
 948              	.L97:
 949              		.align	2
 950              	.L96:
 951 00e0 00000000 		.word	.LANCHOR1
 952 00e4 00000000 		.word	.LANCHOR0
 953 00e8 08000000 		.word	.LANCHOR0+8
 954              	.LBE90:
 955              	.LBE89:
 956              		.cfi_endproc
 957              	.LFE41:
 959              		.section	.text.vTCPSegmentCleanup,"ax",%progbits
 960              		.align	2
 961              		.global	vTCPSegmentCleanup
 962              		.syntax unified
 963              		.arm
 964              		.fpu neon
 966              	vTCPSegmentCleanup:
 967              	.LFB43:
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         /* Free and clear the TCP segments pointer. This function should only be called
 968              		.loc 1 679 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972 0000 10402DE9 		push	{r4, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 4, -8
 975              		.cfi_offset 14, -4
 683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         {
 976              		.loc 1 683 0
 977 0004 18409FE5 		ldr	r4, .L104
 978 0008 000094E5 		ldr	r0, [r4]
 979 000c 000050E3 		cmp	r0, #0
 980 0010 1080BD08 		popeq	{r4, pc}
 685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****             xTCPSegments = NULL;
 981              		.loc 1 685 0
 982 0014 FEFFFFEB 		bl	vPortFree
 983              	.LVL95:
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****         }
 984              		.loc 1 686 0
 985 0018 0030A0E3 		mov	r3, #0
 986 001c 003084E5 		str	r3, [r4]
 987 0020 1080BDE8 		pop	{r4, pc}
 988              	.L105:
 989              		.align	2
 990              	.L104:
 991 0024 00000000 		.word	.LANCHOR1
 992              		.cfi_endproc
 993              	.LFE43:
 995              		.section	.text.lTCPWindowRxCheck,"ax",%progbits
 996              		.align	2
 997              		.global	lTCPWindowRxCheck
 998              		.syntax unified
 999              		.arm
 1000              		.fpu neon
 1002              	lTCPWindowRxCheck:
 1003              	.LFB45:
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulCurrentSequenceNumber, ulLast, ulSavedSequenceNumber;
 1004              		.loc 1 769 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              	.LVL96:
 1009 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 1010              		.cfi_def_cfa_offset 24
 1011              		.cfi_offset 4, -24
 1012              		.cfi_offset 5, -20
 1013              		.cfi_offset 6, -16
 1014              		.cfi_offset 7, -12
 1015              		.cfi_offset 8, -8
 1016              		.cfi_offset 14, -4
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulCurrentSequenceNumber, ulLast, ulSavedSequenceNumber;
 1017              		.loc 1 769 0
 1018 0004 0270A0E1 		mov	r7, r2
 783:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1019              		.loc 1 783 0
 1020 0008 108090E5 		ldr	r8, [r0, #16]
 1021              	.LVL97:
 786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1022              		.loc 1 786 0
 1023 000c 0020A0E3 		mov	r2, #0
 1024              	.LVL98:
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulCurrentSequenceNumber, ulLast, ulSavedSequenceNumber;
 1025              		.loc 1 769 0
 1026 0010 0040A0E1 		mov	r4, r0
 1027 0014 0150A0E1 		mov	r5, r1
 786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1028              		.loc 1 786 0
 1029 0018 3C20C0E5 		strb	r2, [r0, #60]
 791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1030              		.loc 1 791 0
 1031 001c 010058E1 		cmp	r8, r1
 789:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1032              		.loc 1 789 0
 1033 0020 302080E5 		str	r2, [r0, #48]
 791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1034              		.loc 1 791 0
 1035 0024 3300001A 		bne	.L107
 795:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1036              		.loc 1 795 0
 1037 0028 030057E1 		cmp	r7, r3
 1038 002c 0100009A 		bls	.L108
 1039              	.LVL99:
 1040              	.L126:
 947:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 1041              		.loc 1 947 0
 1042 0030 0000E0E3 		mvn	r0, #0
 1043 0034 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1044              	.LVL100:
 1045              	.L108:
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1046              		.loc 1 804 0
 1047 0038 A43090E5 		ldr	r3, [r0, #164]
 1048              	.LVL101:
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1049              		.loc 1 802 0
 1050 003c 076081E0 		add	r6, r1, r7
 1051              	.LVL102:
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1052              		.loc 1 804 0
 1053 0040 000053E3 		cmp	r3, #0
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1054              		.loc 1 802 0
 1055 0044 0650A001 		moveq	r5, r6
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1056              		.loc 1 804 0
 1057 0048 1000000A 		beq	.L110
 1058              	.LBB105:
 1059              	.LBB106:
 715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 1060              		.loc 1 715 0
 1061 004c AC7080E2 		add	r7, r0, #172
 1062              	.LVL103:
 1063              	.LBB107:
 1064              	.LBB108:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1065              		.loc 1 233 0
 1066 0050 018046E2 		sub	r8, r6, #1
 1067              	.LVL104:
 1068              	.L124:
 1069              	.LBE108:
 1070              	.LBE107:
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
 1071              		.loc 1 727 0
 1072 0054 B02094E5 		ldr	r2, [r4, #176]
 1073              	.LVL105:
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const ListItem_t *pxIterator;
 1074              		.loc 1 712 0
 1075 0058 0000A0E3 		mov	r0, #0
 1076              	.LVL106:
 1077              	.L111:
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
 1078              		.loc 1 727 0
 1079 005c 020057E1 		cmp	r7, r2
 1080 0060 0D00001A 		bne	.L113
 1081              	.LVL107:
 1082              	.LBE106:
 1083              	.LBE105:
 816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                         {
 1084              		.loc 1 816 0
 1085 0064 000050E3 		cmp	r0, #0
 1086 0068 1C00001A 		bne	.L114
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1087              		.loc 1 802 0
 1088 006c 0650A0E1 		mov	r5, r6
 1089              	.LVL108:
 1090              	.L115:
 825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 1091              		.loc 1 825 0
 1092 0070 0510A0E1 		mov	r1, r5
 1093 0074 0400A0E1 		mov	r0, r4
 1094 0078 FEFFFFEB 		bl	xTCPWindowRxFind
 1095              	.LVL109:
 1096 007c 003050E2 		subs	r3, r0, #0
 1097 0080 1800001A 		bne	.L117
 1098              	.LVL110:
 834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 1099              		.loc 1 834 0
 1100 0084 060055E1 		cmp	r5, r6
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1101              		.loc 1 838 0
 1102 0088 06604510 		subne	r6, r5, r6
 1103 008c 30608415 		strne	r6, [r4, #48]
 1104              	.LVL111:
 1105              	.L110:
 852:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1106              		.loc 1 852 0
 1107 0090 105084E5 		str	r5, [r4, #16]
 1108              	.LVL112:
 856:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
 1109              		.loc 1 856 0
 1110 0094 0000A0E3 		mov	r0, #0
 1111 0098 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1112              	.LVL113:
 1113              	.L113:
 1114              	.LBB116:
 1115              	.LBB115:
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* And see if there is a segment for which:
 1116              		.loc 1 731 0
 1117 009c 0C1092E5 		ldr	r1, [r2, #12]
 1118              	.LVL114:
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulNextSequenceNumber ) != 0 ) )
 1119              		.loc 1 736 0
 1120 00a0 003091E5 		ldr	r3, [r1]
 1121              	.LBB110:
 1122              	.LBB111:
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 1123              		.loc 1 252 0
 1124 00a4 05C043E0 		sub	ip, r3, r5
 1125              	.LBE111:
 1126              	.LBE110:
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulNextSequenceNumber ) != 0 ) )
 1127              		.loc 1 736 0
 1128 00a8 00005CE3 		cmp	ip, #0
 1129 00ac 090000BA 		blt	.L112
 1130              	.LBB112:
 1131              	.LBB109:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1132              		.loc 1 233 0
 1133 00b0 03C048E0 		sub	ip, r8, r3
 1134              	.LBE109:
 1135              	.LBE112:
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulNextSequenceNumber ) != 0 ) )
 1136              		.loc 1 736 0
 1137 00b4 00005CE3 		cmp	ip, #0
 1138 00b8 060000BA 		blt	.L112
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1139              		.loc 1 739 0
 1140 00bc 000050E3 		cmp	r0, #0
 1141 00c0 0100A001 		moveq	r0, r1
 1142              	.LVL115:
 1143 00c4 0300000A 		beq	.L112
 1144              	.LBB113:
 1145              	.LBB114:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1146              		.loc 1 233 0
 1147 00c8 00C090E5 		ldr	ip, [r0]
 1148 00cc 0330E0E1 		mvn	r3, r3
 1149              	.LBE114:
 1150              	.LBE113:
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1151              		.loc 1 739 0
 1152 00d0 0C0073E1 		cmn	r3, ip
 1153 00d4 0100A051 		movpl	r0, r1
 1154              	.L112:
 1155              	.LVL116:
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1156              		.loc 1 729 0
 1157 00d8 042092E5 		ldr	r2, [r2, #4]
 1158              	.LVL117:
 1159 00dc DEFFFFEA 		b	.L111
 1160              	.LVL118:
 1161              	.L114:
 1162              	.LBE115:
 1163              	.LBE116:
 819:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c ****                         }
 1164              		.loc 1 819 0
 1165 00e0 FEFFFFEB 		bl	vTCPWindowFree
 1166              	.LVL119:
 1167 00e4 DAFFFFEA 		b	.L124
 1168              	.LVL120:
 1169              	.L117:
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1170              		.loc 1 827 0
 1171 00e8 083093E5 		ldr	r3, [r3, #8]
 1172 00ec 035085E0 		add	r5, r5, r3
 1173              	.LVL121:
 831:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 1174              		.loc 1 831 0
 1175 00f0 FEFFFFEB 		bl	vTCPWindowFree
 1176              	.LVL122:
 1177 00f4 DDFFFFEA 		b	.L115
 1178              	.LVL123:
 1179              	.L107:
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1180              		.loc 1 859 0
 1181 00f8 012081E2 		add	r2, r1, #1
 1182 00fc 020058E1 		cmp	r8, r2
 1183 0100 CAFFFF0A 		beq	.L126
 872:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			lDistance = ( int32_t ) ( ulLast - ulCurrentSequenceNumber );
 1184              		.loc 1 872 0
 1185 0104 076081E0 		add	r6, r1, r7
 1186              	.LVL124:
 873:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1187              		.loc 1 873 0
 1188 0108 082046E0 		sub	r2, r6, r8
 1189              	.LVL125:
 875:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1190              		.loc 1 875 0
 1191 010c 000052E3 		cmp	r2, #0
 1192 0110 C6FFFFDA 		ble	.L126
 882:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1193              		.loc 1 882 0
 1194 0114 030052E1 		cmp	r2, r3
 1195 0118 C4FFFFCA 		bgt	.L126
 1196              	.LVL126:
 1197              	.L119:
 898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1198              		.loc 1 898 0
 1199 011c 0610A0E1 		mov	r1, r6
 1200 0120 0400A0E1 		mov	r0, r4
 1201 0124 FEFFFFEB 		bl	xTCPWindowRxFind
 1202              	.LVL127:
 1203 0128 000050E3 		cmp	r0, #0
 1204 012c 1500001A 		bne	.L120
 1205              	.LVL128:
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1206              		.loc 1 915 0
 1207 0130 64309FE5 		ldr	r3, .L127
 1208 0134 366FBFE6 		rev	r6, r6
 921:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1209              		.loc 1 921 0
 1210 0138 886084E5 		str	r6, [r4, #136]
 926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1211              		.loc 1 926 0
 1212 013c 0510A0E1 		mov	r1, r5
 1213              	.LVL129:
 1214 0140 0400A0E1 		mov	r0, r4
 1215              	.LVL130:
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1216              		.loc 1 915 0
 1217 0144 803084E5 		str	r3, [r4, #128]
 1218 0148 353FBFE6 		rev	r3, r5
 918:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1219              		.loc 1 918 0
 1220 014c 843084E5 		str	r3, [r4, #132]
 924:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1221              		.loc 1 924 0
 1222 0150 0C30A0E3 		mov	r3, #12
 1223 0154 3C30C4E5 		strb	r3, [r4, #60]
 926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1224              		.loc 1 926 0
 1225 0158 FEFFFFEB 		bl	xTCPWindowRxFind
 1226              	.LVL131:
 928:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1227              		.loc 1 928 0
 1228 015c 000050E3 		cmp	r0, #0
 1229 0160 B2FFFF1A 		bne	.L126
 1230              	.LVL132:
 937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1231              		.loc 1 937 0
 1232 0164 0130A0E3 		mov	r3, #1
 1233 0168 0720A0E1 		mov	r2, r7
 1234 016c 0510A0E1 		mov	r1, r5
 1235              	.LVL133:
 1236 0170 0400A0E1 		mov	r0, r4
 1237              	.LVL134:
 1238 0174 FEFFFFEB 		bl	xTCPWindowNew
 1239              	.LVL135:
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 1240              		.loc 1 939 0
 1241 0178 000050E3 		cmp	r0, #0
 1242 017c 0400001A 		bne	.L121
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1243              		.loc 1 943 0
 1244 0180 3C00C4E5 		strb	r0, [r4, #60]
 1245 0184 A9FFFFEA 		b	.L126
 1246              	.LVL136:
 1247              	.L120:
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1248              		.loc 1 900 0
 1249 0188 083090E5 		ldr	r3, [r0, #8]
 1250 018c 036086E0 		add	r6, r6, r3
 1251              	.LVL137:
 1252 0190 E1FFFFEA 		b	.L119
 1253              	.LVL138:
 1254              	.L121:
 961:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 1255              		.loc 1 961 0
 1256 0194 080045E0 		sub	r0, r5, r8
 1257              	.LVL139:
 968:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1258              		.loc 1 968 0
 1259 0198 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 1260              	.L128:
 1261              		.align	2
 1262              	.L127:
 1263 019c 0101050A 		.word	168100097
 1264              		.cfi_endproc
 1265              	.LFE45:
 1267              		.section	.text.lTCPWindowTxAdd,"ax",%progbits
 1268              		.align	2
 1269              		.global	lTCPWindowTxAdd
 1270              		.syntax unified
 1271              		.arm
 1272              		.fpu neon
 1274              	lTCPWindowTxAdd:
 1275              	.LFB47:
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lBytesLeft = ( int32_t ) ulLength, lToWrite;
 1276              		.loc 1 1010 0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 8
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 1280              	.LVL140:
 1281 0000 F74F2DE9 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1282              		.cfi_def_cfa_offset 48
 1283              		.cfi_offset 4, -36
 1284              		.cfi_offset 5, -32
 1285              		.cfi_offset 6, -28
 1286              		.cfi_offset 7, -24
 1287              		.cfi_offset 8, -20
 1288              		.cfi_offset 9, -16
 1289              		.cfi_offset 10, -12
 1290              		.cfi_offset 11, -8
 1291              		.cfi_offset 14, -4
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lBytesLeft = ( int32_t ) ulLength, lToWrite;
 1292              		.loc 1 1010 0
 1293 0004 0260A0E1 		mov	r6, r2
1013:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1294              		.loc 1 1013 0
 1295 0008 7C2090E5 		ldr	r2, [r0, #124]
 1296              	.LVL141:
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lBytesLeft = ( int32_t ) ulLength, lToWrite;
 1297              		.loc 1 1010 0
 1298 000c 0050A0E1 		mov	r5, r0
 1299 0010 0380A0E1 		mov	r8, r3
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	int32_t lDone = 0;
 1300              		.loc 1 1011 0
 1301 0014 0170A0E1 		mov	r7, r1
 1302              	.LVL142:
1017:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1303              		.loc 1 1017 0
 1304 0018 000052E3 		cmp	r2, #0
 1305 001c 1E00000A 		beq	.L140
1019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1306              		.loc 1 1019 0
 1307 0020 090092E9 		ldmib	r2, {r0, r3}
 1308              	.LVL143:
 1309 0024 000053E1 		cmp	r3, r0
 1310 0028 1B0000AA 		bge	.L140
1021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1311              		.loc 1 1021 0
 1312 002c 16C0D2E5 		ldrb	ip, [r2, #22]	@ zero_extendqisi2
 1313 0030 004093E2 		adds	r4, r3, #0
 1314 0034 0140A013 		movne	r4, #1
 1315 0038 0C40D4E1 		bics	r4, r4, ip
 1316 003c 0E00000A 		beq	.L130
 1317              	.LVL144:
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1318              		.loc 1 1025 0
 1319 0040 034040E0 		sub	r4, r0, r3
 1320              	.LVL145:
 1321              	.LBB127:
 1322              	.LBB128:
 1323              		.file 2 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_IP.h"
   1:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /*
   2:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * FreeRTOS+TCP V2.0.10
   3:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  *
   5:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * the Software without restriction, including without limitation the rights to
   8:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * subject to the following conditions:
  11:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  *
  12:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * The above copyright notice and this permission notice shall be included in all
  13:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * copies or substantial portions of the Software.
  14:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  *
  15:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  *
  22:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * http://aws.amazon.com/freertos
  23:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  * http://www.FreeRTOS.org
  24:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  */
  25:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  26:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #ifndef FREERTOS_IP_H
  27:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define FREERTOS_IP_H
  28:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  29:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #ifdef __cplusplus
  30:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** extern "C" {
  31:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #endif
  32:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  33:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* Application level configuration options. */
  34:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #include "FreeRTOSIPConfig.h"
  35:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #include "FreeRTOSIPConfigDefaults.h"
  36:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #include "IPTraceMacroDefaults.h"
  37:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  38:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* Some constants defining the sizes of several parts of a packet */
  39:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_ETH_HEADER			14u
  40:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_IPv4_HEADER			20u
  41:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_IGMP_HEADER			8u
  42:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_ICMP_HEADER			8u
  43:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_UDP_HEADER			8u
  44:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_TCP_HEADER			20u
  45:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  46:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  47:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* The number of octets in the MAC and IP addresses respectively. */
  48:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipMAC_ADDRESS_LENGTH_BYTES ( 6 )
  49:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipIP_ADDRESS_LENGTH_BYTES ( 4 )
  50:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  51:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* IP protocol definitions. */
  52:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipPROTOCOL_ICMP			( 1 )
  53:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipPROTOCOL_IGMP         ( 2 )
  54:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipPROTOCOL_TCP			( 6 )
  55:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipPROTOCOL_UDP			( 17 )
  56:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  57:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* Dimensions the buffers that are filled by received Ethernet frames. */
  58:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_ETH_CRC_BYTES					( 4UL )
  59:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipSIZE_OF_ETH_OPTIONAL_802_1Q_TAG_BYTES	( 4UL )
  60:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define ipTOTAL_ETHERNET_FRAME_SIZE				( ( ( uint32_t ) ipconfigNETWORK_MTU ) + ( ( uint32_t ) ipSI
  61:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  62:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /*_RB_ Comment may need updating. */
  63:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* Space left at the beginning of a network buffer storage area to store a
  64:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** pointer back to the network buffer.  Should be a multiple of 8 to ensure 8 byte
  65:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** alignment is maintained on architectures that require it.
  66:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  67:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** In order to get a 32-bit alignment of network packets, an offset of 2 bytes
  68:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** would be desirable, as defined by ipconfigPACKET_FILLER_SIZE.  So the malloc'd
  69:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** buffer will have the following contents:
  70:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint32_t pointer;	// word-aligned
  71:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uchar_8 filler[6];
  72:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	<< ETH-header >>	// half-word-aligned
  73:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uchar_8 dest[6];    // start of pucEthernetBuffer
  74:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uchar_8 dest[6];
  75:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uchar16_t type;
  76:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	<< IP-header >>		// word-aligned
  77:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint8_t ucVersionHeaderLength;
  78:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	etc
  79:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****  */
  80:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #if( ipconfigBUFFER_PADDING != 0 )
  81:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****     #define ipBUFFER_PADDING    ipconfigBUFFER_PADDING
  82:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #else
  83:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h ****     #define ipBUFFER_PADDING    ( 8u + ipconfigPACKET_FILLER_SIZE )
  84:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #endif
  85:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
  86:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* The structure used to store buffers and pass them around the network stack.
  87:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** Buffers can be in use by the stack, in use by the network interface hardware
  88:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** driver, or free (not in use). */
  89:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** typedef struct xNETWORK_BUFFER
  90:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** {
  91:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	ListItem_t xBufferListItem; 	/* Used to reference the buffer form the free buffer list or a socket
  92:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint32_t ulIPAddress;			/* Source or destination IP address, depending on usage scenario. */
  93:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint8_t *pucEthernetBuffer; 	/* Pointer to the start of the Ethernet frame. */
  94:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	size_t xDataLength; 			/* Starts by holding the total Ethernet frame length, then the UDP/TCP payl
  95:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint16_t usPort;				/* Source or destination port, depending on usage scenario. */
  96:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint16_t usBoundPort;			/* The port to which a transmitting socket is bound. */
  97:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#if( ipconfigUSE_LINKED_RX_MESSAGES != 0 )
  98:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 		struct xNETWORK_BUFFER *pxNextBuffer; /* Possible optimisation for expert users - requires networ
  99:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#endif
 100:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** } NetworkBufferDescriptor_t;
 101:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 102:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #include "pack_struct_start.h"
 103:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** struct xMAC_ADDRESS
 104:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** {
 105:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	uint8_t ucBytes[ ipMAC_ADDRESS_LENGTH_BYTES ];
 106:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** }
 107:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #include "pack_struct_end.h"
 108:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 109:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** typedef struct xMAC_ADDRESS MACAddress_t;
 110:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 111:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** typedef enum eNETWORK_EVENTS
 112:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** {
 113:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eNetworkUp,		/* The network is configured. */
 114:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eNetworkDown	/* The network connection has been lost. */
 115:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** } eIPCallbackEvent_t;
 116:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 117:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** typedef enum ePING_REPLY_STATUS
 118:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** {
 119:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eSuccess = 0,		/* A correct reply has been received for an outgoing ping. */
 120:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eInvalidChecksum,	/* A reply was received for an outgoing ping but the checksum of the reply was i
 121:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eInvalidData		/* A reply was received to an outgoing ping but the payload of the reply was not cor
 122:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** } ePingReplyStatus_t;
 123:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 124:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** typedef enum eNETWORK_ADDRESS_TYPE 
 125:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** {
 126:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eNetWorkAddressTypeIPV4,
 127:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eNetWorkAddressTypeIPV6,
 128:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	eNetWorkAddressTypeHostName
 129:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** } eNetWorkAddressType_t;
 130:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 131:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** /* Endian related definitions. */
 132:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #if( ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN )
 133:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 134:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	/* FreeRTOS_htons / FreeRTOS_htonl: some platforms might have built-in versions
 135:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	using a single instruction so allow these versions to be overridden. */
 136:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#ifndef FreeRTOS_htons
 137:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 		#define FreeRTOS_htons( usIn ) ( (uint16_t) ( ( ( usIn ) << 8U ) | ( ( usIn ) >> 8U ) ) )
 138:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#endif
 139:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 140:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#ifndef	FreeRTOS_htonl
 141:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 		#define FreeRTOS_htonl( ulIn ) 											\
 142:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 			(																	\
 143:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 				( uint32_t ) 													\
 144:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 				( 																\
 145:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) )                ) << 24  ) | 	\
 146:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) ) & 0x0000ff00UL ) <<  8  ) | 	\
 147:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) ) & 0x00ff0000UL ) >>  8  ) | 	\
 148:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) )                ) >> 24  )  	\
 149:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 				) 																\
 150:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 			)
 151:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#endif
 152:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 153:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #else /* ipconfigBYTE_ORDER */
 154:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 155:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#define FreeRTOS_htons( x ) ( ( uint16_t ) ( x ) )
 156:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	#define FreeRTOS_htonl( x ) ( ( uint32_t ) ( x ) )
 157:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 158:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #endif /* ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN */
 159:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 160:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define FreeRTOS_ntohs( x ) FreeRTOS_htons( x )
 161:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #define FreeRTOS_ntohl( x ) FreeRTOS_htonl( x )
 162:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 163:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** #if( ipconfigHAS_INLINE_FUNCTIONS == 1 )
 164:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 165:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_max_int32  (int32_t  a, int32_t  b);
 166:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_max_uint32 (uint32_t a, uint32_t b);
 167:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_min_int32  (int32_t  a, int32_t  b);
 168:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_min_uint32 (uint32_t a, uint32_t b);
 169:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_round_up   (uint32_t a, uint32_t d);
 170:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_round_down (uint32_t a, uint32_t d);
 171:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE BaseType_t  FreeRTOS_min_BaseType  (BaseType_t  a, BaseType_t  b);
 172:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE BaseType_t  FreeRTOS_max_BaseType  (BaseType_t  a, BaseType_t  b);
 173:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE UBaseType_t FreeRTOS_max_UBaseType (UBaseType_t a, UBaseType_t b);
 174:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE UBaseType_t  	FreeRTOS_min_UBaseType (UBaseType_t  a, UBaseType_t  b);
 175:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 176:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 
 177:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_max_int32  (int32_t  a, int32_t  b) { return a >= b ? a : b; }
 178:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_max_uint32 (uint32_t a, uint32_t b) { return a >= b ? a : b; }
 179:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_min_int32  (int32_t  a, int32_t  b) { return a <= b ? a : b; }
 1324              		.loc 2 179 0
 1325 0044 010054E1 		cmp	r4, r1
 1326 0048 0140A0A1 		movge	r4, r1
 1327              	.LVL146:
 1328              	.LBE128:
 1329              	.LBE127:
1027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1330              		.loc 1 1027 0
 1331 004c 043083E0 		add	r3, r3, r4
 1332              	.LBB129:
 1333              	.LBB130:
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( lPosition >= lMax )
 1334              		.loc 1 995 0
 1335 0050 046086E0 		add	r6, r6, r4
 1336              	.LVL147:
 1337              	.LBE130:
 1338              	.LBE129:
1029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 1339              		.loc 1 1029 0
 1340 0054 030050E1 		cmp	r0, r3
1027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1341              		.loc 1 1027 0
 1342 0058 083082E5 		str	r3, [r2, #8]
1032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 1343              		.loc 1 1032 0
 1344 005c 0030A0D3 		movle	r3, #0
1035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1345              		.loc 1 1035 0
 1346 0060 047041E0 		sub	r7, r1, r4
 1347              	.LVL148:
1032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 1348              		.loc 1 1032 0
 1349 0064 7C3085D5 		strle	r3, [r5, #124]
 1350              	.LBB133:
 1351              	.LBB131:
 996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1352              		.loc 1 996 0
 1353 0068 060058E1 		cmp	r8, r6
 1354              	.LBE131:
 1355              	.LBE133:
1039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1356              		.loc 1 1039 0
 1357 006c 343095E5 		ldr	r3, [r5, #52]
 1358              	.LBB134:
 1359              	.LBB132:
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1360              		.loc 1 998 0
 1361 0070 086046D0 		suble	r6, r6, r8
 1362              	.LBE132:
 1363              	.LBE134:
1039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1364              		.loc 1 1039 0
 1365 0074 043083E0 		add	r3, r3, r4
 1366 0078 343085E5 		str	r3, [r5, #52]
 1367              	.LVL149:
 1368              	.L130:
1067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1369              		.loc 1 1067 0
 1370 007c 0090A0E3 		mov	r9, #0
 1371              	.LBB135:
 1372              	.LBB136:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1373              		.loc 1 260 0
 1374 0080 54A085E2 		add	r10, r5, #84
 1375 0084 5CB085E2 		add	fp, r5, #92
 1376              	.LVL150:
 1377              	.L132:
 1378              	.LBE136:
 1379              	.LBE135:
1063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1380              		.loc 1 1063 0
 1381 0088 000057E3 		cmp	r7, #0
 1382 008c 040000CA 		bgt	.L137
 1383              	.L129:
1124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1384              		.loc 1 1124 0
 1385 0090 0400A0E1 		mov	r0, r4
 1386 0094 0CD08DE2 		add	sp, sp, #12
 1387              		.cfi_remember_state
 1388              		.cfi_def_cfa_offset 36
 1389              		@ sp needed
 1390 0098 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1391              	.LVL151:
 1392              	.L140:
 1393              		.cfi_restore_state
1012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment = pxWindow->pxHeadSegment;
 1394              		.loc 1 1012 0
 1395 009c 0040A0E3 		mov	r4, #0
 1396 00a0 F5FFFFEA 		b	.L130
 1397              	.LVL152:
 1398              	.L137:
1067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1399              		.loc 1 1067 0
 1400 00a4 0030A0E3 		mov	r3, #0
 1401 00a8 BC2BD5E1 		ldrh	r2, [r5, #188]
 1402 00ac 341095E5 		ldr	r1, [r5, #52]
 1403 00b0 0500A0E1 		mov	r0, r5
 1404 00b4 FEFFFFEB 		bl	xTCPWindowNew
 1405              	.LVL153:
1069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1406              		.loc 1 1069 0
 1407 00b8 003050E2 		subs	r3, r0, #0
 1408 00bc F3FFFF0A 		beq	.L129
 1409              	.LVL154:
 1410              	.LBB142:
 1411              	.LBB143:
 1412              		.loc 2 179 0
 1413 00c0 042093E5 		ldr	r2, [r3, #4]
 1414              	.LBE143:
 1415              	.LBE142:
 1416              	.LBB146:
 1417              	.LBB137:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1418              		.loc 1 260 0
 1419 00c4 0A00A0E1 		mov	r0, r10
 1420              	.LVL155:
 1421              	.LBE137:
 1422              	.LBE146:
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lDone += lToWrite;
 1423              		.loc 1 1079 0
 1424 00c8 341095E5 		ldr	r1, [r5, #52]
1076:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lBytesLeft -= lToWrite;
 1425              		.loc 1 1076 0
 1426 00cc 0C6083E5 		str	r6, [r3, #12]
 1427              	.LBB147:
 1428              	.LBB144:
 1429              		.loc 2 179 0
 1430 00d0 020057E1 		cmp	r7, r2
 1431              	.LBE144:
 1432              	.LBE147:
 1433              	.LBB148:
 1434              	.LBB138:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1435              		.loc 1 260 0
 1436 00d4 04308DE5 		str	r3, [sp, #4]
 1437              	.LBE138:
 1438              	.LBE148:
 1439              	.LBB149:
 1440              	.LBB145:
 1441              		.loc 2 179 0
 1442 00d8 0720A0B1 		movlt	r2, r7
 1443              	.LVL156:
 1444              	.LBE145:
 1445              	.LBE149:
 1446              	.LBB150:
 1447              	.LBB151:
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( lPosition >= lMax )
 1448              		.loc 1 995 0
 1449 00dc 026086E0 		add	r6, r6, r2
 1450              	.LVL157:
 1451              	.LBE151:
 1452              	.LBE150:
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lDone += lToWrite;
 1453              		.loc 1 1079 0
 1454 00e0 021081E0 		add	r1, r1, r2
1075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment->lStreamPos = lPosition;
 1455              		.loc 1 1075 0
 1456 00e4 082083E5 		str	r2, [r3, #8]
 1457              	.LBB154:
 1458              	.LBB152:
 996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1459              		.loc 1 996 0
 1460 00e8 060058E1 		cmp	r8, r6
 1461              	.LBE152:
 1462              	.LBE154:
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lDone += lToWrite;
 1463              		.loc 1 1079 0
 1464 00ec 341085E5 		str	r1, [r5, #52]
1077:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				lPosition = lTCPIncrementTxPosition( lPosition, lMax, lToWrite );
 1465              		.loc 1 1077 0
 1466 00f0 027047E0 		sub	r7, r7, r2
 1467              	.LVL158:
 1468              	.LBB155:
 1469              	.LBB139:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1470              		.loc 1 260 0
 1471 00f4 181083E2 		add	r1, r3, #24
 1472              	.LBE139:
 1473              	.LBE155:
1080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1474              		.loc 1 1080 0
 1475 00f8 024084E0 		add	r4, r4, r2
 1476              	.LVL159:
 1477              	.LBB156:
 1478              	.LBB140:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1479              		.loc 1 260 0
 1480 00fc 0B20A0E1 		mov	r2, fp
 1481              	.LBE140:
 1482              	.LBE156:
 1483              	.LBB157:
 1484              	.LBB153:
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1485              		.loc 1 998 0
 1486 0100 086046D0 		suble	r6, r6, r8
 1487              	.LVL160:
 1488              	.LBE153:
 1489              	.LBE157:
 1490              	.LBB158:
 1491              	.LBB141:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1492              		.loc 1 260 0
 1493 0104 FEFFFFEB 		bl	vListInsertGeneric
 1494              	.LVL161:
 1495              	.LBE141:
 1496              	.LBE158:
1087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1497              		.loc 1 1087 0
 1498 0108 04309DE5 		ldr	r3, [sp, #4]
 1499 010c 081093E5 		ldr	r1, [r3, #8]
 1500 0110 042093E5 		ldr	r2, [r3, #4]
 1501 0114 020051E1 		cmp	r1, r2
1089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1502              		.loc 1 1089 0
 1503 0118 0930A0A1 		movge	r3, r9
 1504 011c 7C3085E5 		str	r3, [r5, #124]
 1505 0120 D8FFFFEA 		b	.L132
 1506              		.cfi_endproc
 1507              	.LFE47:
 1509              		.section	.text.xTCPWindowTxDone,"ax",%progbits
 1510              		.align	2
 1511              		.global	xTCPWindowTxDone
 1512              		.syntax unified
 1513              		.arm
 1514              		.fpu neon
 1516              	xTCPWindowTxDone:
 1517              	.LFB48:
1132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return listLIST_IS_EMPTY( ( &pxWindow->xTxSegments) );
 1518              		.loc 1 1132 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 0
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
 1522              		@ link register save eliminated.
 1523              	.LVL162:
1133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1524              		.loc 1 1133 0
 1525 0000 900090E5 		ldr	r0, [r0, #144]
 1526              	.LVL163:
1134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1527              		.loc 1 1134 0
 1528 0004 100F6FE1 		clz	r0, r0
 1529 0008 A002A0E1 		lsr	r0, r0, #5
 1530 000c 1EFF2FE1 		bx	lr
 1531              		.cfi_endproc
 1532              	.LFE48:
 1534              		.section	.text.xTCPWindowTxHasData,"ax",%progbits
 1535              		.align	2
 1536              		.global	xTCPWindowTxHasData
 1537              		.syntax unified
 1538              		.arm
 1539              		.fpu neon
 1541              	xTCPWindowTxHasData:
 1542              	.LFB50:
1201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 1543              		.loc 1 1201 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547              	.LVL164:
1206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1548              		.loc 1 1206 0
 1549 0000 0030A0E3 		mov	r3, #0
 1550 0004 003082E5 		str	r3, [r2]
1208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1551              		.loc 1 1208 0
 1552 0008 403090E5 		ldr	r3, [r0, #64]
 1553 000c 000053E3 		cmp	r3, #0
 1554 0010 2900001A 		bne	.L166
 1555              	.LBB165:
 1556              	.LBB166:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1557              		.loc 1 505 0
 1558 0014 683090E5 		ldr	r3, [r0, #104]
 1559              	.LBE166:
 1560              	.LBE165:
1201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 1561              		.loc 1 1201 0
 1562 0018 70402DE9 		push	{r4, r5, r6, lr}
 1563              		.cfi_def_cfa_offset 16
 1564              		.cfi_offset 4, -16
 1565              		.cfi_offset 5, -12
 1566              		.cfi_offset 6, -8
 1567              		.cfi_offset 14, -4
 1568 001c 0260A0E1 		mov	r6, r2
 1569 0020 0040A0E1 		mov	r4, r0
 1570              	.LVL165:
 1571              	.LBB168:
 1572              	.LBB167:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1573              		.loc 1 505 0
 1574 0024 000053E3 		cmp	r3, #0
 1575 0028 0E00000A 		beq	.L146
 1576              	.LVL166:
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1577              		.loc 1 512 0
 1578 002c 743090E5 		ldr	r3, [r0, #116]
 1579 0030 0C5093E5 		ldr	r5, [r3, #12]
 1580              	.LVL167:
 1581              	.LBE167:
 1582              	.LBE168:
1219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1583              		.loc 1 1219 0
 1584 0034 000055E3 		cmp	r5, #0
 1585 0038 0A00000A 		beq	.L146
 1586              	.LVL168:
 1587              	.LBB169:
 1588              	.LBB170:
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 1589              		.loc 1 275 0
 1590 003c FEFFFFEB 		bl	xTaskGetTickCount
 1591              	.LVL169:
 1592 0040 103095E5 		ldr	r3, [r5, #16]
 1593              	.LBE170:
 1594              	.LBE169:
1228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1595              		.loc 1 1228 0
 1596 0044 1420D5E5 		ldrb	r2, [r5, #20]	@ zero_extendqisi2
 1597              	.LBB172:
 1598              	.LBB171:
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 1599              		.loc 1 275 0
 1600 0048 030040E0 		sub	r0, r0, r3
 1601              	.LVL170:
 1602              	.LBE171:
 1603              	.LBE172:
1228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1604              		.loc 1 1228 0
 1605 004c 383094E5 		ldr	r3, [r4, #56]
 1606 0050 1332A0E1 		lsl	r3, r3, r2
 1607              	.LVL171:
1230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1608              		.loc 1 1230 0
 1609 0054 000053E1 		cmp	r3, r0
1233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1610              		.loc 1 1233 0
 1611 0058 00304380 		subhi	r3, r3, r0
 1612              	.LVL172:
 1613 005c 00308685 		strhi	r3, [r6]
 1614              	.LVL173:
 1615              	.L145:
1263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1616              		.loc 1 1263 0
 1617 0060 0100A0E3 		mov	r0, #1
1269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1618              		.loc 1 1269 0
 1619 0064 7080BDE8 		pop	{r4, r5, r6, pc}
 1620              	.LVL174:
 1621              	.L146:
 1622              	.LBB173:
 1623              	.LBB174:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1624              		.loc 1 505 0
 1625 0068 543094E5 		ldr	r3, [r4, #84]
 1626 006c 000053E3 		cmp	r3, #0
 1627 0070 0100001A 		bne	.L148
 1628              	.LVL175:
 1629              	.L149:
 1630              	.LBE174:
 1631              	.LBE173:
1247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1632              		.loc 1 1247 0
 1633 0074 0000A0E3 		mov	r0, #0
 1634 0078 7080BDE8 		pop	{r4, r5, r6, pc}
 1635              	.LVL176:
 1636              	.L148:
 1637              	.LBB176:
 1638              	.LBB175:
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1639              		.loc 1 512 0
 1640 007c 603094E5 		ldr	r3, [r4, #96]
 1641 0080 0C5093E5 		ldr	r5, [r3, #12]
 1642              	.LVL177:
 1643              	.LBE175:
 1644              	.LBE176:
1245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1645              		.loc 1 1245 0
 1646 0084 000055E3 		cmp	r5, #0
 1647 0088 F9FFFF0A 		beq	.L149
1249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1648              		.loc 1 1249 0
 1649 008c 0400A0E1 		mov	r0, r4
 1650              	.LVL178:
 1651 0090 FEFFFFEB 		bl	prvTCPWindowTxHasSpace
 1652              	.LVL179:
 1653 0094 000050E3 		cmp	r0, #0
 1654 0098 F5FFFF0A 		beq	.L149
1254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1655              		.loc 1 1254 0
 1656 009c 0030D4E5 		ldrb	r3, [r4]	@ zero_extendqisi2
 1657 00a0 020013E3 		tst	r3, #2
 1658 00a4 EDFFFF0A 		beq	.L145
1254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1659              		.loc 1 1254 0 is_stmt 0 discriminator 1
 1660 00a8 082095E5 		ldr	r2, [r5, #8]
 1661 00ac 043095E5 		ldr	r3, [r5, #4]
 1662 00b0 030052E1 		cmp	r2, r3
 1663 00b4 E9FFFFAA 		bge	.L145
 1664 00b8 EDFFFFEA 		b	.L149
 1665              	.LVL180:
 1666              	.L166:
 1667              		.cfi_def_cfa_offset 0
 1668              		.cfi_restore 4
 1669              		.cfi_restore 5
 1670              		.cfi_restore 6
 1671              		.cfi_restore 14
1263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1672              		.loc 1 1263 0 is_stmt 1
 1673 00bc 0100A0E3 		mov	r0, #1
 1674              	.LVL181:
 1675 00c0 1EFF2FE1 		bx	lr
 1676              		.cfi_endproc
 1677              	.LFE50:
 1679              		.section	.text.ulTCPWindowTxGet,"ax",%progbits
 1680              		.align	2
 1681              		.global	ulTCPWindowTxGet
 1682              		.syntax unified
 1683              		.arm
 1684              		.fpu neon
 1686              	ulTCPWindowTxGet:
 1687              	.LFB51:
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 1688              		.loc 1 1277 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692              	.LVL182:
 1693 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1694              		.cfi_def_cfa_offset 32
 1695              		.cfi_offset 4, -32
 1696              		.cfi_offset 5, -28
 1697              		.cfi_offset 6, -24
 1698              		.cfi_offset 7, -20
 1699              		.cfi_offset 8, -16
 1700              		.cfi_offset 9, -12
 1701              		.cfi_offset 10, -8
 1702              		.cfi_offset 14, -4
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 1703              		.loc 1 1277 0
 1704 0004 0040A0E1 		mov	r4, r0
 1705              	.LBB193:
 1706              	.LBB194:
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1707              		.loc 1 479 0
 1708 0008 405090E5 		ldr	r5, [r0, #64]
 1709              	.LBE194:
 1710              	.LBE193:
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
 1711              		.loc 1 1277 0
 1712 000c 0180A0E1 		mov	r8, r1
 1713 0010 0260A0E1 		mov	r6, r2
 1714              	.LBB197:
 1715              	.LBB195:
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1716              		.loc 1 479 0
 1717 0014 000055E3 		cmp	r5, #0
 1718 0018 0200000A 		beq	.L171
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 1719              		.loc 1 485 0
 1720 001c 4C0090E5 		ldr	r0, [r0, #76]
 1721              	.LVL183:
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1722              		.loc 1 486 0
 1723 0020 0C5090E5 		ldr	r5, [r0, #12]
 1724              	.LVL184:
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1725              		.loc 1 488 0
 1726 0024 FEFFFFEB 		bl	uxListRemove
 1727              	.LVL185:
 1728              	.L171:
 1729              	.LBE195:
 1730              	.LBE197:
1288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1731              		.loc 1 1288 0
 1732 0028 283094E5 		ldr	r3, [r4, #40]
1290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1733              		.loc 1 1290 0
 1734 002c 000055E3 		cmp	r5, #0
1288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1735              		.loc 1 1288 0
 1736 0030 2C3084E5 		str	r3, [r4, #44]
1290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1737              		.loc 1 1290 0
 1738 0034 1600001A 		bne	.L172
 1739              	.LVL186:
 1740              	.LBB198:
 1741              	.LBB199:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1742              		.loc 1 505 0
 1743 0038 683094E5 		ldr	r3, [r4, #104]
 1744 003c 000053E3 		cmp	r3, #0
 1745 0040 4E00000A 		beq	.L173
 1746              	.LVL187:
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1747              		.loc 1 512 0
 1748 0044 743094E5 		ldr	r3, [r4, #116]
 1749 0048 0C9093E5 		ldr	r9, [r3, #12]
 1750              	.LVL188:
 1751              	.LBE199:
 1752              	.LBE198:
1297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1753              		.loc 1 1297 0
 1754 004c 000059E3 		cmp	r9, #0
 1755 0050 4A00000A 		beq	.L173
1300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1756              		.loc 1 1300 0
 1757 0054 1430D9E5 		ldrb	r3, [r9, #20]	@ zero_extendqisi2
 1758 0058 387094E5 		ldr	r7, [r4, #56]
 1759 005c 1773A0E1 		lsl	r7, r7, r3
 1760              	.LVL189:
 1761              	.LBB200:
 1762              	.LBB201:
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 1763              		.loc 1 275 0
 1764 0060 FEFFFFEB 		bl	xTaskGetTickCount
 1765              	.LVL190:
 1766 0064 103099E5 		ldr	r3, [r9, #16]
 1767 0068 030040E0 		sub	r0, r0, r3
 1768              	.LBE201:
 1769              	.LBE200:
1302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1770              		.loc 1 1302 0
 1771 006c 000057E1 		cmp	r7, r0
 1772 0070 4200002A 		bcs	.L173
 1773              	.LVL191:
 1774              	.LBB202:
 1775              	.LBB203:
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1776              		.loc 1 479 0
 1777 0074 683094E5 		ldr	r3, [r4, #104]
 1778 0078 000053E3 		cmp	r3, #0
 1779 007c 4800000A 		beq	.L174
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 1780              		.loc 1 485 0
 1781 0080 740094E5 		ldr	r0, [r4, #116]
 1782              	.LVL192:
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1783              		.loc 1 486 0
 1784 0084 0C5090E5 		ldr	r5, [r0, #12]
 1785              	.LVL193:
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1786              		.loc 1 488 0
 1787 0088 FEFFFFEB 		bl	uxListRemove
 1788              	.LVL194:
 1789              	.LBE203:
 1790              	.LBE202:
1307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1791              		.loc 1 1307 0
 1792 008c 0030A0E3 		mov	r3, #0
 1793 0090 1530C5E5 		strb	r3, [r5, #21]
 1794              	.LVL195:
 1795              	.L172:
1398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1796              		.loc 1 1398 0
 1797 0094 283095E5 		ldr	r3, [r5, #40]
 1798 0098 000053E3 		cmp	r3, #0
 1799 009c 1D00000A 		beq	.L205
1398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1800              		.loc 1 1398 0 is_stmt 0 discriminator 1
 1801 00a0 0110A0E3 		mov	r1, #1
 1802 00a4 00019FE5 		ldr	r0, .L207
 1803 00a8 FEFFFFEB 		bl	longjmp
 1804              	.LVL196:
 1805              	.L175:
1338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1806              		.loc 1 1338 0 is_stmt 1
 1807 00ac 0020D4E5 		ldrb	r2, [r4]	@ zero_extendqisi2
 1808 00b0 020012E3 		tst	r2, #2
 1809 00b4 0300000A 		beq	.L177
1338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1810              		.loc 1 1338 0 is_stmt 0 discriminator 1
 1811 00b8 082093E5 		ldr	r2, [r3, #8]
 1812 00bc 043093E5 		ldr	r3, [r3, #4]
 1813 00c0 030052E1 		cmp	r2, r3
 1814 00c4 340000BA 		blt	.L178
 1815              	.L177:
1344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1816              		.loc 1 1344 0 is_stmt 1
 1817 00c8 0810A0E1 		mov	r1, r8
 1818 00cc 0400A0E1 		mov	r0, r4
 1819 00d0 FEFFFFEB 		bl	prvTCPWindowTxHasSpace
 1820              	.LVL197:
 1821 00d4 000050E3 		cmp	r0, #0
 1822 00d8 2F00000A 		beq	.L178
 1823              	.LVL198:
 1824              	.LBB204:
 1825              	.LBB205:
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1826              		.loc 1 479 0
 1827 00dc 543094E5 		ldr	r3, [r4, #84]
 1828 00e0 000053E3 		cmp	r3, #0
 1829 00e4 0200000A 		beq	.L179
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxItem );
 1830              		.loc 1 485 0
 1831 00e8 600094E5 		ldr	r0, [r4, #96]
 1832              	.LVL199:
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1833              		.loc 1 486 0
 1834 00ec 0C5090E5 		ldr	r5, [r0, #12]
 1835              	.LVL200:
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1836              		.loc 1 488 0
 1837 00f0 FEFFFFEB 		bl	uxListRemove
 1838              	.LVL201:
 1839              	.L179:
 1840              	.LBE205:
 1841              	.LBE204:
1356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 1842              		.loc 1 1356 0
 1843 00f4 7C3094E5 		ldr	r3, [r4, #124]
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1844              		.loc 1 1363 0
 1845 00f8 082095E5 		ldr	r2, [r5, #8]
1356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					{
 1846              		.loc 1 1356 0
 1847 00fc 050053E1 		cmp	r3, r5
1358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					}
 1848              		.loc 1 1358 0
 1849 0100 0030A003 		moveq	r3, #0
 1850 0104 7C308405 		streq	r3, [r4, #124]
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1851              		.loc 1 1363 0
 1852 0108 003095E5 		ldr	r3, [r5]
 1853 010c 023083E0 		add	r3, r3, r2
 1854 0110 283084E5 		str	r3, [r4, #40]
 1855 0114 DEFFFFEA 		b	.L172
 1856              	.LVL202:
 1857              	.L205:
 1858              	.LBB206:
 1859              	.LBB207:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1860              		.loc 1 260 0
 1861 0118 702084E2 		add	r2, r4, #112
 1862 011c 181085E2 		add	r1, r5, #24
 1863              	.LVL203:
 1864 0120 680084E2 		add	r0, r4, #104
 1865              	.LVL204:
 1866 0124 FEFFFFEB 		bl	vListInsertGeneric
 1867              	.LVL205:
 1868              	.LBE207:
 1869              	.LBE206:
1405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1870              		.loc 1 1405 0
 1871 0128 1630D5E5 		ldrb	r3, [r5, #22]	@ zero_extendqisi2
 1872 012c 013083E3 		orr	r3, r3, #1
 1873 0130 1630C5E5 		strb	r3, [r5, #22]
1409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1874              		.loc 1 1409 0
 1875 0134 1430D5E5 		ldrb	r3, [r5, #20]	@ zero_extendqisi2
 1876 0138 013083E2 		add	r3, r3, #1
 1877 013c 7330EFE6 		uxtb	r3, r3
1413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1878              		.loc 1 1413 0
 1879 0140 040053E3 		cmp	r3, #4
1409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1880              		.loc 1 1409 0
 1881 0144 1430C5E5 		strb	r3, [r5, #20]
1413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 1882              		.loc 1 1413 0
 1883 0148 0400001A 		bne	.L181
1415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1884              		.loc 1 1415 0
 1885 014c BC3BD4E1 		ldrh	r3, [r4, #188]
 1886 0150 082094E5 		ldr	r2, [r4, #8]
 1887 0154 8330A0E1 		lsl	r3, r3, #1
 1888 0158 030052E1 		cmp	r2, r3
1420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
 1889              		.loc 1 1420 0
 1890 015c 08308485 		strhi	r3, [r4, #8]
 1891              	.L181:
 1892              	.LVL206:
 1893              	.LBB208:
 1894              	.LBB209:
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 1895              		.loc 1 268 0
 1896 0160 FEFFFFEB 		bl	xTaskGetTickCount
 1897              	.LVL207:
 1898              	.LBE209:
 1899              	.LBE208:
1427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1900              		.loc 1 1427 0
 1901 0164 003095E5 		ldr	r3, [r5]
 1902              	.LBB211:
 1903              	.LBB210:
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** }
 1904              		.loc 1 268 0
 1905 0168 100085E5 		str	r0, [r5, #16]
 1906              	.LVL208:
 1907              	.LBE210:
 1908              	.LBE211:
1427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1909              		.loc 1 1427 0
 1910 016c 2C3084E5 		str	r3, [r4, #44]
1430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1911              		.loc 1 1430 0
 1912 0170 0C3095E5 		ldr	r3, [r5, #12]
 1913 0174 003086E5 		str	r3, [r6]
1433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1914              		.loc 1 1433 0
 1915 0178 080095E5 		ldr	r0, [r5, #8]
 1916              	.LVL209:
1436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1917              		.loc 1 1436 0
 1918 017c F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1919              	.LVL210:
 1920              	.L173:
 1921              	.LBB212:
 1922              	.LBB213:
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
 1923              		.loc 1 505 0
 1924 0180 543094E5 		ldr	r3, [r4, #84]
 1925 0184 000053E3 		cmp	r3, #0
 1926 0188 0300000A 		beq	.L178
 1927              	.LVL211:
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1928              		.loc 1 512 0
 1929 018c 603094E5 		ldr	r3, [r4, #96]
 1930 0190 0C3093E5 		ldr	r3, [r3, #12]
 1931              	.LVL212:
 1932              	.LBE213:
 1933              	.LBE212:
1333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
 1934              		.loc 1 1333 0
 1935 0194 000053E3 		cmp	r3, #0
 1936 0198 C3FFFF1A 		bne	.L175
 1937              	.L178:
 1938              	.LBB214:
 1939              	.LBB196:
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
 1940              		.loc 1 481 0
 1941 019c 0000A0E3 		mov	r0, #0
 1942 01a0 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1943              	.LVL213:
 1944              	.L174:
 1945              	.LBE196:
 1946              	.LBE214:
1307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 1947              		.loc 1 1307 0
 1948 01a4 1550C5E5 		strb	r5, [r5, #21]
 1949 01a8 F000F0E7 		.inst	0xe7f000f0
 1950              	.L208:
 1951              		.align	2
 1952              	.L207:
 1953 01ac 28000000 		.word	Unity+40
 1954              		.cfi_endproc
 1955              	.LFE51:
 1957              		.section	.text.ulTCPWindowTxAck,"ax",%progbits
 1958              		.align	2
 1959              		.global	ulTCPWindowTxAck
 1960              		.syntax unified
 1961              		.arm
 1962              		.fpu neon
 1964              	ulTCPWindowTxAck:
 1965              	.LFB54:
1590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	static uint32_t prvTCPWindowFastRetransmit( TCPWindow_t *pxWindow, uint32_t ulFirst )
1596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
1597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const ListItem_t *pxIterator;
1598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	const MiniListItem_t* pxEnd;
1599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	TCPSegment_t *pxSegment;
1600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulCount = 0UL;
1601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* A higher Tx block has been acknowledged.  Now iterate through the
1603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		 xWaitQueue to find a possible condition for a FAST retransmission. */
1604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		pxEnd = ( const MiniListItem_t* ) listGET_END_MARKER( &( pxWindow->xWaitQueue ) );
1606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
1608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd; )
1609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Get the owner, which is a TCP segment. */
1611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxSegment = ( TCPSegment_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
1612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Hop to the next item before the current gets unlinked. */
1614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator );
1615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			/* Fast retransmission:
1617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			When 3 packets with a higher sequence number have been acknowledged
1618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			by the peer, it is very unlikely a current packet will ever arrive.
1619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			It will be retransmitted far before the RTO. */
1620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			if( ( pxSegment->u.bits.bAcked == pdFALSE_UNSIGNED ) &&
1621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulFirst ) != pdFALSE ) &&
1622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( ++( pxSegment->u.bits.ucDupAckCount ) == DUPLICATE_ACKS_BEFORE_FAST_RETRANSMIT ) )
1623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
1624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxSegment->u.bits.ucTransmitCount = pdFALSE_UNSIGNED;
1625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Not clearing 'ucDupAckCount' yet as more SACK's might come in
1627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				which might lead to a second fast rexmit. */
1628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				if( ( xTCPWindowLoggingLevel >= 0 ) && ( ipconfigTCP_MAY_LOG_PORT( pxWindow->usOurPortNumber ) 
1629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				{
1630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					FreeRTOS_debug_printf( ( "prvTCPWindowFastRetransmit: Requeue sequence number %lu < %lu\n",
1631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						pxSegment->ulSequenceNumber - pxWindow->tx.ulFirstSequenceNumber,
1632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 						ulFirst - pxWindow->tx.ulFirstSequenceNumber ) );
1633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 					FreeRTOS_flush_logging( );
1634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				}
1635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Remove it from xWaitQueue. */
1637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				uxListRemove( &pxSegment->xQueueItem );
1638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				/* Add this segment to the priority queue so it gets
1640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				retransmitted immediately. */
1641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				vListInsertFifo( &( pxWindow->xPriorityQueue ), &( pxSegment->xQueueItem ) );
1642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulCount++;
1643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			}
1644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ulCount;
1647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
1648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulTCPWindowTxAck( TCPWindow_t *pxWindow, uint32_t ulSequenceNumber )
1654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 1966              		.loc 1 1654 0
 1967              		.cfi_startproc
 1968              		@ args = 0, pretend = 0, frame = 0
 1969              		@ frame_needed = 0, uses_anonymous_args = 0
 1970              		@ link register save eliminated.
 1971              	.LVL214:
1655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulFirstSequence, ulReturn;
1656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Receive a normal ACK. */
1658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		ulFirstSequence = pxWindow->tx.ulCurrentSequenceNumber;
 1972              		.loc 1 1659 0
 1973 0000 203090E5 		ldr	r3, [r0, #32]
 1974              	.LVL215:
1654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulFirstSequence, ulReturn;
 1975              		.loc 1 1654 0
 1976 0004 0120A0E1 		mov	r2, r1
 1977              	.LBB215:
 1978              	.LBB216:
 223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1979              		.loc 1 223 0
 1980 0008 011043E0 		sub	r1, r3, r1
 1981              	.LVL216:
 1982              	.LBE216:
 1983              	.LBE215:
1660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( xSequenceLessThanOrEqual( ulSequenceNumber, ulFirstSequence ) != pdFALSE )
 1984              		.loc 1 1661 0
 1985 000c 000051E3 		cmp	r1, #0
 1986 0010 010000AA 		bge	.L210
1662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulReturn = 0UL;
1664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		else
1666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			ulReturn = prvTCPWindowTxCheckAck( pxWindow, ulFirstSequence, ulSequenceNumber );
 1987              		.loc 1 1667 0
 1988 0014 0310A0E1 		mov	r1, r3
 1989 0018 FEFFFFEA 		b	prvTCPWindowTxCheckAck
 1990              	.LVL217:
 1991              	.L210:
1668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ulReturn;
1671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 1992              		.loc 1 1671 0
 1993 001c 0000A0E3 		mov	r0, #0
 1994              	.LVL218:
 1995 0020 1EFF2FE1 		bx	lr
 1996              		.cfi_endproc
 1997              	.LFE54:
 1999              		.section	.text.ulTCPWindowTxSack,"ax",%progbits
 2000              		.align	2
 2001              		.global	ulTCPWindowTxSack
 2002              		.syntax unified
 2003              		.arm
 2004              		.fpu neon
 2006              	ulTCPWindowTxSack:
 2007              	.LFB55:
1672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #endif /* ipconfigUSE_TCP_WIN == 1 */
1674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** /*-----------------------------------------------------------*/
1675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** #if( ipconfigUSE_TCP_WIN == 1 )
1677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulTCPWindowTxSack( TCPWindow_t *pxWindow, uint32_t ulFirst, uint32_t ulLast )
1679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	{
 2008              		.loc 1 1679 0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 2012              	.LVL219:
 2013 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2014              		.cfi_def_cfa_offset 32
 2015              		.cfi_offset 4, -32
 2016              		.cfi_offset 5, -28
 2017              		.cfi_offset 6, -24
 2018              		.cfi_offset 7, -20
 2019              		.cfi_offset 8, -16
 2020              		.cfi_offset 9, -12
 2021              		.cfi_offset 10, -8
 2022              		.cfi_offset 14, -4
 2023              		.loc 1 1679 0
 2024 0004 0050A0E1 		mov	r5, r0
 2025              	.LVL220:
 2026 0008 0170A0E1 		mov	r7, r1
 2027              	.LBB223:
 2028              	.LBB224:
1605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 2029              		.loc 1 1605 0
 2030 000c 70A085E2 		add	r10, r5, #112
 2031              	.LBB225:
 2032              	.LBB226:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 2033              		.loc 1 260 0
 2034 0010 409085E2 		add	r9, r5, #64
 2035              	.LBE226:
 2036              	.LBE225:
 2037              	.LBB229:
 2038              	.LBB230:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 2039              		.loc 1 233 0
 2040 0014 017047E2 		sub	r7, r7, #1
 2041              	.LBE230:
 2042              	.LBE229:
 2043              	.LBE224:
 2044              	.LBE223:
1680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulAckCount = 0UL;
1681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	uint32_t ulCurrentSequenceNumber = pxWindow->tx.ulCurrentSequenceNumber;
1682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		/* Receive a SACK option. */
1684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		ulAckCount = prvTCPWindowTxCheckAck( pxWindow, ulFirst, ulLast );
 2045              		.loc 1 1684 0
 2046 0018 FEFFFFEB 		bl	prvTCPWindowTxCheckAck
 2047              	.LVL221:
 2048              	.LBB238:
 2049              	.LBB235:
 2050              	.LBB232:
 2051              	.LBB227:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 2052              		.loc 1 260 0
 2053 001c 485085E2 		add	r5, r5, #72
 2054              	.LVL222:
 2055              	.LBE227:
 2056              	.LBE232:
1607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd; )
 2057              		.loc 1 1607 0
 2058 0020 2C6095E5 		ldr	r6, [r5, #44]
 2059              	.LBE235:
 2060              	.LBE238:
 2061              		.loc 1 1684 0
 2062 0024 0080A0E1 		mov	r8, r0
 2063              	.LVL223:
 2064              	.L212:
 2065              	.LBB239:
 2066              	.LBB236:
1607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd; )
 2067              		.loc 1 1607 0
 2068 0028 06005AE1 		cmp	r10, r6
 2069 002c 0100001A 		bne	.L216
 2070              	.LVL224:
 2071              	.LBE236:
 2072              	.LBE239:
1685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		prvTCPWindowFastRetransmit( pxWindow, ulFirst );
1686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		if( ( xTCPWindowLoggingLevel >= 1 ) && ( xSequenceGreaterThan( ulFirst, ulCurrentSequenceNumber )
1688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		{
1689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_debug_printf( ( "ulTCPWindowTxSack[%u,%u]: from %lu to %lu (ack = %lu)\n",
1690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->usPeerPortNumber,
1691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->usOurPortNumber,
1692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulFirst - pxWindow->tx.ulFirstSequenceNumber,
1693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				ulLast - pxWindow->tx.ulFirstSequenceNumber,
1694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				pxWindow->tx.ulCurrentSequenceNumber - pxWindow->tx.ulFirstSequenceNumber ) );
1695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			FreeRTOS_flush_logging( );
1696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		}
1697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
1698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 		return ulAckCount;
1699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 2073              		.loc 1 1699 0
 2074 0030 0800A0E1 		mov	r0, r8
 2075 0034 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2076              	.LVL225:
 2077              	.L216:
 2078              	.LBB240:
 2079              	.LBB237:
1611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 2080              		.loc 1 1611 0
 2081 0038 0C1096E5 		ldr	r1, [r6, #12]
 2082              	.LVL226:
1614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 2083              		.loc 1 1614 0
 2084 003c 046096E5 		ldr	r6, [r6, #4]
 2085              	.LVL227:
1620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulFirst ) != pdFALSE ) &&
 2086              		.loc 1 1620 0
 2087 0040 1630D1E5 		ldrb	r3, [r1, #22]	@ zero_extendqisi2
 2088 0044 022013E2 		ands	r2, r3, #2
 2089 0048 F6FFFF1A 		bne	.L212
 2090              	.LBB233:
 2091              	.LBB231:
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 2092              		.loc 1 233 0
 2093 004c 003091E5 		ldr	r3, [r1]
 2094 0050 033047E0 		sub	r3, r7, r3
 2095              	.LBE231:
 2096              	.LBE233:
1620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( xSequenceLessThan( pxSegment->ulSequenceNumber, ulFirst ) != pdFALSE ) &&
 2097              		.loc 1 1620 0
 2098 0054 000053E3 		cmp	r3, #0
 2099 0058 F2FFFFBA 		blt	.L212
1622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 			{
 2100              		.loc 1 1622 0
 2101 005c 1530D1E5 		ldrb	r3, [r1, #21]	@ zero_extendqisi2
 2102 0060 013083E2 		add	r3, r3, #1
 2103 0064 7330EFE6 		uxtb	r3, r3
1621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 				( ++( pxSegment->u.bits.ucDupAckCount ) == DUPLICATE_ACKS_BEFORE_FAST_RETRANSMIT ) )
 2104              		.loc 1 1621 0
 2105 0068 030053E3 		cmp	r3, #3
 2106 006c 1530C1E5 		strb	r3, [r1, #21]
 2107 0070 ECFFFF1A 		bne	.L212
1637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 2108              		.loc 1 1637 0
 2109 0074 184081E2 		add	r4, r1, #24
1624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 2110              		.loc 1 1624 0
 2111 0078 1420C1E5 		strb	r2, [r1, #20]
1637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 
 2112              		.loc 1 1637 0
 2113 007c 0400A0E1 		mov	r0, r4
 2114 0080 FEFFFFEB 		bl	uxListRemove
 2115              	.LVL228:
 2116              	.LBB234:
 2117              	.LBB228:
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_TCP_WIN.c **** 	}
 2118              		.loc 1 260 0
 2119 0084 0520A0E1 		mov	r2, r5
 2120 0088 0410A0E1 		mov	r1, r4
 2121 008c 0900A0E1 		mov	r0, r9
 2122 0090 FEFFFFEB 		bl	vListInsertGeneric
 2123              	.LVL229:
 2124 0094 E3FFFFEA 		b	.L212
 2125              	.LBE228:
 2126              	.LBE234:
 2127              	.LBE237:
 2128              	.LBE240:
 2129              		.cfi_endproc
 2130              	.LFE55:
 2132              		.global	xTCPWindowLoggingLevel
 2133              		.section	.bss.xSegmentList,"aw",%nobits
 2134              		.align	2
 2135              		.set	.LANCHOR0,. + 0
 2138              	xSegmentList:
 2139 0000 00000000 		.space	20
 2139      00000000 
 2139      00000000 
 2139      00000000 
 2139      00000000 
 2140              		.section	.bss.xTCPSegments,"aw",%nobits
 2141              		.align	2
 2142              		.set	.LANCHOR1,. + 0
 2145              	xTCPSegments:
 2146 0000 00000000 		.space	4
 2147              		.section	.bss.xTCPWindowLoggingLevel,"aw",%nobits
 2148              		.align	2
 2151              	xTCPWindowLoggingLevel:
 2152 0000 00000000 		.space	4
 2153              		.text
 2154              	.Letext0:
 2155              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2156              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2157              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2158              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2159              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2160              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 2161              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2162              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2163              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 2164              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2165              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 2166              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/list.h"
 2167              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2168              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2169              		.file 17 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2170              		.file 18 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2171              		.file 19 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2172              		.file 20 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2173              		.file 21 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 2174              		.file 22 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_TCP_WI
 2175              		.file 23 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_IP_Pri
 2176              		.file 24 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 2177              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 2178              		.file 26 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/portable.h"
DEFINED SYMBOLS
                            *ABS*:00000000 FreeRTOS_TCP_WIN.c
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:17     .text.xTCPWindowRxFind:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:22     .text.xTCPWindowRxFind:00000000 xTCPWindowRxFind
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:60     .text.prvTCPWindowTxHasSpace:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:65     .text.prvTCPWindowTxHasSpace:00000000 prvTCPWindowTxHasSpace
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:143    .text.vListInsertGeneric:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:149    .text.vListInsertGeneric:00000000 vListInsertGeneric
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:179    .text.vTCPWindowFree:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:184    .text.vTCPWindowFree:00000000 vTCPWindowFree
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:249    .text.vTCPWindowFree:00000058 $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:256    .text.prvTCPWindowTxCheckAck:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:261    .text.prvTCPWindowTxCheckAck:00000000 prvTCPWindowTxCheckAck
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:479    .text.xTCPWindowNew:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:484    .text.xTCPWindowNew:00000000 xTCPWindowNew
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:595    .text.xTCPWindowNew:00000098 $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:601    .text.xTCPWindowRxEmpty:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:607    .text.xTCPWindowRxEmpty:00000000 xTCPWindowRxEmpty
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:638    .text.vTCPWindowDestroy:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:644    .text.vTCPWindowDestroy:00000000 vTCPWindowDestroy
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:701    .text.vTCPWindowInit:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:707    .text.vTCPWindowInit:00000000 vTCPWindowInit
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:794    .text.vTCPWindowCreate:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:800    .text.vTCPWindowCreate:00000000 vTCPWindowCreate
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:951    .text.vTCPWindowCreate:000000e0 $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:960    .text.vTCPSegmentCleanup:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:966    .text.vTCPSegmentCleanup:00000000 vTCPSegmentCleanup
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:991    .text.vTCPSegmentCleanup:00000024 $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:996    .text.lTCPWindowRxCheck:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1002   .text.lTCPWindowRxCheck:00000000 lTCPWindowRxCheck
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1263   .text.lTCPWindowRxCheck:0000019c $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1268   .text.lTCPWindowTxAdd:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1274   .text.lTCPWindowTxAdd:00000000 lTCPWindowTxAdd
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1510   .text.xTCPWindowTxDone:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1516   .text.xTCPWindowTxDone:00000000 xTCPWindowTxDone
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1535   .text.xTCPWindowTxHasData:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1541   .text.xTCPWindowTxHasData:00000000 xTCPWindowTxHasData
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1680   .text.ulTCPWindowTxGet:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1686   .text.ulTCPWindowTxGet:00000000 ulTCPWindowTxGet
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1953   .text.ulTCPWindowTxGet:000001ac $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1958   .text.ulTCPWindowTxAck:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:1964   .text.ulTCPWindowTxAck:00000000 ulTCPWindowTxAck
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2000   .text.ulTCPWindowTxSack:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2006   .text.ulTCPWindowTxSack:00000000 ulTCPWindowTxSack
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2151   .bss.xTCPWindowLoggingLevel:00000000 xTCPWindowLoggingLevel
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2134   .bss.xSegmentList:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2138   .bss.xSegmentList:00000000 xSegmentList
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2141   .bss.xTCPSegments:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2145   .bss.xTCPSegments:00000000 xTCPSegments
C:\Users\a5089698\AppData\Local\Temp\ccDEk3Mf.s:2148   .bss.xTCPWindowLoggingLevel:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
uxListRemove
xTaskGetTickCount
longjmp
Unity
__aeabi_uidiv
vListInitialise
pvPortMalloc
memset
vPortFree
