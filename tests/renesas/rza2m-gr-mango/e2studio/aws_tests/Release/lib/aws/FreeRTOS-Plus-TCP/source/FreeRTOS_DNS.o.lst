   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"FreeRTOS_DNS.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.prvSkipNameField,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	prvSkipNameField:
  23              	.LFB30:
  24              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/FreeRTOS_DNS.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * FreeRTOS+TCP V2.0.10
   3:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * http://aws.amazon.com/freertos
  23:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * http://www.FreeRTOS.org
  24:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
  25:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  26:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* Standard includes. */
  27:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include <stdint.h>
  28:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  29:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* FreeRTOS includes. */
  30:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "FreeRTOS.h"
  31:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "task.h"
  32:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "queue.h"
  33:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "list.h"
  34:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "semphr.h"
  35:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  36:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* FreeRTOS+TCP includes. */
  37:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "FreeRTOS_IP.h"
  38:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "FreeRTOS_Sockets.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "FreeRTOS_IP_Private.h"
  40:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "FreeRTOS_UDP_IP.h"
  41:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "FreeRTOS_DNS.h"
  42:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "NetworkBufferManagement.h"
  43:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "NetworkInterface.h"
  44:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "IPTraceMacroDefaults.h"
  45:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  46:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* Exclude the entire file if DNS is not enabled. */
  47:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS != 0 )
  48:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  49:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN )
  50:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsDNS_PORT						0x3500
  51:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsONE_QUESTION					0x0100
  52:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsOUTGOING_FLAGS				0x0001 /* Standard query. */
  53:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsRX_FLAGS_MASK				0x0f80 /* The bits of interest in the flags field of incoming DNS mess
  54:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsEXPECTED_RX_FLAGS			0x0080 /* Should be a response, without any errors. */
  55:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #else
  56:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsDNS_PORT						0x0035
  57:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsONE_QUESTION					0x0001
  58:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsOUTGOING_FLAGS				0x0100 /* Standard query. */
  59:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsRX_FLAGS_MASK				0x800f /* The bits of interest in the flags field of incoming DNS mess
  60:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define dnsEXPECTED_RX_FLAGS			0x8000 /* Should be a response, without any errors. */
  61:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  62:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigBYTE_ORDER */
  63:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  64:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* The maximum number of times a DNS request should be sent out if a response
  65:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** is not received, before giving up. */
  66:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #ifndef ipconfigDNS_REQUEST_ATTEMPTS
  67:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#define ipconfigDNS_REQUEST_ATTEMPTS		5
  68:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
  69:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  70:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* If the top two bits in the first character of a name field are set then the
  71:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** name field is an offset to the string, rather than the string itself. */
  72:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNAME_IS_OFFSET					( ( uint8_t ) 0xc0 )
  73:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  74:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* NBNS flags. */
  75:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_FLAGS_RESPONSE				0x8000
  76:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_FLAGS_OPCODE_MASK			0x7800
  77:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_FLAGS_OPCODE_QUERY			0x0000
  78:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_FLAGS_OPCODE_REGISTRATION	0x2800
  79:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  80:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* Host types. */
  81:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsTYPE_A_HOST						0x01
  82:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsCLASS_IN							0x01
  83:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  84:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* LLMNR constants. */
  85:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsLLMNR_TTL_VALUE					300000
  86:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsLLMNR_FLAGS_IS_REPONSE  			0x8000
  87:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  88:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* NBNS constants. */
  89:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_TTL_VALUE					3600 /* 1 hour valid */
  90:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_TYPE_NET_BIOS				0x0020
  91:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_CLASS_IN					0x01
  92:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_NAME_FLAGS					0x6000
  93:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_ENCODED_NAME_LENGTH			32
  94:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  95:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* If the queried NBNS name matches with the device's name,
  96:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** the query will be responded to with these flags: */
  97:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsNBNS_QUERY_RESPONSE_FLAGS	( 0x8500 )
  98:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
  99:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* Flag DNS parsing errors in situations where an IPv4 address is the return
 100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** type. */
 101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #define dnsPARSE_ERROR					  0UL
 102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
 104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Create a socket and bind it to the standard DNS port number.  Return the
 105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * the created socket - or NULL if the socket could not be created or bound.
 106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
 107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static Socket_t prvCreateDNSSocket( void );
 108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
 110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Create the DNS message in the zero copy buffer passed in the first parameter.
 111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
 112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static size_t prvCreateDNSMessage( uint8_t *pucUDPPayloadBuffer, const char *pcHostName, TickType_t
 113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
 115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Simple routine that jumps over the NAME field of a resource record.
 116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
 117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static uint8_t *prvSkipNameField( uint8_t *pucByte, size_t xSourceLen );
 118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
 120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Process a response packet from a DNS server.
 121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
 122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static uint32_t prvParseDNSReply( uint8_t *pucUDPPayloadBuffer, size_t xBufferLength, TickType_t xI
 123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
 125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * Prepare and send a message to a DNS server.  'xReadTimeOut_ms' will be passed as
 126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * zero, in case the user has supplied a call-back function.
 127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
 128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static uint32_t prvGetHostByName( const char *pcHostName, TickType_t xIdentifier, TickType_t xReadT
 129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*
 131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  * The NBNS and the LLMNR protocol share this reply function.
 132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c ****  */
 133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ( ipconfigUSE_NBNS == 1 ) || ( ipconfigUSE_LLMNR == 1 ) )
 134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void prvReplyDNSMessage( NetworkBufferDescriptor_t *pxNetworkBuffer, BaseType_t lNetLength 
 135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
 136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_NBNS == 1 )
 138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static portINLINE void prvTreatNBNS( uint8_t *pucUDPPayloadBuffer, size_t xBufferLength, uint32_t 
 139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_NBNS */
 140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS_CACHE == 1 )
 142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static uint8_t *prvReadNameField( uint8_t *pucByte, size_t xSourceLen, char *pcName, size_t xLen )
 143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void prvProcessDNSCache( const char *pcName, uint32_t *pulIP, uint32_t ulTTL, BaseType_t xL
 144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	typedef struct xDNS_CACHE_TABLE_ROW
 146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulIPAddress;		/* The IP address of an ARP cache entry. */
 148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		char pcName[ ipconfigDNS_CACHE_NAME_LENGTH ];  /* The name of the host */
 149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulTTL; /* Time-to-Live (in seconds) from the DNS server. */
 150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulTimeWhenAddedInSeconds;
 151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	} DNSCacheRow_t;
 152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static DNSCacheRow_t xDNSCache[ ipconfigDNS_CACHE_ENTRIES ];
 154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_DNS_CACHE == 1 */
 155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	const MACAddress_t xLLMNR_MacAdress = { { 0x01, 0x00, 0x5e, 0x00, 0x00, 0xfc } };
 158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif	/* ipconfigUSE_LLMNR == 1 */
 159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "pack_struct_start.h"
 163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** struct xDNSMessage
 164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usIdentifier;
 166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usFlags;
 167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usQuestions;
 168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usAnswers;
 169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usAuthorityRRs;
 170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usAdditionalRRs;
 171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "pack_struct_end.h"
 173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** typedef struct xDNSMessage DNSMessage_t;
 174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* A DNS query consists of a header, as described in 'struct xDNSMessage'
 176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** It is followed by 1 or more queries, each one consisting of a name and a tail,
 177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** with two fields: type and class
 178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** */
 179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "pack_struct_start.h"
 180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** struct xDNSTail
 181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usType;
 183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usClass;
 184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "pack_struct_end.h"
 186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** typedef struct xDNSTail DNSTail_t;
 187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /* DNS answer record header. */
 189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "pack_struct_start.h"
 190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** struct xDNSAnswerRecord
 191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usType;
 193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usClass;
 194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t ulTTL;
 195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usDataLength;
 196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #include "pack_struct_end.h"
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** typedef struct xDNSAnswerRecord DNSAnswerRecord_t;
 199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#include "pack_struct_start.h"
 203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	struct xLLMNRAnswer
 204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucNameCode;
 206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucNameOffset;	/* The name is not repeated in the answer, only the offset is given with "0
 207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usType;
 208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usClass;
 209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulTTL;
 210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usDataLength;
 211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulIPAddress;
 212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#include "pack_struct_end.h"
 214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	typedef struct xLLMNRAnswer LLMNRAnswer_t;
 215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_LLMNR == 1 */
 217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_NBNS == 1 )
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#include "pack_struct_start.h"
 221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	struct xNBNSRequest
 222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usRequestId;
 224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usFlags;
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t ulRequestCount;
 226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usAnswerRSS;
 227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usAuthRSS;
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usAdditionalRSS;
 229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucNameSpace;
 230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucName[ dnsNBNS_ENCODED_NAME_LENGTH ];
 231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucNameZero;
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usType;
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usClass;
 234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#include "pack_struct_end.h"
 236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	typedef struct xNBNSRequest NBNSRequest_t;
 237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#include "pack_struct_start.h"
 239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	struct xNBNSAnswer
 240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usType;
 242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usClass;
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulTTL;
 244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usDataLength;
 245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usNbFlags;		/* NetBIOS flags 0x6000 : IP-address, big-endian */
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint32_t ulIPAddress;
 247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#include "pack_struct_end.h"
 249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	typedef struct xNBNSAnswer NBNSAnswer_t;
 250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_NBNS == 1 */
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS_CACHE == 1 )
 256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t FreeRTOS_dnslookup( const char *pcHostName )
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t ulIPAddress = 0UL;
 259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		prvProcessDNSCache( pcHostName, &ulIPAddress, 0, pdTRUE );
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return ulIPAddress;
 261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_DNS_CACHE == 1 */
 263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigDNS_USE_CALLBACKS != 0 )
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	typedef struct xDNS_Callback {
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		TickType_t xRemaningTime;		/* Timeout in ms */
 269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FOnDNSEvent pCallbackFunction;	/* Function to be called when the address has been found or when a
 270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		TimeOut_t xTimeoutState;
 271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		void *pvSearchID;
 272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		struct xLIST_ITEM xListItem;
 273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		char pcName[ 1 ];
 274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	} DNSCallback_t;
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static List_t xCallbackList;
 277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Define FreeRTOS_gethostbyname() as a normal blocking call. */
 279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t FreeRTOS_gethostbyname( const char *pcHostName )
 280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return FreeRTOS_gethostbyname_a( pcHostName, ( FOnDNSEvent ) NULL, ( void* )NULL, 0 );
 282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/*-----------------------------------------------------------*/
 284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Initialise the list of call-back structures. */
 286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	void vDNSInitialise( void );
 287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	void vDNSInitialise( void )
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		vListInitialise( &xCallbackList );
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/*-----------------------------------------------------------*/
 292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Iterate through the list of call-back structures and remove
 294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	old entries which have reached a timeout.
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	As soon as the list hase become empty, the DNS timer will be stopped
 296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	In case pvSearchID is supplied, the user wants to cancel a DNS request
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	*/
 298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	void vDNSCheckCallBack( void *pvSearchID );
 299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	void vDNSCheckCallBack( void *pvSearchID )
 300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	const ListItem_t *pxIterator;
 302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	const MiniListItem_t* xEnd = ( const MiniListItem_t* )listGET_END_MARKER( &xCallbackList );
 303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		vTaskSuspendAll();
 305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( xEnd );
 307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				 pxIterator != ( const ListItem_t * ) xEnd;
 308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				  )
 309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				DNSCallback_t *pxCallback = ( DNSCallback_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Move to the next item because we might remove this item */
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator );
 313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( ( pvSearchID != NULL ) && ( pvSearchID == pxCallback->pvSearchID ) )
 314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					uxListRemove( &pxCallback->xListItem );
 316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vPortFree( pxCallback );
 317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else if( xTaskCheckForTimeOut( &pxCallback->xTimeoutState, &pxCallback->xRemaningTime ) != pdFA
 319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxCallback->pCallbackFunction( pxCallback->pcName, pxCallback->pvSearchID, 0 );
 321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					uxListRemove( &pxCallback->xListItem );
 322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vPortFree( ( void * ) pxCallback );
 323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xTaskResumeAll();
 327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( listLIST_IS_EMPTY( &xCallbackList ) )
 329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			vIPSetDnsTimerEnableState( pdFALSE );
 331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/*-----------------------------------------------------------*/
 334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	void FreeRTOS_gethostbyname_cancel( void *pvSearchID )
 336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* _HT_ Should better become a new API call to have the IP-task remove the callback */
 338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		vDNSCheckCallBack( pvSearchID );
 339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/*-----------------------------------------------------------*/
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* FreeRTOS_gethostbyname_a() was called along with callback parameters.
 343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	Store them in a list for later reference. */
 344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void vDNSSetCallBack( const char *pcHostName, void *pvSearchID, FOnDNSEvent pCallbackFuncti
 345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void vDNSSetCallBack( const char *pcHostName, void *pvSearchID, FOnDNSEvent pCallbackFuncti
 346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		size_t lLength = strlen( pcHostName );
 348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		DNSCallback_t *pxCallback = ( DNSCallback_t * )pvPortMalloc( sizeof( *pxCallback ) + lLength );
 349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Translate from ms to number of clock ticks. */
 351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xTimeout /= portTICK_PERIOD_MS;
 352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( pxCallback != NULL )
 353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( listLIST_IS_EMPTY( &xCallbackList ) )
 355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* This is the first one, start the DNS timer to check for timeouts */
 357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				vIPReloadDNSTimer( FreeRTOS_min_uint32( 1000U, xTimeout ) );
 358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			strcpy( pxCallback->pcName, pcHostName );
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pxCallback->pCallbackFunction = pCallbackFunction;
 361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pxCallback->pvSearchID = pvSearchID;
 362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pxCallback->xRemaningTime = xTimeout;
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			vTaskSetTimeOutState( &pxCallback->xTimeoutState );
 364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			listSET_LIST_ITEM_OWNER( &( pxCallback->xListItem ), ( void* ) pxCallback );
 365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			listSET_LIST_ITEM_VALUE( &( pxCallback->xListItem ), xIdentifier );
 366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			vTaskSuspendAll();
 367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				vListInsertEnd( &xCallbackList, &pxCallback->xListItem );
 369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			xTaskResumeAll();
 371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/*-----------------------------------------------------------*/
 374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* A DNS reply was received, see if there is any matching entry and
 376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	call the handler. */
 377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void vDNSDoCallback( TickType_t xIdentifier, const char *pcName, uint32_t ulIPAddress );
 378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void vDNSDoCallback( TickType_t xIdentifier, const char *pcName, uint32_t ulIPAddress )
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		const ListItem_t *pxIterator;
 381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		const MiniListItem_t* xEnd = ( const MiniListItem_t* )listGET_END_MARKER( &xCallbackList );
 382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		vTaskSuspendAll();
 384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( xEnd );
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				 pxIterator != ( const ListItem_t * ) xEnd;
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				 pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator ) )
 388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( listGET_LIST_ITEM_VALUE( pxIterator ) == xIdentifier )
 390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					DNSCallback_t *pxCallback = ( DNSCallback_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxCallback->pCallbackFunction( pcName, pxCallback->pvSearchID, ulIPAddress );
 393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					uxListRemove( &pxCallback->xListItem );
 394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vPortFree( pxCallback );
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( listLIST_IS_EMPTY( &xCallbackList ) )
 396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						vIPSetDnsTimerEnableState( pdFALSE );
 398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					break;
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xTaskResumeAll();
 404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif	/* ipconfigDNS_USE_CALLBACKS != 0 */
 407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigDNS_USE_CALLBACKS == 0 )
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t FreeRTOS_gethostbyname( const char *pcHostName )
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #else
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t FreeRTOS_gethostbyname_a( const char *pcHostName, FOnDNSEvent pCallback, void *pvSearchID,
 413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulIPAddress = 0UL;
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** TickType_t xReadTimeOut_ms = ipconfigSOCK_DEFAULT_RECEIVE_BLOCK_TIME;
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** TickType_t xIdentifier = 0;
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* If the supplied hostname is IP address, convert it to uint32_t
 420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	and return. */
 421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#if( ipconfigINCLUDE_FULL_INET_ADDR == 1 )
 422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		ulIPAddress = FreeRTOS_inet_addr( pcHostName );
 424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#endif /* ipconfigINCLUDE_FULL_INET_ADDR == 1 */
 426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* If a DNS cache is used then check the cache before issuing another DNS
 428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	request. */
 429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#if( ipconfigUSE_DNS_CACHE == 1 )
 430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( ulIPAddress == 0UL )
 432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			ulIPAddress = FreeRTOS_dnslookup( pcHostName );
 434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( ulIPAddress != 0 )
 435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				FreeRTOS_debug_printf( ( "FreeRTOS_gethostbyname: found '%s' in cache: %lxip\n", pcHostName, ul
 437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* prvGetHostByName will be called to start a DNS lookup */
 441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#endif /* ipconfigUSE_DNS_CACHE == 1 */
 445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Generate a unique identifier. */
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( 0 == ulIPAddress )
 448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xIdentifier = ( TickType_t )ipconfigRAND32( );
 450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#if( ipconfigDNS_USE_CALLBACKS != 0 )
 453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( pCallback != NULL )
 455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( ulIPAddress == 0UL )
 457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* The user has provided a callback function, so do not block on recvfrom() */
 459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( 0 != xIdentifier )
 460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xReadTimeOut_ms = 0;
 462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vDNSSetCallBack( pcHostName, pvSearchID, pCallback, xTimeout, ( TickType_t )xIdentifier );
 463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* The IP address is known, do the call-back now. */
 468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pCallback( pcHostName, pvSearchID, ulIPAddress );
 469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#endif
 473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( ( ulIPAddress == 0UL ) && ( 0 != xIdentifier ) )
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		ulIPAddress = prvGetHostByName( pcHostName, xIdentifier, xReadTimeOut_ms );
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return ulIPAddress;
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static uint32_t prvGetHostByName( const char *pcHostName, TickType_t xIdentifier, TickType_t xReadT
 484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** struct freertos_sockaddr xAddress;
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** Socket_t xDNSSocket;
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulIPAddress = 0UL;
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucUDPPayloadBuffer;
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulAddressLength = sizeof( struct freertos_sockaddr );
 490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** BaseType_t xAttempt;
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** int32_t lBytes;
 492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** size_t xPayloadLength, xExpectedPayloadLength;
 493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** TickType_t xWriteTimeOut_ms = ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME;
 494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	BaseType_t bHasDot = pdFALSE;
 497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_LLMNR == 1 */
 498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* If LLMNR is being used then determine if the host name includes a '.' -
 500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if not then LLMNR can be used as the lookup method. */
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#if( ipconfigUSE_LLMNR == 1 )
 502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		const char *pucPtr;
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( pucPtr = pcHostName; *pucPtr; pucPtr++ )
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( *pucPtr == '.' )
 507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				bHasDot = pdTRUE;
 509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				break;
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	#endif /* ipconfigUSE_LLMNR == 1 */
 514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Two is added at the end for the count of characters in the first
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	subdomain part and the string end byte. */
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xExpectedPayloadLength = sizeof( DNSMessage_t ) + strlen( pcHostName ) + sizeof( uint16_t ) + size
 518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xDNSSocket = prvCreateDNSSocket();
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( xDNSSocket != NULL )
 522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xDNSSocket, 0, FREERTOS_SO_SNDTIMEO, ( void * ) &xWriteTimeOut_ms, sizeof( T
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xDNSSocket, 0, FREERTOS_SO_RCVTIMEO, ( void * ) &xReadTimeOut_ms,  sizeof( T
 525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( xAttempt = 0; xAttempt < ipconfigDNS_REQUEST_ATTEMPTS; xAttempt++ )
 527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* Get a buffer.  This uses a maximum delay, but the delay will be
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			capped to ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS so the return value
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			still needs to be tested. */
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucUDPPayloadBuffer = ( uint8_t * ) FreeRTOS_GetUDPPayloadBuffer( xExpectedPayloadLength, portMA
 532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( pucUDPPayloadBuffer != NULL )
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Create the message in the obtained buffer. */
 536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				xPayloadLength = prvCreateDNSMessage( pucUDPPayloadBuffer, pcHostName, xIdentifier );
 537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				iptraceSENDING_DNS_REQUEST();
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Obtain the DNS server address. */
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				FreeRTOS_GetAddressConfiguration( NULL, NULL, NULL, &ulIPAddress );
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Send the DNS message. */
 544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( bHasDot == pdFALSE )
 546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Use LLMNR addressing. */
 548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					( ( DNSMessage_t * ) pucUDPPayloadBuffer) -> usFlags = 0;
 549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xAddress.sin_addr = ipLLMNR_IP_ADDR;	/* Is in network byte order. */
 550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xAddress.sin_port = FreeRTOS_ntohs( ipLLMNR_PORT );
 551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Use DNS server. */
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xAddress.sin_addr = ulIPAddress;
 557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xAddress.sin_port = dnsDNS_PORT;
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				ulIPAddress = 0UL;
 561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( FreeRTOS_sendto( xDNSSocket, pucUDPPayloadBuffer, xPayloadLength, FREERTOS_ZERO_COPY, &xAdd
 563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Wait for the reply. */
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					lBytes = FreeRTOS_recvfrom( xDNSSocket, &pucUDPPayloadBuffer, 0, FREERTOS_ZERO_COPY, &xAddress
 566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( lBytes > 0 )
 568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* The reply was received.  Process it. */
 570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						ulIPAddress = prvParseDNSReply( pucUDPPayloadBuffer, lBytes, xIdentifier );
 571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* Finished with the buffer.  The zero copy interface
 573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						is being used, so the buffer must be freed by the
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						task. */
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						FreeRTOS_ReleaseUDPPayloadBuffer( ( void * ) pucUDPPayloadBuffer );
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						if( ulIPAddress != 0UL )
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						{
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 							/* All done. */
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 							break;
 581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						}
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
 585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* The message was not sent so the stack will not be
 587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					releasing the zero copy - it must be released here. */
 588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					FreeRTOS_ReleaseUDPPayloadBuffer( ( void * ) pucUDPPayloadBuffer );
 589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Finished with the socket. */
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_closesocket( xDNSSocket );
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return ulIPAddress;
 598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static size_t prvCreateDNSMessage( uint8_t *pucUDPPayloadBuffer, const char *pcHostName, TickType_t
 602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSMessage_t *pxDNSMessageHeader;
 604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucStart, *pucByte;
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSTail_t *pxTail;
 606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static const DNSMessage_t xDefaultPartDNSHeader =
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	0,					/* The identifier will be overwritten. */
 609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	dnsOUTGOING_FLAGS,	/* Flags set for standard query. */
 610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	dnsONE_QUESTION,	/* One question is being asked. */
 611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	0,					/* No replies are included. */
 612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	0,					/* No authorities. */
 613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	0					/* No additional authorities. */
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** };
 615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Copy in the const part of the header. */
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	memcpy( ( void * ) pucUDPPayloadBuffer, ( void * ) &xDefaultPartDNSHeader, sizeof( xDefaultPartDNS
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Write in a unique identifier. */
 620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pxDNSMessageHeader = ( DNSMessage_t * ) pucUDPPayloadBuffer;
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pxDNSMessageHeader->usIdentifier = ( uint16_t ) xIdentifier;
 622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Create the resource record at the end of the header.  First
 624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	find the end of the header. */
 625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pucStart = pucUDPPayloadBuffer + sizeof( xDefaultPartDNSHeader );
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Leave a gap for the first length bytes. */
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pucByte = pucStart + 1;
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Copy in the host name. */
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	strcpy( ( char * ) pucByte, pcHostName );
 632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Mark the end of the string. */
 634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pucByte += strlen( pcHostName );
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	*pucByte = 0x00u;
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Walk the string to replace the '.' characters with byte counts.
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pucStart holds the address of the byte count.  Walking the string
 639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	starts after the byte count position. */
 640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pucByte = pucStart;
 641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	do
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pucByte++;
 645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		while( ( *pucByte != 0x00 ) && ( *pucByte != '.' ) )
 647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucByte++;
 649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Fill in the byte count, then move the pucStart pointer up to
 652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		the found byte position. */
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		*pucStart = ( uint8_t ) ( ( uint32_t ) pucByte - ( uint32_t ) pucStart );
 654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		( *pucStart )--;
 655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pucStart = pucByte;
 657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	} while( *pucByte != 0x00 );
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Finish off the record. */
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pxTail = (DNSTail_t *)( pucByte + 1 );
 663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	vSetField16( pxTail, DNSTail_t, usType, dnsTYPE_A_HOST );	/* Type A: host */
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	vSetField16( pxTail, DNSTail_t, usClass, dnsCLASS_IN );	/* 1: Class IN */
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Return the total size of the generated message, which is the space from
 668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	the last written byte to the beginning of the buffer. */
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return ( ( uint32_t ) pucByte - ( uint32_t ) pucUDPPayloadBuffer + 1 ) + sizeof( *pxTail );
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS_CACHE == 1 )
 674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static uint8_t *prvReadNameField( uint8_t *pucByte, size_t xSourceLen, char *pcName, size_t xDestL
 676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	size_t xNameLen = 0;
 678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	BaseType_t xCount;
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( 0 == xSourceLen )
 681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			return NULL;
 683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Determine if the name is the fully coded name, or an offset to the name
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		elsewhere in the message. */
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( ( *pucByte & dnsNAME_IS_OFFSET ) == dnsNAME_IS_OFFSET )
 688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* Jump over the two byte offset. */
 690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( xSourceLen > sizeof( uint16_t ) )
 691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte += sizeof( uint16_t );
 693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte = NULL;
 697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		else
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 701:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* pucByte points to the full name. Walk over the string. */
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			while( ( NULL != pucByte ) && ( *pucByte != 0x00 ) && ( xSourceLen > 1 ) )
 703:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* If this is not the first time through the loop, then add a
 705:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				separator in the output. */
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( ( xNameLen > 0 ) && ( xNameLen < ( xDestLen - 1 ) ) )
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pcName[ xNameLen++ ] = '.';
 709:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 711:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Process the first/next sub-string. */
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				for( xCount = *(pucByte++), xSourceLen--;
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					 xCount-- && xSourceLen > 1;
 714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					 pucByte++, xSourceLen-- )
 715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( xNameLen < xDestLen - 1 )
 717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pcName[ xNameLen++ ] = *( ( char * )pucByte );
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 720:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					else
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* DNS name is too big for the provided buffer. */
 723:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pucByte = NULL;
 724:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						break;
 725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 726:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 728:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* Confirm that a fully formed name was found. */
 730:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( NULL != pucByte )
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( 0x00 == *pucByte )
 733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pucByte++;
 735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceLen--;
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pcName[ xNameLen++ ] = '\0';
 737:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 740:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pucByte = NULL;
 741:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 743:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 745:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return pucByte;
 746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 747:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif	/* ipconfigUSE_DNS_CACHE == 1 */
 748:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 749:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 750:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static uint8_t *prvSkipNameField( uint8_t *pucByte, size_t xSourceLen )
 751:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
  25              		.loc 1 751 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 752:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	size_t xChunkLength;
 753:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 754:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( 0 == xSourceLen )
  31              		.loc 1 754 0
  32 0000 002051E2 		subs	r2, r1, #0
  33 0004 1400000A 		beq	.L10
 755:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return NULL;
 757:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 758:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 759:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Determine if the name is the fully coded name, or an offset to the name
 760:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	elsewhere in the message. */
 761:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( ( *pucByte & dnsNAME_IS_OFFSET ) == dnsNAME_IS_OFFSET )
  34              		.loc 1 761 0
  35 0008 0030D0E5 		ldrb	r3, [r0]	@ zero_extendqisi2
  36 000c C03003E2 		and	r3, r3, #192
  37 0010 C00053E3 		cmp	r3, #192
  38 0014 0800001A 		bne	.L4
 762:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 763:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Jump over the two byte offset. */
 764:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( xSourceLen > sizeof( uint16_t ) )
  39              		.loc 1 764 0
  40 0018 020052E3 		cmp	r2, #2
  41 001c 0E00009A 		bls	.L10
 765:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 766:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucByte += sizeof( uint16_t );
  42              		.loc 1 766 0
  43 0020 020080E2 		add	r0, r0, #2
  44              	.LVL1:
  45 0024 1EFF2FE1 		bx	lr
  46              	.LVL2:
  47              	.L5:
  48              	.LBB6:
  49              	.LBB7:
 767:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 768:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		else
 769:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 770:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucByte = NULL;
 771:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 772:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 773:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	else
 774:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 775:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* pucByte points to the full name. Walk over the string. */
 776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		while( ( *pucByte != 0x00 ) && ( xSourceLen > 1 ) )
 777:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 778:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			xChunkLength = *pucByte + 1;
  50              		.loc 1 778 0
  51 0028 013083E2 		add	r3, r3, #1
  52              	.LVL3:
 779:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 780:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( xSourceLen > xChunkLength )
  53              		.loc 1 780 0
  54 002c 020053E1 		cmp	r3, r2
  55 0030 0900002A 		bcs	.L10
 781:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 782:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				xSourceLen -= xChunkLength;
  56              		.loc 1 782 0
  57 0034 032042E0 		sub	r2, r2, r3
  58              	.LVL4:
 783:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte += xChunkLength;
  59              		.loc 1 783 0
  60 0038 030080E0 		add	r0, r0, r3
  61              	.LVL5:
  62              	.L4:
 776:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
  63              		.loc 1 776 0
  64 003c 0030D0E5 		ldrb	r3, [r0]	@ zero_extendqisi2
  65 0040 000053E3 		cmp	r3, #0
  66 0044 01005213 		cmpne	r2, #1
  67 0048 0110A083 		movhi	r1, #1
  68 004c 0010A093 		movls	r1, #0
  69 0050 F4FFFF8A 		bhi	.L5
 784:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 785:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 786:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 787:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte = NULL;
 788:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				break;
 789:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 790:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 791:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 792:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Confirm that a fully formed name was found. */
 793:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( NULL != pucByte )
 794:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 795:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( 0x00 == *pucByte )
  70              		.loc 1 795 0
  71 0054 000053E3 		cmp	r3, #0
  72 0058 0100000A 		beq	.L7
  73              	.LVL6:
  74              	.L10:
  75              	.LBE7:
  76              	.LBE6:
 756:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
  77              		.loc 1 756 0
  78 005c 0000A0E3 		mov	r0, #0
  79 0060 1EFF2FE1 		bx	lr
  80              	.LVL7:
  81              	.L7:
  82              	.LBB9:
  83              	.LBB8:
 796:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 797:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte++;
  84              		.loc 1 797 0
  85 0064 010080E2 		add	r0, r0, #1
  86              	.LVL8:
  87 0068 1EFF2FE1 		bx	lr
  88              	.LBE8:
  89              	.LBE9:
  90              		.cfi_endproc
  91              	.LFE30:
  93              		.section	.text.prvParseDNSReply,"ax",%progbits
  94              		.align	2
  95              		.syntax unified
  96              		.arm
  97              		.fpu neon
  99              	prvParseDNSReply:
 100              	.LFB32:
 798:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 799:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 800:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 801:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte = NULL;
 802:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 803:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 804:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 805:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 806:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return pucByte;
 807:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 808:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 809:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 810:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulDNSHandlePacket( NetworkBufferDescriptor_t *pxNetworkBuffer )
 811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 812:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucUDPPayloadBuffer;
 813:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** size_t xPlayloadBufferLength;
 814:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSMessage_t *pxDNSMessageHeader;
 815:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xPlayloadBufferLength = pxNetworkBuffer->xDataLength - sizeof( UDPPacket_t );
 817:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if ( xPlayloadBufferLength < sizeof( DNSMessage_t ) )
 818:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 819:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return pdFAIL;
 820:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 821:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 822:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pucUDPPayloadBuffer = pxNetworkBuffer->pucEthernetBuffer + sizeof( UDPPacket_t );
 823:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pxDNSMessageHeader = ( DNSMessage_t * ) pucUDPPayloadBuffer;
 824:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( pxNetworkBuffer->xDataLength > sizeof( UDPPacket_t ) )
 826:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		prvParseDNSReply( pucUDPPayloadBuffer,
 828:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			xPlayloadBufferLength,
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			( uint32_t )pxDNSMessageHeader->usIdentifier );
 830:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 831:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 832:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* The packet was not consumed. */
 833:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return pdFAIL;
 834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 835:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 836:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 837:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_NBNS == 1 )
 838:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 839:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t ulNBNSHandlePacket (NetworkBufferDescriptor_t *pxNetworkBuffer )
 840:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 841:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	UDPPacket_t *pxUDPPacket = ( UDPPacket_t * ) pxNetworkBuffer->pucEthernetBuffer;
 842:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint8_t *pucUDPPayloadBuffer = pxNetworkBuffer->pucEthernetBuffer + sizeof( UDPPacket_t );
 843:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 844:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( pxNetworkBuffer->xDataLength > sizeof( UDPPacket_t) )
 845:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 846:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			prvTreatNBNS( pucUDPPayloadBuffer,
 847:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						  pxNetworkBuffer->xDataLength - sizeof( UDPPacket_t ),
 848:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						  pxUDPPacket->xIPHeader.ulSourceIPAddress );
 849:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 850:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 851:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* The packet was not consumed. */
 852:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return pdFAIL;
 853:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 854:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 855:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_NBNS */
 856:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 857:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 858:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static uint32_t prvParseDNSReply( uint8_t *pucUDPPayloadBuffer, size_t xBufferLength, TickType_t xI
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
 101              		.loc 1 859 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 264
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              	.LVL9:
 106 0000 F0432DE9 		push	{r4, r5, r6, r7, r8, r9, lr}
 107              		.cfi_def_cfa_offset 28
 108              		.cfi_offset 4, -28
 109              		.cfi_offset 5, -24
 110              		.cfi_offset 6, -20
 111              		.cfi_offset 7, -16
 112              		.cfi_offset 8, -12
 113              		.cfi_offset 9, -8
 114              		.cfi_offset 14, -4
 860:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSMessage_t *pxDNSMessageHeader;
 861:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSAnswerRecord_t *pxDNSAnswerRecord;
 862:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulIPAddress = 0UL;
 115              		.loc 1 862 0
 116 0004 0060A0E3 		mov	r6, #0
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSMessage_t *pxDNSMessageHeader;
 117              		.loc 1 859 0
 118 0008 43DF4DE2 		sub	sp, sp, #268
 119              		.cfi_def_cfa_offset 296
 859:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** DNSMessage_t *pxDNSMessageHeader;
 120              		.loc 1 859 0
 121 000c 0180A0E1 		mov	r8, r1
 122 0010 0050A0E1 		mov	r5, r0
 123 0014 0240A0E1 		mov	r4, r2
 863:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 864:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	char *pcRequestedName = NULL;
 865:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
 866:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucByte;
 867:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** size_t xSourceBytesRemaining;
 868:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint16_t x, usDataLength, usQuestions;
 869:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 870:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint16_t usType = 0, usClass = 0;
 871:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
 872:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS_CACHE == 1 )
 873:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	char pcName[ ipconfigDNS_CACHE_NAME_LENGTH ] = "";
 124              		.loc 1 873 0
 125 0018 0610A0E1 		mov	r1, r6
 126              	.LVL10:
 127 001c FA20A0E3 		mov	r2, #250
 128              	.LVL11:
 129 0020 0C008DE2 		add	r0, sp, #12
 130              	.LVL12:
 862:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
 131              		.loc 1 862 0
 132 0024 04608DE5 		str	r6, [sp, #4]
 133              		.loc 1 873 0
 134 0028 08608DE5 		str	r6, [sp, #8]
 135 002c FEFFFFEB 		bl	memset
 136              	.LVL13:
 874:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif
 875:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 876:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Ensure that the buffer is of at least minimal DNS message length. */
 877:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( xBufferLength < sizeof( DNSMessage_t ) )
 137              		.loc 1 877 0
 138 0030 0B0058E3 		cmp	r8, #11
 139 0034 0200008A 		bhi	.L13
 140              	.LVL14:
 141              	.L19:
 878:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 879:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		return dnsPARSE_ERROR;
 142              		.loc 1 879 0
 143 0038 0000A0E3 		mov	r0, #0
 144              	.LVL15:
 145              	.L12:
 880:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 881:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	else
 882:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 883:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xSourceBytesRemaining = xBufferLength;
 884:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 885:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 886:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Parse the DNS message header. */
 887:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pxDNSMessageHeader = ( DNSMessage_t * ) pucUDPPayloadBuffer;
 888:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 889:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( pxDNSMessageHeader->usIdentifier == ( uint16_t ) xIdentifier )
 890:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 891:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Start at the first byte after the header. */
 892:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pucByte = pucUDPPayloadBuffer + sizeof( DNSMessage_t );
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xSourceBytesRemaining -= sizeof( DNSMessage_t );
 894:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 895:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Skip any question records. */
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		usQuestions = FreeRTOS_ntohs( pxDNSMessageHeader->usQuestions );
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( x = 0; x < usQuestions; x++ )
 898:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 899:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			#if( ipconfigUSE_LLMNR == 1 )
 900:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 901:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( x == 0 )
 902:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 903:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pcRequestedName = ( char * ) pucByte;
 904:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 905:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 906:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			#endif
 907:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 908:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS_CACHE == 1 )
 909:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( x == 0 )
 910:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 911:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte = prvReadNameField( pucByte,
 912:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											xSourceBytesRemaining,
 913:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											pcName,
 914:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											sizeof( pcName ) );
 915:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 916:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Check for a malformed response. */
 917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( NULL == pucByte )
 918:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 919:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					return dnsPARSE_ERROR;
 920:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 921:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
 922:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 923:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceBytesRemaining = ( pucUDPPayloadBuffer + xBufferLength ) - pucByte;
 924:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 925:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 926:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 927:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_DNS_CACHE */
 928:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 929:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Skip the variable length pcName field. */
 930:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte = prvSkipNameField( pucByte,
 931:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											xSourceBytesRemaining );
 932:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 933:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Check for a malformed response. */
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( NULL == pucByte )
 935:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 936:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					return dnsPARSE_ERROR;
 937:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 938:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
 939:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceBytesRemaining = pucUDPPayloadBuffer + xBufferLength - pucByte;
 941:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 942:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 943:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 944:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* Check the remaining buffer size. */
 945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( xSourceBytesRemaining >= sizeof( uint32_t ) )
 946:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 947:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				#if( ipconfigUSE_LLMNR == 1 )
 948:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 949:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* usChar2u16 returns value in host endianness */
 950:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usType = usChar2u16( pucByte );
 951:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usClass = usChar2u16( pucByte + 2 );
 952:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 953:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				#endif /* ipconfigUSE_LLMNR */
 954:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 955:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Skip the type and class fields. */
 956:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte += sizeof( uint32_t );
 957:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				xSourceBytesRemaining -= sizeof( uint32_t );
 958:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 959:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
 960:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 961:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Malformed response. */
 962:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				return dnsPARSE_ERROR;
 963:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 964:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
 965:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 966:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Search through the answer records. */
 967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxDNSMessageHeader->usAnswers = FreeRTOS_ntohs( pxDNSMessageHeader->usAnswers );
 968:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( ( pxDNSMessageHeader->usFlags & dnsRX_FLAGS_MASK ) == dnsEXPECTED_RX_FLAGS )
 970:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			for( x = 0; x < pxDNSMessageHeader->usAnswers; x++ )
 972:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucByte = prvSkipNameField( pucByte,
 974:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											xSourceBytesRemaining );
 975:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 976:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Check for a malformed response. */
 977:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( NULL == pucByte )
 978:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 979:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					return dnsPARSE_ERROR;
 980:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 981:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
 982:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceBytesRemaining = pucUDPPayloadBuffer + xBufferLength - pucByte;
 984:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 985:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 986:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Is there enough data for an IPv4 A record answer and, if so,
 987:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				is this an A record? */
 988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( xSourceBytesRemaining >= sizeof( DNSAnswerRecord_t ) + sizeof( uint32_t ) &&
 989:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usChar2u16( pucByte ) == dnsTYPE_A_HOST )
 990:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 991:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* This is the required record type and is of sufficient size. */
 992:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxDNSAnswerRecord = ( DNSAnswerRecord_t * )pucByte;
 993:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 994:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Sanity check the data length of an IPv4 answer. */
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( FreeRTOS_ntohs( pxDNSAnswerRecord->usDataLength ) == sizeof( uint32_t ) )
 996:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 997:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* Copy the IP address out of the record. */
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						memcpy( &ulIPAddress,
 999:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 								pucByte + sizeof( DNSAnswerRecord_t ),
1000:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 								sizeof( uint32_t ) );
1001:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1002:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						#if( ipconfigUSE_DNS_CACHE == 1 )
1003:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						{
1004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 							prvProcessDNSCache( pcName, &ulIPAddress, pxDNSAnswerRecord->ulTTL, pdFALSE );
1005:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						}
1006:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						#endif /* ipconfigUSE_DNS_CACHE */
1007:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						#if( ipconfigDNS_USE_CALLBACKS != 0 )
1008:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						{
1009:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 							/* See if any asynchronous call was made to FreeRTOS_gethostbyname_a() */
1010:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 							vDNSDoCallback( ( TickType_t ) pxDNSMessageHeader->usIdentifier, pcName, ulIPAddress );
1011:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						}
1012:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						#endif	/* ipconfigDNS_USE_CALLBACKS != 0 */
1013:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1014:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1015:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pucByte += sizeof( DNSAnswerRecord_t ) + sizeof( uint32_t );
1016:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceBytesRemaining -= ( sizeof( DNSAnswerRecord_t ) + sizeof( uint32_t ) );
1017:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					break;
1018:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else if( xSourceBytesRemaining >= sizeof( DNSAnswerRecord_t ) )
1020:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1021:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* It's not an A record, so skip it. Get the header location
1022:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					and then jump over the header. */
1023:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxDNSAnswerRecord = ( DNSAnswerRecord_t * )pucByte;
1024:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pucByte += sizeof( DNSAnswerRecord_t );
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceBytesRemaining -= sizeof( DNSAnswerRecord_t );
1026:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1027:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Determine the length of the answer data from the header. */
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usDataLength = FreeRTOS_ntohs( pxDNSAnswerRecord->usDataLength );
1029:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1030:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Jump over the answer. */
1031:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( xSourceBytesRemaining >= usDataLength )
1032:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pucByte += usDataLength;
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xSourceBytesRemaining -= usDataLength;
1035:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1036:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					else
1037:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1038:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* Malformed response. */
1039:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						return dnsPARSE_ERROR;
1040:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1041:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1042:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1043:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
1044:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_LLMNR == 1 )
1045:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		else if( usQuestions && ( usType == dnsTYPE_A_HOST ) && ( usClass == dnsCLASS_IN ) )
1046:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
1047:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* If this is not a reply to our DNS request, it might an LLMNR
1048:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			request. */
1049:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( xApplicationDNSQueryHook ( ( pcRequestedName + 1 ) ) )
1050:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1051:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			int16_t usLength;
1052:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			NetworkBufferDescriptor_t *pxNewBuffer = NULL;
1053:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			NetworkBufferDescriptor_t *pxNetworkBuffer = pxUDPPayloadBuffer_to_NetworkBuffer( pucUDPPayloadB
1054:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			LLMNRAnswer_t *pxAnswer;
1055:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1056:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( ( xBufferAllocFixedSize == pdFALSE ) && ( pxNetworkBuffer != NULL ) )
1057:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1058:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				BaseType_t xDataLength = xBufferLength + sizeof( UDPHeader_t ) + sizeof( EthernetHeader_t ) + s
1059:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1060:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* The field xDataLength was set to the length of the UDP payload.
1061:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					The answer (reply) will be longer than the request, so the packet
1062:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					must be duplicaed into a bigger buffer */
1063:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxNetworkBuffer->xDataLength = xDataLength;
1064:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxNewBuffer = pxDuplicateNetworkBufferWithDescriptor( pxNetworkBuffer, xDataLength + 16 );
1065:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( pxNewBuffer != NULL )
1066:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1067:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					BaseType_t xOffset1, xOffset2;
1068:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1069:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xOffset1 = ( BaseType_t ) ( pucByte - pucUDPPayloadBuffer );
1070:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xOffset2 = ( BaseType_t ) ( ( ( uint8_t * ) pcRequestedName ) - pucUDPPayloadBuffer );
1071:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1072:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pxNetworkBuffer = pxNewBuffer;
1073:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pucUDPPayloadBuffer = pxNetworkBuffer->pucEthernetBuffer + ipUDP_PAYLOAD_OFFSET_IPv4;
1074:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1075:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pucByte = pucUDPPayloadBuffer + xOffset1;
1076:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pcRequestedName = ( char * ) ( pucUDPPayloadBuffer + xOffset2 );
1077:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pxDNSMessageHeader = ( DNSMessage_t * ) pucUDPPayloadBuffer;
1078:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1079:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1080:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					else
1081:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1082:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* Just to indicate that the message may not be answered. */
1083:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pxNetworkBuffer = NULL;
1084:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1085:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1086:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( pxNetworkBuffer != NULL )
1087:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1088:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxAnswer = (LLMNRAnswer_t *)pucByte;
1089:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1090:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* We leave 'usIdentifier' and 'usQuestions' untouched */
1091:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxDNSMessageHeader, DNSMessage_t, usFlags, dnsLLMNR_FLAGS_IS_REPONSE );	/* Set th
1092:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxDNSMessageHeader, DNSMessage_t, usAnswers, 1 );	/* Provide a single answer */
1093:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxDNSMessageHeader, DNSMessage_t, usAuthorityRRs, 0 );	/* No authority */
1094:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxDNSMessageHeader, DNSMessage_t, usAdditionalRRs, 0 );	/* No additional info */
1095:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1096:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxAnswer->ucNameCode = dnsNAME_IS_OFFSET;
1097:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxAnswer->ucNameOffset = ( uint8_t )( pcRequestedName - ( char * ) pucUDPPayloadBuffer );
1098:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1099:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, LLMNRAnswer_t, usType, dnsTYPE_A_HOST );	/* Type A: host */
1100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, LLMNRAnswer_t, usClass, dnsCLASS_IN );	/* 1: Class IN */
1101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField32( pxAnswer, LLMNRAnswer_t, ulTTL, dnsLLMNR_TTL_VALUE );
1102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, LLMNRAnswer_t, usDataLength, 4 );
1103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField32( pxAnswer, LLMNRAnswer_t, ulIPAddress, FreeRTOS_ntohl( *ipLOCAL_IP_ADDRESS_POINTER
1104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usLength = ( int16_t ) ( sizeof( *pxAnswer ) + ( size_t ) ( pucByte - pucUDPPayloadBuffer ) );
1106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					prvReplyDNSMessage( pxNetworkBuffer, usLength );
1108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( pxNewBuffer != NULL )
1110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						vReleaseNetworkBufferAndDescriptor( pxNewBuffer );
1112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
1116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_LLMNR == 1 */
1117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
1118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return ulIPAddress;
1120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 146              		.loc 1 1120 0
 147 003c 43DF8DE2 		add	sp, sp, #268
 148              		.cfi_remember_state
 149              		.cfi_def_cfa_offset 28
 150              		@ sp needed
 151 0040 F083BDE8 		pop	{r4, r5, r6, r7, r8, r9, pc}
 152              	.LVL16:
 153              	.L13:
 154              		.cfi_restore_state
 889:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 155              		.loc 1 889 0
 156 0044 0030D5E5 		ldrb	r3, [r5]	@ zero_extendqisi2
 157 0048 7440FFE6 		uxth	r4, r4
 158              	.LVL17:
 159 004c 0120D5E5 		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 160 0050 023483E1 		orr	r3, r3, r2, lsl #8
 161 0054 040053E1 		cmp	r3, r4
 162 0058 9E00001A 		bne	.L16
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( x = 0; x < usQuestions; x++ )
 163              		.loc 1 896 0
 164 005c 0570D5E5 		ldrb	r7, [r5, #5]	@ zero_extendqisi2
 892:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xSourceBytesRemaining -= sizeof( DNSMessage_t );
 165              		.loc 1 892 0
 166 0060 0C4085E2 		add	r4, r5, #12
 167              	.LVL18:
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( x = 0; x < usQuestions; x++ )
 168              		.loc 1 896 0
 169 0064 0430D5E5 		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 893:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 170              		.loc 1 893 0
 171 0068 0C1048E2 		sub	r1, r8, #12
 172              	.LVL19:
 173              	.LBB16:
 174              	.LBB17:
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 175              		.loc 1 718 0
 176 006c 08908DE2 		add	r9, sp, #8
 177              	.LBE17:
 178              	.LBE16:
 896:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( x = 0; x < usQuestions; x++ )
 179              		.loc 1 896 0
 180 0070 073483E1 		orr	r3, r3, r7, lsl #8
 181 0074 2374A0E1 		lsr	r7, r3, #8
 182 0078 037487E1 		orr	r7, r7, r3, lsl #8
 183 007c 7770FFE6 		uxth	r7, r7
 184              	.LVL20:
 185              	.L17:
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 186              		.loc 1 897 0 discriminator 1
 187 0080 070056E1 		cmp	r6, r7
 188 0084 1100001A 		bne	.L30
 967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 189              		.loc 1 967 0
 190 0088 0760D5E5 		ldrb	r6, [r5, #7]	@ zero_extendqisi2
 191              	.LVL21:
 192 008c 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 193              		.loc 1 969 0
 194 0090 0320D5E5 		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 967:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 195              		.loc 1 967 0
 196 0094 063483E1 		orr	r3, r3, r6, lsl #8
 197 0098 2364A0E1 		lsr	r6, r3, #8
 198 009c 036486E1 		orr	r6, r6, r3, lsl #8
 199 00a0 7660FFE6 		uxth	r6, r6
 200 00a4 2634A0E1 		lsr	r3, r6, #8
 201 00a8 0660C5E5 		strb	r6, [r5, #6]
 202 00ac 0730C5E5 		strb	r3, [r5, #7]
 969:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 203              		.loc 1 969 0
 204 00b0 0230D5E5 		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 205 00b4 023483E1 		orr	r3, r3, r2, lsl #8
 206 00b8 3E3D03E2 		and	r3, r3, #3968
 207 00bc 800053E3 		cmp	r3, #128
 208 00c0 8400001A 		bne	.L16
 209 00c4 0070A0E3 		mov	r7, #0
 210              	.LVL22:
 983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 211              		.loc 1 983 0
 212 00c8 085085E0 		add	r5, r5, r8
 213              	.LVL23:
 214 00cc 4F0000EA 		b	.L31
 215              	.LVL24:
 216              	.L30:
 909:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 217              		.loc 1 909 0
 218 00d0 000056E3 		cmp	r6, #0
 219 00d4 3900001A 		bne	.L18
 220              	.LVL25:
 221              	.LBB20:
 222              	.LBB18:
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 223              		.loc 1 680 0
 224 00d8 000051E3 		cmp	r1, #0
 225 00dc D5FFFF0A 		beq	.L19
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 226              		.loc 1 687 0
 227 00e0 0030D4E5 		ldrb	r3, [r4]	@ zero_extendqisi2
 228 00e4 C03003E2 		and	r3, r3, #192
 229 00e8 C00053E3 		cmp	r3, #192
 230 00ec 0630A011 		movne	r3, r6
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 231              		.loc 1 708 0
 232 00f0 2EC0A013 		movne	ip, #46
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 233              		.loc 1 687 0
 234 00f4 1E00001A 		bne	.L26
 690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 235              		.loc 1 690 0
 236 00f8 020051E3 		cmp	r1, #2
 237 00fc CDFFFF9A 		bls	.L19
 692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 238              		.loc 1 692 0
 239 0100 024084E2 		add	r4, r4, #2
 240              	.LVL26:
 241              	.L21:
 242              	.LBE18:
 243              	.LBE20:
 917:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 244              		.loc 1 917 0
 245 0104 000054E3 		cmp	r4, #0
 246              	.L65:
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 247              		.loc 1 934 0
 248 0108 CAFFFF0A 		beq	.L19
 940:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 249              		.loc 1 940 0
 250 010c 081085E0 		add	r1, r5, r8
 251 0110 041041E0 		sub	r1, r1, r4
 252              	.LVL27:
 945:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 253              		.loc 1 945 0
 254 0114 030051E3 		cmp	r1, #3
 255 0118 C6FFFF9A 		bls	.L19
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 256              		.loc 1 897 0
 257 011c 016086E2 		add	r6, r6, #1
 258              	.LVL28:
 956:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				xSourceBytesRemaining -= sizeof( uint32_t );
 259              		.loc 1 956 0
 260 0120 044084E2 		add	r4, r4, #4
 261              	.LVL29:
 957:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 262              		.loc 1 957 0
 263 0124 041041E2 		sub	r1, r1, #4
 264              	.LVL30:
 897:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 265              		.loc 1 897 0
 266 0128 7660FFE6 		uxth	r6, r6
 267              	.LVL31:
 268 012c D3FFFFEA 		b	.L17
 269              	.LVL32:
 270              	.L27:
 271              	.LBB21:
 272              	.LBB19:
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 273              		.loc 1 706 0
 274 0130 000053E3 		cmp	r3, #0
 275 0134 0400000A 		beq	.L22
 276              	.LVL33:
 277 0138 FC0053E3 		cmp	r3, #252
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 278              		.loc 1 708 0
 279 013c 420F8D92 		addls	r0, sp, #264
 280 0140 03008090 		addls	r0, r0, r3
 281 0144 01308392 		addls	r3, r3, #1
 282              	.LVL34:
 283 0148 00C14095 		strbls	ip, [r0, #-256]
 284              	.L22:
 285              	.LVL35:
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					 xCount-- && xSourceLen > 1;
 286              		.loc 1 712 0
 287 014c 011041E2 		sub	r1, r1, #1
 288              	.LVL36:
 289 0150 010084E2 		add	r0, r4, #1
 290 0154 022041E0 		sub	r2, r1, r2
 291              	.LVL37:
 292              	.L23:
 293 0158 020051E1 		cmp	r1, r2
 294 015c 0040A0E1 		mov	r4, r0
 295              	.LVL38:
 296 0160 0100000A 		beq	.L24
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					 pucByte++, xSourceLen-- )
 297              		.loc 1 713 0
 298 0164 010051E3 		cmp	r1, #1
 299 0168 0C00001A 		bne	.L25
 300              	.L24:
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 301              		.loc 1 702 0
 302 016c 000050E3 		cmp	r0, #0
 303 0170 B0FFFF0A 		beq	.L19
 304              	.LVL39:
 305              	.L26:
 306 0174 0020D4E5 		ldrb	r2, [r4]	@ zero_extendqisi2
 307 0178 010051E3 		cmp	r1, #1
 308 017c 00005213 		cmpne	r2, #0
 309 0180 EAFFFF1A 		bne	.L27
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 310              		.loc 1 732 0
 311 0184 000052E3 		cmp	r2, #0
 312 0188 AAFFFF1A 		bne	.L19
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 313              		.loc 1 736 0
 314 018c 421F8DE2 		add	r1, sp, #264
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xSourceLen--;
 315              		.loc 1 734 0
 316 0190 014084E2 		add	r4, r4, #1
 317              	.LVL40:
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 318              		.loc 1 736 0
 319 0194 033081E0 		add	r3, r1, r3
 320              	.LVL41:
 321 0198 002143E5 		strb	r2, [r3, #-256]
 322 019c D8FFFFEA 		b	.L21
 323              	.LVL42:
 324              	.L25:
 716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 325              		.loc 1 716 0
 326 01a0 FC0053E3 		cmp	r3, #252
 327 01a4 A3FFFF8A 		bhi	.L19
 328              	.LVL43:
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 329              		.loc 1 718 0
 330 01a8 00E0D4E5 		ldrb	lr, [r4]	@ zero_extendqisi2
 331 01ac 010080E2 		add	r0, r0, #1
 332              	.LVL44:
 714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 333              		.loc 1 714 0
 334 01b0 011041E2 		sub	r1, r1, #1
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 335              		.loc 1 718 0
 336 01b4 09E0C3E7 		strb	lr, [r3, r9]
 337              	.LVL45:
 338 01b8 013083E2 		add	r3, r3, #1
 339              	.LVL46:
 340 01bc E5FFFFEA 		b	.L23
 341              	.LVL47:
 342              	.L18:
 343              	.LBE19:
 344              	.LBE21:
 930:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											xSourceBytesRemaining );
 345              		.loc 1 930 0
 346 01c0 0400A0E1 		mov	r0, r4
 347 01c4 FEFFFFEB 		bl	prvSkipNameField
 348              	.LVL48:
 934:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 349              		.loc 1 934 0
 350 01c8 004050E2 		subs	r4, r0, #0
 351 01cc CDFFFFEA 		b	.L65
 352              	.LVL49:
 353              	.L33:
1019:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 354              		.loc 1 1019 0
 355 01d0 090051E3 		cmp	r1, #9
 356 01d4 0B00009A 		bls	.L36
 357              	.L34:
 358              	.LVL50:
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 359              		.loc 1 1028 0
 360 01d8 0830D4E5 		ldrb	r3, [r4, #8]	@ zero_extendqisi2
1025:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 361              		.loc 1 1025 0
 362 01dc 0A1041E2 		sub	r1, r1, #10
 363              	.LVL51:
1028:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 364              		.loc 1 1028 0
 365 01e0 0920D4E5 		ldrb	r2, [r4, #9]	@ zero_extendqisi2
 366 01e4 022483E1 		orr	r2, r3, r2, lsl #8
 367              	.LVL52:
 368 01e8 2234A0E1 		lsr	r3, r2, #8
 369 01ec 023483E1 		orr	r3, r3, r2, lsl #8
1031:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 370              		.loc 1 1031 0
 371 01f0 7330FFE6 		uxth	r3, r3
 372 01f4 030051E1 		cmp	r1, r3
 373 01f8 8EFFFF3A 		bcc	.L19
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xSourceBytesRemaining -= usDataLength;
 374              		.loc 1 1033 0
 375 01fc 0A2083E2 		add	r2, r3, #10
 376              	.LVL53:
1034:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 377              		.loc 1 1034 0
 378 0200 031041E0 		sub	r1, r1, r3
 379              	.LVL54:
1033:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xSourceBytesRemaining -= usDataLength;
 380              		.loc 1 1033 0
 381 0204 024084E0 		add	r4, r4, r2
 382              	.LVL55:
 383              	.L36:
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 384              		.loc 1 971 0 discriminator 2
 385 0208 017087E2 		add	r7, r7, #1
 386              	.LVL56:
 387 020c 7770FFE6 		uxth	r7, r7
 388              	.LVL57:
 389              	.L31:
 971:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 390              		.loc 1 971 0 is_stmt 0 discriminator 1
 391 0210 060057E1 		cmp	r7, r6
 392 0214 2F00000A 		beq	.L16
 973:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 											xSourceBytesRemaining );
 393              		.loc 1 973 0 is_stmt 1
 394 0218 0400A0E1 		mov	r0, r4
 395 021c FEFFFFEB 		bl	prvSkipNameField
 396              	.LVL58:
 977:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 397              		.loc 1 977 0
 398 0220 004050E2 		subs	r4, r0, #0
 399 0224 83FFFF0A 		beq	.L19
 400              	.LVL59:
 983:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 401              		.loc 1 983 0
 402 0228 041045E0 		sub	r1, r5, r4
 988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usChar2u16( pucByte ) == dnsTYPE_A_HOST )
 403              		.loc 1 988 0
 404 022c 0D0051E3 		cmp	r1, #13
 405 0230 E6FFFF9A 		bls	.L33
 406              	.LBB22:
 407              	.LBB23:
 408              		.file 2 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_IP_Priv
   1:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
   2:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * FreeRTOS+TCP V2.0.10
   3:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  *
   5:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * the Software without restriction, including without limitation the rights to
   8:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * subject to the following conditions:
  11:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  *
  12:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * The above copyright notice and this permission notice shall be included in all
  13:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * copies or substantial portions of the Software.
  14:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  *
  15:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  *
  22:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * http://aws.amazon.com/freertos
  23:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * http://www.FreeRTOS.org
  24:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
  25:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  26:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #ifndef FREERTOS_IP_PRIVATE_H
  27:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define FREERTOS_IP_PRIVATE_H
  28:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  29:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #ifdef __cplusplus
  30:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern "C" {
  31:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif
  32:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  33:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Application level configuration options. */
  34:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "FreeRTOSIPConfig.h"
  35:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "FreeRTOSIPConfigDefaults.h"
  36:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "FreeRTOS_Sockets.h"
  37:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "IPTraceMacroDefaults.h"
  38:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "FreeRTOS_Stream_Buffer.h"
  39:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if( ipconfigUSE_TCP == 1 )
  40:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#include "FreeRTOS_TCP_WIN.h"
  41:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#include "FreeRTOS_TCP_IP.h"
  42:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif
  43:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  44:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "event_groups.h"
  45:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  46:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xNetworkAddressingParameters
  47:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
  48:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulDefaultIPAddress;
  49:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulNetMask;
  50:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulGatewayAddress;
  51:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulDNSServerAddress;
  52:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulBroadcastAddress;
  53:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } NetworkAddressingParameters_t;
  54:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  55:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern BaseType_t xTCPWindowLoggingLevel;
  56:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  57:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*-----------------------------------------------------------*/
  58:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Protocol headers.                                         */
  59:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*-----------------------------------------------------------*/
  60:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  61:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
  62:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xETH_HEADER
  63:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
  64:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	MACAddress_t xDestinationAddress; /*  0 + 6 = 6  */
  65:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	MACAddress_t xSourceAddress;      /*  6 + 6 = 12 */
  66:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usFrameType;              /* 12 + 2 = 14 */
  67:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
  68:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
  69:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xETH_HEADER EthernetHeader_t;
  70:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  71:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
  72:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xARP_HEADER
  73:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
  74:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usHardwareType;				/*  0 +  2 =  2 */
  75:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usProtocolType;				/*  2 +  2 =  4 */
  76:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucHardwareAddressLength;		/*  4 +  1 =  5 */
  77:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucProtocolAddressLength;		/*  5 +  1 =  6 */
  78:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usOperation;					/*  6 +  2 =  8 */
  79:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	MACAddress_t xSenderHardwareAddress;	/*  8 +  6 = 14 */
  80:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucSenderProtocolAddress[ 4 ];	/* 14 +  4 = 18  */
  81:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	MACAddress_t xTargetHardwareAddress;	/* 18 +  6 = 24  */
  82:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulTargetProtocolAddress;		/* 24 +  4 = 28  */
  83:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
  84:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
  85:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xARP_HEADER ARPHeader_t;
  86:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
  87:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
  88:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xIP_HEADER
  89:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
  90:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucVersionHeaderLength;        /*  0 + 1 =  1 */
  91:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucDifferentiatedServicesCode; /*  1 + 1 =  2 */
  92:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usLength;                    /*  2 + 2 =  4 */
  93:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usIdentification;            /*  4 + 2 =  6 */
  94:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usFragmentOffset;            /*  6 + 2 =  8 */
  95:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucTimeToLive;                 /*  8 + 1 =  9 */
  96:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucProtocol;                   /*  9 + 1 = 10 */
  97:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usHeaderChecksum;            /* 10 + 2 = 12 */
  98:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulSourceIPAddress;           /* 12 + 4 = 16 */
  99:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulDestinationIPAddress;      /* 16 + 4 = 20 */
 100:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 101:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 102:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xIP_HEADER IPHeader_t;
 103:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 104:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 105:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xIGMP_HEADER
 106:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 107:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucVersionType;     /* 0 + 1 = 1 */
 108:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucMaxResponseTime; /* 1 + 1 = 2 */
 109:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usChecksum;       /* 2 + 2 = 4 */
 110:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t usGroupAddress;   /* 4 + 4 = 8 */
 111:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 112:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 113:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xIGMP_HEADER IGMPHeader_t;
 114:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 115:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 116:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xICMP_HEADER
 117:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 118:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucTypeOfMessage;   /* 0 + 1 = 1 */
 119:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucTypeOfService;   /* 1 + 1 = 2 */
 120:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usChecksum;       /* 2 + 2 = 4 */
 121:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usIdentifier;     /* 4 + 2 = 6 */
 122:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usSequenceNumber; /* 6 + 2 = 8 */
 123:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 124:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 125:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xICMP_HEADER ICMPHeader_t;
 126:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 127:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 128:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xUDP_HEADER
 129:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 130:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usSourcePort;      /* 0 + 2 = 2 */
 131:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usDestinationPort; /* 2 + 2 = 4 */
 132:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usLength;          /* 4 + 2 = 6 */
 133:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usChecksum;        /* 6 + 2 = 8 */
 134:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 135:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 136:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xUDP_HEADER UDPHeader_t;
 137:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 138:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 139:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xTCP_HEADER
 140:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 141:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usSourcePort;		/* +  2 =  2 */
 142:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usDestinationPort;	/* +  2 =  4 */
 143:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulSequenceNumber;	/* +  4 =  8 */
 144:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulAckNr;   	 	/* +  4 = 12 */
 145:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t  ucTCPOffset;		/* +  1 = 13 */
 146:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t  ucTCPFlags;		/* +  1 = 14 */
 147:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usWindow;			/* +  2 = 15 */
 148:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usChecksum;		/* +  2 = 18 */
 149:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usUrgent;			/* +  2 = 20 */
 150:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if ipconfigUSE_TCP == 1
 151:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* the option data is not a part of the TCP header */
 152:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t  ucOptdata[ipSIZE_TCP_OPTIONS];		/* + 12 = 32 */
 153:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif
 154:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 155:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 156:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xTCP_HEADER TCPHeader_t;
 157:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 158:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 159:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xPSEUDO_HEADER
 160:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 161:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulSourceAddress;
 162:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulDestinationAddress;
 163:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucZeros;
 164:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucProtocol;
 165:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usUDPLength;
 166:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 167:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 168:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xPSEUDO_HEADER PseudoHeader_t;
 169:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 170:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*-----------------------------------------------------------*/
 171:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Nested protocol packets.                                  */
 172:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*-----------------------------------------------------------*/
 173:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 174:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 175:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xARP_PACKET
 176:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 177:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EthernetHeader_t xEthernetHeader;	/*  0 + 14 = 14 */
 178:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	ARPHeader_t xARPHeader;			/* 14 + 28 = 42 */
 179:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 180:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 181:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xARP_PACKET ARPPacket_t;
 182:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 183:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 184:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xIP_PACKET
 185:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 186:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EthernetHeader_t xEthernetHeader;
 187:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	IPHeader_t xIPHeader;
 188:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 189:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 190:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xIP_PACKET IPPacket_t;
 191:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 192:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 193:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xICMP_PACKET
 194:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 195:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EthernetHeader_t xEthernetHeader;
 196:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	IPHeader_t xIPHeader;
 197:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	ICMPHeader_t xICMPHeader;
 198:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 199:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 200:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xICMP_PACKET ICMPPacket_t;
 201:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 202:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 203:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xUDP_PACKET
 204:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 205:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EthernetHeader_t xEthernetHeader; /*  0 + 14 = 14 */
 206:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	IPHeader_t xIPHeader;             /* 14 + 20 = 34 */
 207:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	UDPHeader_t xUDPHeader;           /* 34 +  8 = 42 */
 208:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 209:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 210:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xUDP_PACKET UDPPacket_t;
 211:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 212:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 213:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xTCP_PACKET
 214:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 215:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EthernetHeader_t xEthernetHeader; /*  0 + 14 = 14 */
 216:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	IPHeader_t xIPHeader;             /* 14 + 20 = 34 */
 217:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	TCPHeader_t xTCPHeader;           /* 34 + 32 = 66 */
 218:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 219:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 220:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xTCP_PACKET TCPPacket_t;
 221:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 222:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef union XPROT_PACKET
 223:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 224:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	ARPPacket_t xARPPacket;
 225:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	TCPPacket_t xTCPPacket;
 226:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	UDPPacket_t xUDPPacket;
 227:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	ICMPPacket_t xICMPPacket;
 228:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } ProtocolPacket_t;
 229:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 230:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 231:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* The maximum UDP payload length. */
 232:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipMAX_UDP_PAYLOAD_LENGTH ( ( ipconfigNETWORK_MTU - ipSIZE_OF_IPv4_HEADER ) - ipSIZE_OF_UDP_
 233:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 234:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef enum
 235:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 236:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eReleaseBuffer = 0,		/* Processing the frame did not find anything to do - just release the buffer
 237:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eProcessBuffer,			/* An Ethernet frame has a valid address - continue process its contents. */
 238:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eReturnEthernetFrame,	/* The Ethernet frame contains an ARP or ICMP packet that can be returned to
 239:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eFrameConsumed			/* Processing the Ethernet packet contents resulted in the payload being sent to 
 240:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } eFrameProcessingResult_t;
 241:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 242:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef enum
 243:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 244:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eNoEvent = -1,
 245:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eNetworkDownEvent,		/* 0: The network interface has been lost and/or needs [re]connecting. */
 246:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eNetworkRxEvent,		/* 1: The network interface has queued a received Ethernet frame. */
 247:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eARPTimerEvent,			/* 2: The ARP timer expired. */
 248:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eStackTxEvent,			/* 3: The software stack has queued a packet to transmit. */
 249:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eDHCPEvent,				/* 4: Process the DHCP state machine. */
 250:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eTCPTimerEvent,			/* 5: See if any TCP socket needs attention. */
 251:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eTCPAcceptEvent,		/* 6: Client API FreeRTOS_accept() waiting for client connections. */
 252:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eTCPNetStat,			/* 7: IP-task is asked to produce a netstat listing. */
 253:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSocketBindEvent,		/* 8: Send a message to the IP-task to bind a socket to a port. */
 254:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSocketCloseEvent,		/* 9: Send a message to the IP-task to close a socket. */
 255:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSocketSelectEvent,		/*10: Send a message to the IP-task for select(). */
 256:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSocketSignalEvent,		/*11: A socket must be signalled. */
 257:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } eIPEvent_t;
 258:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 259:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct IP_TASK_COMMANDS
 260:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 261:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eIPEvent_t eEventType;
 262:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	void *pvData;
 263:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } IPStackEvent_t;
 264:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 265:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipBROADCAST_IP_ADDRESS 0xffffffffUL
 266:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 267:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Offset into the Ethernet frame that is used to temporarily store information
 268:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** on the fragmentation status of the packet being sent.  The value is important,
 269:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** as it is past the location into which the destination address will get placed. */
 270:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipFRAGMENTATION_PARAMETERS_OFFSET		( 6 )
 271:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipSOCKET_OPTIONS_OFFSET					( 6 )
 272:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 273:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Only used when outgoing fragmentation is being used (FreeRTOSIPConfig.h
 274:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** setting. */
 275:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipGET_UDP_PAYLOAD_OFFSET_FOR_FRAGMENT( usFragmentOffset ) ( ( ( usFragmentOffset ) == 0 ) ?
 276:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 277:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* The offset into a UDP packet at which the UDP data (payload) starts. */
 278:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipUDP_PAYLOAD_OFFSET_IPv4	( sizeof( UDPPacket_t ) )
 279:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 280:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* The offset into an IP packet into which the IP data (payload) starts. */
 281:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipIP_PAYLOAD_OFFSET		( sizeof( IPPacket_t ) )
 282:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 283:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_start.h"
 284:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** struct xUDP_IP_FRAGMENT_PARAMETERS
 285:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 286:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucSocketOptions;
 287:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucPadFor16BitAlignment;
 288:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usFragmentedPacketOffset;
 289:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usFragmentLength;
 290:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usPayloadChecksum;
 291:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 292:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #include "pack_struct_end.h"
 293:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct xUDP_IP_FRAGMENT_PARAMETERS IPFragmentParameters_t;
 294:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 295:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if( ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN )
 296:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 297:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* Ethernet frame types. */
 298:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_FRAME_TYPE	( 0x0608U )
 299:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipIPv4_FRAME_TYPE	( 0x0008U )
 300:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 301:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* ARP related definitions. */
 302:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_PROTOCOL_TYPE				( 0x0008U )
 303:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_HARDWARE_TYPE_ETHERNET	( 0x0100U )
 304:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_REQUEST					( 0x0100U )
 305:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_REPLY						( 0x0200U )
 306:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 307:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #else
 308:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 309:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* Ethernet frame types. */
 310:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_FRAME_TYPE	( 0x0806U )
 311:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipIPv4_FRAME_TYPE	( 0x0800U )
 312:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 313:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* ARP related definitions. */
 314:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_PROTOCOL_TYPE ( 0x0800U )
 315:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_HARDWARE_TYPE_ETHERNET ( 0x0001U )
 316:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_REQUEST ( 0x0001 )
 317:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ipARP_REPLY ( 0x0002 )
 318:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 319:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif /* ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN */
 320:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 321:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 322:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* For convenience, a MAC address of all zeros and another of all 0xffs are
 323:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** defined const for quick reference. */
 324:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern const MACAddress_t xBroadcastMACAddress; /* all 0xff's */
 325:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern uint16_t usPacketIdentifier;
 326:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 327:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Define a default UDP packet header (declared in FreeRTOS_UDP_IP.c) */
 328:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef union xUDPPacketHeader
 329:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 330:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucBytes[24];
 331:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint32_t ulWords[6];
 332:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } UDPPacketHeader_t;
 333:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern UDPPacketHeader_t xDefaultPartUDPPacketHeader;
 334:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 335:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Structure that stores the netmask, gateway address and DNS server addresses. */
 336:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern NetworkAddressingParameters_t xNetworkAddressing;
 337:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 338:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Structure that stores the defaults for netmask, gateway address and DNS.
 339:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** These values will be copied to 'xNetworkAddressing' in case DHCP is not used,
 340:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** and also in case DHCP does not lead to a confirmed request. */
 341:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern NetworkAddressingParameters_t xDefaultAddressing;
 342:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 343:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* True when BufferAllocation_1.c was included, false for BufferAllocation_2.c */
 344:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** extern const BaseType_t xBufferAllocFixedSize;
 345:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 346:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Defined in FreeRTOS_Sockets.c */
 347:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if ( ipconfigUSE_TCP == 1 )
 348:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	extern List_t xBoundTCPSocketsList;
 349:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif
 350:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 351:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* The local IP address is accessed from within xDefaultPartUDPPacketHeader,
 352:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** rather than duplicated in its own variable. */
 353:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipLOCAL_IP_ADDRESS_POINTER ( ( uint32_t * ) &( xDefaultPartUDPPacketHeader.ulWords[ 20u / s
 354:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 355:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* The local MAC address is accessed from within xDefaultPartUDPPacketHeader,
 356:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** rather than duplicated in its own variable. */
 357:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipLOCAL_MAC_ADDRESS ( &xDefaultPartUDPPacketHeader.ucBytes[0] )
 358:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 359:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* ICMP packets are sent using the same function as UDP packets.  The port
 360:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** number is used to distinguish between the two, as 0 is an invalid UDP port. */
 361:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define ipPACKET_CONTAINS_ICMP_DATA					( 0 )
 362:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 363:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* For now, the lower 8 bits in 'xEventBits' will be reserved for the above
 364:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** socket events. */
 365:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define SOCKET_EVENT_BIT_COUNT   8
 366:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 367:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define vSetField16( pxBase, xType, xField, usValue ) \
 368:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** { \
 369:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	( ( uint8_t* )( pxBase ) ) [ offsetof( xType, xField ) + 0 ] = ( uint8_t ) ( ( usValue ) >> 8 ); \
 370:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	( ( uint8_t* )( pxBase ) ) [ offsetof( xType, xField ) + 1 ] = ( uint8_t ) ( ( usValue ) & 0xff );
 371:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 372:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 373:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define vSetField32( pxBase, xType, xField, ulValue ) \
 374:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** { \
 375:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	( (uint8_t*)( pxBase ) ) [ offsetof( xType, xField ) + 0 ] = ( uint8_t )   ( ( ulValue ) >> 24 ); 
 376:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	( (uint8_t*)( pxBase ) ) [ offsetof( xType, xField ) + 1 ] = ( uint8_t ) ( ( ( ulValue ) >> 16 ) &
 377:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	( (uint8_t*)( pxBase ) ) [ offsetof( xType, xField ) + 2 ] = ( uint8_t ) ( ( ( ulValue ) >> 8 ) & 
 378:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	( (uint8_t*)( pxBase ) ) [ offsetof( xType, xField ) + 3 ] = ( uint8_t )   ( ( ulValue ) & 0xff );
 379:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 380:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 381:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define vFlip_16( left, right ) \
 382:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	do { \
 383:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t tmp = (left); \
 384:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		(left) = (right); \
 385:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		(right) = tmp; \
 386:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	} while (0)
 387:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 388:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #define vFlip_32( left, right ) \
 389:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	do { \
 390:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint32_t tmp = (left); \
 391:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		(left) = (right); \
 392:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		(right) = tmp; \
 393:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	} while (0)
 394:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 395:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #ifndef ARRAY_SIZE
 396:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#define ARRAY_SIZE(x)	(BaseType_t)(sizeof(x)/sizeof(x)[0])
 397:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif
 398:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 399:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 400:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * A version of FreeRTOS_GetReleaseNetworkBuffer() that can be called from an
 401:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * interrupt.  If a non zero value is returned, then the calling ISR should
 402:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * perform a context switch before exiting the ISR.
 403:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 404:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** BaseType_t FreeRTOS_ReleaseFreeNetworkBufferFromISR( void );
 405:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 406:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 407:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Create a message that contains a command to initialise the network interface.
 408:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * This is used during initialisation, and at any time the network interface
 409:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * goes down thereafter.  The network interface hardware driver is responsible
 410:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * for sending the message that contains the network interface down command/
 411:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * event.
 412:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  *
 413:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Only use the FreeRTOS_NetworkDownFromISR() version if the function is to be
 414:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * called from an interrupt service routine.  If FreeRTOS_NetworkDownFromISR()
 415:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * returns a non-zero value then a context switch should be performed ebfore
 416:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * the interrupt is exited.
 417:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 418:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** void FreeRTOS_NetworkDown( void );
 419:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** BaseType_t FreeRTOS_NetworkDownFromISR( void );
 420:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 421:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 422:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Processes incoming ARP packets.
 423:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 424:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** eFrameProcessingResult_t eARPProcessPacket( ARPPacket_t * const pxARPFrame );
 425:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 426:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 427:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Inspect an Ethernet frame to see if it contains data that the stack needs to
 428:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * process.  eProcessBuffer is returned if the frame should be processed by the
 429:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * stack.  eReleaseBuffer is returned if the frame should be discarded.
 430:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 431:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** eFrameProcessingResult_t eConsiderFrameForProcessing( const uint8_t * const pucEthernetBuffer );
 432:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 433:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 434:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Return the checksum generated over xDataLengthBytes from pucNextData.
 435:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 436:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** uint16_t usGenerateChecksum( uint32_t ulSum, const uint8_t * pucNextData, size_t uxDataLengthBytes 
 437:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 438:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* Socket related private functions. */
 439:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 440:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /* 
 441:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * The caller must ensure that pxNetworkBuffer->xDataLength is the UDP packet 
 442:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * payload size (excluding packet headers) and that the packet in pucEthernetBuffer 
 443:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * is at least the size of UDPPacket_t. 
 444:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 445:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** BaseType_t xProcessReceivedUDPPacket( NetworkBufferDescriptor_t *pxNetworkBuffer, uint16_t usPort )
 446:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 447:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 448:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Initialize the socket list data structures for TCP and UDP. 
 449:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 450:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** BaseType_t vNetworkSocketsInit( void );
 451:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 452:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 453:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Returns pdTRUE if the IP task has been created and is initialised.  Otherwise
 454:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * returns pdFALSE.
 455:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 456:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** BaseType_t xIPIsNetworkTaskReady( void );
 457:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 458:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if( ipconfigSOCKET_HAS_USER_WAKE_CALLBACK == 1 )
 459:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	struct XSOCKET;
 460:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	typedef void (*SocketWakeupCallback_t)( struct XSOCKET * pxSocket );
 461:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif
 462:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 463:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if( ipconfigUSE_TCP == 1 )
 464:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 465:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/*
 466:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * Actually a user thing, but because xBoundTCPSocketsList, let it do by the
 467:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * IP-task
 468:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 */
 469:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	void vTCPNetStat( void );
 470:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 471:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/*
 472:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * At least one socket needs to check for timeouts
 473:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 */
 474:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	TickType_t xTCPTimerCheck( BaseType_t xWillSleep );
 475:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 476:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* Every TCP socket has a buffer space just big enough to store
 477:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	the last TCP header received.
 478:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	As a reference of this field may be passed to DMA, force the
 479:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	alignment to 8 bytes. */
 480:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	typedef union
 481:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	{
 482:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		struct
 483:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		{
 484:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			/* Increase the alignment of this union by adding a 64-bit variable. */
 485:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint64_t ullAlignmentWord;
 486:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		} a;
 487:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		struct
 488:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		{
 489:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			/* The next field only serves to give 'ucLastPacket' a correct
 490:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			alignment of 8 + 2.  See comments in FreeRTOS_IP.h */
 491:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint8_t ucFillPacket[ ipconfigPACKET_FILLER_SIZE ];
 492:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint8_t ucLastPacket[ sizeof( TCPPacket_t ) ];
 493:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		} u;
 494:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	} LastTCPPacket_t;
 495:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 496:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/*
 497:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * Note that the values of all short and long integers in these structs
 498:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * are being stored in the native-endian way
 499:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * Translation should take place when accessing any structure which defines
 500:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * network packets, such as IPHeader_t and TCPHeader_t
 501:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 */
 502:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	typedef struct TCPSOCKET
 503:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	{
 504:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint32_t ulRemoteIP;		/* IP address of remote machine */
 505:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t usRemotePort;		/* Port on remote machine */
 506:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		struct {
 507:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			/* Most compilers do like bit-flags */
 508:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint32_t
 509:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bMssChange : 1,		/* This socket has seen a change in MSS */
 510:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bPassAccept : 1,	/* when true, this socket may be returned in a call to accept() */
 511:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bPassQueued : 1,	/* when true, this socket is an orphan until it gets connected
 512:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 									 * Why an orphan? Because it may not be returned in a accept() call until it
 513:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 									 * gets the state eESTABLISHED */
 514:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bReuseSocket : 1,	/* When a listening socket gets a connection, do not create a new instance bu
 515:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bCloseAfterSend : 1,/* As soon as the last byte has been transmitted, finalise the connection
 516:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 									 * Useful in e.g. FTP connections, where the last data bytes are sent along with the FIN f
 517:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bUserShutdown : 1,	/* User requesting a graceful shutdown */
 518:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bCloseRequested : 1,/* Request to finalise the connection */
 519:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bLowWater : 1,		/* high-water level has been reached. Cleared as soon as 'rx-count < lo-water' 
 520:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bWinChange : 1,		/* The value of bLowWater has changed, must send a window update */
 521:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bSendKeepAlive : 1,	/* When this flag is true, a TCP keep-alive message must be send */
 522:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bWaitKeepAlive : 1,	/* When this flag is true, a TCP keep-alive reply is expected */
 523:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bConnPrepared : 1,	/* Connecting socket: Message has been prepared */
 524:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				#if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 525:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 					bConnPassed : 1,	/* Connecting socket: Socket has been passed in a successful select()  */
 526:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				#endif /* ipconfigSUPPORT_SELECT_FUNCTION */
 527:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bFinAccepted : 1,	/* This socket has received (or sent) a FIN and accepted it */
 528:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bFinSent : 1,		/* We've sent out a FIN */
 529:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bFinRecv : 1,		/* We've received a FIN from our peer */
 530:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bFinAcked : 1,		/* Our FIN packet has been acked */
 531:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bFinLast : 1,		/* The last ACK (after FIN and FIN+ACK) has been sent or will be sent by the pee
 532:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bRxStopped : 1,		/* Application asked to temporarily stop reception */
 533:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bMallocError : 1,	/* There was an error allocating a stream */
 534:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 				bWinScaling : 1;	/* A TCP-Window Scaling option was offered and accepted in the SYN phase. */
 535:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		} bits;
 536:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint32_t ulHighestRxAllowed;
 537:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 								/* The highest sequence number that we can receive at any moment */
 538:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t usTimeout;		/* Time (in ticks) after which this socket needs attention */
 539:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t usCurMSS;		/* Current Maximum Segment Size */
 540:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t usInitMSS;		/* Initial maximum segment Size */
 541:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t usChildCount;	/* In case of a listening socket: number of connections on this port numbe
 542:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint16_t usBacklog;		/* In case of a listening socket: maximum number of concurrent connections o
 543:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint8_t ucRepCount;		/* Send repeat count, for retransmissions
 544:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 								 * This counter is separate from the xmitCount in the
 545:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 								 * TCP win segments */
 546:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint8_t ucTCPState;		/* TCP state: see eTCP_STATE */
 547:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		struct XSOCKET *pxPeerSocket;	/* for server socket: child, for child socket: parent */
 548:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#if( ipconfigTCP_KEEP_ALIVE == 1 )
 549:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint8_t ucKeepRepCount;
 550:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			TickType_t xLastAliveTime;
 551:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#endif /* ipconfigTCP_KEEP_ALIVE */
 552:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#if( ipconfigTCP_HANG_PROTECTION == 1 )
 553:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			TickType_t xLastActTime;
 554:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#endif /* ipconfigTCP_HANG_PROTECTION */
 555:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		size_t uxLittleSpace;
 556:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		size_t uxEnoughSpace;
 557:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		size_t uxRxStreamSize;
 558:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		size_t uxTxStreamSize;
 559:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		StreamBuffer_t *rxStream;
 560:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		StreamBuffer_t *txStream;
 561:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#if( ipconfigUSE_TCP_WIN == 1 )
 562:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			NetworkBufferDescriptor_t *pxAckMessage;
 563:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#endif /* ipconfigUSE_TCP_WIN */
 564:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		/* Buffer space to store the last TCP header received. */
 565:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		LastTCPPacket_t xPacket;
 566:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint8_t tcpflags;		/* TCP flags */
 567:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#if( ipconfigUSE_TCP_WIN != 0 )
 568:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint8_t ucMyWinScaleFactor;
 569:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint8_t ucPeerWinScaleFactor;
 570:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#endif
 571:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#if( ipconfigUSE_CALLBACKS == 1 )
 572:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			FOnTCPReceive_t pxHandleReceive;	/*
 573:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 										 		 * In case of a TCP socket:
 574:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 										 		 * typedef void (* FOnTCPReceive_t) (Socket_t xSocket, void *pData, size_t xLength );
 575:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 										 		 */
 576:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			FOnTCPSent_t pxHandleSent;
 577:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			FOnConnected_t pxHandleConnected;	/* Actually type: typedef void (* FOnConnected_t) (Socket_t xS
 578:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#endif /* ipconfigUSE_CALLBACKS */
 579:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint32_t ulWindowSize;		/* Current Window size advertised by peer */
 580:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		uint32_t ulRxCurWinSize;	/* Constantly changing: this is the current size available for data rece
 581:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		size_t uxRxWinSize;	/* Fixed value: size of the TCP reception window */
 582:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		size_t uxTxWinSize;	/* Fixed value: size of the TCP transmit window */
 583:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 584:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		TCPWindow_t xTCPWindow;
 585:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	} IPTCPSocket_t;
 586:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 587:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif /* ipconfigUSE_TCP */
 588:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 589:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct UDPSOCKET
 590:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 591:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	List_t xWaitingPacketsList;	/* Incoming packets */
 592:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#if( ipconfigUDP_MAX_RX_PACKETS > 0 )
 593:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		UBaseType_t uxMaxPackets; /* Protection: limits the number of packets buffered per socket */
 594:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#endif /* ipconfigUDP_MAX_RX_PACKETS */
 595:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#if( ipconfigUSE_CALLBACKS == 1 )
 596:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		FOnUDPReceive_t pxHandleReceive;	/*
 597:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 											 * In case of a UDP socket:
 598:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 											 * typedef void (* FOnUDPReceive_t) (Socket_t xSocket, void *pData, size_t xLength, stru
 599:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 											 */
 600:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		FOnUDPSent_t pxHandleSent;
 601:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#endif /* ipconfigUSE_CALLBACKS */
 602:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } IPUDPSocket_t;
 603:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 604:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef enum eSOCKET_EVENT {
 605:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_RECEIVE = 0x0001,
 606:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_SEND    = 0x0002,
 607:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_ACCEPT  = 0x0004,
 608:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_CONNECT = 0x0008,
 609:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_BOUND   = 0x0010,
 610:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_CLOSED	= 0x0020,
 611:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_INTR	= 0x0040,
 612:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	eSOCKET_ALL		= 0x007F,
 613:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } eSocketEvent_t;
 614:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 615:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** typedef struct XSOCKET
 616:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 617:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EventBits_t xEventBits;
 618:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	EventGroupHandle_t xEventGroup;
 619:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 620:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	ListItem_t xBoundSocketListItem; /* Used to reference the socket from a bound sockets list. */
 621:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	TickType_t xReceiveBlockTime; /* if recv[to] is called while no data is available, wait this amoun
 622:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	TickType_t xSendBlockTime; /* if send[to] is called while there is not enough space to send, wait 
 623:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 624:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint16_t usLocalPort;		/* Local port on this machine */
 625:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucSocketOptions;
 626:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	uint8_t ucProtocol; /* choice of FREERTOS_IPPROTO_UDP/TCP */
 627:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#if( ipconfigSOCKET_HAS_USER_SEMAPHORE == 1 )
 628:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		SemaphoreHandle_t pxUserSemaphore;
 629:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#endif /* ipconfigSOCKET_HAS_USER_SEMAPHORE */
 630:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#if( ipconfigSOCKET_HAS_USER_WAKE_CALLBACK == 1 )
 631:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		SocketWakeupCallback_t pxUserWakeCallback;
 632:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#endif /* ipconfigSOCKET_HAS_USER_WAKE_CALLBACK */
 633:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 634:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 635:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		struct xSOCKET_SET *pxSocketSet;
 636:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		/* User may indicate which bits are interesting for this socket. */
 637:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		EventBits_t xSelectBits;
 638:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		/* These bits indicate the events which have actually occurred.
 639:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		They are maintained by the IP-task */
 640:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		EventBits_t xSocketBits;
 641:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	#endif /* ipconfigSUPPORT_SELECT_FUNCTION */
 642:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* TCP/UDP specific fields: */
 643:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* Before accessing any member of this structure, it should be confirmed */
 644:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/* that the protocol corresponds with the type of structure */
 645:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 646:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	union
 647:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	{
 648:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		IPUDPSocket_t xUDP;
 649:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#if( ipconfigUSE_TCP == 1 )
 650:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			IPTCPSocket_t xTCP;
 651:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			/* Make sure that xTCP is 8-bytes aligned by
 652:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			declaring a 64-bit variable in the same union */
 653:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			uint64_t ullTCPAlignment;
 654:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 		#endif /* ipconfigUSE_TCP */
 655:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	} u;
 656:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** } FreeRTOS_Socket_t;
 657:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 658:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #if( ipconfigUSE_TCP == 1 )
 659:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	/*
 660:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * Lookup a TCP socket, using a multiple matching: both port numbers and
 661:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 * return IP address.
 662:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	 */
 663:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	FreeRTOS_Socket_t *pxTCPSocketLookup( uint32_t ulLocalIP, UBaseType_t uxLocalPort, uint32_t ulRemo
 664:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 665:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** #endif /* ipconfigUSE_TCP */
 666:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 667:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 668:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Look up a local socket by finding a match with the local port.
 669:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 670:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** FreeRTOS_Socket_t *pxUDPSocketLookup( UBaseType_t uxLocalPort );
 671:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 672:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 673:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Called when the application has generated a UDP packet to send.
 674:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 675:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** void vProcessGeneratedUDPPacket( NetworkBufferDescriptor_t * const pxNetworkBuffer );
 676:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 677:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 678:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Calculate the upper-layer checksum
 679:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Works both for UDP, ICMP and TCP packages
 680:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * bOut = true: checksum will be set in outgoing packets
 681:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * bOut = false: checksum will be calculated for incoming packets
 682:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  *     returning 0xffff means: checksum was correct
 683:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 684:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** uint16_t usGenerateProtocolChecksum( const uint8_t * const pucEthernetBuffer, size_t uxBufferLength
 685:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 686:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 687:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * An Ethernet frame has been updated (maybe it was an ARP request or a PING
 688:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * request?) and is to be sent back to its source.
 689:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 690:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** void vReturnEthernetFrame( NetworkBufferDescriptor_t * pxNetworkBuffer, BaseType_t xReleaseAfterSen
 691:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 692:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 693:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * The internal version of bind()
 694:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * If 'ulInternal' is true, it is called by the driver
 695:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * The TCP driver needs to bind a socket at the moment a listening socket
 696:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * creates a new connected socket
 697:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 698:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** BaseType_t vSocketBind( FreeRTOS_Socket_t *pxSocket, struct freertos_sockaddr * pxAddress, size_t u
 699:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 700:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 701:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Internal function to add streaming data to a TCP socket. If ulIn == true,
 702:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * data will be added to the rxStream, otherwise to the tXStream.  Normally data
 703:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * will be written with ulOffset == 0, meaning: at the end of the FIFO.  When
 704:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * packet come in out-of-order, an offset will be used to put it in front and
 705:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * the head will not change yet.
 706:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 707:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** int32_t lTCPAddRxdata(FreeRTOS_Socket_t *pxSocket, size_t uxOffset, const uint8_t *pcData, uint32_t
 708:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 709:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 710:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Currently called for any important event.
 711:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 712:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** void vSocketWakeUpUser( FreeRTOS_Socket_t *pxSocket );
 713:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 714:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** /*
 715:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  * Some helping function, their meaning should be clear
 716:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h ****  */
 717:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** static portINLINE uint32_t ulChar2u32 (const uint8_t *apChr);
 718:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** static portINLINE uint32_t ulChar2u32 (const uint8_t *apChr)
 719:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 720:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	return  ( ( ( uint32_t )apChr[0] ) << 24) |
 721:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			( ( ( uint32_t )apChr[1] ) << 16) |
 722:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			( ( ( uint32_t )apChr[2] ) << 8) |
 723:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			( ( ( uint32_t )apChr[3] ) );
 724:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** }
 725:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 
 726:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** static portINLINE uint16_t usChar2u16 (const uint8_t *apChr);
 727:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** static portINLINE uint16_t usChar2u16 (const uint8_t *apChr)
 728:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** {
 729:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 	return ( uint16_t )
 730:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			( ( ( ( uint32_t )apChr[0] ) << 8) |
 409              		.loc 2 730 0
 410 0234 0020D4E5 		ldrb	r2, [r4]	@ zero_extendqisi2
 731:D:\Work\DeviceTester\amazon-freertos\lib\FreeRTOS-Plus-TCP\include\FreeRTOS_IP_Private.h **** 			  ( ( ( uint32_t )apChr[1] ) ) );
 411              		.loc 2 731 0
 412 0238 0130D4E5 		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 413              	.LBE23:
 414              	.LBE22:
 988:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usChar2u16( pucByte ) == dnsTYPE_A_HOST )
 415              		.loc 1 988 0
 416 023c 023483E1 		orr	r3, r3, r2, lsl #8
 417 0240 010053E3 		cmp	r3, #1
 418 0244 E3FFFF1A 		bne	.L34
 419              	.LVL60:
 995:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 420              		.loc 1 995 0
 421 0248 0820D4E5 		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 422 024c 0930D4E5 		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 423 0250 033482E1 		orr	r3, r2, r3, lsl #8
 424 0254 2324A0E1 		lsr	r2, r3, #8
 425 0258 032482E1 		orr	r2, r2, r3, lsl #8
 426 025c 7220BFE6 		sxth	r2, r2
 427 0260 040052E3 		cmp	r2, #4
 428 0264 1B00001A 		bne	.L16
 998:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 								pucByte + sizeof( DNSAnswerRecord_t ),
 429              		.loc 1 998 0
 430 0268 0A1084E2 		add	r1, r4, #10
 431 026c 04008DE2 		add	r0, sp, #4
 432              	.LVL61:
 433 0270 FEFFFFEB 		bl	memcpy
 434              	.LVL62:
1004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						}
 435              		.loc 1 1004 0
 436 0274 0520D4E5 		ldrb	r2, [r4, #5]	@ zero_extendqisi2
 437 0278 0430D4E5 		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 438              	.LBB24:
 439              	.LBB25:
1121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
1122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_NBNS == 1 )
1124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void prvTreatNBNS( uint8_t *pucUDPPayloadBuffer, size_t xBufferLength, uint32_t ulIPAddress
1126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
1127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint16_t usFlags, usType, usClass;
1128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t *pucSource, *pucTarget;
1129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucByte;
1130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		uint8_t ucNBNSName[ 17 ];
1131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Check for minimum buffer size. */
1133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( xBufferLength < sizeof( NBNSRequest_t ) )
1134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
1135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			return;
1136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
1137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Read the request flags in host endianness. */
1139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		usFlags = usChar2u16( pucUDPPayloadBuffer + offsetof( NBNSRequest_t, usFlags ) );
1140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( ( usFlags & dnsNBNS_FLAGS_OPCODE_MASK ) == dnsNBNS_FLAGS_OPCODE_QUERY )
1142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
1143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			usType  = usChar2u16( pucUDPPayloadBuffer + offsetof( NBNSRequest_t, usType ) );
1144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			usClass = usChar2u16( pucUDPPayloadBuffer + offsetof( NBNSRequest_t, usClass ) );
1145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* Not used for now */
1147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			( void )usClass;
1148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* For NBNS a name is 16 bytes long, written with capitals only.
1149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			Make sure that the copy is terminated with a zero. */
1150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucTarget = ucNBNSName + sizeof(ucNBNSName ) - 2;
1151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucTarget[ 1 ] = '\0';
1152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* Start with decoding the last 2 bytes. */
1154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pucSource = pucUDPPayloadBuffer + ( offsetof( NBNSRequest_t, ucName ) + ( dnsNBNS_ENCODED_NAME_L
1155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			for( ;; )
1157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				ucByte = ( uint8_t ) ( ( ( pucSource[ 0 ] - 0x41 ) << 4 ) | ( pucSource[ 1 ] - 0x41 ) );
1159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Make sure there are no trailing spaces in the name. */
1161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( ( ucByte == ' ' ) && ( pucTarget[ 1 ] == '\0' ) )
1162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					ucByte = '\0';
1164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				*pucTarget = ucByte;
1167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( pucTarget == ucNBNSName )
1169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					break;
1171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucTarget -= 1;
1174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				pucSource -= 2;
1175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			#if( ipconfigUSE_DNS_CACHE == 1 )
1178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( ( usFlags & dnsNBNS_FLAGS_RESPONSE ) != 0 )
1180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* If this is a response from another device,
1182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					add the name to the DNS cache */
1183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					prvProcessDNSCache( ( char * ) ucNBNSName, &ulIPAddress, 0, pdFALSE );
1184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			#else
1187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Avoid compiler warnings. */
1189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				( void ) ulIPAddress;
1190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			#endif /* ipconfigUSE_DNS_CACHE */
1192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( ( ( usFlags & dnsNBNS_FLAGS_RESPONSE ) == 0 ) &&
1194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				( usType == dnsNBNS_TYPE_NET_BIOS ) &&
1195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				( xApplicationDNSQueryHook( ( const char * ) ucNBNSName ) != pdFALSE ) )
1196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			uint16_t usLength;
1198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			DNSMessage_t *pxMessage;
1199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			NBNSAnswer_t *pxAnswer;
1200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Someone is looking for a device with ucNBNSName,
1202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				prepare a positive reply. */
1203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				NetworkBufferDescriptor_t *pxNetworkBuffer = pxUDPPayloadBuffer_to_NetworkBuffer( pucUDPPayload
1204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( ( xBufferAllocFixedSize == pdFALSE ) && ( pxNetworkBuffer != NULL ) )
1206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				NetworkBufferDescriptor_t *pxNewBuffer;
1208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				BaseType_t xDataLength = pxNetworkBuffer->xDataLength + sizeof( UDPHeader_t ) +
1209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					sizeof( EthernetHeader_t ) + sizeof( IPHeader_t );
1210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* The field xDataLength was set to the length of the UDP payload.
1212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					The answer (reply) will be longer than the request, so the packet
1213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					must be duplicated into a bigger buffer */
1214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxNetworkBuffer->xDataLength = xDataLength;
1215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxNewBuffer = pxDuplicateNetworkBufferWithDescriptor( pxNetworkBuffer, xDataLength + 16 );
1216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( pxNewBuffer != NULL )
1217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pucUDPPayloadBuffer = pxNewBuffer->pucEthernetBuffer + sizeof( UDPPacket_t );
1219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pxNetworkBuffer = pxNewBuffer;
1220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					else
1222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* Just prevent that a reply will be sent */
1224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						pxNetworkBuffer = NULL;
1225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Should not occur: pucUDPPayloadBuffer is part of a xNetworkBufferDescriptor */
1229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( pxNetworkBuffer != NULL )
1230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxMessage = (DNSMessage_t *)pucUDPPayloadBuffer;
1232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* As the fields in the structures are not word-aligned, we have to
1234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					copy the values byte-by-byte using macro's vSetField16() and vSetField32() */
1235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxMessage, DNSMessage_t, usFlags, dnsNBNS_QUERY_RESPONSE_FLAGS ); /* 0x8500 */
1236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxMessage, DNSMessage_t, usQuestions, 0 );
1237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxMessage, DNSMessage_t, usAnswers, 1 );
1238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxMessage, DNSMessage_t, usAuthorityRRs, 0 );
1239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxMessage, DNSMessage_t, usAdditionalRRs, 0 );
1240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					pxAnswer = (NBNSAnswer_t *)( pucUDPPayloadBuffer + offsetof( NBNSRequest_t, usType ) );
1242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, NBNSAnswer_t, usType, usType );	/* Type */
1244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, NBNSAnswer_t, usClass, dnsNBNS_CLASS_IN );	/* Class */
1245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField32( pxAnswer, NBNSAnswer_t, ulTTL, dnsNBNS_TTL_VALUE );
1246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, NBNSAnswer_t, usDataLength, 6 ); /* 6 bytes including the length field 
1247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField16( pxAnswer, NBNSAnswer_t, usNbFlags, dnsNBNS_NAME_FLAGS );
1248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					vSetField32( pxAnswer, NBNSAnswer_t, ulIPAddress, FreeRTOS_ntohl( *ipLOCAL_IP_ADDRESS_POINTER 
1249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					usLength = ( uint16_t ) ( offsetof( NBNSRequest_t, usType ) + sizeof( NBNSAnswer_t ) );
1251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					prvReplyDNSMessage( pxNetworkBuffer, usLength );
1253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
1256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
1257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif	/* ipconfigUSE_NBNS */
1259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
1260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** static Socket_t prvCreateDNSSocket( void )
1262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** {
1263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** Socket_t xSocket = NULL;
1264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** struct freertos_sockaddr xAddress;
1265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** BaseType_t xReturn;
1266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** TickType_t xTimeoutTime = pdMS_TO_TICKS( 200 );
1267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* This must be the first time this function has been called.  Create
1269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	the socket. */
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xSocket = FreeRTOS_socket( FREERTOS_AF_INET, FREERTOS_SOCK_DGRAM, FREERTOS_IPPROTO_UDP );
1271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Auto bind the port. */
1273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xAddress.sin_port = 0u;
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xReturn = FreeRTOS_bind( xSocket, &xAddress, sizeof( xAddress ) );
1275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	/* Check the bind was successful, and clean up if not. */
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if( xReturn != 0 )
1278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
1279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_closesocket( xSocket );
1280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		xSocket = NULL;
1281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
1282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	else
1283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
1284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Set the send and receive timeouts. */
1285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xSocket, 0, FREERTOS_SO_RCVTIMEO, ( void * ) &xTimeoutTime, sizeof( TickType
1286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xSocket, 0, FREERTOS_SO_SNDTIMEO, ( void * ) &xTimeoutTime, sizeof( TickType
1287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
1288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	return xSocket;
1290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
1291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
1292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ( ipconfigUSE_NBNS == 1 ) || ( ipconfigUSE_LLMNR == 1 ) )
1294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void prvReplyDNSMessage( NetworkBufferDescriptor_t *pxNetworkBuffer, BaseType_t lNetLength 
1296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
1297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	UDPPacket_t *pxUDPPacket;
1298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	IPHeader_t *pxIPHeader;
1299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	UDPHeader_t *pxUDPHeader;
1300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxUDPPacket = (UDPPacket_t *) pxNetworkBuffer->pucEthernetBuffer;
1302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxIPHeader = &pxUDPPacket->xIPHeader;
1303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxUDPHeader = &pxUDPPacket->xUDPHeader;
1304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* HT: started using defines like 'ipSIZE_OF_xxx' */
1305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxIPHeader->usLength			   = FreeRTOS_htons( lNetLength + ipSIZE_OF_IPv4_HEADER + ipSIZE_OF_UDP_HE
1306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* HT:endian: should not be translated, copying from packet to packet */
1307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxIPHeader->ulDestinationIPAddress = pxIPHeader->ulSourceIPAddress;
1308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxIPHeader->ulSourceIPAddress	   = *ipLOCAL_IP_ADDRESS_POINTER;
1309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxIPHeader->ucTimeToLive		   = ipconfigUDP_TIME_TO_LIVE;
1310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxIPHeader->usIdentification	   = FreeRTOS_htons( usPacketIdentifier );
1311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		usPacketIdentifier++;
1312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxUDPHeader->usLength			   = FreeRTOS_htons( lNetLength + ipSIZE_OF_UDP_HEADER );
1313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		vFlip_16( pxUDPPacket->xUDPHeader.usSourcePort, pxUDPPacket->xUDPHeader.usDestinationPort );
1314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		#if( ipconfigDRIVER_INCLUDED_TX_IP_CHECKSUM == 0 )
1316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
1317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* calculate the IP header checksum */
1318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pxIPHeader->usHeaderChecksum	   = 0x00;
1319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pxIPHeader->usHeaderChecksum	   = usGenerateChecksum( 0UL, ( uint8_t * ) &( pxIPHeader->ucVersio
1320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			pxIPHeader->usHeaderChecksum	   = ~FreeRTOS_htons( pxIPHeader->usHeaderChecksum );
1321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			/* calculate the UDP checksum for outgoing package */
1323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			usGenerateProtocolChecksum( ( uint8_t* ) pxUDPPacket, lNetLength, pdTRUE );
1324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
1325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		#endif
1326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* Important: tell NIC driver how many bytes must be sent */
1328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		pxNetworkBuffer->xDataLength = ( size_t ) ( lNetLength + ipSIZE_OF_IPv4_HEADER + ipSIZE_OF_UDP_HE
1329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* This function will fill in the eth addresses and send the packet */
1331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		vReturnEthernetFrame( pxNetworkBuffer, pdFALSE );
1332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
1333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_NBNS == 1 || ipconfigUSE_LLMNR == 1 */
1335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
1336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #if( ipconfigUSE_DNS_CACHE == 1 )
1338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static void prvProcessDNSCache( const char *pcName, uint32_t *pulIP, uint32_t ulTTL, BaseType_t xL
1340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
1341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	BaseType_t x;
1342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	BaseType_t xFound = pdFALSE;
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t ulCurrentTimeSeconds = ( xTaskGetTickCount() / portTICK_PERIOD_MS ) / 1000;
1344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static BaseType_t xFreeEntry = 0;
1345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		/* For each entry in the DNS cache table. */
1347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		for( x = 0; x < ipconfigDNS_CACHE_ENTRIES; x++ )
1348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
1349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( xDNSCache[ x ].pcName[ 0 ] == 0 )
 440              		.loc 1 1349 0
 441 027c B8509FE5 		ldr	r5, .L66
 442              	.LVL63:
 443              	.LBE25:
 444              	.LBE24:
1004:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						}
 445              		.loc 1 1004 0
 446 0280 023483E1 		orr	r3, r3, r2, lsl #8
 447 0284 0620D4E5 		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 448 0288 0740D4E5 		ldrb	r4, [r4, #7]	@ zero_extendqisi2
 449              	.LVL64:
 450 028c 0570A0E1 		mov	r7, r5
 451              	.LVL65:
 452 0290 023883E1 		orr	r3, r3, r2, lsl #16
 453 0294 044C83E1 		orr	r4, r3, r4, lsl #24
 454              	.LVL66:
 455              	.LBB28:
 456              	.LBB26:
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static BaseType_t xFreeEntry = 0;
 457              		.loc 1 1343 0
 458 0298 FEFFFFEB 		bl	xTaskGetTickCount
 459              	.LVL67:
 460 029c 9C309FE5 		ldr	r3, .L66+4
 461 02a0 900381E0 		umull	r0, r1, r0, r3
 462              		.loc 1 1349 0
 463 02a4 0430D5E5 		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 464 02a8 000053E3 		cmp	r3, #0
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static BaseType_t xFreeEntry = 0;
 465              		.loc 1 1343 0
 466 02ac 2193A0E1 		lsr	r9, r1, #6
 467              	.LVL68:
 468              		.loc 1 1349 0
 469 02b0 0A00000A 		beq	.L35
1350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				break;
1352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( 0 == strcmp( xDNSCache[ x ].pcName, pcName ) )
 470              		.loc 1 1354 0
 471 02b4 08108DE2 		add	r1, sp, #8
 472              	.LVL69:
 473 02b8 040085E2 		add	r0, r5, #4
 474 02bc FEFFFFEB 		bl	strcmp
 475              	.LVL70:
 476 02c0 000050E3 		cmp	r0, #0
 477 02c4 0500001A 		bne	.L35
1355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Is this function called for a lookup or to add/update an IP address? */
1357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( xLookUp != pdFALSE )
1358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					/* Confirm that the record is still fresh. */
1360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( ulCurrentTimeSeconds < ( xDNSCache[ x ].ulTimeWhenAddedInSeconds + FreeRTOS_ntohl( xDNSCac
1361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						*pulIP = xDNSCache[ x ].ulIPAddress;
1363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					else
1365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						/* Age out the old cached record. */
1367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xDNSCache[ x ].pcName[ 0 ] = 0;
1368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
1369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				else
1371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ x ].ulIPAddress = *pulIP;
 478              		.loc 1 1372 0
 479 02c8 04309DE5 		ldr	r3, [sp, #4]
1373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ x ].ulTTL = ulTTL;
 480              		.loc 1 1373 0
 481 02cc 044185E5 		str	r4, [r5, #260]
1374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ x ].ulTimeWhenAddedInSeconds = ulCurrentTimeSeconds;
 482              		.loc 1 1374 0
 483 02d0 089185E5 		str	r9, [r5, #264]
 484              	.LVL71:
1372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ x ].ulTTL = ulTTL;
 485              		.loc 1 1372 0
 486 02d4 003085E5 		str	r3, [r5]
 487              	.LVL72:
 488              	.L16:
 489              	.LBE26:
 490              	.LBE28:
1119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 491              		.loc 1 1119 0
 492 02d8 04009DE5 		ldr	r0, [sp, #4]
 493 02dc 56FFFFEA 		b	.L12
 494              	.LVL73:
 495              	.L35:
 496              	.LBB29:
 497              	.LBB27:
1375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
1376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				xFound = pdTRUE;
1378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				break;
1379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		}
1381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		if( xFound == pdFALSE )
1383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
1384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( xLookUp != pdFALSE )
1385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				*pulIP = 0;
1387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
1388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			else
1389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
1390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				/* Add or update the item. */
1391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				if( strlen( pcName ) < ipconfigDNS_CACHE_NAME_LENGTH )
 498              		.loc 1 1391 0
 499 02e0 08008DE2 		add	r0, sp, #8
 500              	.LVL74:
 501 02e4 FEFFFFEB 		bl	strlen
 502              	.LVL75:
 503 02e8 FD0050E3 		cmp	r0, #253
 504 02ec F9FFFF8A 		bhi	.L16
1392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
1393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					strcpy( xDNSCache[ xFreeEntry ].pcName, pcName );
 505              		.loc 1 1393 0
 506 02f0 4C809FE5 		ldr	r8, .L66+8
 507              	.LVL76:
 508 02f4 436FA0E3 		mov	r6, #268
 509 02f8 08108DE2 		add	r1, sp, #8
 510              	.LVL77:
 511 02fc 005098E5 		ldr	r5, [r8]
 512 0300 960506E0 		mul	r6, r6, r5
1394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ xFreeEntry ].ulIPAddress = *pulIP;
1396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ xFreeEntry ].ulTTL = ulTTL;
1397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ xFreeEntry ].ulTimeWhenAddedInSeconds = ulCurrentTimeSeconds;
1398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
1399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xFreeEntry++;
 513              		.loc 1 1399 0
 514 0304 015085E2 		add	r5, r5, #1
1393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 515              		.loc 1 1393 0
 516 0308 040086E2 		add	r0, r6, #4
 517 030c 000087E0 		add	r0, r7, r0
 518 0310 FEFFFFEB 		bl	strcpy
 519              	.LVL78:
1395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ xFreeEntry ].ulTTL = ulTTL;
 520              		.loc 1 1395 0
 521 0314 04209DE5 		ldr	r2, [sp, #4]
 522 0318 063087E0 		add	r3, r7, r6
1400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( xFreeEntry == ipconfigDNS_CACHE_ENTRIES )
 523              		.loc 1 1400 0
 524 031c 010055E3 		cmp	r5, #1
1396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ xFreeEntry ].ulTimeWhenAddedInSeconds = ulCurrentTimeSeconds;
 525              		.loc 1 1396 0
 526 0320 044183E5 		str	r4, [r3, #260]
1397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 527              		.loc 1 1397 0
 528 0324 089183E5 		str	r9, [r3, #264]
1401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
1402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						xFreeEntry = 0;
 529              		.loc 1 1402 0
 530 0328 0030A003 		moveq	r3, #0
1399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					if( xFreeEntry == ipconfigDNS_CACHE_ENTRIES )
 531              		.loc 1 1399 0
 532 032c 005088E5 		str	r5, [r8]
1395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xDNSCache[ xFreeEntry ].ulTTL = ulTTL;
 533              		.loc 1 1395 0
 534 0330 062087E7 		str	r2, [r7, r6]
 535              		.loc 1 1402 0
 536 0334 00308805 		streq	r3, [r8]
 537 0338 E6FFFFEA 		b	.L16
 538              	.L67:
 539              		.align	2
 540              	.L66:
 541 033c 00000000 		.word	.LANCHOR0
 542 0340 D34D6210 		.word	274877907
 543 0344 00000000 		.word	.LANCHOR1
 544              	.LBE27:
 545              	.LBE29:
 546              		.cfi_endproc
 547              	.LFE32:
 549              		.section	.text.FreeRTOS_dnslookup,"ax",%progbits
 550              		.align	2
 551              		.global	FreeRTOS_dnslookup
 552              		.syntax unified
 553              		.arm
 554              		.fpu neon
 556              	FreeRTOS_dnslookup:
 557              	.LFB25:
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t ulIPAddress = 0UL;
 558              		.loc 1 257 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL79:
 563 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 564              		.cfi_def_cfa_offset 24
 565              		.cfi_offset 4, -24
 566              		.cfi_offset 5, -20
 567              		.cfi_offset 6, -16
 568              		.cfi_offset 7, -12
 569              		.cfi_offset 8, -8
 570              		.cfi_offset 14, -4
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	uint32_t ulIPAddress = 0UL;
 571              		.loc 1 257 0
 572 0004 0050A0E1 		mov	r5, r0
 573              	.LVL80:
 574              	.LBB32:
 575              	.LBB33:
1349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 576              		.loc 1 1349 0
 577 0008 54409FE5 		ldr	r4, .L74
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static BaseType_t xFreeEntry = 0;
 578              		.loc 1 1343 0
 579 000c FEFFFFEB 		bl	xTaskGetTickCount
 580              	.LVL81:
 581 0010 0060A0E1 		mov	r6, r0
 582              	.LVL82:
1349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 583              		.loc 1 1349 0
 584 0014 0400D4E5 		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 585              	.LVL83:
 586 0018 000050E3 		cmp	r0, #0
 587 001c F081BD08 		popeq	{r4, r5, r6, r7, r8, pc}
1354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 588              		.loc 1 1354 0
 589 0020 0510A0E1 		mov	r1, r5
 590 0024 040084E2 		add	r0, r4, #4
 591 0028 FEFFFFEB 		bl	strcmp
 592              	.LVL84:
 593 002c 000050E3 		cmp	r0, #0
 594 0030 0900001A 		bne	.L72
1343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	static BaseType_t xFreeEntry = 0;
 595              		.loc 1 1343 0
 596 0034 2C209FE5 		ldr	r2, .L74+4
 597 0038 043194E5 		ldr	r3, [r4, #260]
 598 003c 966287E0 		umull	r6, r7, r6, r2
 599              	.LVL85:
1360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 600              		.loc 1 1360 0
 601 0040 082194E5 		ldr	r2, [r4, #264]
 602 0044 333FBFE6 		rev	r3, r3
 603 0048 023083E0 		add	r3, r3, r2
 604 004c 270353E1 		cmp	r3, r7, lsr #6
1362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 605              		.loc 1 1362 0
 606 0050 00009485 		ldrhi	r0, [r4]
 607              	.LVL86:
1367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					}
 608              		.loc 1 1367 0
 609 0054 0400C495 		strbls	r0, [r4, #4]
 610 0058 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 611              	.LVL87:
 612              	.L72:
1386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			}
 613              		.loc 1 1386 0
 614 005c 0000A0E3 		mov	r0, #0
 615              	.LVL88:
 616              	.LBE33:
 617              	.LBE32:
 261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** #endif /* ipconfigUSE_DNS_CACHE == 1 */
 618              		.loc 1 261 0
 619 0060 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 620              	.L75:
 621              		.align	2
 622              	.L74:
 623 0064 00000000 		.word	.LANCHOR0
 624 0068 D34D6210 		.word	274877907
 625              		.cfi_endproc
 626              	.LFE25:
 628              		.section	.text.FreeRTOS_gethostbyname,"ax",%progbits
 629              		.align	2
 630              		.global	FreeRTOS_gethostbyname
 631              		.syntax unified
 632              		.arm
 633              		.fpu neon
 635              	FreeRTOS_gethostbyname:
 636              	.LFB26:
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulIPAddress = 0UL;
 637              		.loc 1 414 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 48
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL89:
 642 0000 F04F2DE9 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 643              		.cfi_def_cfa_offset 36
 644              		.cfi_offset 4, -36
 645              		.cfi_offset 5, -32
 646              		.cfi_offset 6, -28
 647              		.cfi_offset 7, -24
 648              		.cfi_offset 8, -20
 649              		.cfi_offset 9, -16
 650              		.cfi_offset 10, -12
 651              		.cfi_offset 11, -8
 652              		.cfi_offset 14, -4
 653 0004 3CD04DE2 		sub	sp, sp, #60
 654              		.cfi_def_cfa_offset 96
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint32_t ulIPAddress = 0UL;
 655              		.loc 1 414 0
 656 0008 0090A0E1 		mov	r9, r0
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			if( ulIPAddress != 0 )
 657              		.loc 1 433 0
 658 000c FEFFFFEB 		bl	FreeRTOS_dnslookup
 659              	.LVL90:
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 660              		.loc 1 447 0
 661 0010 004050E2 		subs	r4, r0, #0
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 662              		.loc 1 417 0
 663 0014 0070A013 		movne	r7, #0
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 664              		.loc 1 447 0
 665 0018 0100001A 		bne	.L77
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 666              		.loc 1 449 0
 667 001c FEFFFFEB 		bl	ulRand
 668              	.LVL91:
 669 0020 0070A0E1 		mov	r7, r0
 670              	.LVL92:
 671              	.L77:
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 672              		.loc 1 474 0
 673 0024 143F6FE1 		clz	r3, r4
 674 0028 000057E3 		cmp	r7, #0
 675 002c A332A0E1 		lsr	r3, r3, #5
 676 0030 0030A003 		moveq	r3, #0
 677 0034 000053E3 		cmp	r3, #0
 678 0038 1B00000A 		beq	.L76
 679              	.LVL93:
 680 003c 103702E3 		movw	r3, #10000
 681              	.LBB40:
 682              	.LBB41:
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** BaseType_t xAttempt;
 683              		.loc 1 489 0
 684 0040 0840A0E3 		mov	r4, #8
 685              	.LVL94:
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucUDPPayloadBuffer;
 686              		.loc 1 487 0
 687 0044 0060A0E3 		mov	r6, #0
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 688              		.loc 1 517 0
 689 0048 0900A0E1 		mov	r0, r9
 690 004c 28308DE5 		str	r3, [sp, #40]
 691              	.LVL95:
 692              	.LBB42:
 693              	.LBB43:
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 694              		.loc 1 1274 0
 695 0050 30A08DE2 		add	r10, sp, #48
 696              	.LBE43:
 697              	.LBE42:
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** BaseType_t xAttempt;
 698              		.loc 1 489 0
 699 0054 20408DE5 		str	r4, [sp, #32]
 493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 700              		.loc 1 493 0
 701 0058 24308DE5 		str	r3, [sp, #36]
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucUDPPayloadBuffer;
 702              		.loc 1 487 0
 703 005c 1C608DE5 		str	r6, [sp, #28]
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 704              		.loc 1 517 0
 705 0060 FEFFFFEB 		bl	strlen
 706              	.LVL96:
 707              	.LBB47:
 708              	.LBB44:
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 709              		.loc 1 1270 0
 710 0064 0210A0E3 		mov	r1, #2
 711              	.LBE44:
 712              	.LBE47:
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 713              		.loc 1 517 0
 714 0068 123080E2 		add	r3, r0, #18
 715 006c 10308DE5 		str	r3, [sp, #16]
 716              	.LVL97:
 717              	.LBB48:
 718              	.LBB45:
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 719              		.loc 1 1270 0
 720 0070 1120A0E3 		mov	r2, #17
1266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 721              		.loc 1 1266 0
 722 0074 C830A0E3 		mov	r3, #200
 723              	.LVL98:
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 724              		.loc 1 1270 0
 725 0078 0100A0E1 		mov	r0, r1
1266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 726              		.loc 1 1266 0
 727 007c 2C308DE5 		str	r3, [sp, #44]
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 728              		.loc 1 1270 0
 729 0080 FEFFFFEB 		bl	FreeRTOS_socket
 730              	.LVL99:
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 731              		.loc 1 1274 0
 732 0084 0420A0E1 		mov	r2, r4
 733 0088 0A10A0E1 		mov	r1, r10
1270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 734              		.loc 1 1270 0
 735 008c 0050A0E1 		mov	r5, r0
 736              	.LVL100:
1273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	xReturn = FreeRTOS_bind( xSocket, &xAddress, sizeof( xAddress ) );
 737              		.loc 1 1273 0
 738 0090 B263CDE1 		strh	r6, [sp, #50]	@ movhi
1274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 739              		.loc 1 1274 0
 740 0094 FEFFFFEB 		bl	FreeRTOS_bind
 741              	.LVL101:
1277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 742              		.loc 1 1277 0
 743 0098 004050E2 		subs	r4, r0, #0
 744 009c 0500000A 		beq	.L79
 745              	.LVL102:
 746              	.L88:
 747              	.LBE45:
 748              	.LBE48:
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 749              		.loc 1 594 0
 750 00a0 0500A0E1 		mov	r0, r5
 751 00a4 FEFFFFEB 		bl	FreeRTOS_closesocket
 752              	.LVL103:
 753              	.L80:
 597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 754              		.loc 1 597 0
 755 00a8 1C409DE5 		ldr	r4, [sp, #28]
 756              	.LVL104:
 757              	.L76:
 758              	.LBE41:
 759              	.LBE40:
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 760              		.loc 1 480 0
 761 00ac 0400A0E1 		mov	r0, r4
 762 00b0 3CD08DE2 		add	sp, sp, #60
 763              		.cfi_remember_state
 764              		.cfi_def_cfa_offset 36
 765              		@ sp needed
 766 00b4 F08FBDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 767              	.LVL105:
 768              	.L79:
 769              		.cfi_restore_state
 770              	.LBB63:
 771              	.LBB62:
 772              	.LBB49:
 773              	.LBB46:
1285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xSocket, 0, FREERTOS_SO_SNDTIMEO, ( void * ) &xTimeoutTime, sizeof( TickType
 774              		.loc 1 1285 0
 775 00b8 0460A0E3 		mov	r6, #4
 776 00bc 2C308DE2 		add	r3, sp, #44
 777 00c0 0420A0E1 		mov	r2, r4
 778 00c4 0410A0E1 		mov	r1, r4
 779 00c8 00608DE5 		str	r6, [sp]
 780 00cc 0500A0E1 		mov	r0, r5
 781              	.LVL106:
 782 00d0 FEFFFFEB 		bl	FreeRTOS_setsockopt
 783              	.LVL107:
1286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 784              		.loc 1 1286 0
 785 00d4 00608DE5 		str	r6, [sp]
 786 00d8 2C308DE2 		add	r3, sp, #44
 787 00dc 0120A0E3 		mov	r2, #1
 788 00e0 0410A0E1 		mov	r1, r4
 789 00e4 0500A0E1 		mov	r0, r5
 790 00e8 FEFFFFEB 		bl	FreeRTOS_setsockopt
 791              	.LVL108:
 792              	.LBE46:
 793              	.LBE49:
 521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 794              		.loc 1 521 0
 795 00ec 000055E3 		cmp	r5, #0
 796 00f0 ECFFFF0A 		beq	.L80
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xDNSSocket, 0, FREERTOS_SO_RCVTIMEO, ( void * ) &xReadTimeOut_ms,  sizeof( T
 797              		.loc 1 523 0
 798 00f4 24308DE2 		add	r3, sp, #36
 799 00f8 0120A0E3 		mov	r2, #1
 800 00fc 0410A0E1 		mov	r1, r4
 801 0100 00608DE5 		str	r6, [sp]
 802 0104 0500A0E1 		mov	r0, r5
 803              	.LBB50:
 804              	.LBB51:
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 805              		.loc 1 621 0
 806 0108 77B0FFE6 		uxth	fp, r7
 807              	.LBE51:
 808              	.LBE50:
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		FreeRTOS_setsockopt( xDNSSocket, 0, FREERTOS_SO_RCVTIMEO, ( void * ) &xReadTimeOut_ms,  sizeof( T
 809              		.loc 1 523 0
 810 010c FEFFFFEB 		bl	FreeRTOS_setsockopt
 811              	.LVL109:
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 812              		.loc 1 524 0
 813 0110 28308DE2 		add	r3, sp, #40
 814 0114 00608DE5 		str	r6, [sp]
 815 0118 0420A0E1 		mov	r2, r4
 816 011c 0410A0E1 		mov	r1, r4
 817 0120 0500A0E1 		mov	r0, r5
 818 0124 FEFFFFEB 		bl	FreeRTOS_setsockopt
 819              	.LVL110:
 820 0128 0230A0E3 		mov	r3, #2
 821 012c 0C308DE5 		str	r3, [sp, #12]
 822              	.LBB57:
 823              	.LBB52:
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 824              		.loc 1 621 0
 825 0130 2B34A0E1 		lsr	r3, fp, #8
 826 0134 14308DE5 		str	r3, [sp, #20]
 827              	.LVL111:
 828              	.L87:
 829              	.LBE52:
 830              	.LBE57:
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 831              		.loc 1 531 0
 832 0138 0010E0E3 		mvn	r1, #0
 833 013c 10009DE5 		ldr	r0, [sp, #16]
 834 0140 FEFFFFEB 		bl	FreeRTOS_GetUDPPayloadBuffer
 835              	.LVL112:
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 836              		.loc 1 533 0
 837 0144 000050E3 		cmp	r0, #0
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 838              		.loc 1 531 0
 839 0148 0040A0E1 		mov	r4, r0
 840 014c 2C008DE5 		str	r0, [sp, #44]
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			{
 841              		.loc 1 533 0
 842 0150 4900000A 		beq	.L82
 843              	.LVL113:
 844              	.LBB58:
 845              	.LBB53:
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 846              		.loc 1 617 0
 847 0154 0C20A0E3 		mov	r2, #12
 848 0158 44119FE5 		ldr	r1, .L103
 849 015c FEFFFFEB 		bl	memcpy
 850              	.LVL114:
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 851              		.loc 1 621 0
 852 0160 1430DDE5 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 853              		.loc 1 628 0
 854 0164 0D6084E2 		add	r6, r4, #13
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 855              		.loc 1 631 0
 856 0168 0910A0E1 		mov	r1, r9
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 857              		.loc 1 621 0
 858 016c 00B0C4E5 		strb	fp, [r4]
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 859              		.loc 1 631 0
 860 0170 0600A0E1 		mov	r0, r6
 625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 861              		.loc 1 625 0
 862 0174 0C8084E2 		add	r8, r4, #12
 863              	.LVL115:
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 864              		.loc 1 621 0
 865 0178 0130C4E5 		strb	r3, [r4, #1]
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 866              		.loc 1 631 0
 867 017c FEFFFFEB 		bl	strcpy
 868              	.LVL116:
 634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	*pucByte = 0x00u;
 869              		.loc 1 634 0
 870 0180 0900A0E1 		mov	r0, r9
 871 0184 FEFFFFEB 		bl	strlen
 872              	.LVL117:
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 873              		.loc 1 635 0
 874 0188 0030A0E3 		mov	r3, #0
 875 018c 0030C6E7 		strb	r3, [r6, r0]
 876              	.LVL118:
 877              	.L84:
 644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 878              		.loc 1 644 0
 879 0190 013088E2 		add	r3, r8, #1
 880              	.LVL119:
 881              	.L83:
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 882              		.loc 1 646 0
 883 0194 0320A0E1 		mov	r2, r3
 884 0198 0110D2E4 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 885 019c 000051E3 		cmp	r1, #0
 886 01a0 2E005113 		cmpne	r1, #46
 887 01a4 3900001A 		bne	.L90
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		( *pucStart )--;
 888              		.loc 1 653 0
 889 01a8 082043E0 		sub	r2, r3, r8
 654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 890              		.loc 1 654 0
 891 01ac 012042E2 		sub	r2, r2, #1
 892 01b0 0020C8E5 		strb	r2, [r8]
 893              	.LVL120:
 894 01b4 0380A0E1 		mov	r8, r3
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 895              		.loc 1 658 0
 896 01b8 0060D3E5 		ldrb	r6, [r3]	@ zero_extendqisi2
 897 01bc 000056E3 		cmp	r6, #0
 898 01c0 F2FFFF1A 		bne	.L84
 899              	.LVL121:
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	vSetField16( pxTail, DNSTail_t, usClass, dnsCLASS_IN );	/* 1: Class IN */
 900              		.loc 1 664 0
 901 01c4 0180A0E3 		mov	r8, #1
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 902              		.loc 1 669 0
 903 01c8 054064E2 		rsb	r4, r4, #5
 904              	.LVL122:
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	vSetField16( pxTail, DNSTail_t, usClass, dnsCLASS_IN );	/* 1: Class IN */
 905              		.loc 1 664 0
 906 01cc 0160C3E5 		strb	r6, [r3, #1]
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** }
 907              		.loc 1 669 0
 908 01d0 034084E0 		add	r4, r4, r3
 909              	.LVL123:
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	vSetField16( pxTail, DNSTail_t, usClass, dnsCLASS_IN );	/* 1: Class IN */
 910              		.loc 1 664 0
 911 01d4 0280C3E5 		strb	r8, [r3, #2]
 912              	.LBE53:
 913              	.LBE58:
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 914              		.loc 1 541 0
 915 01d8 0620A0E1 		mov	r2, r6
 916              	.LBB59:
 917              	.LBB54:
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 918              		.loc 1 665 0
 919 01dc 0360C3E5 		strb	r6, [r3, #3]
 920              	.LBE54:
 921              	.LBE59:
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 922              		.loc 1 541 0
 923 01e0 0610A0E1 		mov	r1, r6
 924              	.LBB60:
 925              	.LBB55:
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 926              		.loc 1 665 0
 927 01e4 0480C3E5 		strb	r8, [r3, #4]
 928              	.LBE55:
 929              	.LBE60:
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 930              		.loc 1 541 0
 931 01e8 0600A0E1 		mov	r0, r6
 932 01ec 1C308DE2 		add	r3, sp, #28
 933              	.LVL124:
 934 01f0 FEFFFFEB 		bl	FreeRTOS_GetAddressConfiguration
 935              	.LVL125:
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xAddress.sin_port = dnsDNS_PORT;
 936              		.loc 1 556 0
 937 01f4 1C309DE5 		ldr	r3, [sp, #28]
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 938              		.loc 1 562 0
 939 01f8 0420A0E1 		mov	r2, r4
 940 01fc 00A08DE5 		str	r10, [sp]
 941 0200 0500A0E1 		mov	r0, r5
 942 0204 2C109DE5 		ldr	r1, [sp, #44]
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					xAddress.sin_port = dnsDNS_PORT;
 943              		.loc 1 556 0
 944 0208 34308DE5 		str	r3, [sp, #52]
 557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 945              		.loc 1 557 0
 946 020c 353CA0E3 		mov	r3, #13568
 947 0210 B233CDE1 		strh	r3, [sp, #50]	@ movhi
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 948              		.loc 1 562 0
 949 0214 0830A0E3 		mov	r3, #8
 950 0218 04308DE5 		str	r3, [sp, #4]
 951 021c 0830A0E1 		mov	r3, r8
 560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 952              		.loc 1 560 0
 953 0220 1C608DE5 		str	r6, [sp, #28]
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				{
 954              		.loc 1 562 0
 955 0224 FEFFFFEB 		bl	FreeRTOS_sendto
 956              	.LVL126:
 957 0228 000050E3 		cmp	r0, #0
 958 022c 1900000A 		beq	.L85
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 959              		.loc 1 565 0
 960 0230 20308DE2 		add	r3, sp, #32
 961 0234 2C108DE2 		add	r1, sp, #44
 962 0238 04308DE5 		str	r3, [sp, #4]
 963 023c 0620A0E1 		mov	r2, r6
 964 0240 00A08DE5 		str	r10, [sp]
 965 0244 0830A0E1 		mov	r3, r8
 966 0248 0500A0E1 		mov	r0, r5
 967 024c FEFFFFEB 		bl	FreeRTOS_recvfrom
 968              	.LVL127:
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 					{
 969              		.loc 1 567 0
 970 0250 001050E2 		subs	r1, r0, #0
 971 0254 080000DA 		ble	.L82
 570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 972              		.loc 1 570 0
 973 0258 0720A0E1 		mov	r2, r7
 974 025c 2C009DE5 		ldr	r0, [sp, #44]
 975              	.LVL128:
 976 0260 FEFFFFEB 		bl	prvParseDNSReply
 977              	.LVL129:
 978 0264 1C008DE5 		str	r0, [sp, #28]
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 
 979              		.loc 1 575 0
 980 0268 2C009DE5 		ldr	r0, [sp, #44]
 981 026c FEFFFFEB 		bl	FreeRTOS_ReleaseUDPPayloadBuffer
 982              	.LVL130:
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 						{
 983              		.loc 1 577 0
 984 0270 1C309DE5 		ldr	r3, [sp, #28]
 985 0274 000053E3 		cmp	r3, #0
 986 0278 88FFFF1A 		bne	.L88
 987              	.L82:
 988              	.LVL131:
 526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 989              		.loc 1 526 0
 990 027c 0C309DE5 		ldr	r3, [sp, #12]
 991 0280 013053E2 		subs	r3, r3, #1
 992 0284 0C308DE5 		str	r3, [sp, #12]
 993              	.LVL132:
 994 0288 84FFFF0A 		beq	.L88
 995 028c A9FFFFEA 		b	.L87
 996              	.LVL133:
 997              	.L90:
 998              	.LBB61:
 999              	.LBB56:
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 		{
 1000              		.loc 1 646 0
 1001 0290 0230A0E1 		mov	r3, r2
 1002              	.LVL134:
 1003 0294 BEFFFFEA 		b	.L83
 1004              	.LVL135:
 1005              	.L85:
 1006              	.LBE56:
 1007              	.LBE61:
 588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 				}
 1008              		.loc 1 588 0
 1009 0298 2C009DE5 		ldr	r0, [sp, #44]
 1010 029c FEFFFFEB 		bl	FreeRTOS_ReleaseUDPPayloadBuffer
 1011              	.LVL136:
 1012 02a0 F5FFFFEA 		b	.L82
 1013              	.L104:
 1014              		.align	2
 1015              	.L103:
 1016 02a4 00000000 		.word	.LANCHOR2
 1017              	.LBE62:
 1018              	.LBE63:
 1019              		.cfi_endproc
 1020              	.LFE26:
 1022              		.section	.text.ulDNSHandlePacket,"ax",%progbits
 1023              		.align	2
 1024              		.global	ulDNSHandlePacket
 1025              		.syntax unified
 1026              		.arm
 1027              		.fpu neon
 1029              	ulDNSHandlePacket:
 1030              	.LFB31:
 811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucUDPPayloadBuffer;
 1031              		.loc 1 811 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              	.LVL137:
 816:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	if ( xPlayloadBufferLength < sizeof( DNSMessage_t ) )
 1036              		.loc 1 816 0
 1037 0000 1C3090E5 		ldr	r3, [r0, #28]
 1038              	.LVL138:
 825:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	{
 1039              		.loc 1 825 0
 1040 0004 350053E3 		cmp	r3, #53
 1041 0008 0900009A 		bls	.L108
 822:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	pxDNSMessageHeader = ( DNSMessage_t * ) pucUDPPayloadBuffer;
 1042              		.loc 1 822 0
 1043 000c 180090E5 		ldr	r0, [r0, #24]
 1044              	.LVL139:
 1045 0010 2A1043E2 		sub	r1, r3, #42
 1046              	.LVL140:
 811:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** uint8_t *pucUDPPayloadBuffer;
 1047              		.loc 1 811 0
 1048 0014 10402DE9 		push	{r4, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 4, -8
 1051              		.cfi_offset 14, -4
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			xPlayloadBufferLength,
 1052              		.loc 1 827 0
 1053 0018 2A0080E2 		add	r0, r0, #42
 1054              	.LVL141:
 829:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 	}
 1055              		.loc 1 829 0
 1056 001c 0030D0E5 		ldrb	r3, [r0]	@ zero_extendqisi2
 1057 0020 0120D0E5 		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 827:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** 			xPlayloadBufferLength,
 1058              		.loc 1 827 0
 1059 0024 022483E1 		orr	r2, r3, r2, lsl #8
 1060 0028 FEFFFFEB 		bl	prvParseDNSReply
 1061              	.LVL142:
 834:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS-Plus-TCP/source\FreeRTOS_DNS.c **** /*-----------------------------------------------------------*/
 1062              		.loc 1 834 0
 1063 002c 0000A0E3 		mov	r0, #0
 1064 0030 1080BDE8 		pop	{r4, pc}
 1065              	.LVL143:
 1066              	.L108:
 1067              		.cfi_def_cfa_offset 0
 1068              		.cfi_restore 4
 1069              		.cfi_restore 14
 1070 0034 0000A0E3 		mov	r0, #0
 1071              	.LVL144:
 1072 0038 1EFF2FE1 		bx	lr
 1073              		.cfi_endproc
 1074              	.LFE31:
 1076              		.section	.text.TEST_FreeRTOS_TCP_prvParseDNSReply,"ax",%progbits
 1077              		.align	2
 1078              		.global	TEST_FreeRTOS_TCP_prvParseDNSReply
 1079              		.syntax unified
 1080              		.arm
 1081              		.fpu neon
 1083              	TEST_FreeRTOS_TCP_prvParseDNSReply:
 1084              	.LFB35:
 1085              		.file 3 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\common\\include/aws_freertos_tcp_test_acc
   1:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** /*
   2:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * Amazon FreeRTOS
   3:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  *
   5:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * the Software without restriction, including without limitation the rights to
   8:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * subject to the following conditions:
  11:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  *
  12:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * The above copyright notice and this permission notice shall be included in all
  13:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * copies or substantial portions of the Software.
  14:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  *
  15:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  *
  22:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * http://aws.amazon.com/freertos
  23:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * http://www.FreeRTOS.org
  24:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  */
  25:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** 
  26:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** /**
  27:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * @file aws_ota_pal_test_access_define.h
  28:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * @brief Function wrappers that access private methods in aws_ota_pal.c.
  29:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  *
  30:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  * Needed for testing private functions.
  31:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****  */
  32:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** 
  33:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** #ifndef _AWS_FREERTOS_TCP_TEST_ACCESS_DNS_DEFINE_H_
  34:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** #define _AWS_FREERTOS_TCP_TEST_ACCESS_DNS_DEFINE_H_
  35:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** 
  36:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** #include "aws_freertos_tcp_test_access_declare.h"
  37:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** 
  38:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** /*-----------------------------------------------------------*/
  39:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** 
  40:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** uint32_t TEST_FreeRTOS_TCP_prvParseDNSReply( uint8_t * pucUDPPayloadBuffer,
  41:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****                                              size_t xBufferLength,
  42:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****                                              TickType_t xIdentifier )
  43:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h **** {
 1086              		.loc 3 43 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              		@ link register save eliminated.
 1091              	.LVL145:
  44:D:\Work\DeviceTester\amazon-freertos\tests\common\include\aws_freertos_tcp_test_access_dns_define.h ****     return prvParseDNSReply( pucUDPPayloadBuffer, xBufferLength, xIdentifier );
 1092              		.loc 3 44 0
 1093 0000 FEFFFFEA 		b	prvParseDNSReply
 1094              	.LVL146:
 1095              		.cfi_endproc
 1096              	.LFE35:
 1098              		.section	.bss.xDNSCache,"aw",%nobits
 1099              		.align	2
 1100              		.set	.LANCHOR0,. + 0
 1103              	xDNSCache:
 1104 0000 00000000 		.space	268
 1104      00000000 
 1104      00000000 
 1104      00000000 
 1104      00000000 
 1105              		.section	.bss.xFreeEntry.72555,"aw",%nobits
 1106              		.align	2
 1107              		.set	.LANCHOR1,. + 0
 1110              	xFreeEntry.72555:
 1111 0000 00000000 		.space	4
 1112              		.section	.rodata.xDefaultPartDNSHeader.72485,"a",%progbits
 1113              		.set	.LANCHOR2,. + 0
 1116              	xDefaultPartDNSHeader.72485:
 1117 0000 0000     		.2byte	0
 1118 0002 0100     		.2byte	1
 1119 0004 0001     		.2byte	256
 1120 0006 0000     		.2byte	0
 1121 0008 0000     		.2byte	0
 1122 000a 0000     		.2byte	0
 1123              		.text
 1124              	.Letext0:
 1125              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1126              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1127              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 1128              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1129              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1130              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 1131              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1132              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1133              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 1134              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 1135              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 1136              		.file 15 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/list.h"
 1137              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1138              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1139              		.file 18 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 1140              		.file 19 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 1141              		.file 20 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 1142              		.file 21 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 1143              		.file 22 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\mcu_vendor\\renesas\\rz_mcu_b
 1144              		.file 23 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_IP.h"
 1145              		.file 24 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_Socket
 1146              		.file 25 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS-Plus-TCP\\include/FreeRTOS_TCP_WI
 1147              		.file 26 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 1148              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 1149              		.file 28 "D:\\Work\\DeviceTester\\amazon-freertos\\tests\\renesas\\rza2m-gr-mango\\common\\config_
DEFINED SYMBOLS
                            *ABS*:00000000 FreeRTOS_DNS.c
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:17     .text.prvSkipNameField:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:22     .text.prvSkipNameField:00000000 prvSkipNameField
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:94     .text.prvParseDNSReply:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:99     .text.prvParseDNSReply:00000000 prvParseDNSReply
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:541    .text.prvParseDNSReply:0000033c $d
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:550    .text.FreeRTOS_dnslookup:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:556    .text.FreeRTOS_dnslookup:00000000 FreeRTOS_dnslookup
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:623    .text.FreeRTOS_dnslookup:00000064 $d
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:629    .text.FreeRTOS_gethostbyname:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:635    .text.FreeRTOS_gethostbyname:00000000 FreeRTOS_gethostbyname
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1016   .text.FreeRTOS_gethostbyname:000002a4 $d
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1023   .text.ulDNSHandlePacket:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1029   .text.ulDNSHandlePacket:00000000 ulDNSHandlePacket
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1077   .text.TEST_FreeRTOS_TCP_prvParseDNSReply:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1083   .text.TEST_FreeRTOS_TCP_prvParseDNSReply:00000000 TEST_FreeRTOS_TCP_prvParseDNSReply
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1099   .bss.xDNSCache:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1103   .bss.xDNSCache:00000000 xDNSCache
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1106   .bss.xFreeEntry.72555:00000000 $d
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1110   .bss.xFreeEntry.72555:00000000 xFreeEntry.72555
C:\Users\a5089698\AppData\Local\Temp\ccYAswiK.s:1116   .rodata.xDefaultPartDNSHeader.72485:00000000 xDefaultPartDNSHeader.72485
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
memcpy
xTaskGetTickCount
strcmp
strlen
strcpy
ulRand
FreeRTOS_socket
FreeRTOS_bind
FreeRTOS_closesocket
FreeRTOS_setsockopt
FreeRTOS_GetUDPPayloadBuffer
FreeRTOS_GetAddressConfiguration
FreeRTOS_sendto
FreeRTOS_recvfrom
FreeRTOS_ReleaseUDPPayloadBuffer
