   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"event_groups.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.xEventGroupCreateStatic,"ax",%progbits
  17              		.align	2
  18              		.global	xEventGroupCreateStatic
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	xEventGroupCreateStatic:
  24              	.LFB0:
  25              		.file 1 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS/event_groups.c"
   1:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*
   2:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * FreeRTOS Kernel V10.1.1
   3:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  *
   5:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * the Software without restriction, including without limitation the rights to
   8:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * subject to the following conditions:
  11:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  *
  12:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * The above copyright notice and this permission notice shall be included in all
  13:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * copies or substantial portions of the Software.
  14:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  *
  15:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  *
  22:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * http://www.FreeRTOS.org
  23:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * http://aws.amazon.com/freertos
  24:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  *
  25:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * 1 tab == 4 spaces!
  26:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  */
  27:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  28:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* Standard includes. */
  29:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #include <stdlib.h>
  30:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  31:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** task.h is included from an application file. */
  34:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  36:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* FreeRTOS includes. */
  37:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #include "FreeRTOS.h"
  38:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #include "task.h"
  39:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #include "timers.h"
  40:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #include "event_groups.h"
  41:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  42:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* Lint e961, e750 and e9021 are suppressed as a MISRA exception justified
  43:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  44:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** for the header files above, but not in this file, in order to generate the
  45:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** correct privileged Vs unprivileged linkage and placement. */
  46:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021 See comment above. */
  47:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  48:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* The following bit fields convey control information in a task's event list
  49:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** item value.  It is important they don't clash with the
  50:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  51:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  52:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  53:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  54:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  55:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  56:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #else
  57:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
  58:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
  59:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
  60:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
  61:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #endif
  62:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  63:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** typedef struct EventGroupDef_t
  64:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
  65:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	EventBits_t uxEventBits;
  66:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
  67:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  68:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  69:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		UBaseType_t uxEventGroupNumber;
  70:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#endif
  71:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  72:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  73:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
  74:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#endif
  75:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** } EventGroup_t;
  76:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  77:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
  78:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  79:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*
  80:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
  81:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
  82:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
  83:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
  84:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
  85:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  * in uxCurrentEventBits.
  86:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c ****  */
  87:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
  88:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  89:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
  90:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  91:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
  92:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  93:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
  94:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
  26              		.loc 1 94 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 13402DE9 		push	{r0, r1, r4, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  95:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	EventGroup_t *pxEventBits;
  96:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
  97:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
  98:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		configASSERT( pxEventGroupBuffer );
  35              		.loc 1 98 0
  36 0004 004050E2 		subs	r4, r0, #0
  37 0008 0200001A 		bne	.L2
  38              	.L3:
  39              		.loc 1 98 0 is_stmt 0 discriminator 1
  40 000c 0110A0E3 		mov	r1, #1
  41 0010 38009FE5 		ldr	r0, .L5
  42              	.LVL1:
  43 0014 FEFFFFEB 		bl	longjmp
  44              	.LVL2:
  45              	.L2:
  46              	.LBB2:
  99:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 100:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		#if( configASSERT_DEFINED == 1 )
 101:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 102:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Sanity check that the size of the structure used to declare a
 103:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			variable of type StaticEventGroup_t equals the size of the real
 104:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			event group structure. */
 105:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			volatile size_t xSize = sizeof( StaticEventGroup_t );
  47              		.loc 1 105 0 is_stmt 1
  48 0018 2030A0E3 		mov	r3, #32
  49 001c 04308DE5 		str	r3, [sp, #4]
 106:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			configASSERT( xSize == sizeof( EventGroup_t ) );
  50              		.loc 1 106 0
  51 0020 04309DE5 		ldr	r3, [sp, #4]
  52 0024 200053E3 		cmp	r3, #32
  53 0028 F7FFFF1A 		bne	.L3
  54              	.LVL3:
  55              	.LBE2:
 107:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		} /*lint !e529 xSize is referenced if configASSERT() is defined. */
 108:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		#endif /* configASSERT_DEFINED */
 109:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 110:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 111:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 !e9087 EventGroup_t and StaticE
 112:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 113:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( pxEventBits != NULL )
 114:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 115:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			pxEventBits->uxEventBits = 0;
  56              		.loc 1 115 0
  57 002c 0400A0E1 		mov	r0, r4
  58              	.LVL4:
  59 0030 0030A0E3 		mov	r3, #0
  60 0034 043080E4 		str	r3, [r0], #4
  61              	.LVL5:
 116:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  62              		.loc 1 116 0
  63 0038 FEFFFFEB 		bl	vListInitialise
  64              	.LVL6:
 117:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 118:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 119:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 120:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 121:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				this event group was created statically in case the event group
 122:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				is later deleted. */
 123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
  65              		.loc 1 123 0
  66 003c 0130A0E3 		mov	r3, #1
 124:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 125:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 127:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 128:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 129:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 130:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 131:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* xEventGroupCreateStatic should only ever be called with
 132:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			pxEventGroupBuffer pointing to a pre-allocated (compile time
 133:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			allocated) StaticEventGroup_t variable. */
 134:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 135:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 136:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 137:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		return pxEventBits;
 138:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
  67              		.loc 1 138 0
  68 0040 0400A0E1 		mov	r0, r4
 123:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
  69              		.loc 1 123 0
  70 0044 1C30C4E5 		strb	r3, [r4, #28]
  71              		.loc 1 138 0
  72 0048 08D08DE2 		add	sp, sp, #8
  73              		.cfi_def_cfa_offset 8
  74              		@ sp needed
  75 004c 1080BDE8 		pop	{r4, pc}
  76              	.LVL7:
  77              	.L6:
  78              		.align	2
  79              	.L5:
  80 0050 28000000 		.word	Unity+40
  81              		.cfi_endproc
  82              	.LFE0:
  84              		.section	.text.xEventGroupCreate,"ax",%progbits
  85              		.align	2
  86              		.global	xEventGroupCreate
  87              		.syntax unified
  88              		.arm
  89              		.fpu neon
  91              	xEventGroupCreate:
  92              	.LFB1:
 139:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 140:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 141:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 142:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 143:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 144:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 145:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 146:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
  93              		.loc 1 146 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 70402DE9 		push	{r4, r5, r6, lr}
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 147:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	EventGroup_t *pxEventBits;
 148:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 149:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Allocate the event group.  Justification for MISRA deviation as
 150:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		follows:  pvPortMalloc() always ensures returned memory blocks are
 151:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		aligned per the requirements of the MCU stack.  In this case
 152:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 153:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		alignment requirements of the EventGroup_t structure - which (if you
 154:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		follow it through) is the alignment requirements of the TickType_t type
 155:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		(EventBits_t being of TickType_t itself).  Therefore, whenever the
 156:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		stack alignment requirements are greater than or equal to the
 157:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		TickType_t alignment requirements the cast is safe.  In other cases,
 158:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		where the natural word size of the architecture is less than
 159:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		sizeof( TickType_t ), the TickType_t variables will be accessed in two
 160:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		or more reads operations, and the alignment requirements is only that
 161:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		of each individual read. */
 162:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) ); /*lint !e9087 !e9079 see
 103              		.loc 1 162 0
 104 0004 2000A0E3 		mov	r0, #32
 105 0008 FEFFFFEB 		bl	pvPortMalloc
 106              	.LVL8:
 163:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 164:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( pxEventBits != NULL )
 107              		.loc 1 164 0
 108 000c 004050E2 		subs	r4, r0, #0
 109 0010 0400000A 		beq	.L7
 165:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 166:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			pxEventBits->uxEventBits = 0;
 110              		.loc 1 166 0
 111 0014 0050A0E3 		mov	r5, #0
 112 0018 0400A0E1 		mov	r0, r4
 113 001c 045080E4 		str	r5, [r0], #4
 114              	.LVL9:
 167:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 115              		.loc 1 167 0
 116 0020 FEFFFFEB 		bl	vListInitialise
 117              	.LVL10:
 168:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 169:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 170:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 171:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 172:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				event group was allocated statically in case the event group is
 173:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				later deleted. */
 174:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 118              		.loc 1 174 0
 119 0024 1C50C4E5 		strb	r5, [r4, #28]
 120              	.L7:
 175:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 176:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 177:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 178:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 179:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 180:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 181:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 182:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED(); /*lint !e9063 Else branch only exists to allow tracing and doe
 183:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 184:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 185:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		return pxEventBits;
 186:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 121              		.loc 1 186 0
 122 0028 0400A0E1 		mov	r0, r4
 123 002c 7080BDE8 		pop	{r4, r5, r6, pc}
 124              		.cfi_endproc
 125              	.LFE1:
 127              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 128              		.align	2
 129              		.global	xEventGroupWaitBits
 130              		.syntax unified
 131              		.arm
 132              		.fpu neon
 134              	xEventGroupWaitBits:
 135              	.LFB3:
 187:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 188:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 189:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 190:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 191:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 193:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 194:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 195:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** BaseType_t xAlreadyYielded;
 196:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 197:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 200:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 201:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 203:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 204:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#endif
 205:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	vTaskSuspendAll();
 207:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 209:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 211:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 213:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 214:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 215:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 216:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 217:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 218:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			already unless this is the only task in the rendezvous. */
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 220:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xTicksToWait = 0;
 222:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 223:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 224:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 226:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 227:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 228:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 229:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 230:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				task's event list item so the kernel knows when a match is
 231:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				found.  Then enter the blocked state. */
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 233:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 234:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 235:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 236:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				warning about uxReturn being returned without being set if the
 237:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				assignment is omitted. */
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				uxReturn = 0;
 239:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 240:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else
 241:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 242:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 243:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				specified - just return the current event bit value. */
 244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 245:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 246:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 247:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 248:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 250:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 252:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 254:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			portYIELD_WITHIN_API();
 256:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 257:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 258:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 259:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 260:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 261:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 262:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 263:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		point either the required bits were set or the block time expired.  If
 264:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		the required bits were set they will have been stored in the task's
 265:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 267:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 269:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 270:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			taskENTER_CRITICAL();
 272:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 274:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 275:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Although the task got here because it timed out before the
 276:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 277:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 278:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				then it needs to clear the bits before exiting. */
 279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 280:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 282:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 283:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				else
 284:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 285:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 286:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 287:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			taskEXIT_CRITICAL();
 289:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 290:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 291:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 292:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 293:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 294:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The task unblocked because the bits were set. */
 295:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 296:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 297:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 298:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		returned. */
 299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 300:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 301:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 302:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 303:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 304:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 305:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xTimeoutOccurred;
 306:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 307:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	return uxReturn;
 308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 309:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 310:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 311:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 136              		.loc 1 312 0
 137              		.cfi_startproc
 138              		@ args = 4, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL11:
 141 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 142              		.cfi_def_cfa_offset 32
 143              		.cfi_offset 4, -32
 144              		.cfi_offset 5, -28
 145              		.cfi_offset 6, -24
 146              		.cfi_offset 7, -20
 147              		.cfi_offset 8, -16
 148              		.cfi_offset 9, -12
 149              		.cfi_offset 10, -8
 150              		.cfi_offset 14, -4
 151              	.LVL12:
 313:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 314:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 315:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 316:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 317:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 318:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 319:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	itself, and that at least one bit is being requested. */
 320:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( xEventGroup );
 152              		.loc 1 320 0
 153 0004 006050E2 		subs	r6, r0, #0
 312:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 154              		.loc 1 312 0
 155 0008 20709DE5 		ldr	r7, [sp, #32]
 156              		.loc 1 320 0
 157 000c 0200001A 		bne	.L14
 158              	.LVL13:
 159              	.L15:
 160              		.loc 1 320 0 is_stmt 0 discriminator 1
 161 0010 0110A0E3 		mov	r1, #1
 162 0014 18019FE5 		ldr	r0, .L47
 163 0018 FEFFFFEB 		bl	longjmp
 164              	.LVL14:
 165              	.L14:
 321:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 166              		.loc 1 321 0 is_stmt 1
 167 001c FFA411E2 		ands	r10, r1, #-16777216
 168 0020 0150A0E1 		mov	r5, r1
 169 0024 F9FFFF1A 		bne	.L15
 322:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 170              		.loc 1 322 0
 171 0028 000051E3 		cmp	r1, #0
 172 002c F7FFFF0A 		beq	.L15
 173 0030 0390A0E1 		mov	r9, r3
 174 0034 0280A0E1 		mov	r8, r2
 323:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 324:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 325:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 175              		.loc 1 325 0
 176 0038 FEFFFFEB 		bl	xTaskGetSchedulerState
 177              	.LVL15:
 178 003c 173F6FE1 		clz	r3, r7
 179 0040 A332A0E1 		lsr	r3, r3, #5
 180 0044 000050E3 		cmp	r0, #0
 181 0048 0300A001 		moveq	r0, r3
 182 004c 01008313 		orrne	r0, r3, #1
 183 0050 000050E3 		cmp	r0, #0
 184 0054 EDFFFF0A 		beq	.L15
 326:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 327:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#endif
 328:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 329:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	vTaskSuspendAll();
 185              		.loc 1 329 0
 186 0058 FEFFFFEB 		bl	vTaskSuspendAll
 187              	.LVL16:
 188              	.LBB8:
 330:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 331:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 189              		.loc 1 331 0
 190 005c 004096E5 		ldr	r4, [r6]
 191              	.LVL17:
 192              	.LBB9:
 193              	.LBB10:
 332:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 333:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 334:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 335:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 336:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 337:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 338:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The wait condition has already been met so there is no need to
 339:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			block. */
 340:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxReturn = uxCurrentEventBits;
 341:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 342:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 343:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( xClearOnExit != pdFALSE )
 345:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 347:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 348:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else
 349:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 350:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 351:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 352:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 354:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 355:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The wait condition has not been met, but no block time was
 356:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			specified, so just return the current value. */
 357:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxReturn = uxCurrentEventBits;
 358:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 359:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 360:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 361:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 362:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 363:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 364:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 365:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			unblock the task. */
 366:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( xClearOnExit != pdFALSE )
 367:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 369:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 370:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else
 371:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 372:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 373:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 374:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 376:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 378:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 379:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else
 380:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 381:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 382:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 383:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 384:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 385:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			task's event list item so the kernel knows when a match is
 386:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			found.  Then enter the blocked state. */
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 388:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 389:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 390:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 391:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			being returned without being set if it is not done. */
 392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxReturn = 0;
 393:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 394:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 395:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 396:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 398:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 400:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 402:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			portYIELD_WITHIN_API();
 404:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 405:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 406:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 407:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 408:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 409:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 410:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 411:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		point either the required bits were set or the block time expired.  If
 412:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		the required bits were set they will have been stored in the task's
 413:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 415:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 417:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			taskENTER_CRITICAL();
 419:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 420:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 422:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 423:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* It is possible that the event bits were updated between this
 424:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				task leaving the Blocked state and running again. */
 425:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 426:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					if( xClearOnExit != pdFALSE )
 428:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					{
 429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 430:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					}
 431:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					else
 432:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					{
 433:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 434:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					}
 435:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 436:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				else
 437:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 438:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 439:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 440:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 441:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			taskEXIT_CRITICAL();
 443:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 444:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 445:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 446:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The task unblocked because the bits were set. */
 447:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 448:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 449:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* The task blocked so control bits may have been set. */
 450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 451:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 452:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 453:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 454:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	/* Prevent compiler warnings when trace macros are not used. */
 455:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xTimeoutOccurred;
 456:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 457:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	return uxReturn;
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 459:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 460:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 461:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 463:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 464:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t uxReturn;
 465:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 466:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 467:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	itself. */
 468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( xEventGroup );
 469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 470:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	taskENTER_CRITICAL();
 472:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 473:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 474:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 475:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 476:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		cleared. */
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 478:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 479:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Clear the bits. */
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 481:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	taskEXIT_CRITICAL();
 483:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 484:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	return uxReturn;
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 486:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 487:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 488:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 489:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 490:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 492:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		BaseType_t xReturn;
 493:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 494:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 496:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 497:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		return xReturn;
 498:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 499:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 500:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #endif
 501:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 502:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 503:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 505:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 506:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t const * const pxEventBits = xEventGroup;
 507:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t uxReturn;
 508:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 510:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 512:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 514:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 515:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	return uxReturn;
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** } /*lint !e818 EventGroupHandle_t is a typedef used in other functions to so can't be pointer to co
 517:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 518:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 519:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 521:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 522:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** ListItem_t const *pxListEnd;
 523:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** List_t const * pxList;
 524:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 525:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 526:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 527:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 528:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 529:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	itself. */
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( xEventGroup );
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 532:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 533:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 !e9087 The mini list structure is use
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	vTaskSuspendAll();
 536:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 537:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 538:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 540:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 541:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Set the bits. */
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 543:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 544:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		while( pxListItem != pxListEnd )
 546:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 547:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 549:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xMatchFound = pdFALSE;
 550:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 551:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Split the bits waited for from the control bits. */
 552:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 554:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 556:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 557:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Just looking for single bit being set. */
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 559:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 560:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					xMatchFound = pdTRUE;
 561:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 562:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				else
 563:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 564:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 565:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 566:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 568:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 569:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* All bits are set. */
 570:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				xMatchFound = pdTRUE;
 571:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 572:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else
 573:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 574:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 575:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 576:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 577:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( xMatchFound != pdFALSE )
 578:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 579:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 581:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 583:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 584:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				else
 585:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 586:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 587:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 588:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 589:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				/* Store the actual event flag value in the task's event list
 590:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				item before removing the task from the event list.  The
 591:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 592:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 593:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				than because it timed out. */
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				vTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCKED_DUE_TO
 595:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 596:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 597:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 598:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			used here as the list item may have been removed from the event list
 599:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			and inserted into the ready/pending reading list. */
 600:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			pxListItem = pxNext;
 601:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 602:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 603:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 604:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		bit was set in the control word. */
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 606:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xTaskResumeAll();
 608:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	return pxEventBits->uxEventBits;
 610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 611:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 612:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 613:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 615:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 616:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 617:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	vTaskSuspendAll();
 619:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 620:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 621:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 623:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 624:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 625:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			and cannot therefore have any bits set. */
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( const ListItem_t * ) &( pxTasksWaiting
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 628:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 629:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 630:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 631:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 632:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 633:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			it again. */
 634:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vPortFree( pxEventBits );
 635:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 636:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 638:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			/* The event group could have been allocated statically or
 639:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 641:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				vPortFree( pxEventBits );
 643:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 644:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			else
 645:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 646:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 647:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 648:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 649:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 650:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xTaskResumeAll();
 652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 653:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 654:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 655:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 656:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** an interrupt. */
 657:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 660:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 661:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 662:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 663:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 664:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** an interrupt. */
 665:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 668:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 669:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 670:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 671:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 672:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** {
 673:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 674:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
 194              		.loc 1 675 0
 195 0060 000059E3 		cmp	r9, #0
 196 0064 043005E0 		and	r3, r5, r4
 197 0068 0500000A 		beq	.L28
 676:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 677:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 678:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		set.  Is one already set? */
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
 680:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 681:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xWaitConditionMet = pdTRUE;
 682:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 683:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 684:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 685:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 686:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 687:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 688:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	else
 689:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 690:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 691:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		Are they set already? */
 692:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
 198              		.loc 1 692 0
 199 006c 030055E1 		cmp	r5, r3
 200 0070 0500001A 		bne	.L18
 201              	.L17:
 202              	.LVL18:
 203              	.LBE10:
 204              	.LBE9:
 344:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 205              		.loc 1 344 0
 206 0074 000058E3 		cmp	r8, #0
 346:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 207              		.loc 1 346 0
 208 0078 0530C411 		bicne	r3, r4, r5
 209 007c 00308615 		strne	r3, [r6]
 210 0080 0E0000EA 		b	.L19
 211              	.LVL19:
 212              	.L28:
 213              	.LBB12:
 214              	.LBB11:
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 215              		.loc 1 679 0
 216 0084 000053E3 		cmp	r3, #0
 217 0088 F9FFFF1A 		bne	.L17
 218              	.L18:
 219              	.LVL20:
 220              	.LBE11:
 221              	.LBE12:
 353:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 222              		.loc 1 353 0
 223 008c 000057E3 		cmp	r7, #0
 224 0090 1F00000A 		beq	.L34
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 225              		.loc 1 368 0
 226 0094 000058E3 		cmp	r8, #0
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 227              		.loc 1 387 0
 228 0098 07A0A0E1 		mov	r10, r7
 368:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 229              		.loc 1 368 0
 230 009c 0114A013 		movne	r1, #16777216
 231 00a0 0010A003 		moveq	r1, #0
 232              	.LVL21:
 375:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 233              		.loc 1 375 0
 234 00a4 000059E3 		cmp	r9, #0
 392:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 235              		.loc 1 392 0
 236 00a8 0040A0E3 		mov	r4, #0
 237              	.LVL22:
 377:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 238              		.loc 1 377 0
 239 00ac 01138113 		orrne	r1, r1, #67108864
 240              	.LVL23:
 387:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 241              		.loc 1 387 0
 242 00b0 0720A0E1 		mov	r2, r7
 243 00b4 051081E1 		orr	r1, r1, r5
 244              	.LVL24:
 245 00b8 040086E2 		add	r0, r6, #4
 246 00bc FEFFFFEB 		bl	vTaskPlaceOnUnorderedEventList
 247              	.LVL25:
 248              	.L19:
 249              	.LBE8:
 397:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 250              		.loc 1 397 0
 251 00c0 FEFFFFEB 		bl	xTaskResumeAll
 252              	.LVL26:
 399:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 253              		.loc 1 399 0
 254 00c4 00005AE3 		cmp	r10, #0
 255 00c8 0F00000A 		beq	.L13
 401:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 256              		.loc 1 401 0
 257 00cc 000050E3 		cmp	r0, #0
 258 00d0 0000001A 		bne	.L23
 403:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 259              		.loc 1 403 0
 260              		.syntax divided
 261              	@ 403 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS/event_groups.c" 1
 262 00d4 000000EF 		SWI 0
 263              	@ 0 "" 2
 264              		.arm
 265              		.syntax unified
 266              	.L23:
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 267              		.loc 1 414 0
 268 00d8 FEFFFFEB 		bl	uxTaskResetEventItemValue
 269              	.LVL27:
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 270              		.loc 1 416 0
 271 00dc 020410E3 		tst	r0, #33554432
 414:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 272              		.loc 1 414 0
 273 00e0 0040A0E1 		mov	r4, r0
 274              	.LVL28:
 416:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 275              		.loc 1 416 0
 276 00e4 0700001A 		bne	.L24
 418:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 277              		.loc 1 418 0
 278 00e8 FEFFFFEB 		bl	vPortEnterCritical
 279              	.LVL29:
 421:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 280              		.loc 1 421 0
 281 00ec 004096E5 		ldr	r4, [r6]
 282              	.LVL30:
 283              	.LBB13:
 284              	.LBB14:
 675:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 285              		.loc 1 675 0
 286 00f0 000059E3 		cmp	r9, #0
 287 00f4 043005E0 		and	r3, r5, r4
 288 00f8 0700001A 		bne	.L25
 679:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 289              		.loc 1 679 0
 290 00fc 000053E3 		cmp	r3, #0
 291 0100 0700001A 		bne	.L26
 292              	.LVL31:
 293              	.L27:
 294              	.LBE14:
 295              	.LBE13:
 442:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 296              		.loc 1 442 0
 297 0104 FEFFFFEB 		bl	vPortExitCritical
 298              	.LVL32:
 299              	.L24:
 450:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 300              		.loc 1 450 0
 301 0108 FF44C4E3 		bic	r4, r4, #-16777216
 302              	.LVL33:
 303              	.L13:
 458:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 304              		.loc 1 458 0
 305 010c 0400A0E1 		mov	r0, r4
 306 0110 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 307              	.LVL34:
 308              	.L34:
 309              	.LBB16:
 310 0114 07A0A0E1 		mov	r10, r7
 311 0118 E8FFFFEA 		b	.L19
 312              	.LVL35:
 313              	.L25:
 314              	.LBE16:
 315              	.LBB17:
 316              	.LBB15:
 317              		.loc 1 692 0
 318 011c 030055E1 		cmp	r5, r3
 319 0120 F7FFFF1A 		bne	.L27
 320              	.L26:
 321              	.LVL36:
 322              	.LBE15:
 323              	.LBE17:
 427:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					{
 324              		.loc 1 427 0
 325 0124 000058E3 		cmp	r8, #0
 429:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 					}
 326              		.loc 1 429 0
 327 0128 0550C411 		bicne	r5, r4, r5
 328              	.LVL37:
 329 012c 00508615 		strne	r5, [r6]
 330 0130 F3FFFFEA 		b	.L27
 331              	.L48:
 332              		.align	2
 333              	.L47:
 334 0134 28000000 		.word	Unity+40
 335              		.cfi_endproc
 336              	.LFE3:
 338              		.section	.text.xEventGroupClearBits,"ax",%progbits
 339              		.align	2
 340              		.global	xEventGroupClearBits
 341              		.syntax unified
 342              		.arm
 343              		.fpu neon
 345              	xEventGroupClearBits:
 346              	.LFB4:
 462:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 347              		.loc 1 462 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL38:
 352 0000 70402DE9 		push	{r4, r5, r6, lr}
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 468:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 358              		.loc 1 468 0
 359 0004 006050E2 		subs	r6, r0, #0
 360 0008 0200001A 		bne	.L50
 361              	.L51:
 362              	.LVL39:
 363              	.LBB20:
 364              	.LBB21:
 365 000c 0110A0E3 		mov	r1, #1
 366              	.LVL40:
 367 0010 28009FE5 		ldr	r0, .L53
 368              	.LVL41:
 369 0014 FEFFFFEB 		bl	longjmp
 370              	.LVL42:
 371              	.L50:
 372              	.LBE21:
 373              	.LBE20:
 469:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 374              		.loc 1 469 0
 375 0018 FF0411E3 		tst	r1, #-16777216
 376 001c 0140A0E1 		mov	r4, r1
 377 0020 F9FFFF1A 		bne	.L51
 471:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 378              		.loc 1 471 0
 379 0024 FEFFFFEB 		bl	vPortEnterCritical
 380              	.LVL43:
 477:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 381              		.loc 1 477 0
 382 0028 005096E5 		ldr	r5, [r6]
 383              	.LVL44:
 480:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 384              		.loc 1 480 0
 385 002c 0440C5E1 		bic	r4, r5, r4
 386              	.LVL45:
 387 0030 004086E5 		str	r4, [r6]
 482:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 388              		.loc 1 482 0
 389 0034 FEFFFFEB 		bl	vPortExitCritical
 390              	.LVL46:
 485:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 391              		.loc 1 485 0
 392 0038 0500A0E1 		mov	r0, r5
 393 003c 7080BDE8 		pop	{r4, r5, r6, pc}
 394              	.L54:
 395              		.align	2
 396              	.L53:
 397 0040 28000000 		.word	Unity+40
 398              		.cfi_endproc
 399              	.LFE4:
 401              		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 402              		.align	2
 403              		.global	vEventGroupClearBitsCallback
 404              		.syntax unified
 405              		.arm
 406              		.fpu neon
 408              	vEventGroupClearBitsCallback:
 409              	.LFB10:
 666:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear ); /*lint !e9079 Can't 
 410              		.loc 1 666 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL47:
 667:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 416              		.loc 1 667 0
 417 0000 FEFFFFEA 		b	xEventGroupClearBits
 418              	.LVL48:
 419              		.cfi_endproc
 420              	.LFE10:
 422              		.section	.text.xEventGroupClearBitsFromISR,"ax",%progbits
 423              		.align	2
 424              		.global	xEventGroupClearBitsFromISR
 425              		.syntax unified
 426              		.arm
 427              		.fpu neon
 429              	xEventGroupClearBitsFromISR:
 430              	.LFB5:
 491:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		BaseType_t xReturn;
 431              		.loc 1 491 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436              	.LVL49:
 495:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 437              		.loc 1 495 0
 438 0000 0120A0E1 		mov	r2, r1
 439 0004 0030A0E3 		mov	r3, #0
 440 0008 0010A0E1 		mov	r1, r0
 441              	.LVL50:
 442 000c 00009FE5 		ldr	r0, .L57
 443              	.LVL51:
 444 0010 FEFFFFEA 		b	xTimerPendFunctionCallFromISR
 445              	.LVL52:
 446              	.L58:
 447              		.align	2
 448              	.L57:
 449 0014 00000000 		.word	vEventGroupClearBitsCallback
 450              		.cfi_endproc
 451              	.LFE5:
 453              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 454              		.align	2
 455              		.global	xEventGroupGetBitsFromISR
 456              		.syntax unified
 457              		.arm
 458              		.fpu neon
 460              	xEventGroupGetBitsFromISR:
 461              	.LFB6:
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 462              		.loc 1 504 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              	.LVL53:
 467 0000 10402DE9 		push	{r4, lr}
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 4, -8
 470              		.cfi_offset 14, -4
 504:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 471              		.loc 1 504 0
 472 0004 0040A0E1 		mov	r4, r0
 473              	.LVL54:
 509:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 474              		.loc 1 509 0
 475 0008 FEFFFFEB 		bl	ulPortSetInterruptMask
 476              	.LVL55:
 511:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 477              		.loc 1 511 0
 478 000c 004094E5 		ldr	r4, [r4]
 479              	.LVL56:
 513:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 480              		.loc 1 513 0
 481 0010 FEFFFFEB 		bl	vPortClearInterruptMask
 482              	.LVL57:
 516:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 483              		.loc 1 516 0
 484 0014 0400A0E1 		mov	r0, r4
 485 0018 1080BDE8 		pop	{r4, pc}
 486              		.cfi_endproc
 487              	.LFE6:
 489              		.section	.text.xEventGroupSetBits,"ax",%progbits
 490              		.align	2
 491              		.global	xEventGroupSetBits
 492              		.syntax unified
 493              		.arm
 494              		.fpu neon
 496              	xEventGroupSetBits:
 497              	.LFB7:
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 498              		.loc 1 520 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              	.LVL58:
 503 0000 F0412DE9 		push	{r4, r5, r6, r7, r8, lr}
 504              		.cfi_def_cfa_offset 24
 505              		.cfi_offset 4, -24
 506              		.cfi_offset 5, -20
 507              		.cfi_offset 6, -16
 508              		.cfi_offset 7, -12
 509              		.cfi_offset 8, -8
 510              		.cfi_offset 14, -4
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 511              		.loc 1 530 0
 512 0004 004050E2 		subs	r4, r0, #0
 513 0008 0200001A 		bne	.L62
 514              	.L63:
 530:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 515              		.loc 1 530 0 is_stmt 0 discriminator 1
 516 000c 0110A0E3 		mov	r1, #1
 517              	.LVL59:
 518 0010 80009FE5 		ldr	r0, .L74
 519              	.LVL60:
 520 0014 FEFFFFEB 		bl	longjmp
 521              	.LVL61:
 522              	.L62:
 531:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 523              		.loc 1 531 0 is_stmt 1
 524 0018 FF5411E2 		ands	r5, r1, #-16777216
 525 001c 0170A0E1 		mov	r7, r1
 526 0020 F9FFFF1A 		bne	.L63
 527              	.LVL62:
 535:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 528              		.loc 1 535 0
 529 0024 FEFFFFEB 		bl	vTaskSuspendAll
 530              	.LVL63:
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 531              		.loc 1 542 0
 532 0028 003094E5 		ldr	r3, [r4]
 534:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	vTaskSuspendAll();
 533              		.loc 1 534 0
 534 002c 0C6084E2 		add	r6, r4, #12
 535              	.LVL64:
 539:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 536              		.loc 1 539 0
 537 0030 100094E5 		ldr	r0, [r4, #16]
 538              	.LVL65:
 542:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 539              		.loc 1 542 0
 540 0034 071083E1 		orr	r1, r3, r7
 541 0038 001084E5 		str	r1, [r4]
 542              	.LVL66:
 543              	.L64:
 545:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 544              		.loc 1 545 0
 545 003c 060050E1 		cmp	r0, r6
 546 0040 001094E5 		ldr	r1, [r4]
 547 0044 0400001A 		bne	.L68
 605:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 548              		.loc 1 605 0
 549 0048 0510C1E1 		bic	r1, r1, r5
 550 004c 001084E5 		str	r1, [r4]
 607:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 551              		.loc 1 607 0
 552 0050 FEFFFFEB 		bl	xTaskResumeAll
 553              	.LVL67:
 609:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 554              		.loc 1 609 0
 555 0054 000094E5 		ldr	r0, [r4]
 610:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 556              		.loc 1 610 0
 557 0058 F081BDE8 		pop	{r4, r5, r6, r7, r8, pc}
 558              	.LVL68:
 559              	.L68:
 548:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xMatchFound = pdFALSE;
 560              		.loc 1 548 0
 561 005c 880090E8 		ldm	r0, {r3, r7}
 562              	.LVL69:
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 563              		.loc 1 555 0
 564 0060 010313E3 		tst	r3, #67108864
 553:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 565              		.loc 1 553 0
 566 0064 FF24C3E3 		bic	r2, r3, #-16777216
 567              	.LVL70:
 555:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 568              		.loc 1 555 0
 569 0068 0300001A 		bne	.L65
 558:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 570              		.loc 1 558 0
 571 006c 010012E1 		tst	r2, r1
 572 0070 0300001A 		bne	.L66
 573              	.LVL71:
 574              	.L67:
 520:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 575              		.loc 1 520 0
 576 0074 0700A0E1 		mov	r0, r7
 577 0078 EFFFFFEA 		b	.L64
 578              	.LVL72:
 579              	.L65:
 567:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 580              		.loc 1 567 0
 581 007c 01C0D2E1 		bics	ip, r2, r1
 582 0080 FBFFFF1A 		bne	.L67
 583              	.L66:
 584              	.LVL73:
 580:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 585              		.loc 1 580 0
 586 0084 010413E3 		tst	r3, #16777216
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 587              		.loc 1 594 0
 588 0088 021481E3 		orr	r1, r1, #33554432
 582:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 589              		.loc 1 582 0
 590 008c 02508511 		orrne	r5, r5, r2
 591              	.LVL74:
 594:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 592              		.loc 1 594 0
 593 0090 FEFFFFEB 		bl	vTaskRemoveFromUnorderedEventList
 594              	.LVL75:
 595 0094 F6FFFFEA 		b	.L67
 596              	.L75:
 597              		.align	2
 598              	.L74:
 599 0098 28000000 		.word	Unity+40
 600              		.cfi_endproc
 601              	.LFE7:
 603              		.section	.text.xEventGroupSync,"ax",%progbits
 604              		.align	2
 605              		.global	xEventGroupSync
 606              		.syntax unified
 607              		.arm
 608              		.fpu neon
 610              	xEventGroupSync:
 611              	.LFB2:
 192:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 612              		.loc 1 192 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              	.LVL76:
 617 0000 F0472DE9 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 618              		.cfi_def_cfa_offset 32
 619              		.cfi_offset 4, -32
 620              		.cfi_offset 5, -28
 621              		.cfi_offset 6, -24
 622              		.cfi_offset 7, -20
 623              		.cfi_offset 8, -16
 624              		.cfi_offset 9, -12
 625              		.cfi_offset 10, -8
 626              		.cfi_offset 14, -4
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 627              		.loc 1 198 0
 628 0004 FF8412E2 		ands	r8, r2, #-16777216
 629 0008 0200000A 		beq	.L77
 630              	.LVL77:
 631              	.L78:
 198:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 632              		.loc 1 198 0 is_stmt 0 discriminator 1
 633 000c 0110A0E3 		mov	r1, #1
 634 0010 D8009FE5 		ldr	r0, .L96
 635 0014 FEFFFFEB 		bl	longjmp
 636              	.LVL78:
 637              	.L77:
 199:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 638              		.loc 1 199 0 is_stmt 1
 639 0018 000052E3 		cmp	r2, #0
 640 001c 0250A0E1 		mov	r5, r2
 641 0020 F9FFFF0A 		beq	.L78
 642 0024 0370A0E1 		mov	r7, r3
 643 0028 0060A0E1 		mov	r6, r0
 644 002c 0190A0E1 		mov	r9, r1
 202:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 645              		.loc 1 202 0
 646 0030 FEFFFFEB 		bl	xTaskGetSchedulerState
 647              	.LVL79:
 648 0034 173F6FE1 		clz	r3, r7
 649 0038 A332A0E1 		lsr	r3, r3, #5
 650 003c 000050E3 		cmp	r0, #0
 651 0040 0300A001 		moveq	r0, r3
 652 0044 01008313 		orrne	r0, r3, #1
 653 0048 000050E3 		cmp	r0, #0
 654 004c EEFFFF0A 		beq	.L78
 206:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 655              		.loc 1 206 0
 656 0050 FEFFFFEB 		bl	vTaskSuspendAll
 657              	.LVL80:
 208:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 658              		.loc 1 208 0
 659 0054 004096E5 		ldr	r4, [r6]
 660              	.LVL81:
 210:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 661              		.loc 1 210 0
 662 0058 0910A0E1 		mov	r1, r9
 663 005c 0600A0E1 		mov	r0, r6
 664 0060 FEFFFFEB 		bl	xEventGroupSetBits
 665              	.LVL82:
 212:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 666              		.loc 1 212 0
 667 0064 094084E1 		orr	r4, r4, r9
 668              	.LVL83:
 669 0068 0430D5E1 		bics	r3, r5, r4
 670 006c 1600001A 		bne	.L94
 671              	.LVL84:
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 672              		.loc 1 219 0
 673 0070 003096E5 		ldr	r3, [r6]
 221:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 674              		.loc 1 221 0
 675 0074 0870A0E1 		mov	r7, r8
 676              	.LVL85:
 219:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 677              		.loc 1 219 0
 678 0078 0530C3E1 		bic	r3, r3, r5
 679 007c 003086E5 		str	r3, [r6]
 680              	.LVL86:
 681              	.L80:
 249:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 682              		.loc 1 249 0
 683 0080 FEFFFFEB 		bl	xTaskResumeAll
 684              	.LVL87:
 251:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 685              		.loc 1 251 0
 686 0084 000057E3 		cmp	r7, #0
 687 0088 0D00000A 		beq	.L76
 253:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 688              		.loc 1 253 0
 689 008c 000050E3 		cmp	r0, #0
 690 0090 0000001A 		bne	.L83
 255:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 691              		.loc 1 255 0
 692              		.syntax divided
 693              	@ 255 "D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS/event_groups.c" 1
 694 0094 000000EF 		SWI 0
 695              	@ 0 "" 2
 696              		.arm
 697              		.syntax unified
 698              	.L83:
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 699              		.loc 1 266 0
 700 0098 FEFFFFEB 		bl	uxTaskResetEventItemValue
 701              	.LVL88:
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 702              		.loc 1 268 0
 703 009c 020410E3 		tst	r0, #33554432
 266:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 704              		.loc 1 266 0
 705 00a0 0040A0E1 		mov	r4, r0
 706              	.LVL89:
 268:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 707              		.loc 1 268 0
 708 00a4 0500001A 		bne	.L84
 271:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 709              		.loc 1 271 0
 710 00a8 FEFFFFEB 		bl	vPortEnterCritical
 711              	.LVL90:
 273:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 712              		.loc 1 273 0
 713 00ac 004096E5 		ldr	r4, [r6]
 714              	.LVL91:
 279:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				{
 715              		.loc 1 279 0
 716 00b0 0430D5E1 		bics	r3, r5, r4
 281:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				}
 717              		.loc 1 281 0
 718 00b4 0550C401 		biceq	r5, r4, r5
 719              	.LVL92:
 720 00b8 00508605 		streq	r5, [r6]
 288:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 721              		.loc 1 288 0
 722 00bc FEFFFFEB 		bl	vPortExitCritical
 723              	.LVL93:
 724              	.L84:
 299:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 725              		.loc 1 299 0
 726 00c0 FF44C4E3 		bic	r4, r4, #-16777216
 727              	.LVL94:
 728              	.L76:
 308:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 729              		.loc 1 308 0
 730 00c4 0400A0E1 		mov	r0, r4
 731 00c8 F087BDE8 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 732              	.LVL95:
 733              	.L94:
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 734              		.loc 1 225 0
 735 00cc 000057E3 		cmp	r7, #0
 244:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 				xTimeoutOccurred = pdTRUE;
 736              		.loc 1 244 0
 737 00d0 00409605 		ldreq	r4, [r6]
 225:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 738              		.loc 1 225 0
 739 00d4 E9FFFF0A 		beq	.L80
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 740              		.loc 1 232 0
 741 00d8 0720A0E1 		mov	r2, r7
 742 00dc 051485E3 		orr	r1, r5, #83886080
 743 00e0 040086E2 		add	r0, r6, #4
 238:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 744              		.loc 1 238 0
 745 00e4 0840A0E1 		mov	r4, r8
 232:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 746              		.loc 1 232 0
 747 00e8 FEFFFFEB 		bl	vTaskPlaceOnUnorderedEventList
 748              	.LVL96:
 749 00ec E3FFFFEA 		b	.L80
 750              	.L97:
 751              		.align	2
 752              	.L96:
 753 00f0 28000000 		.word	Unity+40
 754              		.cfi_endproc
 755              	.LFE2:
 757              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 758              		.align	2
 759              		.global	vEventGroupSetBitsCallback
 760              		.syntax unified
 761              		.arm
 762              		.fpu neon
 764              	vEventGroupSetBitsCallback:
 765              	.LFB9:
 658:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet ); /*lint !e9079 Can't avoi
 766              		.loc 1 658 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 0
 769              		@ frame_needed = 0, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771              	.LVL97:
 659:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 772              		.loc 1 659 0
 773 0000 FEFFFFEA 		b	xEventGroupSetBits
 774              	.LVL98:
 775              		.cfi_endproc
 776              	.LFE9:
 778              		.section	.text.vEventGroupDelete,"ax",%progbits
 779              		.align	2
 780              		.global	vEventGroupDelete
 781              		.syntax unified
 782              		.arm
 783              		.fpu neon
 785              	vEventGroupDelete:
 786              	.LFB8:
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 787              		.loc 1 614 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              	.LVL99:
 792 0000 70402DE9 		push	{r4, r5, r6, lr}
 793              		.cfi_def_cfa_offset 16
 794              		.cfi_offset 4, -16
 795              		.cfi_offset 5, -12
 796              		.cfi_offset 6, -8
 797              		.cfi_offset 14, -4
 614:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** EventGroup_t *pxEventBits = xEventGroup;
 798              		.loc 1 614 0
 799 0004 0040A0E1 		mov	r4, r0
 800              	.LVL100:
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 801              		.loc 1 626 0
 802 0008 0C5084E2 		add	r5, r4, #12
 618:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 803              		.loc 1 618 0
 804 000c FEFFFFEB 		bl	vTaskSuspendAll
 805              	.LVL101:
 806              	.L100:
 622:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 807              		.loc 1 622 0
 808 0010 043094E5 		ldr	r3, [r4, #4]
 809 0014 000053E3 		cmp	r3, #0
 810 0018 0600001A 		bne	.L102
 640:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			{
 811              		.loc 1 640 0
 812 001c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 813 0020 000053E3 		cmp	r3, #0
 814 0024 0100001A 		bne	.L103
 642:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			}
 815              		.loc 1 642 0
 816 0028 0400A0E1 		mov	r0, r4
 817 002c FEFFFFEB 		bl	vPortFree
 818              	.LVL102:
 819              	.L103:
 652:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 820              		.loc 1 652 0
 821 0030 7040BDE8 		pop	{r4, r5, r6, lr}
 822              		.cfi_remember_state
 823              		.cfi_restore 14
 824              		.cfi_restore 6
 825              		.cfi_restore 5
 826              		.cfi_restore 4
 827              		.cfi_def_cfa_offset 0
 828              	.LVL103:
 651:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 829              		.loc 1 651 0
 830 0034 FEFFFFEA 		b	xTaskResumeAll
 831              	.LVL104:
 832              	.L102:
 833              		.cfi_restore_state
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 834              		.loc 1 626 0
 835 0038 100094E5 		ldr	r0, [r4, #16]
 836 003c 050050E1 		cmp	r0, r5
 837 0040 0200001A 		bne	.L101
 626:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			vTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCKED_DUE_TO
 838              		.loc 1 626 0 is_stmt 0 discriminator 1
 839 0044 0110A0E3 		mov	r1, #1
 840 0048 0C009FE5 		ldr	r0, .L105
 841 004c FEFFFFEB 		bl	longjmp
 842              	.LVL105:
 843              	.L101:
 627:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 844              		.loc 1 627 0 is_stmt 1
 845 0050 0214A0E3 		mov	r1, #33554432
 846 0054 FEFFFFEB 		bl	vTaskRemoveFromUnorderedEventList
 847              	.LVL106:
 848 0058 ECFFFFEA 		b	.L100
 849              	.L106:
 850              		.align	2
 851              	.L105:
 852 005c 28000000 		.word	Unity+40
 853              		.cfi_endproc
 854              	.LFE8:
 856              		.section	.text.xEventGroupSetBitsFromISR,"ax",%progbits
 857              		.align	2
 858              		.global	xEventGroupSetBitsFromISR
 859              		.syntax unified
 860              		.arm
 861              		.fpu neon
 863              	xEventGroupSetBitsFromISR:
 864              	.LFB12:
 693:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 694:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xWaitConditionMet = pdTRUE;
 695:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 696:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 697:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 698:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 699:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 700:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 701:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 702:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	return xWaitConditionMet;
 703:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** }
 704:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 705:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 706:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 707:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 708:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 709:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 865              		.loc 1 709 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870              	.LVL107:
 710:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	BaseType_t xReturn;
 711:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 712:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 713:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 871              		.loc 1 713 0
 872 0000 0230A0E1 		mov	r3, r2
 873 0004 0120A0E1 		mov	r2, r1
 874              	.LVL108:
 875 0008 0010A0E1 		mov	r1, r0
 876              	.LVL109:
 877 000c 00009FE5 		ldr	r0, .L108
 878              	.LVL110:
 879 0010 FEFFFFEA 		b	xTimerPendFunctionCallFromISR
 880              	.LVL111:
 881              	.L109:
 882              		.align	2
 883              	.L108:
 884 0014 00000000 		.word	vEventGroupSetBitsCallback
 885              		.cfi_endproc
 886              	.LFE12:
 888              		.section	.text.uxEventGroupGetNumber,"ax",%progbits
 889              		.align	2
 890              		.global	uxEventGroupGetNumber
 891              		.syntax unified
 892              		.arm
 893              		.fpu neon
 895              	uxEventGroupGetNumber:
 896              	.LFB13:
 714:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 715:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		return xReturn;
 716:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 717:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 718:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #endif
 719:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 720:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 721:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 722:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 723:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 724:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 897              		.loc 1 724 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              		@ link register save eliminated.
 902              	.LVL112:
 725:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	UBaseType_t xReturn;
 726:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	EventGroup_t const *pxEventBits = ( EventGroup_t * ) xEventGroup; /*lint !e9087 !e9079 EventGroupH
 727:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 728:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		if( xEventGroup == NULL )
 903              		.loc 1 728 0
 904 0000 000050E3 		cmp	r0, #0
 729:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 730:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xReturn = 0;
 731:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 732:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		else
 733:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		{
 734:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 905              		.loc 1 734 0
 906 0004 18009015 		ldrne	r0, [r0, #24]
 907              	.LVL113:
 735:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		}
 736:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 737:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		return xReturn;
 738:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	}
 908              		.loc 1 738 0
 909 0008 1EFF2FE1 		bx	lr
 910              		.cfi_endproc
 911              	.LFE13:
 913              		.section	.text.vEventGroupSetNumber,"ax",%progbits
 914              		.align	2
 915              		.global	vEventGroupSetNumber
 916              		.syntax unified
 917              		.arm
 918              		.fpu neon
 920              	vEventGroupSetNumber:
 921              	.LFB14:
 739:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 740:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #endif /* configUSE_TRACE_FACILITY */
 741:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** /*-----------------------------------------------------------*/
 742:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 743:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 744:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 
 745:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	void vEventGroupSetNumber( void * xEventGroup, UBaseType_t uxEventGroupNumber )
 746:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 	{
 922              		.loc 1 746 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		@ link register save eliminated.
 927              	.LVL114:
 747:D:/Work/DeviceTester/amazon-freertos/lib/FreeRTOS\event_groups.c **** 		( ( EventGroup_t * ) xEventGroup )->uxEventGroupNumber = uxEventGroupNumber; /*lint !e9087 !e9079
 928              		.loc 1 747 0
 929 0000 181080E5 		str	r1, [r0, #24]
 930 0004 1EFF2FE1 		bx	lr
 931              		.cfi_endproc
 932              	.LFE14:
 934              		.text
 935              	.Letext0:
 936              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 937              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 938              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 939              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 940              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 941              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 942              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 943              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 944              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 945              		.file 11 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\third_party\\unity\\src/unity_internals.h"
 946              		.file 12 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\FreeRTOS\\portable\\GCC\\ARM_CA9_RZA2M/por
 947              		.file 13 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/FreeRTOS.h"
 948              		.file 14 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/list.h"
 949              		.file 15 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/event_groups.h"
 950              		.file 16 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/timers.h"
 951              		.file 17 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include/task.h"
 952              		.file 18 "D:\\Work\\DeviceTester\\amazon-freertos\\lib\\include\\private/portable.h"
 953              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
DEFINED SYMBOLS
                            *ABS*:00000000 event_groups.c
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:17     .text.xEventGroupCreateStatic:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:23     .text.xEventGroupCreateStatic:00000000 xEventGroupCreateStatic
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:80     .text.xEventGroupCreateStatic:00000050 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:85     .text.xEventGroupCreate:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:91     .text.xEventGroupCreate:00000000 xEventGroupCreate
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:128    .text.xEventGroupWaitBits:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:134    .text.xEventGroupWaitBits:00000000 xEventGroupWaitBits
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:334    .text.xEventGroupWaitBits:00000134 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:339    .text.xEventGroupClearBits:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:345    .text.xEventGroupClearBits:00000000 xEventGroupClearBits
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:397    .text.xEventGroupClearBits:00000040 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:402    .text.vEventGroupClearBitsCallback:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:408    .text.vEventGroupClearBitsCallback:00000000 vEventGroupClearBitsCallback
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:423    .text.xEventGroupClearBitsFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:429    .text.xEventGroupClearBitsFromISR:00000000 xEventGroupClearBitsFromISR
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:449    .text.xEventGroupClearBitsFromISR:00000014 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:454    .text.xEventGroupGetBitsFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:460    .text.xEventGroupGetBitsFromISR:00000000 xEventGroupGetBitsFromISR
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:490    .text.xEventGroupSetBits:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:496    .text.xEventGroupSetBits:00000000 xEventGroupSetBits
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:599    .text.xEventGroupSetBits:00000098 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:604    .text.xEventGroupSync:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:610    .text.xEventGroupSync:00000000 xEventGroupSync
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:753    .text.xEventGroupSync:000000f0 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:758    .text.vEventGroupSetBitsCallback:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:764    .text.vEventGroupSetBitsCallback:00000000 vEventGroupSetBitsCallback
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:779    .text.vEventGroupDelete:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:785    .text.vEventGroupDelete:00000000 vEventGroupDelete
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:852    .text.vEventGroupDelete:0000005c $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:857    .text.xEventGroupSetBitsFromISR:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:863    .text.xEventGroupSetBitsFromISR:00000000 xEventGroupSetBitsFromISR
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:884    .text.xEventGroupSetBitsFromISR:00000014 $d
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:889    .text.uxEventGroupGetNumber:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:895    .text.uxEventGroupGetNumber:00000000 uxEventGroupGetNumber
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:914    .text.vEventGroupSetNumber:00000000 $a
C:\Users\a5089698\AppData\Local\Temp\ccLJEEYQ.s:920    .text.vEventGroupSetNumber:00000000 vEventGroupSetNumber
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
longjmp
vListInitialise
Unity
pvPortMalloc
xTaskGetSchedulerState
vTaskSuspendAll
vTaskPlaceOnUnorderedEventList
xTaskResumeAll
uxTaskResetEventItemValue
vPortEnterCritical
vPortExitCritical
xTimerPendFunctionCallFromISR
ulPortSetInterruptMask
vPortClearInterruptMask
vTaskRemoveFromUnorderedEventList
vPortFree
